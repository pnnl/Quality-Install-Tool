var _classPrivateMethodInitSpec = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js").default;
var _classPrivateMethodGet = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/classPrivateMethodGet.js").default;
var _possibleConstructorReturn = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js").default;
var _get = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/get.js").default;
var _getPrototypeOf = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/getPrototypeOf.js").default;
var _defineProperty = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/defineProperty.js").default;
var _assertThisInitialized = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/assertThisInitialized.js").default;
var _classPrivateFieldInitSpec = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js").default;
var _classPrivateFieldGet = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/classPrivateFieldGet.js").default;
var _classPrivateFieldSet = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/classPrivateFieldSet.js").default;
var _toConsumableArray = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/toConsumableArray.js").default;
var _inherits = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/inherits.js").default;
var _createSuper = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/createSuper.js").default;
var _regeneratorRuntime = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/regeneratorRuntime.js").default;
var _toArray = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/toArray.js").default;
var _createForOfIteratorHelper = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js").default;
var _slicedToArray = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/slicedToArray.js").default;
var _asyncToGenerator = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/asyncToGenerator.js").default;
var _classCallCheck = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/classCallCheck.js").default;
var _createClass = require("/Users/geor045/dev/pnnl/Quality-Install-Tool/node_modules/@babel/runtime/helpers/createClass.js").default;
/**
 * @licstart The following is the entire license notice for the
 * JavaScript code in this page
 *
 * Copyright 2023 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @licend The above is the entire license notice for the
 * JavaScript code in this page
 */
!function webpackUniversalModuleDefinition(e, t) {
  "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define("pdfjs-dist/build/pdf.worker", [], t) : "object" == typeof exports ? exports["pdfjs-dist/build/pdf.worker"] = t() : e["pdfjs-dist/build/pdf.worker"] = e.pdfjsWorker = t();
}(globalThis, function () {
  return function () {
    "use strict";

    var e = [, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.WorkerTask = t.WorkerMessageHandler = void 0;
        var r = a(2),
          i = a(3),
          n = a(4),
          s = a(6),
          o = a(71),
          c = a(65),
          l = a(102),
          h = a(103),
          u = a(104);
        var WorkerTask = /*#__PURE__*/function () {
          function WorkerTask(e) {
            _classCallCheck(this, WorkerTask);
            this.name = e;
            this.terminated = !1;
            this._capability = new r.PromiseCapability();
          }
          _createClass(WorkerTask, [{
            key: "finished",
            get: function get() {
              return this._capability.promise;
            }
          }, {
            key: "finish",
            value: function finish() {
              this._capability.resolve();
            }
          }, {
            key: "terminate",
            value: function terminate() {
              this.terminated = !0;
            }
          }, {
            key: "ensureNotTerminated",
            value: function ensureNotTerminated() {
              if (this.terminated) throw new Error("Worker task was terminated");
            }
          }]);
          return WorkerTask;
        }();
        t.WorkerTask = WorkerTask;
        var WorkerMessageHandler = /*#__PURE__*/function () {
          function WorkerMessageHandler() {
            _classCallCheck(this, WorkerMessageHandler);
          }
          _createClass(WorkerMessageHandler, null, [{
            key: "setup",
            value: function setup(e, t) {
              var a = !1;
              e.on("test", function (t) {
                if (!a) {
                  a = !0;
                  e.send("test", t instanceof Uint8Array);
                }
              });
              e.on("configure", function (e) {
                (0, r.setVerbosityLevel)(e.verbosity);
              });
              e.on("GetDocRequest", function (e) {
                return WorkerMessageHandler.createDocumentHandler(e, t);
              });
            }
          }, {
            key: "createDocumentHandler",
            value: function createDocumentHandler(e, t) {
              var a,
                d = !1,
                f = null;
              var g = new Set(),
                p = (0, r.getVerbosityLevel)(),
                _e2 = e,
                m = _e2.docId,
                b = _e2.apiVersion,
                y = "3.6.172";
              if (b !== y) throw new Error("The API version \"".concat(b, "\" does not match the Worker version \"").concat(y, "\"."));
              var w = [];
              for (var _e3 in []) w.push(_e3);
              if (w.length) throw new Error("The `Array.prototype` contains unexpected enumerable properties: " + w.join(", ") + "; thus breaking e.g. `for...in` iteration of `Array`s.");
              if (l.isNodeJS && "undefined" == typeof Path2D || "undefined" == typeof ReadableStream) {
                var _e4 = "The browser/environment lacks native support for critical functionality used by the PDF.js library (e.g. `Path2D` and/or `ReadableStream`); ";
                if (l.isNodeJS) throw new Error(_e4 + "please use a `legacy`-build instead.");
                throw new Error(_e4 + "please update to a supported browser.");
              }
              var S = m + "_worker";
              var x = new h.MessageHandler(S, m, t);
              function ensureNotTerminated() {
                if (d) throw new Error("Worker was terminated");
              }
              function startWorkerTask(e) {
                g.add(e);
              }
              function finishWorkerTask(e) {
                e.finish();
                g.delete(e);
              }
              function loadDocument(_x) {
                return _loadDocument.apply(this, arguments);
              }
              function _loadDocument() {
                _loadDocument = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {
                  var t, _e11, _yield$Promise$all, _yield$Promise$all2, r, i;
                  return _regeneratorRuntime().wrap(function _callee$(_context) {
                    while (1) switch (_context.prev = _context.next) {
                      case 0:
                        _context.next = 2;
                        return a.ensureDoc("checkHeader");
                      case 2:
                        _context.next = 4;
                        return a.ensureDoc("parseStartXRef");
                      case 4:
                        _context.next = 6;
                        return a.ensureDoc("parse", [e]);
                      case 6:
                        _context.next = 8;
                        return a.ensureDoc("checkFirstPage", [e]);
                      case 8:
                        _context.next = 10;
                        return a.ensureDoc("checkLastPage", [e]);
                      case 10:
                        _context.next = 12;
                        return a.ensureDoc("isPureXfa");
                      case 12:
                        t = _context.sent;
                        if (!t) {
                          _context.next = 18;
                          break;
                        }
                        _e11 = new WorkerTask("loadXfaFonts");
                        startWorkerTask(_e11);
                        _context.next = 18;
                        return Promise.all([a.loadXfaFonts(x, _e11).catch(function (e) {}).then(function () {
                          return finishWorkerTask(_e11);
                        }), a.loadXfaImages()]);
                      case 18:
                        _context.next = 20;
                        return Promise.all([a.ensureDoc("numPages"), a.ensureDoc("fingerprints")]);
                      case 20:
                        _yield$Promise$all = _context.sent;
                        _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);
                        r = _yield$Promise$all2[0];
                        i = _yield$Promise$all2[1];
                        _context.t0 = r;
                        _context.t1 = i;
                        if (!t) {
                          _context.next = 32;
                          break;
                        }
                        _context.next = 29;
                        return a.ensureDoc("htmlForXfa");
                      case 29:
                        _context.t2 = _context.sent;
                        _context.next = 33;
                        break;
                      case 32:
                        _context.t2 = null;
                      case 33:
                        _context.t3 = _context.t2;
                        return _context.abrupt("return", {
                          numPages: _context.t0,
                          fingerprints: _context.t1,
                          htmlForXfa: _context.t3
                        });
                      case 35:
                      case "end":
                        return _context.stop();
                    }
                  }, _callee);
                }));
                return _loadDocument.apply(this, arguments);
              }
              function getPdfManager(_ref) {
                var e = _ref.data,
                  t = _ref.password,
                  a = _ref.disableAutoFetch,
                  n = _ref.rangeChunkSize,
                  o = _ref.length,
                  c = _ref.docBaseUrl,
                  l = _ref.enableXfa,
                  h = _ref.evaluatorOptions;
                var d = {
                    source: null,
                    disableAutoFetch: a,
                    docBaseUrl: c,
                    docId: m,
                    enableXfa: l,
                    evaluatorOptions: h,
                    handler: x,
                    length: o,
                    password: t,
                    rangeChunkSize: n
                  },
                  g = new r.PromiseCapability();
                var p;
                if (e) {
                  try {
                    d.source = e;
                    p = new s.LocalPdfManager(d);
                    g.resolve(p);
                  } catch (e) {
                    g.reject(e);
                  }
                  return g.promise;
                }
                var b,
                  y = [];
                try {
                  b = new u.PDFWorkerStream(x);
                } catch (e) {
                  g.reject(e);
                  return g.promise;
                }
                var w = b.getFullReader();
                w.headersReady.then(function () {
                  if (w.isRangeSupported) {
                    d.source = b;
                    d.length = w.contentLength;
                    d.disableAutoFetch || (d.disableAutoFetch = w.isStreamingSupported);
                    p = new s.NetworkPdfManager(d);
                    for (var _i = 0, _y = y; _i < _y.length; _i++) {
                      var _e5 = _y[_i];
                      p.sendProgressiveData(_e5);
                    }
                    y = [];
                    g.resolve(p);
                    f = null;
                  }
                }).catch(function (e) {
                  g.reject(e);
                  f = null;
                });
                var S = 0;
                new Promise(function (e, t) {
                  var readChunk = function readChunk(_ref2) {
                    var e = _ref2.value,
                      a = _ref2.done;
                    try {
                      ensureNotTerminated();
                      if (a) {
                        p || function () {
                          var e = (0, i.arrayBuffersToBytes)(y);
                          o && e.length !== o && (0, r.warn)("reported HTTP length is different from actual");
                          try {
                            d.source = e;
                            p = new s.LocalPdfManager(d);
                            g.resolve(p);
                          } catch (e) {
                            g.reject(e);
                          }
                          y = [];
                        }();
                        f = null;
                        return;
                      }
                      S += e.byteLength;
                      w.isStreamingSupported || x.send("DocProgress", {
                        loaded: S,
                        total: Math.max(S, w.contentLength || 0)
                      });
                      p ? p.sendProgressiveData(e) : y.push(e);
                      w.read().then(readChunk, t);
                    } catch (e) {
                      t(e);
                    }
                  };
                  w.read().then(readChunk, t);
                }).catch(function (e) {
                  g.reject(e);
                  f = null;
                });
                f = function f(e) {
                  b.cancelAllRequests(e);
                };
                return g.promise;
              }
              x.on("GetPage", function (e) {
                return a.getPage(e.pageIndex).then(function (e) {
                  return Promise.all([a.ensure(e, "rotate"), a.ensure(e, "ref"), a.ensure(e, "userUnit"), a.ensure(e, "view")]).then(function (_ref3) {
                    var _ref4 = _slicedToArray(_ref3, 4),
                      e = _ref4[0],
                      t = _ref4[1],
                      a = _ref4[2],
                      r = _ref4[3];
                    return {
                      rotate: e,
                      ref: t,
                      userUnit: a,
                      view: r
                    };
                  });
                });
              });
              x.on("GetPageIndex", function (e) {
                var t = n.Ref.get(e.num, e.gen);
                return a.ensureCatalog("getPageIndex", [t]);
              });
              x.on("GetDestinations", function (e) {
                return a.ensureCatalog("destinations");
              });
              x.on("GetDestination", function (e) {
                return a.ensureCatalog("getDestination", [e.id]);
              });
              x.on("GetPageLabels", function (e) {
                return a.ensureCatalog("pageLabels");
              });
              x.on("GetPageLayout", function (e) {
                return a.ensureCatalog("pageLayout");
              });
              x.on("GetPageMode", function (e) {
                return a.ensureCatalog("pageMode");
              });
              x.on("GetViewerPreferences", function (e) {
                return a.ensureCatalog("viewerPreferences");
              });
              x.on("GetOpenAction", function (e) {
                return a.ensureCatalog("openAction");
              });
              x.on("GetAttachments", function (e) {
                return a.ensureCatalog("attachments");
              });
              x.on("GetJavaScript", function (e) {
                return a.ensureCatalog("javaScript");
              });
              x.on("GetDocJSActions", function (e) {
                return a.ensureCatalog("jsActions");
              });
              x.on("GetPageJSActions", function (_ref5) {
                var e = _ref5.pageIndex;
                return a.getPage(e).then(function (e) {
                  return a.ensure(e, "jsActions");
                });
              });
              x.on("GetOutline", function (e) {
                return a.ensureCatalog("documentOutline");
              });
              x.on("GetOptionalContentConfig", function (e) {
                return a.ensureCatalog("optionalContentConfig");
              });
              x.on("GetPermissions", function (e) {
                return a.ensureCatalog("permissions");
              });
              x.on("GetMetadata", function (e) {
                return Promise.all([a.ensureDoc("documentInfo"), a.ensureCatalog("metadata")]);
              });
              x.on("GetMarkInfo", function (e) {
                return a.ensureCatalog("markInfo");
              });
              x.on("GetData", function (e) {
                return a.requestLoadedStream().then(function (e) {
                  return e.bytes;
                });
              });
              x.on("GetAnnotations", function (_ref6) {
                var e = _ref6.pageIndex,
                  t = _ref6.intent;
                return a.getPage(e).then(function (a) {
                  var r = new WorkerTask("GetAnnotations: page ".concat(e));
                  startWorkerTask(r);
                  return a.getAnnotationsData(x, r, t).then(function (e) {
                    finishWorkerTask(r);
                    return e;
                  }, function (e) {
                    finishWorkerTask(r);
                    throw e;
                  });
                });
              });
              x.on("GetFieldObjects", function (e) {
                return a.ensureDoc("fieldObjects");
              });
              x.on("HasJSActions", function (e) {
                return a.ensureDoc("hasJSActions");
              });
              x.on("GetCalculationOrderIds", function (e) {
                return a.ensureDoc("calculationOrderIds");
              });
              x.on("SaveDocument", function (_ref7) {
                var e = _ref7.isPureXfa,
                  t = _ref7.numPages,
                  s = _ref7.annotationStorage,
                  o = _ref7.filename;
                var l = [a.requestLoadedStream(), a.ensureCatalog("acroForm"), a.ensureCatalog("acroFormRef"), a.ensureDoc("xref"), a.ensureDoc("startXRef")],
                  h = e ? null : (0, i.getNewAnnotationsMap)(s);
                if (h) {
                  var _iterator = _createForOfIteratorHelper(h),
                    _step;
                  try {
                    var _loop = function _loop() {
                      var _step$value = _slicedToArray(_step.value, 2),
                        e = _step$value[0],
                        t = _step$value[1];
                      l.push(a.getPage(e).then(function (a) {
                        var r = new WorkerTask("Save (editor): page ".concat(e));
                        return a.saveNewAnnotations(x, r, t).finally(function () {
                          finishWorkerTask(r);
                        });
                      }));
                    };
                    for (_iterator.s(); !(_step = _iterator.n()).done;) {
                      _loop();
                    }
                  } catch (err) {
                    _iterator.e(err);
                  } finally {
                    _iterator.f();
                  }
                }
                if (e) l.push(a.serializeXfaData(s));else {
                  var _loop2 = function _loop2(_e6) {
                    l.push(a.getPage(_e6).then(function (t) {
                      var a = new WorkerTask("Save: page ".concat(_e6));
                      return t.save(x, a, s).finally(function () {
                        finishWorkerTask(a);
                      });
                    }));
                  };
                  for (var _e6 = 0; _e6 < t; _e6++) {
                    _loop2(_e6);
                  }
                }
                return Promise.all(l).then(function (_ref8) {
                  var _ref9 = _toArray(_ref8),
                    t = _ref9[0],
                    a = _ref9[1],
                    i = _ref9[2],
                    s = _ref9[3],
                    l = _ref9[4],
                    h = _ref9.slice(5);
                  var u = [],
                    d = null;
                  if (e) {
                    d = h[0];
                    if (!d) return t.bytes;
                  } else {
                    u = h.flat(2);
                    if (0 === u.length) return t.bytes;
                  }
                  var f = i && a instanceof n.Dict && u.some(function (e) {
                      return e.needAppearances;
                    }),
                    g = a instanceof n.Dict && a.get("XFA") || null;
                  var p = null,
                    m = !1;
                  if (Array.isArray(g)) {
                    for (var _e7 = 0, _t = g.length; _e7 < _t; _e7 += 2) if ("datasets" === g[_e7]) {
                      p = g[_e7 + 1];
                      m = !0;
                    }
                    null === p && (p = s.getNewTemporaryRef());
                  } else g && (0, r.warn)("Unsupported XFA type.");
                  var b = Object.create(null);
                  if (s.trailer) {
                    var _s$lastXRefStreamPos;
                    var _e8 = Object.create(null),
                      _t2 = s.trailer.get("Info") || null;
                    _t2 instanceof n.Dict && _t2.forEach(function (t, a) {
                      "string" == typeof a && (_e8[t] = (0, r.stringToPDFString)(a));
                    });
                    b = {
                      rootRef: s.trailer.getRaw("Root") || null,
                      encryptRef: s.trailer.getRaw("Encrypt") || null,
                      newRef: s.getNewTemporaryRef(),
                      infoRef: s.trailer.getRaw("Info") || null,
                      info: _e8,
                      fileIds: s.trailer.get("ID") || null,
                      startXRef: (_s$lastXRefStreamPos = s.lastXRefStreamPos) !== null && _s$lastXRefStreamPos !== void 0 ? _s$lastXRefStreamPos : l,
                      filename: o
                    };
                  }
                  try {
                    return (0, c.incrementalUpdate)({
                      originalData: t.bytes,
                      xrefInfo: b,
                      newRefs: u,
                      xref: s,
                      hasXfa: !!g,
                      xfaDatasetsRef: p,
                      hasXfaDatasetsEntry: m,
                      needAppearances: f,
                      acroFormRef: i,
                      acroForm: a,
                      xfaData: d
                    });
                  } finally {
                    s.resetNewTemporaryRef();
                  }
                });
              });
              x.on("GetOperatorList", function (e, t) {
                var i = e.pageIndex;
                a.getPage(i).then(function (a) {
                  var n = new WorkerTask("GetOperatorList: page ".concat(i));
                  startWorkerTask(n);
                  var s = p >= r.VerbosityLevel.INFOS ? Date.now() : 0;
                  a.getOperatorList({
                    handler: x,
                    sink: t,
                    task: n,
                    intent: e.intent,
                    cacheKey: e.cacheKey,
                    annotationStorage: e.annotationStorage
                  }).then(function (e) {
                    finishWorkerTask(n);
                    s && (0, r.info)("page=".concat(i + 1, " - getOperatorList: time=").concat(Date.now() - s, "ms, len=").concat(e.length));
                    t.close();
                  }, function (e) {
                    finishWorkerTask(n);
                    n.terminated || t.error(e);
                  });
                });
              });
              x.on("GetTextContent", function (e, t) {
                var i = e.pageIndex,
                  n = e.includeMarkedContent,
                  s = e.disableNormalization;
                a.getPage(i).then(function (e) {
                  var a = new WorkerTask("GetTextContent: page " + i);
                  startWorkerTask(a);
                  var o = p >= r.VerbosityLevel.INFOS ? Date.now() : 0;
                  e.extractTextContent({
                    handler: x,
                    task: a,
                    sink: t,
                    includeMarkedContent: n,
                    disableNormalization: s
                  }).then(function () {
                    finishWorkerTask(a);
                    o && (0, r.info)("page=".concat(i + 1, " - getTextContent: time=") + (Date.now() - o) + "ms");
                    t.close();
                  }, function (e) {
                    finishWorkerTask(a);
                    a.terminated || t.error(e);
                  });
                });
              });
              x.on("GetStructTree", function (e) {
                return a.getPage(e.pageIndex).then(function (e) {
                  return a.ensure(e, "getStructTree");
                });
              });
              x.on("FontFallback", function (e) {
                return a.fontFallback(e.id, x);
              });
              x.on("Cleanup", function (e) {
                return a.cleanup(!0);
              });
              x.on("Terminate", function (e) {
                d = !0;
                var t = [];
                if (a) {
                  a.terminate(new r.AbortException("Worker was terminated."));
                  var _e9 = a.cleanup();
                  t.push(_e9);
                  a = null;
                } else (0, o.clearGlobalCaches)();
                f && f(new r.AbortException("Worker was terminated."));
                var _iterator2 = _createForOfIteratorHelper(g),
                  _step2;
                try {
                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                    var _e10 = _step2.value;
                    t.push(_e10.finished);
                    _e10.terminate();
                  }
                } catch (err) {
                  _iterator2.e(err);
                } finally {
                  _iterator2.f();
                }
                return Promise.all(t).then(function () {
                  x.destroy();
                  x = null;
                });
              });
              x.on("Ready", function (t) {
                !function setupDoc(e) {
                  function onSuccess(e) {
                    ensureNotTerminated();
                    x.send("GetDoc", {
                      pdfInfo: e
                    });
                  }
                  function onFailure(e) {
                    ensureNotTerminated();
                    if (e instanceof r.PasswordException) {
                      var _t3 = new WorkerTask("PasswordException: response ".concat(e.code));
                      startWorkerTask(_t3);
                      x.sendWithPromise("PasswordRequest", e).then(function (_ref10) {
                        var e = _ref10.password;
                        finishWorkerTask(_t3);
                        a.updatePassword(e);
                        pdfManagerReady();
                      }).catch(function () {
                        finishWorkerTask(_t3);
                        x.send("DocException", e);
                      });
                    } else e instanceof r.InvalidPDFException || e instanceof r.MissingPDFException || e instanceof r.UnexpectedResponseException || e instanceof r.UnknownErrorException ? x.send("DocException", e) : x.send("DocException", new r.UnknownErrorException(e.message, e.toString()));
                  }
                  function pdfManagerReady() {
                    ensureNotTerminated();
                    loadDocument(!1).then(onSuccess, function (e) {
                      ensureNotTerminated();
                      e instanceof i.XRefParseException ? a.requestLoadedStream().then(function () {
                        ensureNotTerminated();
                        loadDocument(!0).then(onSuccess, onFailure);
                      }) : onFailure(e);
                    });
                  }
                  ensureNotTerminated();
                  getPdfManager(e).then(function (e) {
                    if (d) {
                      e.terminate(new r.AbortException("Worker was terminated."));
                      throw new Error("Worker was terminated");
                    }
                    a = e;
                    a.requestLoadedStream(!0).then(function (e) {
                      x.send("DataLoaded", {
                        length: e.bytes.byteLength
                      });
                    });
                  }).then(pdfManagerReady, onFailure);
                }(e);
                e = null;
              });
              return S;
            }
          }, {
            key: "initializeFromPort",
            value: function initializeFromPort(e) {
              var t = new h.MessageHandler("worker", "main", e);
              WorkerMessageHandler.setup(t, e);
              t.send("ready", null);
            }
          }]);
          return WorkerMessageHandler;
        }();
        t.WorkerMessageHandler = WorkerMessageHandler;
        "undefined" == typeof window && !l.isNodeJS && "undefined" != typeof self && function isMessagePort(e) {
          return "function" == typeof e.postMessage && "onmessage" in e;
        }(self) && WorkerMessageHandler.initializeFromPort(self);
      }, function (e, t) {
        var _e12;
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.VerbosityLevel = t.Util = t.UnknownErrorException = t.UnexpectedResponseException = t.TextRenderingMode = t.RenderingIntentFlag = t.PromiseCapability = t.PermissionFlag = t.PasswordResponses = t.PasswordException = t.PageActionEventType = t.OPS = t.MissingPDFException = t.MAX_IMAGE_SIZE_TO_CACHE = t.LINE_FACTOR = t.LINE_DESCENT_FACTOR = t.InvalidPDFException = t.ImageKind = t.IDENTITY_MATRIX = t.FormatError = t.FeatureTest = t.FONT_IDENTITY_MATRIX = t.DocumentActionEventType = t.CMapCompressionType = t.BaseException = t.BASELINE_FACTOR = t.AnnotationType = t.AnnotationStateModelType = t.AnnotationReviewState = t.AnnotationReplyType = t.AnnotationMode = t.AnnotationMarkedState = t.AnnotationFlag = t.AnnotationFieldFlag = t.AnnotationEditorType = t.AnnotationEditorPrefix = t.AnnotationEditorParamsType = t.AnnotationBorderStyleType = t.AnnotationActionEventType = t.AbortException = void 0;
        t.assert = function assert(e, t) {
          e || unreachable(t);
        };
        t.bytesToString = function bytesToString(e) {
          "object" == typeof e && void 0 !== (e === null || e === void 0 ? void 0 : e.length) || unreachable("Invalid argument for bytesToString");
          var t = e.length,
            a = 8192;
          if (t < a) return String.fromCharCode.apply(null, e);
          var r = [];
          for (var _i2 = 0; _i2 < t; _i2 += a) {
            var _n = Math.min(_i2 + a, t),
              _s = e.subarray(_i2, _n);
            r.push(String.fromCharCode.apply(null, _s));
          }
          return r.join("");
        };
        t.createValidAbsoluteUrl = function createValidAbsoluteUrl(e) {
          var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
          var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
          if (!e) return null;
          try {
            if (a && "string" == typeof e) {
              if (a.addDefaultProtocol && e.startsWith("www.")) {
                var _t4 = e.match(/\./g);
                (_t4 === null || _t4 === void 0 ? void 0 : _t4.length) >= 2 && (e = "http://".concat(e));
              }
              if (a.tryConvertEncoding) try {
                e = stringToUTF8String(e);
              } catch (e) {}
            }
            var _r = t ? new URL(e, t) : new URL(e);
            if (function _isValidProtocol(e) {
              switch (e === null || e === void 0 ? void 0 : e.protocol) {
                case "http:":
                case "https:":
                case "ftp:":
                case "mailto:":
                case "tel:":
                  return !0;
                default:
                  return !1;
              }
            }(_r)) return _r;
          } catch (e) {}
          return null;
        };
        t.getModificationDate = function getModificationDate() {
          var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();
          return [e.getUTCFullYear().toString(), (e.getUTCMonth() + 1).toString().padStart(2, "0"), e.getUTCDate().toString().padStart(2, "0"), e.getUTCHours().toString().padStart(2, "0"), e.getUTCMinutes().toString().padStart(2, "0"), e.getUTCSeconds().toString().padStart(2, "0")].join("");
        };
        t.getVerbosityLevel = function getVerbosityLevel() {
          return r;
        };
        t.info = function info(e) {
          r >= a.INFOS && console.log("Info: ".concat(e));
        };
        t.isArrayBuffer = function isArrayBuffer(e) {
          return "object" == typeof e && void 0 !== (e === null || e === void 0 ? void 0 : e.byteLength);
        };
        t.isArrayEqual = function isArrayEqual(e, t) {
          if (e.length !== t.length) return !1;
          for (var _a = 0, _r2 = e.length; _a < _r2; _a++) if (e[_a] !== t[_a]) return !1;
          return !0;
        };
        t.normalizeUnicode = function normalizeUnicode(e) {
          if (!o) {
            o = /([\xA0\xB5\u037E\u0EB3\u2000-\u200A\u202F\u2126\uFB00-\uFB04\uFB06\uFB20-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBA1\uFBA4-\uFBA9\uFBAE-\uFBB1\uFBD3-\uFBDC\uFBDE-\uFBE7\uFBEA-\uFBF8\uFBFC\uFBFD\uFC00-\uFC5D\uFC64-\uFCF1\uFCF5-\uFD3D\uFD88\uFDF4\uFDFA\uFDFB\uFE71\uFE77\uFE79\uFE7B\uFE7D]+)|(\uFB05+)/g;
            c = new Map([["ﬅ", "ſt"]]);
          }
          return e.replaceAll(o, function (e, t, a) {
            return t ? t.normalize("NFKC") : c.get(a);
          });
        };
        t.objectFromMap = function objectFromMap(e) {
          var t = Object.create(null);
          var _iterator3 = _createForOfIteratorHelper(e),
            _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
              var _step3$value = _slicedToArray(_step3.value, 2),
                _a2 = _step3$value[0],
                _r3 = _step3$value[1];
              t[_a2] = _r3;
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
          return t;
        };
        t.objectSize = function objectSize(e) {
          return Object.keys(e).length;
        };
        t.setVerbosityLevel = function setVerbosityLevel(e) {
          Number.isInteger(e) && (r = e);
        };
        t.shadow = shadow;
        t.string32 = function string32(e) {
          return String.fromCharCode(e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e);
        };
        t.stringToBytes = stringToBytes;
        t.stringToPDFString = function stringToPDFString(e) {
          if (e[0] >= "ï") {
            var _t5;
            "þ" === e[0] && "ÿ" === e[1] ? _t5 = "utf-16be" : "ÿ" === e[0] && "þ" === e[1] ? _t5 = "utf-16le" : "ï" === e[0] && "»" === e[1] && "¿" === e[2] && (_t5 = "utf-8");
            if (_t5) try {
              var _a3 = new TextDecoder(_t5, {
                  fatal: !0
                }),
                _r4 = stringToBytes(e);
              return _a3.decode(_r4);
            } catch (e) {
              warn("stringToPDFString: \"".concat(e, "\"."));
            }
          }
          var t = [];
          for (var _a4 = 0, _r5 = e.length; _a4 < _r5; _a4++) {
            var _r6 = s[e.charCodeAt(_a4)];
            t.push(_r6 ? String.fromCharCode(_r6) : e.charAt(_a4));
          }
          return t.join("");
        };
        t.stringToUTF8String = stringToUTF8String;
        t.unreachable = unreachable;
        t.utf8StringToString = function utf8StringToString(e) {
          return unescape(encodeURIComponent(e));
        };
        t.warn = warn;
        t.IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];
        t.FONT_IDENTITY_MATRIX = [.001, 0, 0, .001, 0, 0];
        t.MAX_IMAGE_SIZE_TO_CACHE = 1e7;
        t.LINE_FACTOR = 1.35;
        t.LINE_DESCENT_FACTOR = .35;
        t.BASELINE_FACTOR = .25925925925925924;
        t.RenderingIntentFlag = {
          ANY: 1,
          DISPLAY: 2,
          PRINT: 4,
          SAVE: 8,
          ANNOTATIONS_FORMS: 16,
          ANNOTATIONS_STORAGE: 32,
          ANNOTATIONS_DISABLE: 64,
          OPLIST: 256
        };
        t.AnnotationMode = {
          DISABLE: 0,
          ENABLE: 1,
          ENABLE_FORMS: 2,
          ENABLE_STORAGE: 3
        };
        t.AnnotationEditorPrefix = "pdfjs_internal_editor_";
        t.AnnotationEditorType = {
          DISABLE: -1,
          NONE: 0,
          FREETEXT: 3,
          INK: 15
        };
        t.AnnotationEditorParamsType = {
          FREETEXT_SIZE: 1,
          FREETEXT_COLOR: 2,
          FREETEXT_OPACITY: 3,
          INK_COLOR: 11,
          INK_THICKNESS: 12,
          INK_OPACITY: 13
        };
        t.PermissionFlag = {
          PRINT: 4,
          MODIFY_CONTENTS: 8,
          COPY: 16,
          MODIFY_ANNOTATIONS: 32,
          FILL_INTERACTIVE_FORMS: 256,
          COPY_FOR_ACCESSIBILITY: 512,
          ASSEMBLE: 1024,
          PRINT_HIGH_QUALITY: 2048
        };
        t.TextRenderingMode = {
          FILL: 0,
          STROKE: 1,
          FILL_STROKE: 2,
          INVISIBLE: 3,
          FILL_ADD_TO_PATH: 4,
          STROKE_ADD_TO_PATH: 5,
          FILL_STROKE_ADD_TO_PATH: 6,
          ADD_TO_PATH: 7,
          FILL_STROKE_MASK: 3,
          ADD_TO_PATH_FLAG: 4
        };
        t.ImageKind = {
          GRAYSCALE_1BPP: 1,
          RGB_24BPP: 2,
          RGBA_32BPP: 3
        };
        t.AnnotationType = {
          TEXT: 1,
          LINK: 2,
          FREETEXT: 3,
          LINE: 4,
          SQUARE: 5,
          CIRCLE: 6,
          POLYGON: 7,
          POLYLINE: 8,
          HIGHLIGHT: 9,
          UNDERLINE: 10,
          SQUIGGLY: 11,
          STRIKEOUT: 12,
          STAMP: 13,
          CARET: 14,
          INK: 15,
          POPUP: 16,
          FILEATTACHMENT: 17,
          SOUND: 18,
          MOVIE: 19,
          WIDGET: 20,
          SCREEN: 21,
          PRINTERMARK: 22,
          TRAPNET: 23,
          WATERMARK: 24,
          THREED: 25,
          REDACT: 26
        };
        t.AnnotationStateModelType = {
          MARKED: "Marked",
          REVIEW: "Review"
        };
        t.AnnotationMarkedState = {
          MARKED: "Marked",
          UNMARKED: "Unmarked"
        };
        t.AnnotationReviewState = {
          ACCEPTED: "Accepted",
          REJECTED: "Rejected",
          CANCELLED: "Cancelled",
          COMPLETED: "Completed",
          NONE: "None"
        };
        t.AnnotationReplyType = {
          GROUP: "Group",
          REPLY: "R"
        };
        t.AnnotationFlag = {
          INVISIBLE: 1,
          HIDDEN: 2,
          PRINT: 4,
          NOZOOM: 8,
          NOROTATE: 16,
          NOVIEW: 32,
          READONLY: 64,
          LOCKED: 128,
          TOGGLENOVIEW: 256,
          LOCKEDCONTENTS: 512
        };
        t.AnnotationFieldFlag = {
          READONLY: 1,
          REQUIRED: 2,
          NOEXPORT: 4,
          MULTILINE: 4096,
          PASSWORD: 8192,
          NOTOGGLETOOFF: 16384,
          RADIO: 32768,
          PUSHBUTTON: 65536,
          COMBO: 131072,
          EDIT: 262144,
          SORT: 524288,
          FILESELECT: 1048576,
          MULTISELECT: 2097152,
          DONOTSPELLCHECK: 4194304,
          DONOTSCROLL: 8388608,
          COMB: 16777216,
          RICHTEXT: 33554432,
          RADIOSINUNISON: 33554432,
          COMMITONSELCHANGE: 67108864
        };
        t.AnnotationBorderStyleType = {
          SOLID: 1,
          DASHED: 2,
          BEVELED: 3,
          INSET: 4,
          UNDERLINE: 5
        };
        t.AnnotationActionEventType = {
          E: "Mouse Enter",
          X: "Mouse Exit",
          D: "Mouse Down",
          U: "Mouse Up",
          Fo: "Focus",
          Bl: "Blur",
          PO: "PageOpen",
          PC: "PageClose",
          PV: "PageVisible",
          PI: "PageInvisible",
          K: "Keystroke",
          F: "Format",
          V: "Validate",
          C: "Calculate"
        };
        t.DocumentActionEventType = {
          WC: "WillClose",
          WS: "WillSave",
          DS: "DidSave",
          WP: "WillPrint",
          DP: "DidPrint"
        };
        t.PageActionEventType = {
          O: "PageOpen",
          C: "PageClose"
        };
        var a = {
          ERRORS: 0,
          WARNINGS: 1,
          INFOS: 5
        };
        t.VerbosityLevel = a;
        t.CMapCompressionType = {
          NONE: 0,
          BINARY: 1
        };
        t.OPS = {
          dependency: 1,
          setLineWidth: 2,
          setLineCap: 3,
          setLineJoin: 4,
          setMiterLimit: 5,
          setDash: 6,
          setRenderingIntent: 7,
          setFlatness: 8,
          setGState: 9,
          save: 10,
          restore: 11,
          transform: 12,
          moveTo: 13,
          lineTo: 14,
          curveTo: 15,
          curveTo2: 16,
          curveTo3: 17,
          closePath: 18,
          rectangle: 19,
          stroke: 20,
          closeStroke: 21,
          fill: 22,
          eoFill: 23,
          fillStroke: 24,
          eoFillStroke: 25,
          closeFillStroke: 26,
          closeEOFillStroke: 27,
          endPath: 28,
          clip: 29,
          eoClip: 30,
          beginText: 31,
          endText: 32,
          setCharSpacing: 33,
          setWordSpacing: 34,
          setHScale: 35,
          setLeading: 36,
          setFont: 37,
          setTextRenderingMode: 38,
          setTextRise: 39,
          moveText: 40,
          setLeadingMoveText: 41,
          setTextMatrix: 42,
          nextLine: 43,
          showText: 44,
          showSpacedText: 45,
          nextLineShowText: 46,
          nextLineSetSpacingShowText: 47,
          setCharWidth: 48,
          setCharWidthAndBounds: 49,
          setStrokeColorSpace: 50,
          setFillColorSpace: 51,
          setStrokeColor: 52,
          setStrokeColorN: 53,
          setFillColor: 54,
          setFillColorN: 55,
          setStrokeGray: 56,
          setFillGray: 57,
          setStrokeRGBColor: 58,
          setFillRGBColor: 59,
          setStrokeCMYKColor: 60,
          setFillCMYKColor: 61,
          shadingFill: 62,
          beginInlineImage: 63,
          beginImageData: 64,
          endInlineImage: 65,
          paintXObject: 66,
          markPoint: 67,
          markPointProps: 68,
          beginMarkedContent: 69,
          beginMarkedContentProps: 70,
          endMarkedContent: 71,
          beginCompat: 72,
          endCompat: 73,
          paintFormXObjectBegin: 74,
          paintFormXObjectEnd: 75,
          beginGroup: 76,
          endGroup: 77,
          beginAnnotation: 80,
          endAnnotation: 81,
          paintImageMaskXObject: 83,
          paintImageMaskXObjectGroup: 84,
          paintImageXObject: 85,
          paintInlineImageXObject: 86,
          paintInlineImageXObjectGroup: 87,
          paintImageXObjectRepeat: 88,
          paintImageMaskXObjectRepeat: 89,
          paintSolidColorImageMask: 90,
          constructPath: 91
        };
        t.PasswordResponses = {
          NEED_PASSWORD: 1,
          INCORRECT_PASSWORD: 2
        };
        var r = a.WARNINGS;
        function warn(e) {
          r >= a.WARNINGS && console.log("Warning: ".concat(e));
        }
        function unreachable(e) {
          throw new Error(e);
        }
        function shadow(e, t, a) {
          var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;
          Object.defineProperty(e, t, {
            value: a,
            enumerable: !r,
            configurable: !0,
            writable: !1
          });
          return a;
        }
        var i = function BaseExceptionClosure() {
          function BaseException(e, t) {
            this.constructor === BaseException && unreachable("Cannot initialize BaseException.");
            this.message = e;
            this.name = t;
          }
          BaseException.prototype = new Error();
          BaseException.constructor = BaseException;
          return BaseException;
        }();
        t.BaseException = i;
        t.PasswordException = /*#__PURE__*/function (_i3) {
          _inherits(PasswordException, _i3);
          var _super = _createSuper(PasswordException);
          function PasswordException(e, t) {
            var _this;
            _classCallCheck(this, PasswordException);
            _this = _super.call(this, e, "PasswordException");
            _this.code = t;
            return _this;
          }
          return _createClass(PasswordException);
        }(i);
        t.UnknownErrorException = /*#__PURE__*/function (_i4) {
          _inherits(UnknownErrorException, _i4);
          var _super2 = _createSuper(UnknownErrorException);
          function UnknownErrorException(e, t) {
            var _this2;
            _classCallCheck(this, UnknownErrorException);
            _this2 = _super2.call(this, e, "UnknownErrorException");
            _this2.details = t;
            return _this2;
          }
          return _createClass(UnknownErrorException);
        }(i);
        t.InvalidPDFException = /*#__PURE__*/function (_i5) {
          _inherits(InvalidPDFException, _i5);
          var _super3 = _createSuper(InvalidPDFException);
          function InvalidPDFException(e) {
            _classCallCheck(this, InvalidPDFException);
            return _super3.call(this, e, "InvalidPDFException");
          }
          return _createClass(InvalidPDFException);
        }(i);
        t.MissingPDFException = /*#__PURE__*/function (_i6) {
          _inherits(MissingPDFException, _i6);
          var _super4 = _createSuper(MissingPDFException);
          function MissingPDFException(e) {
            _classCallCheck(this, MissingPDFException);
            return _super4.call(this, e, "MissingPDFException");
          }
          return _createClass(MissingPDFException);
        }(i);
        t.UnexpectedResponseException = /*#__PURE__*/function (_i7) {
          _inherits(UnexpectedResponseException, _i7);
          var _super5 = _createSuper(UnexpectedResponseException);
          function UnexpectedResponseException(e, t) {
            var _this3;
            _classCallCheck(this, UnexpectedResponseException);
            _this3 = _super5.call(this, e, "UnexpectedResponseException");
            _this3.status = t;
            return _this3;
          }
          return _createClass(UnexpectedResponseException);
        }(i);
        t.FormatError = /*#__PURE__*/function (_i8) {
          _inherits(FormatError, _i8);
          var _super6 = _createSuper(FormatError);
          function FormatError(e) {
            _classCallCheck(this, FormatError);
            return _super6.call(this, e, "FormatError");
          }
          return _createClass(FormatError);
        }(i);
        t.AbortException = /*#__PURE__*/function (_i9) {
          _inherits(AbortException, _i9);
          var _super7 = _createSuper(AbortException);
          function AbortException(e) {
            _classCallCheck(this, AbortException);
            return _super7.call(this, e, "AbortException");
          }
          return _createClass(AbortException);
        }(i);
        function stringToBytes(e) {
          "string" != typeof e && unreachable("Invalid argument for stringToBytes");
          var t = e.length,
            a = new Uint8Array(t);
          for (var _r7 = 0; _r7 < t; ++_r7) a[_r7] = 255 & e.charCodeAt(_r7);
          return a;
        }
        t.FeatureTest = /*#__PURE__*/function () {
          function FeatureTest() {
            _classCallCheck(this, FeatureTest);
          }
          _createClass(FeatureTest, null, [{
            key: "isLittleEndian",
            get: function get() {
              return shadow(this, "isLittleEndian", function isLittleEndian() {
                var e = new Uint8Array(4);
                e[0] = 1;
                return 1 === new Uint32Array(e.buffer, 0, 1)[0];
              }());
            }
          }, {
            key: "isEvalSupported",
            get: function get() {
              return shadow(this, "isEvalSupported", function isEvalSupported() {
                try {
                  new Function("");
                  return !0;
                } catch (e) {
                  return !1;
                }
              }());
            }
          }, {
            key: "isOffscreenCanvasSupported",
            get: function get() {
              return shadow(this, "isOffscreenCanvasSupported", "undefined" != typeof OffscreenCanvas);
            }
          }, {
            key: "platform",
            get: function get() {
              return "undefined" == typeof navigator ? shadow(this, "platform", {
                isWin: !1,
                isMac: !1
              }) : shadow(this, "platform", {
                isWin: navigator.platform.includes("Win"),
                isMac: navigator.platform.includes("Mac")
              });
            }
          }]);
          return FeatureTest;
        }();
        var n = _toConsumableArray(Array(256).keys()).map(function (e) {
          return e.toString(16).padStart(2, "0");
        });
        var Util = /*#__PURE__*/function () {
          function Util() {
            _classCallCheck(this, Util);
          }
          _createClass(Util, null, [{
            key: "makeHexColor",
            value: function makeHexColor(e, t, a) {
              return "#".concat(n[e]).concat(n[t]).concat(n[a]);
            }
          }, {
            key: "scaleMinMax",
            value: function scaleMinMax(e, t) {
              var a;
              if (e[0]) {
                if (e[0] < 0) {
                  a = t[0];
                  t[0] = t[1];
                  t[1] = a;
                }
                t[0] *= e[0];
                t[1] *= e[0];
                if (e[3] < 0) {
                  a = t[2];
                  t[2] = t[3];
                  t[3] = a;
                }
                t[2] *= e[3];
                t[3] *= e[3];
              } else {
                a = t[0];
                t[0] = t[2];
                t[2] = a;
                a = t[1];
                t[1] = t[3];
                t[3] = a;
                if (e[1] < 0) {
                  a = t[2];
                  t[2] = t[3];
                  t[3] = a;
                }
                t[2] *= e[1];
                t[3] *= e[1];
                if (e[2] < 0) {
                  a = t[0];
                  t[0] = t[1];
                  t[1] = a;
                }
                t[0] *= e[2];
                t[1] *= e[2];
              }
              t[0] += e[4];
              t[1] += e[4];
              t[2] += e[5];
              t[3] += e[5];
            }
          }, {
            key: "transform",
            value: function transform(e, t) {
              return [e[0] * t[0] + e[2] * t[1], e[1] * t[0] + e[3] * t[1], e[0] * t[2] + e[2] * t[3], e[1] * t[2] + e[3] * t[3], e[0] * t[4] + e[2] * t[5] + e[4], e[1] * t[4] + e[3] * t[5] + e[5]];
            }
          }, {
            key: "applyTransform",
            value: function applyTransform(e, t) {
              return [e[0] * t[0] + e[1] * t[2] + t[4], e[0] * t[1] + e[1] * t[3] + t[5]];
            }
          }, {
            key: "applyInverseTransform",
            value: function applyInverseTransform(e, t) {
              var a = t[0] * t[3] - t[1] * t[2];
              return [(e[0] * t[3] - e[1] * t[2] + t[2] * t[5] - t[4] * t[3]) / a, (-e[0] * t[1] + e[1] * t[0] + t[4] * t[1] - t[5] * t[0]) / a];
            }
          }, {
            key: "getAxialAlignedBoundingBox",
            value: function getAxialAlignedBoundingBox(e, t) {
              var a = Util.applyTransform(e, t),
                r = Util.applyTransform(e.slice(2, 4), t),
                i = Util.applyTransform([e[0], e[3]], t),
                n = Util.applyTransform([e[2], e[1]], t);
              return [Math.min(a[0], r[0], i[0], n[0]), Math.min(a[1], r[1], i[1], n[1]), Math.max(a[0], r[0], i[0], n[0]), Math.max(a[1], r[1], i[1], n[1])];
            }
          }, {
            key: "inverseTransform",
            value: function inverseTransform(e) {
              var t = e[0] * e[3] - e[1] * e[2];
              return [e[3] / t, -e[1] / t, -e[2] / t, e[0] / t, (e[2] * e[5] - e[4] * e[3]) / t, (e[4] * e[1] - e[5] * e[0]) / t];
            }
          }, {
            key: "singularValueDecompose2dScale",
            value: function singularValueDecompose2dScale(e) {
              var t = [e[0], e[2], e[1], e[3]],
                a = e[0] * t[0] + e[1] * t[2],
                r = e[0] * t[1] + e[1] * t[3],
                i = e[2] * t[0] + e[3] * t[2],
                n = e[2] * t[1] + e[3] * t[3],
                s = (a + n) / 2,
                o = Math.sqrt(Math.pow(a + n, 2) - 4 * (a * n - i * r)) / 2,
                c = s + o || 1,
                l = s - o || 1;
              return [Math.sqrt(c), Math.sqrt(l)];
            }
          }, {
            key: "normalizeRect",
            value: function normalizeRect(e) {
              var t = e.slice(0);
              if (e[0] > e[2]) {
                t[0] = e[2];
                t[2] = e[0];
              }
              if (e[1] > e[3]) {
                t[1] = e[3];
                t[3] = e[1];
              }
              return t;
            }
          }, {
            key: "intersect",
            value: function intersect(e, t) {
              var a = Math.max(Math.min(e[0], e[2]), Math.min(t[0], t[2])),
                r = Math.min(Math.max(e[0], e[2]), Math.max(t[0], t[2]));
              if (a > r) return null;
              var i = Math.max(Math.min(e[1], e[3]), Math.min(t[1], t[3])),
                n = Math.min(Math.max(e[1], e[3]), Math.max(t[1], t[3]));
              return i > n ? null : [a, i, r, n];
            }
          }, {
            key: "bezierBoundingBox",
            value: function bezierBoundingBox(e, t, a, r, i, n, s, o) {
              var c = [],
                l = [[], []];
              var h, u, d, f, g, p, m, b;
              for (var _l = 0; _l < 2; ++_l) {
                if (0 === _l) {
                  u = 6 * e - 12 * a + 6 * i;
                  h = -3 * e + 9 * a - 9 * i + 3 * s;
                  d = 3 * a - 3 * e;
                } else {
                  u = 6 * t - 12 * r + 6 * n;
                  h = -3 * t + 9 * r - 9 * n + 3 * o;
                  d = 3 * r - 3 * t;
                }
                if (Math.abs(h) < 1e-12) {
                  if (Math.abs(u) < 1e-12) continue;
                  f = -d / u;
                  0 < f && f < 1 && c.push(f);
                } else {
                  m = u * u - 4 * d * h;
                  b = Math.sqrt(m);
                  if (!(m < 0)) {
                    g = (-u + b) / (2 * h);
                    0 < g && g < 1 && c.push(g);
                    p = (-u - b) / (2 * h);
                    0 < p && p < 1 && c.push(p);
                  }
                }
              }
              var y,
                w = c.length;
              var S = w;
              for (; w--;) {
                f = c[w];
                y = 1 - f;
                l[0][w] = y * y * y * e + 3 * y * y * f * a + 3 * y * f * f * i + f * f * f * s;
                l[1][w] = y * y * y * t + 3 * y * y * f * r + 3 * y * f * f * n + f * f * f * o;
              }
              l[0][S] = e;
              l[1][S] = t;
              l[0][S + 1] = s;
              l[1][S + 1] = o;
              l[0].length = l[1].length = S + 2;
              return [Math.min.apply(Math, _toConsumableArray(l[0])), Math.min.apply(Math, _toConsumableArray(l[1])), Math.max.apply(Math, _toConsumableArray(l[0])), Math.max.apply(Math, _toConsumableArray(l[1]))];
            }
          }]);
          return Util;
        }();
        t.Util = Util;
        var s = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 728, 711, 710, 729, 733, 731, 730, 732, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8226, 8224, 8225, 8230, 8212, 8211, 402, 8260, 8249, 8250, 8722, 8240, 8222, 8220, 8221, 8216, 8217, 8218, 8482, 64257, 64258, 321, 338, 352, 376, 381, 305, 322, 339, 353, 382, 0, 8364];
        function stringToUTF8String(e) {
          return decodeURIComponent(escape(e));
        }
        t.PromiseCapability = (_e12 = /*#__PURE__*/new WeakMap(), /*#__PURE__*/function () {
          function PromiseCapability() {
            var _this4 = this;
            _classCallCheck(this, PromiseCapability);
            _classPrivateFieldInitSpec(this, _e12, {
              writable: true,
              value: !1
            });
            this.promise = new Promise(function (e, t) {
              _this4.resolve = function (t) {
                _classPrivateFieldSet(_this4, _e12, !0);
                e(t);
              };
              _this4.reject = function (e) {
                _classPrivateFieldSet(_this4, _e12, !0);
                t(e);
              };
            });
          }
          _createClass(PromiseCapability, [{
            key: "settled",
            get: function get() {
              return _classPrivateFieldGet(this, _e12);
            }
          }]);
          return PromiseCapability;
        }());
        var o = null,
          c = null;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.XRefParseException = t.XRefEntryException = t.ParserEOFException = t.PDF_VERSION_REGEXP = t.MissingDataException = void 0;
        t.arrayBuffersToBytes = function arrayBuffersToBytes(e) {
          var t = e.length;
          if (0 === t) return new Uint8Array(0);
          if (1 === t) return new Uint8Array(e[0]);
          var a = 0;
          for (var _r8 = 0; _r8 < t; _r8++) a += e[_r8].byteLength;
          var r = new Uint8Array(a);
          var i = 0;
          for (var _a5 = 0; _a5 < t; _a5++) {
            var _t6 = new Uint8Array(e[_a5]);
            r.set(_t6, i);
            i += _t6.byteLength;
          }
          return r;
        };
        t.collectActions = function collectActions(e, t, a) {
          var n = Object.create(null),
            s = getInheritableProperty({
              dict: t,
              key: "AA",
              stopWhenFound: !1
            });
          if (s) for (var _t7 = s.length - 1; _t7 >= 0; _t7--) {
            var _r9 = s[_t7];
            if (_r9 instanceof i.Dict) {
              var _iterator4 = _createForOfIteratorHelper(_r9.getKeys()),
                _step4;
              try {
                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                  var _t8 = _step4.value;
                  var _s2 = a[_t8];
                  if (!_s2) continue;
                  var _o = [];
                  _collectJS(_r9.getRaw(_t8), e, _o, new i.RefSet());
                  _o.length > 0 && (n[_s2] = _o);
                }
              } catch (err) {
                _iterator4.e(err);
              } finally {
                _iterator4.f();
              }
            }
          }
          if (t.has("A")) {
            var _a6 = [];
            _collectJS(t.get("A"), e, _a6, new i.RefSet());
            _a6.length > 0 && (n.Action = _a6);
          }
          return (0, r.objectSize)(n) > 0 ? n : null;
        };
        t.encodeToXmlString = function encodeToXmlString(e) {
          var t = [];
          var a = 0;
          for (var _r10 = 0, _i10 = e.length; _r10 < _i10; _r10++) {
            var _i11 = e.codePointAt(_r10);
            if (32 <= _i11 && _i11 <= 126) {
              var _n2 = o[_i11];
              if (_n2) {
                a < _r10 && t.push(e.substring(a, _r10));
                t.push(_n2);
                a = _r10 + 1;
              }
            } else {
              a < _r10 && t.push(e.substring(a, _r10));
              t.push("&#x".concat(_i11.toString(16).toUpperCase(), ";"));
              _i11 > 55295 && (_i11 < 57344 || _i11 > 65533) && _r10++;
              a = _r10 + 1;
            }
          }
          if (0 === t.length) return e;
          a < e.length && t.push(e.substring(a, e.length));
          return t.join("");
        };
        t.escapePDFName = function escapePDFName(e) {
          var t = [];
          var a = 0;
          for (var _r11 = 0, _i12 = e.length; _r11 < _i12; _r11++) {
            var _i13 = e.charCodeAt(_r11);
            if (_i13 < 33 || _i13 > 126 || 35 === _i13 || 40 === _i13 || 41 === _i13 || 60 === _i13 || 62 === _i13 || 91 === _i13 || 93 === _i13 || 123 === _i13 || 125 === _i13 || 47 === _i13 || 37 === _i13) {
              a < _r11 && t.push(e.substring(a, _r11));
              t.push("#".concat(_i13.toString(16)));
              a = _r11 + 1;
            }
          }
          if (0 === t.length) return e;
          a < e.length && t.push(e.substring(a, e.length));
          return t.join("");
        };
        t.escapeString = function escapeString(e) {
          return e.replaceAll(/([()\\\n\r])/g, function (e) {
            return "\n" === e ? "\\n" : "\r" === e ? "\\r" : "\\".concat(e);
          });
        };
        t.getInheritableProperty = getInheritableProperty;
        t.getLookupTableFactory = function getLookupTableFactory(e) {
          var t;
          return function () {
            if (e) {
              t = Object.create(null);
              e(t);
              e = null;
            }
            return t;
          };
        };
        t.getNewAnnotationsMap = function getNewAnnotationsMap(e) {
          if (!e) return null;
          var t = new Map();
          var _iterator5 = _createForOfIteratorHelper(e),
            _step5;
          try {
            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
              var _step5$value = _slicedToArray(_step5.value, 2),
                _a7 = _step5$value[0],
                _i14 = _step5$value[1];
              if (!_a7.startsWith(r.AnnotationEditorPrefix)) continue;
              var _e13 = t.get(_i14.pageIndex);
              if (!_e13) {
                _e13 = [];
                t.set(_i14.pageIndex, _e13);
              }
              _e13.push(_i14);
            }
          } catch (err) {
            _iterator5.e(err);
          } finally {
            _iterator5.f();
          }
          return t.size > 0 ? t : null;
        };
        t.getRotationMatrix = function getRotationMatrix(e, t, a) {
          switch (e) {
            case 90:
              return [0, 1, -1, 0, t, 0];
            case 180:
              return [-1, 0, 0, -1, t, a];
            case 270:
              return [0, -1, 1, 0, 0, a];
            default:
              throw new Error("Invalid rotation");
          }
        };
        t.isAscii = function isAscii(e) {
          return /^[\x00-\x7F]*$/.test(e);
        };
        t.isWhiteSpace = function isWhiteSpace(e) {
          return 32 === e || 9 === e || 13 === e || 10 === e;
        };
        t.log2 = function log2(e) {
          if (e <= 0) return 0;
          return Math.ceil(Math.log2(e));
        };
        t.numberToString = function numberToString(e) {
          if (Number.isInteger(e)) return e.toString();
          var t = Math.round(100 * e);
          if (t % 100 == 0) return (t / 100).toString();
          if (t % 10 == 0) return e.toFixed(1);
          return e.toFixed(2);
        };
        t.parseXFAPath = function parseXFAPath(e) {
          var t = /(.+)\[(\d+)\]$/;
          return e.split(".").map(function (e) {
            var a = e.match(t);
            return a ? {
              name: a[1],
              pos: parseInt(a[2], 10)
            } : {
              name: e,
              pos: 0
            };
          });
        };
        t.readInt8 = function readInt8(e, t) {
          return e[t] << 24 >> 24;
        };
        t.readUint16 = function readUint16(e, t) {
          return e[t] << 8 | e[t + 1];
        };
        t.readUint32 = function readUint32(e, t) {
          return (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0;
        };
        t.recoverJsURL = function recoverJsURL(e) {
          var t = new RegExp("^\\s*(" + ["app.launchURL", "window.open", "xfa.host.gotoURL"].join("|").replaceAll(".", "\\.") + ")\\((?:'|\")([^'\"]*)(?:'|\")(?:,\\s*(\\w+)\\)|\\))", "i").exec(e);
          if (t && t[2]) {
            var _e14 = t[2];
            var _a8 = !1;
            "true" === t[3] && "app.launchURL" === t[1] && (_a8 = !0);
            return {
              url: _e14,
              newWindow: _a8
            };
          }
          return null;
        };
        t.stringToUTF16HexString = function stringToUTF16HexString(e) {
          var t = [];
          for (var _a9 = 0, _r12 = e.length; _a9 < _r12; _a9++) {
            var _r13 = e.charCodeAt(_a9);
            t.push((_r13 >> 8 & 255).toString(16).padStart(2, "0"), (255 & _r13).toString(16).padStart(2, "0"));
          }
          return t.join("");
        };
        t.stringToUTF16String = function stringToUTF16String(e) {
          var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
          var a = [];
          t && a.push("þÿ");
          for (var _t9 = 0, _r14 = e.length; _t9 < _r14; _t9++) {
            var _r15 = e.charCodeAt(_t9);
            a.push(String.fromCharCode(_r15 >> 8 & 255), String.fromCharCode(255 & _r15));
          }
          return a.join("");
        };
        t.toRomanNumerals = function toRomanNumerals(e) {
          var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
          (0, r.assert)(Number.isInteger(e) && e > 0, "The number should be a positive integer.");
          var a = [];
          var i;
          for (; e >= 1e3;) {
            e -= 1e3;
            a.push("M");
          }
          i = e / 100 | 0;
          e %= 100;
          a.push(s[i]);
          i = e / 10 | 0;
          e %= 10;
          a.push(s[10 + i]);
          a.push(s[20 + e]);
          var n = a.join("");
          return t ? n.toLowerCase() : n;
        };
        t.validateCSSFont = function validateCSSFont(e) {
          var t = new Set(["100", "200", "300", "400", "500", "600", "700", "800", "900", "1000", "normal", "bold", "bolder", "lighter"]),
            a = e.fontFamily,
            i = e.fontWeight,
            n = e.italicAngle,
            s = /^("|').*("|')$/.exec(a);
          if (s && s[1] === s[2]) {
            if (new RegExp("[^\\\\]".concat(s[1])).test(a.slice(1, -1))) {
              (0, r.warn)("XFA - FontFamily contains unescaped ".concat(s[1], ": ").concat(a, "."));
              return !1;
            }
          } else {
            var _iterator6 = _createForOfIteratorHelper(a.split(/[ \t]+/)),
              _step6;
            try {
              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                var _e15 = _step6.value;
                if (/^(\d|(-(\d|-)))/.test(_e15) || !/^[\w-\\]+$/.test(_e15)) {
                  (0, r.warn)("XFA - FontFamily contains invalid <custom-ident>: ".concat(a, "."));
                  return !1;
                }
              }
            } catch (err) {
              _iterator6.e(err);
            } finally {
              _iterator6.f();
            }
          }
          var o = i ? i.toString() : "";
          e.fontWeight = t.has(o) ? o : "400";
          var c = parseFloat(n);
          e.italicAngle = isNaN(c) || c < -90 || c > 90 ? "14" : n.toString();
          return !0;
        };
        var r = a(2),
          i = a(4),
          n = a(5);
        t.PDF_VERSION_REGEXP = /^[1-9]\.\d$/;
        var MissingDataException = /*#__PURE__*/function (_r$BaseException) {
          _inherits(MissingDataException, _r$BaseException);
          var _super8 = _createSuper(MissingDataException);
          function MissingDataException(e, t) {
            var _this5;
            _classCallCheck(this, MissingDataException);
            _this5 = _super8.call(this, "Missing data [".concat(e, ", ").concat(t, ")"), "MissingDataException");
            _this5.begin = e;
            _this5.end = t;
            return _this5;
          }
          return _createClass(MissingDataException);
        }(r.BaseException);
        t.MissingDataException = MissingDataException;
        var ParserEOFException = /*#__PURE__*/function (_r$BaseException2) {
          _inherits(ParserEOFException, _r$BaseException2);
          var _super9 = _createSuper(ParserEOFException);
          function ParserEOFException(e) {
            _classCallCheck(this, ParserEOFException);
            return _super9.call(this, e, "ParserEOFException");
          }
          return _createClass(ParserEOFException);
        }(r.BaseException);
        t.ParserEOFException = ParserEOFException;
        var XRefEntryException = /*#__PURE__*/function (_r$BaseException3) {
          _inherits(XRefEntryException, _r$BaseException3);
          var _super10 = _createSuper(XRefEntryException);
          function XRefEntryException(e) {
            _classCallCheck(this, XRefEntryException);
            return _super10.call(this, e, "XRefEntryException");
          }
          return _createClass(XRefEntryException);
        }(r.BaseException);
        t.XRefEntryException = XRefEntryException;
        var XRefParseException = /*#__PURE__*/function (_r$BaseException4) {
          _inherits(XRefParseException, _r$BaseException4);
          var _super11 = _createSuper(XRefParseException);
          function XRefParseException(e) {
            _classCallCheck(this, XRefParseException);
            return _super11.call(this, e, "XRefParseException");
          }
          return _createClass(XRefParseException);
        }(r.BaseException);
        t.XRefParseException = XRefParseException;
        function getInheritableProperty(_ref11) {
          var e = _ref11.dict,
            t = _ref11.key,
            _ref11$getArray = _ref11.getArray,
            a = _ref11$getArray === void 0 ? !1 : _ref11$getArray,
            _ref11$stopWhenFound = _ref11.stopWhenFound,
            r = _ref11$stopWhenFound === void 0 ? !0 : _ref11$stopWhenFound;
          var n;
          var s = new i.RefSet();
          for (; e instanceof i.Dict && (!e.objId || !s.has(e.objId));) {
            e.objId && s.put(e.objId);
            var _i15 = a ? e.getArray(t) : e.get(t);
            if (void 0 !== _i15) {
              if (r) return _i15;
              (n || (n = [])).push(_i15);
            }
            e = e.get("Parent");
          }
          return n;
        }
        var s = ["", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM", "", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC", "", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"];
        function _collectJS(e, t, a, s) {
          if (!e) return;
          var o = null;
          if (e instanceof i.Ref) {
            if (s.has(e)) return;
            o = e;
            s.put(o);
            e = t.fetch(e);
          }
          if (Array.isArray(e)) {
            var _iterator7 = _createForOfIteratorHelper(e),
              _step7;
            try {
              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
                var _r16 = _step7.value;
                _collectJS(_r16, t, a, s);
              }
            } catch (err) {
              _iterator7.e(err);
            } finally {
              _iterator7.f();
            }
          } else if (e instanceof i.Dict) {
            if ((0, i.isName)(e.get("S"), "JavaScript")) {
              var _t10 = e.get("JS");
              var _i16;
              _t10 instanceof n.BaseStream ? _i16 = _t10.getString() : "string" == typeof _t10 && (_i16 = _t10);
              _i16 && (_i16 = (0, r.stringToPDFString)(_i16).replaceAll("\0", ""));
              _i16 && a.push(_i16);
            }
            _collectJS(e.getRaw("Next"), t, a, s);
          }
          o && s.remove(o);
        }
        var o = {
          60: "&lt;",
          62: "&gt;",
          38: "&amp;",
          34: "&quot;",
          39: "&apos;"
        };
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.RefSetCache = t.RefSet = t.Ref = t.Name = t.EOF = t.Dict = t.Cmd = t.CIRCULAR_REF = void 0;
        t.clearPrimitiveCaches = function clearPrimitiveCaches() {
          s = Object.create(null);
          o = Object.create(null);
          c = Object.create(null);
        };
        t.isCmd = function isCmd(e, t) {
          return e instanceof Cmd && (void 0 === t || e.cmd === t);
        };
        t.isDict = function isDict(e, t) {
          return e instanceof Dict && (void 0 === t || isName(e.get("Type"), t));
        };
        t.isName = isName;
        t.isRefsEqual = function isRefsEqual(e, t) {
          return e.num === t.num && e.gen === t.gen;
        };
        var r = a(2);
        var i = Symbol("CIRCULAR_REF");
        t.CIRCULAR_REF = i;
        var n = Symbol("EOF");
        t.EOF = n;
        var s = Object.create(null),
          o = Object.create(null),
          c = Object.create(null);
        var Name = /*#__PURE__*/function () {
          function Name(e) {
            _classCallCheck(this, Name);
            this.name = e;
          }
          _createClass(Name, null, [{
            key: "get",
            value: function get(e) {
              var _o2;
              return (_o2 = o)[e] || (_o2[e] = new Name(e));
            }
          }]);
          return Name;
        }();
        t.Name = Name;
        var Cmd = /*#__PURE__*/function () {
          function Cmd(e) {
            _classCallCheck(this, Cmd);
            this.cmd = e;
          }
          _createClass(Cmd, null, [{
            key: "get",
            value: function get(e) {
              var _s3;
              return (_s3 = s)[e] || (_s3[e] = new Cmd(e));
            }
          }]);
          return Cmd;
        }();
        t.Cmd = Cmd;
        var l = function nonSerializableClosure() {
          return l;
        };
        var Dict = /*#__PURE__*/function () {
          function Dict() {
            var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
            _classCallCheck(this, Dict);
            this._map = Object.create(null);
            this.xref = e;
            this.objId = null;
            this.suppressEncryption = !1;
            this.__nonSerializable__ = l;
          }
          _createClass(Dict, [{
            key: "assignXref",
            value: function assignXref(e) {
              this.xref = e;
            }
          }, {
            key: "size",
            get: function get() {
              return Object.keys(this._map).length;
            }
          }, {
            key: "get",
            value: function get(e, t, a) {
              var r = this._map[e];
              if (void 0 === r && void 0 !== t) {
                r = this._map[t];
                void 0 === r && void 0 !== a && (r = this._map[a]);
              }
              return r instanceof Ref && this.xref ? this.xref.fetch(r, this.suppressEncryption) : r;
            }
          }, {
            key: "getAsync",
            value: function () {
              var _getAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e, t, a) {
                var r;
                return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                  while (1) switch (_context2.prev = _context2.next) {
                    case 0:
                      r = this._map[e];
                      if (void 0 === r && void 0 !== t) {
                        r = this._map[t];
                        void 0 === r && void 0 !== a && (r = this._map[a]);
                      }
                      return _context2.abrupt("return", r instanceof Ref && this.xref ? this.xref.fetchAsync(r, this.suppressEncryption) : r);
                    case 3:
                    case "end":
                      return _context2.stop();
                  }
                }, _callee2, this);
              }));
              function getAsync(_x2, _x3, _x4) {
                return _getAsync.apply(this, arguments);
              }
              return getAsync;
            }()
          }, {
            key: "getArray",
            value: function getArray(e, t, a) {
              var r = this._map[e];
              if (void 0 === r && void 0 !== t) {
                r = this._map[t];
                void 0 === r && void 0 !== a && (r = this._map[a]);
              }
              r instanceof Ref && this.xref && (r = this.xref.fetch(r, this.suppressEncryption));
              if (Array.isArray(r)) {
                r = r.slice();
                for (var _e16 = 0, _t11 = r.length; _e16 < _t11; _e16++) r[_e16] instanceof Ref && this.xref && (r[_e16] = this.xref.fetch(r[_e16], this.suppressEncryption));
              }
              return r;
            }
          }, {
            key: "getRaw",
            value: function getRaw(e) {
              return this._map[e];
            }
          }, {
            key: "getKeys",
            value: function getKeys() {
              return Object.keys(this._map);
            }
          }, {
            key: "getRawValues",
            value: function getRawValues() {
              return Object.values(this._map);
            }
          }, {
            key: "set",
            value: function set(e, t) {
              this._map[e] = t;
            }
          }, {
            key: "has",
            value: function has(e) {
              return void 0 !== this._map[e];
            }
          }, {
            key: "forEach",
            value: function forEach(e) {
              for (var _t12 in this._map) e(_t12, this.get(_t12));
            }
          }], [{
            key: "empty",
            get: function get() {
              var e = new Dict(null);
              e.set = function (e, t) {
                (0, r.unreachable)("Should not call `set` on the empty dictionary.");
              };
              return (0, r.shadow)(this, "empty", e);
            }
          }, {
            key: "merge",
            value: function merge(_ref12) {
              var e = _ref12.xref,
                t = _ref12.dictArray,
                _ref12$mergeSubDicts = _ref12.mergeSubDicts,
                a = _ref12$mergeSubDicts === void 0 ? !1 : _ref12$mergeSubDicts;
              var r = new Dict(e),
                i = new Map();
              var _iterator8 = _createForOfIteratorHelper(t),
                _step8;
              try {
                for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
                  var _e17 = _step8.value;
                  if (_e17 instanceof Dict) for (var _i17 = 0, _Object$entries = Object.entries(_e17._map); _i17 < _Object$entries.length; _i17++) {
                    var _Object$entries$_i = _slicedToArray(_Object$entries[_i17], 2),
                      _t13 = _Object$entries$_i[0],
                      _r17 = _Object$entries$_i[1];
                    var _e18 = i.get(_t13);
                    if (void 0 === _e18) {
                      _e18 = [];
                      i.set(_t13, _e18);
                    } else if (!(a && _r17 instanceof Dict)) continue;
                    _e18.push(_r17);
                  }
                }
              } catch (err) {
                _iterator8.e(err);
              } finally {
                _iterator8.f();
              }
              var _iterator9 = _createForOfIteratorHelper(i),
                _step9;
              try {
                for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
                  var _step9$value = _slicedToArray(_step9.value, 2),
                    _t14 = _step9$value[0],
                    _a10 = _step9$value[1];
                  if (1 === _a10.length || !(_a10[0] instanceof Dict)) {
                    r._map[_t14] = _a10[0];
                    continue;
                  }
                  var _i18 = new Dict(e);
                  var _iterator10 = _createForOfIteratorHelper(_a10),
                    _step10;
                  try {
                    for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
                      var _e19 = _step10.value;
                      for (var _i19 = 0, _Object$entries2 = Object.entries(_e19._map); _i19 < _Object$entries2.length; _i19++) {
                        var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i19], 2),
                          _t15 = _Object$entries2$_i[0],
                          _a11 = _Object$entries2$_i[1];
                        void 0 === _i18._map[_t15] && (_i18._map[_t15] = _a11);
                      }
                    }
                  } catch (err) {
                    _iterator10.e(err);
                  } finally {
                    _iterator10.f();
                  }
                  _i18.size > 0 && (r._map[_t14] = _i18);
                }
              } catch (err) {
                _iterator9.e(err);
              } finally {
                _iterator9.f();
              }
              i.clear();
              return r.size > 0 ? r : Dict.empty;
            }
          }]);
          return Dict;
        }();
        t.Dict = Dict;
        var Ref = /*#__PURE__*/function () {
          function Ref(e, t) {
            _classCallCheck(this, Ref);
            this.num = e;
            this.gen = t;
          }
          _createClass(Ref, [{
            key: "toString",
            value: function toString() {
              return 0 === this.gen ? "".concat(this.num, "R") : "".concat(this.num, "R").concat(this.gen);
            }
          }], [{
            key: "get",
            value: function get(e, t) {
              var _c;
              var a = 0 === t ? "".concat(e, "R") : "".concat(e, "R").concat(t);
              return (_c = c)[a] || (_c[a] = new Ref(e, t));
            }
          }]);
          return Ref;
        }();
        t.Ref = Ref;
        var RefSet = /*#__PURE__*/function (_Symbol$iterator) {
          function RefSet() {
            var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
            _classCallCheck(this, RefSet);
            this._set = new Set(e && e._set);
          }
          _createClass(RefSet, [{
            key: "has",
            value: function has(e) {
              return this._set.has(e.toString());
            }
          }, {
            key: "put",
            value: function put(e) {
              this._set.add(e.toString());
            }
          }, {
            key: "remove",
            value: function remove(e) {
              this._set.delete(e.toString());
            }
          }, {
            key: _Symbol$iterator,
            value: function value() {
              return this._set.values();
            }
          }, {
            key: "clear",
            value: function clear() {
              this._set.clear();
            }
          }]);
          return RefSet;
        }(Symbol.iterator);
        t.RefSet = RefSet;
        var RefSetCache = /*#__PURE__*/function (_Symbol$iterator2) {
          function RefSetCache() {
            _classCallCheck(this, RefSetCache);
            this._map = new Map();
          }
          _createClass(RefSetCache, [{
            key: "size",
            get: function get() {
              return this._map.size;
            }
          }, {
            key: "get",
            value: function get(e) {
              return this._map.get(e.toString());
            }
          }, {
            key: "has",
            value: function has(e) {
              return this._map.has(e.toString());
            }
          }, {
            key: "put",
            value: function put(e, t) {
              this._map.set(e.toString(), t);
            }
          }, {
            key: "putAlias",
            value: function putAlias(e, t) {
              this._map.set(e.toString(), this.get(t));
            }
          }, {
            key: _Symbol$iterator2,
            value: function value() {
              return this._map.values();
            }
          }, {
            key: "clear",
            value: function clear() {
              this._map.clear();
            }
          }]);
          return RefSetCache;
        }(Symbol.iterator);
        t.RefSetCache = RefSetCache;
        function isName(e, t) {
          return e instanceof Name && (void 0 === t || e.name === t);
        }
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.BaseStream = void 0;
        var r = a(2);
        var BaseStream = /*#__PURE__*/function () {
          function BaseStream() {
            _classCallCheck(this, BaseStream);
            this.constructor === BaseStream && (0, r.unreachable)("Cannot initialize BaseStream.");
          }
          _createClass(BaseStream, [{
            key: "length",
            get: function get() {
              (0, r.unreachable)("Abstract getter `length` accessed");
            }
          }, {
            key: "isEmpty",
            get: function get() {
              (0, r.unreachable)("Abstract getter `isEmpty` accessed");
            }
          }, {
            key: "isDataLoaded",
            get: function get() {
              return (0, r.shadow)(this, "isDataLoaded", !0);
            }
          }, {
            key: "getByte",
            value: function getByte() {
              (0, r.unreachable)("Abstract method `getByte` called");
            }
          }, {
            key: "getBytes",
            value: function getBytes(e) {
              (0, r.unreachable)("Abstract method `getBytes` called");
            }
          }, {
            key: "peekByte",
            value: function peekByte() {
              var e = this.getByte();
              -1 !== e && this.pos--;
              return e;
            }
          }, {
            key: "peekBytes",
            value: function peekBytes(e) {
              var t = this.getBytes(e);
              this.pos -= t.length;
              return t;
            }
          }, {
            key: "getUint16",
            value: function getUint16() {
              var e = this.getByte(),
                t = this.getByte();
              return -1 === e || -1 === t ? -1 : (e << 8) + t;
            }
          }, {
            key: "getInt32",
            value: function getInt32() {
              return (this.getByte() << 24) + (this.getByte() << 16) + (this.getByte() << 8) + this.getByte();
            }
          }, {
            key: "getByteRange",
            value: function getByteRange(e, t) {
              (0, r.unreachable)("Abstract method `getByteRange` called");
            }
          }, {
            key: "getString",
            value: function getString(e) {
              return (0, r.bytesToString)(this.getBytes(e));
            }
          }, {
            key: "skip",
            value: function skip(e) {
              this.pos += e || 1;
            }
          }, {
            key: "reset",
            value: function reset() {
              (0, r.unreachable)("Abstract method `reset` called");
            }
          }, {
            key: "moveStart",
            value: function moveStart() {
              (0, r.unreachable)("Abstract method `moveStart` called");
            }
          }, {
            key: "makeSubStream",
            value: function makeSubStream(e, t) {
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
              (0, r.unreachable)("Abstract method `makeSubStream` called");
            }
          }, {
            key: "getBaseStreams",
            value: function getBaseStreams() {
              return null;
            }
          }]);
          return BaseStream;
        }();
        t.BaseStream = BaseStream;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.NetworkPdfManager = t.LocalPdfManager = void 0;
        var r = a(2),
          i = a(7),
          n = a(3),
          s = a(9),
          o = a(8);
        var BasePdfManager = /*#__PURE__*/function () {
          function BasePdfManager(e) {
            var _e$evaluatorOptions;
            _classCallCheck(this, BasePdfManager);
            this.constructor === BasePdfManager && (0, r.unreachable)("Cannot initialize BasePdfManager.");
            this._docBaseUrl = function parseDocBaseUrl(e) {
              if (e) {
                var _t16 = (0, r.createValidAbsoluteUrl)(e);
                if (_t16) return _t16.href;
                (0, r.warn)("Invalid absolute docBaseUrl: \"".concat(e, "\"."));
              }
              return null;
            }(e.docBaseUrl);
            this._docId = e.docId;
            this._password = e.password;
            this.enableXfa = e.enableXfa;
            (_e$evaluatorOptions = e.evaluatorOptions).isOffscreenCanvasSupported && (_e$evaluatorOptions.isOffscreenCanvasSupported = r.FeatureTest.isOffscreenCanvasSupported);
            this.evaluatorOptions = e.evaluatorOptions;
          }
          _createClass(BasePdfManager, [{
            key: "docId",
            get: function get() {
              return this._docId;
            }
          }, {
            key: "password",
            get: function get() {
              return this._password;
            }
          }, {
            key: "docBaseUrl",
            get: function get() {
              var e = this.pdfDocument.catalog;
              return (0, r.shadow)(this, "docBaseUrl", e.baseUrl || this._docBaseUrl);
            }
          }, {
            key: "ensureDoc",
            value: function ensureDoc(e, t) {
              return this.ensure(this.pdfDocument, e, t);
            }
          }, {
            key: "ensureXRef",
            value: function ensureXRef(e, t) {
              return this.ensure(this.pdfDocument.xref, e, t);
            }
          }, {
            key: "ensureCatalog",
            value: function ensureCatalog(e, t) {
              return this.ensure(this.pdfDocument.catalog, e, t);
            }
          }, {
            key: "getPage",
            value: function getPage(e) {
              return this.pdfDocument.getPage(e);
            }
          }, {
            key: "fontFallback",
            value: function fontFallback(e, t) {
              return this.pdfDocument.fontFallback(e, t);
            }
          }, {
            key: "loadXfaFonts",
            value: function loadXfaFonts(e, t) {
              return this.pdfDocument.loadXfaFonts(e, t);
            }
          }, {
            key: "loadXfaImages",
            value: function loadXfaImages() {
              return this.pdfDocument.loadXfaImages();
            }
          }, {
            key: "serializeXfaData",
            value: function serializeXfaData(e) {
              return this.pdfDocument.serializeXfaData(e);
            }
          }, {
            key: "cleanup",
            value: function cleanup() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              return this.pdfDocument.cleanup(e);
            }
          }, {
            key: "ensure",
            value: function () {
              var _ensure = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e, t, a) {
                return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                  while (1) switch (_context3.prev = _context3.next) {
                    case 0:
                      (0, r.unreachable)("Abstract method `ensure` called");
                    case 1:
                    case "end":
                      return _context3.stop();
                  }
                }, _callee3);
              }));
              function ensure(_x5, _x6, _x7) {
                return _ensure.apply(this, arguments);
              }
              return ensure;
            }()
          }, {
            key: "requestRange",
            value: function requestRange(e, t) {
              (0, r.unreachable)("Abstract method `requestRange` called");
            }
          }, {
            key: "requestLoadedStream",
            value: function requestLoadedStream() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              (0, r.unreachable)("Abstract method `requestLoadedStream` called");
            }
          }, {
            key: "sendProgressiveData",
            value: function sendProgressiveData(e) {
              (0, r.unreachable)("Abstract method `sendProgressiveData` called");
            }
          }, {
            key: "updatePassword",
            value: function updatePassword(e) {
              this._password = e;
            }
          }, {
            key: "terminate",
            value: function terminate(e) {
              (0, r.unreachable)("Abstract method `terminate` called");
            }
          }]);
          return BasePdfManager;
        }();
        t.LocalPdfManager = /*#__PURE__*/function (_BasePdfManager) {
          _inherits(LocalPdfManager, _BasePdfManager);
          var _super12 = _createSuper(LocalPdfManager);
          function LocalPdfManager(e) {
            var _this6;
            _classCallCheck(this, LocalPdfManager);
            _this6 = _super12.call(this, e);
            var t = new o.Stream(e.source);
            _this6.pdfDocument = new s.PDFDocument(_assertThisInitialized(_this6), t);
            _this6._loadedStreamPromise = Promise.resolve(t);
            return _this6;
          }
          _createClass(LocalPdfManager, [{
            key: "ensure",
            value: function () {
              var _ensure2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e, t, a) {
                var r;
                return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                  while (1) switch (_context4.prev = _context4.next) {
                    case 0:
                      r = e[t];
                      return _context4.abrupt("return", "function" == typeof r ? r.apply(e, a) : r);
                    case 2:
                    case "end":
                      return _context4.stop();
                  }
                }, _callee4);
              }));
              function ensure(_x8, _x9, _x10) {
                return _ensure2.apply(this, arguments);
              }
              return ensure;
            }()
          }, {
            key: "requestRange",
            value: function requestRange(e, t) {
              return Promise.resolve();
            }
          }, {
            key: "requestLoadedStream",
            value: function requestLoadedStream() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              return this._loadedStreamPromise;
            }
          }, {
            key: "terminate",
            value: function terminate(e) {}
          }]);
          return LocalPdfManager;
        }(BasePdfManager);
        t.NetworkPdfManager = /*#__PURE__*/function (_BasePdfManager2) {
          _inherits(NetworkPdfManager, _BasePdfManager2);
          var _super13 = _createSuper(NetworkPdfManager);
          function NetworkPdfManager(e) {
            var _this7;
            _classCallCheck(this, NetworkPdfManager);
            _this7 = _super13.call(this, e);
            _this7.streamManager = new i.ChunkedStreamManager(e.source, {
              msgHandler: e.handler,
              length: e.length,
              disableAutoFetch: e.disableAutoFetch,
              rangeChunkSize: e.rangeChunkSize
            });
            _this7.pdfDocument = new s.PDFDocument(_assertThisInitialized(_this7), _this7.streamManager.getStream());
            return _this7;
          }
          _createClass(NetworkPdfManager, [{
            key: "ensure",
            value: function () {
              var _ensure3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e, t, a) {
                var _r18;
                return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                  while (1) switch (_context5.prev = _context5.next) {
                    case 0:
                      _context5.prev = 0;
                      _r18 = e[t];
                      return _context5.abrupt("return", "function" == typeof _r18 ? _r18.apply(e, a) : _r18);
                    case 5:
                      _context5.prev = 5;
                      _context5.t0 = _context5["catch"](0);
                      if (_context5.t0 instanceof n.MissingDataException) {
                        _context5.next = 9;
                        break;
                      }
                      throw _context5.t0;
                    case 9:
                      _context5.next = 11;
                      return this.requestRange(_context5.t0.begin, _context5.t0.end);
                    case 11:
                      return _context5.abrupt("return", this.ensure(e, t, a));
                    case 12:
                    case "end":
                      return _context5.stop();
                  }
                }, _callee5, this, [[0, 5]]);
              }));
              function ensure(_x11, _x12, _x13) {
                return _ensure3.apply(this, arguments);
              }
              return ensure;
            }()
          }, {
            key: "requestRange",
            value: function requestRange(e, t) {
              return this.streamManager.requestRange(e, t);
            }
          }, {
            key: "requestLoadedStream",
            value: function requestLoadedStream() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              return this.streamManager.requestAllChunks(e);
            }
          }, {
            key: "sendProgressiveData",
            value: function sendProgressiveData(e) {
              this.streamManager.onReceiveData({
                chunk: e
              });
            }
          }, {
            key: "terminate",
            value: function terminate(e) {
              this.streamManager.abort(e);
            }
          }]);
          return NetworkPdfManager;
        }(BasePdfManager);
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.ChunkedStreamManager = t.ChunkedStream = void 0;
        var r = a(3),
          i = a(2),
          n = a(8);
        var ChunkedStream = /*#__PURE__*/function (_n$Stream) {
          _inherits(ChunkedStream, _n$Stream);
          var _super14 = _createSuper(ChunkedStream);
          function ChunkedStream(e, t, a) {
            var _this8;
            _classCallCheck(this, ChunkedStream);
            _this8 = _super14.call(this, new Uint8Array(e), 0, e, null);
            _this8.chunkSize = t;
            _this8._loadedChunks = new Set();
            _this8.numChunks = Math.ceil(e / t);
            _this8.manager = a;
            _this8.progressiveDataLength = 0;
            _this8.lastSuccessfulEnsureByteChunk = -1;
            return _this8;
          }
          _createClass(ChunkedStream, [{
            key: "getMissingChunks",
            value: function getMissingChunks() {
              var e = [];
              for (var _t17 = 0, _a12 = this.numChunks; _t17 < _a12; ++_t17) this._loadedChunks.has(_t17) || e.push(_t17);
              return e;
            }
          }, {
            key: "numChunksLoaded",
            get: function get() {
              return this._loadedChunks.size;
            }
          }, {
            key: "isDataLoaded",
            get: function get() {
              return this.numChunksLoaded === this.numChunks;
            }
          }, {
            key: "onReceiveData",
            value: function onReceiveData(e, t) {
              var a = this.chunkSize;
              if (e % a != 0) throw new Error("Bad begin offset: ".concat(e));
              var r = e + t.byteLength;
              if (r % a != 0 && r !== this.bytes.length) throw new Error("Bad end offset: ".concat(r));
              this.bytes.set(new Uint8Array(t), e);
              var i = Math.floor(e / a),
                n = Math.floor((r - 1) / a) + 1;
              for (var _e20 = i; _e20 < n; ++_e20) this._loadedChunks.add(_e20);
            }
          }, {
            key: "onReceiveProgressiveData",
            value: function onReceiveProgressiveData(e) {
              var t = this.progressiveDataLength;
              var a = Math.floor(t / this.chunkSize);
              this.bytes.set(new Uint8Array(e), t);
              t += e.byteLength;
              this.progressiveDataLength = t;
              var r = t >= this.end ? this.numChunks : Math.floor(t / this.chunkSize);
              for (var _e21 = a; _e21 < r; ++_e21) this._loadedChunks.add(_e21);
            }
          }, {
            key: "ensureByte",
            value: function ensureByte(e) {
              if (e < this.progressiveDataLength) return;
              var t = Math.floor(e / this.chunkSize);
              if (!(t > this.numChunks) && t !== this.lastSuccessfulEnsureByteChunk) {
                if (!this._loadedChunks.has(t)) throw new r.MissingDataException(e, e + 1);
                this.lastSuccessfulEnsureByteChunk = t;
              }
            }
          }, {
            key: "ensureRange",
            value: function ensureRange(e, t) {
              if (e >= t) return;
              if (t <= this.progressiveDataLength) return;
              var a = Math.floor(e / this.chunkSize);
              if (a > this.numChunks) return;
              var i = Math.min(Math.floor((t - 1) / this.chunkSize) + 1, this.numChunks);
              for (var _n3 = a; _n3 < i; ++_n3) if (!this._loadedChunks.has(_n3)) throw new r.MissingDataException(e, t);
            }
          }, {
            key: "nextEmptyChunk",
            value: function nextEmptyChunk(e) {
              var t = this.numChunks;
              for (var _a13 = 0; _a13 < t; ++_a13) {
                var _r19 = (e + _a13) % t;
                if (!this._loadedChunks.has(_r19)) return _r19;
              }
              return null;
            }
          }, {
            key: "hasChunk",
            value: function hasChunk(e) {
              return this._loadedChunks.has(e);
            }
          }, {
            key: "getByte",
            value: function getByte() {
              var e = this.pos;
              if (e >= this.end) return -1;
              e >= this.progressiveDataLength && this.ensureByte(e);
              return this.bytes[this.pos++];
            }
          }, {
            key: "getBytes",
            value: function getBytes(e) {
              var t = this.bytes,
                a = this.pos,
                r = this.end;
              if (!e) {
                r > this.progressiveDataLength && this.ensureRange(a, r);
                return t.subarray(a, r);
              }
              var i = a + e;
              i > r && (i = r);
              i > this.progressiveDataLength && this.ensureRange(a, i);
              this.pos = i;
              return t.subarray(a, i);
            }
          }, {
            key: "getByteRange",
            value: function getByteRange(e, t) {
              e < 0 && (e = 0);
              t > this.end && (t = this.end);
              t > this.progressiveDataLength && this.ensureRange(e, t);
              return this.bytes.subarray(e, t);
            }
          }, {
            key: "makeSubStream",
            value: function makeSubStream(e, t) {
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
              t ? e + t > this.progressiveDataLength && this.ensureRange(e, e + t) : e >= this.progressiveDataLength && this.ensureByte(e);
              function ChunkedStreamSubstream() {}
              ChunkedStreamSubstream.prototype = Object.create(this);
              ChunkedStreamSubstream.prototype.getMissingChunks = function () {
                var e = this.chunkSize,
                  t = Math.floor(this.start / e),
                  a = Math.floor((this.end - 1) / e) + 1,
                  r = [];
                for (var _e22 = t; _e22 < a; ++_e22) this._loadedChunks.has(_e22) || r.push(_e22);
                return r;
              };
              Object.defineProperty(ChunkedStreamSubstream.prototype, "isDataLoaded", {
                get: function get() {
                  return this.numChunksLoaded === this.numChunks || 0 === this.getMissingChunks().length;
                },
                configurable: !0
              });
              var r = new ChunkedStreamSubstream();
              r.pos = r.start = e;
              r.end = e + t || this.end;
              r.dict = a;
              return r;
            }
          }, {
            key: "getBaseStreams",
            value: function getBaseStreams() {
              return [this];
            }
          }]);
          return ChunkedStream;
        }(n.Stream);
        t.ChunkedStream = ChunkedStream;
        t.ChunkedStreamManager = /*#__PURE__*/function () {
          function ChunkedStreamManager(e, t) {
            _classCallCheck(this, ChunkedStreamManager);
            this.length = t.length;
            this.chunkSize = t.rangeChunkSize;
            this.stream = new ChunkedStream(this.length, this.chunkSize, this);
            this.pdfNetworkStream = e;
            this.disableAutoFetch = t.disableAutoFetch;
            this.msgHandler = t.msgHandler;
            this.currRequestId = 0;
            this._chunksNeededByRequest = new Map();
            this._requestsByChunk = new Map();
            this._promisesByRequest = new Map();
            this.progressiveDataLength = 0;
            this.aborted = !1;
            this._loadedStreamCapability = new i.PromiseCapability();
          }
          _createClass(ChunkedStreamManager, [{
            key: "sendRequest",
            value: function sendRequest(e, t) {
              var _this9 = this;
              var a = this.pdfNetworkStream.getRangeReader(e, t);
              a.isStreamingSupported || (a.onProgress = this.onProgress.bind(this));
              var i = [],
                n = 0;
              return new Promise(function (e, t) {
                var readChunk = function readChunk(_ref13) {
                  var s = _ref13.value,
                    o = _ref13.done;
                  try {
                    if (o) {
                      var _t18 = (0, r.arrayBuffersToBytes)(i);
                      i = null;
                      e(_t18);
                      return;
                    }
                    n += s.byteLength;
                    a.isStreamingSupported && _this9.onProgress({
                      loaded: n
                    });
                    i.push(s);
                    a.read().then(readChunk, t);
                  } catch (e) {
                    t(e);
                  }
                };
                a.read().then(readChunk, t);
              }).then(function (t) {
                _this9.aborted || _this9.onReceiveData({
                  chunk: t,
                  begin: e
                });
              });
            }
          }, {
            key: "requestAllChunks",
            value: function requestAllChunks() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              if (!e) {
                var _e23 = this.stream.getMissingChunks();
                this._requestChunks(_e23);
              }
              return this._loadedStreamCapability.promise;
            }
          }, {
            key: "_requestChunks",
            value: function _requestChunks(e) {
              var _this10 = this;
              var t = this.currRequestId++,
                a = new Set();
              this._chunksNeededByRequest.set(t, a);
              var _iterator11 = _createForOfIteratorHelper(e),
                _step11;
              try {
                for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
                  var _t20 = _step11.value;
                  this.stream.hasChunk(_t20) || a.add(_t20);
                }
              } catch (err) {
                _iterator11.e(err);
              } finally {
                _iterator11.f();
              }
              if (0 === a.size) return Promise.resolve();
              var r = new i.PromiseCapability();
              this._promisesByRequest.set(t, r);
              var n = [];
              var _iterator12 = _createForOfIteratorHelper(a),
                _step12;
              try {
                for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
                  var _e26 = _step12.value;
                  var _a15 = this._requestsByChunk.get(_e26);
                  if (!_a15) {
                    _a15 = [];
                    this._requestsByChunk.set(_e26, _a15);
                    n.push(_e26);
                  }
                  _a15.push(t);
                }
              } catch (err) {
                _iterator12.e(err);
              } finally {
                _iterator12.f();
              }
              if (n.length > 0) {
                var _e24 = this.groupChunks(n);
                var _iterator13 = _createForOfIteratorHelper(_e24),
                  _step13;
                try {
                  for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
                    var _t19 = _step13.value;
                    var _e25 = _t19.beginChunk * this.chunkSize,
                      _a14 = Math.min(_t19.endChunk * this.chunkSize, this.length);
                    this.sendRequest(_e25, _a14).catch(r.reject);
                  }
                } catch (err) {
                  _iterator13.e(err);
                } finally {
                  _iterator13.f();
                }
              }
              return r.promise.catch(function (e) {
                if (!_this10.aborted) throw e;
              });
            }
          }, {
            key: "getStream",
            value: function getStream() {
              return this.stream;
            }
          }, {
            key: "requestRange",
            value: function requestRange(e, t) {
              t = Math.min(t, this.length);
              var a = this.getBeginChunk(e),
                r = this.getEndChunk(t),
                i = [];
              for (var _e27 = a; _e27 < r; ++_e27) i.push(_e27);
              return this._requestChunks(i);
            }
          }, {
            key: "requestRanges",
            value: function requestRanges() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
              var t = [];
              var _iterator14 = _createForOfIteratorHelper(e),
                _step14;
              try {
                for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
                  var _a16 = _step14.value;
                  var _e28 = this.getBeginChunk(_a16.begin),
                    _r20 = this.getEndChunk(_a16.end);
                  for (var _a17 = _e28; _a17 < _r20; ++_a17) t.includes(_a17) || t.push(_a17);
                }
              } catch (err) {
                _iterator14.e(err);
              } finally {
                _iterator14.f();
              }
              t.sort(function (e, t) {
                return e - t;
              });
              return this._requestChunks(t);
            }
          }, {
            key: "groupChunks",
            value: function groupChunks(e) {
              var t = [];
              var a = -1,
                r = -1;
              for (var _i20 = 0, _n4 = e.length; _i20 < _n4; ++_i20) {
                var _n5 = e[_i20];
                a < 0 && (a = _n5);
                if (r >= 0 && r + 1 !== _n5) {
                  t.push({
                    beginChunk: a,
                    endChunk: r + 1
                  });
                  a = _n5;
                }
                _i20 + 1 === e.length && t.push({
                  beginChunk: a,
                  endChunk: _n5 + 1
                });
                r = _n5;
              }
              return t;
            }
          }, {
            key: "onProgress",
            value: function onProgress(e) {
              this.msgHandler.send("DocProgress", {
                loaded: this.stream.numChunksLoaded * this.chunkSize + e.loaded,
                total: this.length
              });
            }
          }, {
            key: "onReceiveData",
            value: function onReceiveData(e) {
              var t = e.chunk,
                a = void 0 === e.begin,
                r = a ? this.progressiveDataLength : e.begin,
                i = r + t.byteLength,
                n = Math.floor(r / this.chunkSize),
                s = i < this.length ? Math.floor(i / this.chunkSize) : Math.ceil(i / this.chunkSize);
              if (a) {
                this.stream.onReceiveProgressiveData(t);
                this.progressiveDataLength = i;
              } else this.stream.onReceiveData(r, t);
              this.stream.isDataLoaded && this._loadedStreamCapability.resolve(this.stream);
              var o = [];
              for (var _e29 = n; _e29 < s; ++_e29) {
                var _t21 = this._requestsByChunk.get(_e29);
                if (_t21) {
                  this._requestsByChunk.delete(_e29);
                  var _iterator15 = _createForOfIteratorHelper(_t21),
                    _step15;
                  try {
                    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
                      var _a18 = _step15.value;
                      var _t22 = this._chunksNeededByRequest.get(_a18);
                      _t22.has(_e29) && _t22.delete(_e29);
                      _t22.size > 0 || o.push(_a18);
                    }
                  } catch (err) {
                    _iterator15.e(err);
                  } finally {
                    _iterator15.f();
                  }
                }
              }
              if (!this.disableAutoFetch && 0 === this._requestsByChunk.size) {
                var _e30;
                if (1 === this.stream.numChunksLoaded) {
                  var _t23 = this.stream.numChunks - 1;
                  this.stream.hasChunk(_t23) || (_e30 = _t23);
                } else _e30 = this.stream.nextEmptyChunk(s);
                Number.isInteger(_e30) && this._requestChunks([_e30]);
              }
              for (var _i21 = 0, _o3 = o; _i21 < _o3.length; _i21++) {
                var _e31 = _o3[_i21];
                var _t24 = this._promisesByRequest.get(_e31);
                this._promisesByRequest.delete(_e31);
                _t24.resolve();
              }
              this.msgHandler.send("DocProgress", {
                loaded: this.stream.numChunksLoaded * this.chunkSize,
                total: this.length
              });
            }
          }, {
            key: "onError",
            value: function onError(e) {
              this._loadedStreamCapability.reject(e);
            }
          }, {
            key: "getBeginChunk",
            value: function getBeginChunk(e) {
              return Math.floor(e / this.chunkSize);
            }
          }, {
            key: "getEndChunk",
            value: function getEndChunk(e) {
              return Math.floor((e - 1) / this.chunkSize) + 1;
            }
          }, {
            key: "abort",
            value: function abort(e) {
              this.aborted = !0;
              this.pdfNetworkStream && this.pdfNetworkStream.cancelAllRequests(e);
              var _iterator16 = _createForOfIteratorHelper(this._promisesByRequest.values()),
                _step16;
              try {
                for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
                  var _t25 = _step16.value;
                  _t25.reject(e);
                }
              } catch (err) {
                _iterator16.e(err);
              } finally {
                _iterator16.f();
              }
            }
          }]);
          return ChunkedStreamManager;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.StringStream = t.Stream = t.NullStream = void 0;
        var r = a(5),
          i = a(2);
        var Stream = /*#__PURE__*/function (_r$BaseStream) {
          _inherits(Stream, _r$BaseStream);
          var _super15 = _createSuper(Stream);
          function Stream(e, t, a, r) {
            var _this11;
            _classCallCheck(this, Stream);
            _this11 = _super15.call(this);
            _this11.bytes = e instanceof Uint8Array ? e : new Uint8Array(e);
            _this11.start = t || 0;
            _this11.pos = _this11.start;
            _this11.end = t + a || _this11.bytes.length;
            _this11.dict = r;
            return _this11;
          }
          _createClass(Stream, [{
            key: "length",
            get: function get() {
              return this.end - this.start;
            }
          }, {
            key: "isEmpty",
            get: function get() {
              return 0 === this.length;
            }
          }, {
            key: "getByte",
            value: function getByte() {
              return this.pos >= this.end ? -1 : this.bytes[this.pos++];
            }
          }, {
            key: "getBytes",
            value: function getBytes(e) {
              var t = this.bytes,
                a = this.pos,
                r = this.end;
              if (!e) return t.subarray(a, r);
              var i = a + e;
              i > r && (i = r);
              this.pos = i;
              return t.subarray(a, i);
            }
          }, {
            key: "getByteRange",
            value: function getByteRange(e, t) {
              e < 0 && (e = 0);
              t > this.end && (t = this.end);
              return this.bytes.subarray(e, t);
            }
          }, {
            key: "reset",
            value: function reset() {
              this.pos = this.start;
            }
          }, {
            key: "moveStart",
            value: function moveStart() {
              this.start = this.pos;
            }
          }, {
            key: "makeSubStream",
            value: function makeSubStream(e, t) {
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
              return new Stream(this.bytes.buffer, e, t, a);
            }
          }]);
          return Stream;
        }(r.BaseStream);
        t.Stream = Stream;
        t.StringStream = /*#__PURE__*/function (_Stream) {
          _inherits(StringStream, _Stream);
          var _super16 = _createSuper(StringStream);
          function StringStream(e) {
            _classCallCheck(this, StringStream);
            return _super16.call(this, (0, i.stringToBytes)(e));
          }
          return _createClass(StringStream);
        }(Stream);
        t.NullStream = /*#__PURE__*/function (_Stream2) {
          _inherits(NullStream, _Stream2);
          var _super17 = _createSuper(NullStream);
          function NullStream() {
            _classCallCheck(this, NullStream);
            return _super17.call(this, new Uint8Array(0));
          }
          return _createClass(NullStream);
        }(Stream);
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.Page = t.PDFDocument = void 0;
        var r = a(10),
          i = a(2),
          n = a(3),
          s = a(4),
          o = a(51),
          c = a(5),
          l = a(67),
          h = a(69),
          u = a(71),
          d = a(100),
          f = a(16),
          g = a(8),
          p = a(75),
          m = a(63),
          b = a(13),
          y = a(18),
          w = a(74),
          S = a(65),
          x = a(76),
          C = a(101);
        var k = [0, 0, 612, 792];
        var Page = /*#__PURE__*/function () {
          function Page(_ref14) {
            var e = _ref14.pdfManager,
              t = _ref14.xref,
              a = _ref14.pageIndex,
              r = _ref14.pageDict,
              i = _ref14.ref,
              n = _ref14.globalIdFactory,
              s = _ref14.fontCache,
              o = _ref14.builtInCMapCache,
              c = _ref14.standardFontDataCache,
              l = _ref14.globalImageCache,
              h = _ref14.nonBlendModesSet,
              u = _ref14.xfaFactory;
            _classCallCheck(this, Page);
            this.pdfManager = e;
            this.pageIndex = a;
            this.pageDict = r;
            this.xref = t;
            this.ref = i;
            this.fontCache = s;
            this.builtInCMapCache = o;
            this.standardFontDataCache = c;
            this.globalImageCache = l;
            this.nonBlendModesSet = h;
            this.evaluatorOptions = e.evaluatorOptions;
            this.resourcesPromise = null;
            this.xfaFactory = u;
            var d = {
              obj: 0
            };
            this._localIdFactory = /*#__PURE__*/function (_n6) {
              _inherits(_class2, _n6);
              var _super18 = _createSuper(_class2);
              function _class2() {
                _classCallCheck(this, _class2);
                return _super18.apply(this, arguments);
              }
              _createClass(_class2, null, [{
                key: "createObjId",
                value: function createObjId() {
                  return "p".concat(a, "_").concat(++d.obj);
                }
              }, {
                key: "getPageObjId",
                value: function getPageObjId() {
                  return "page".concat(i.toString());
                }
              }]);
              return _class2;
            }(n);
          }
          _createClass(Page, [{
            key: "_getInheritableProperty",
            value: function _getInheritableProperty(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
              var a = (0, n.getInheritableProperty)({
                dict: this.pageDict,
                key: e,
                getArray: t,
                stopWhenFound: !1
              });
              return Array.isArray(a) ? 1 !== a.length && a[0] instanceof s.Dict ? s.Dict.merge({
                xref: this.xref,
                dictArray: a
              }) : a[0] : a;
            }
          }, {
            key: "content",
            get: function get() {
              return this.pageDict.getArray("Contents");
            }
          }, {
            key: "resources",
            get: function get() {
              var e = this._getInheritableProperty("Resources");
              return (0, i.shadow)(this, "resources", e instanceof s.Dict ? e : s.Dict.empty);
            }
          }, {
            key: "_getBoundingBox",
            value: function _getBoundingBox(e) {
              if (this.xfaData) return this.xfaData.bbox;
              var t = this._getInheritableProperty(e, !0);
              if (Array.isArray(t) && 4 === t.length) {
                t = i.Util.normalizeRect(t);
                if (t[2] - t[0] > 0 && t[3] - t[1] > 0) return t;
                (0, i.warn)("Empty, or invalid, /".concat(e, " entry."));
              }
              return null;
            }
          }, {
            key: "mediaBox",
            get: function get() {
              return (0, i.shadow)(this, "mediaBox", this._getBoundingBox("MediaBox") || k);
            }
          }, {
            key: "cropBox",
            get: function get() {
              return (0, i.shadow)(this, "cropBox", this._getBoundingBox("CropBox") || this.mediaBox);
            }
          }, {
            key: "userUnit",
            get: function get() {
              var e = this.pageDict.get("UserUnit");
              ("number" != typeof e || e <= 0) && (e = 1);
              return (0, i.shadow)(this, "userUnit", e);
            }
          }, {
            key: "view",
            get: function get() {
              var e = this.cropBox,
                t = this.mediaBox;
              if (e !== t && !(0, i.isArrayEqual)(e, t)) {
                var _a19 = i.Util.intersect(e, t);
                if (_a19 && _a19[2] - _a19[0] > 0 && _a19[3] - _a19[1] > 0) return (0, i.shadow)(this, "view", _a19);
                (0, i.warn)("Empty /CropBox and /MediaBox intersection.");
              }
              return (0, i.shadow)(this, "view", t);
            }
          }, {
            key: "rotate",
            get: function get() {
              var e = this._getInheritableProperty("Rotate") || 0;
              e % 90 != 0 ? e = 0 : e >= 360 ? e %= 360 : e < 0 && (e = (e % 360 + 360) % 360);
              return (0, i.shadow)(this, "rotate", e);
            }
          }, {
            key: "_onSubStreamError",
            value: function _onSubStreamError(e, t) {
              if (!this.evaluatorOptions.ignoreErrors) throw e;
              (0, i.warn)("getContentStream - ignoring sub-stream (".concat(t, "): \"").concat(e, "\"."));
            }
          }, {
            key: "getContentStream",
            value: function getContentStream() {
              var _this12 = this;
              return this.pdfManager.ensure(this, "content").then(function (e) {
                return e instanceof c.BaseStream ? e : Array.isArray(e) ? new y.StreamsSequenceStream(e, _this12._onSubStreamError.bind(_this12)) : new g.NullStream();
              });
            }
          }, {
            key: "xfaData",
            get: function get() {
              return (0, i.shadow)(this, "xfaData", this.xfaFactory ? {
                bbox: this.xfaFactory.getBoundingBox(this.pageIndex)
              } : null);
            }
          }, {
            key: "saveNewAnnotations",
            value: function () {
              var _saveNewAnnotations = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(e, t, a) {
                var i, n, s, o, _iterator17, _step17, _e32, c, l, h, u;
                return _regeneratorRuntime().wrap(function _callee6$(_context6) {
                  while (1) switch (_context6.prev = _context6.next) {
                    case 0:
                      if (!this.xfaFactory) {
                        _context6.next = 2;
                        break;
                      }
                      throw new Error("XFA: Cannot save new annotations.");
                    case 2:
                      i = new b.PartialEvaluator({
                        xref: this.xref,
                        handler: e,
                        pageIndex: this.pageIndex,
                        idFactory: this._localIdFactory,
                        fontCache: this.fontCache,
                        builtInCMapCache: this.builtInCMapCache,
                        standardFontDataCache: this.standardFontDataCache,
                        globalImageCache: this.globalImageCache,
                        options: this.evaluatorOptions
                      });
                      n = this.pageDict;
                      s = this.annotations.slice();
                      _context6.next = 7;
                      return r.AnnotationFactory.saveNewAnnotations(i, t, a);
                    case 7:
                      o = _context6.sent;
                      _iterator17 = _createForOfIteratorHelper(o.annotations);
                      try {
                        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
                          _e32 = _step17.value.ref;
                          s.push(_e32);
                        }
                      } catch (err) {
                        _iterator17.e(err);
                      } finally {
                        _iterator17.f();
                      }
                      c = n.get("Annots");
                      n.set("Annots", s);
                      l = [];
                      h = null;
                      this.xref.encrypt && (h = this.xref.encrypt.createCipherTransform(this.ref.num, this.ref.gen));
                      (0, S.writeObject)(this.ref, n, l, h);
                      c && n.set("Annots", c);
                      u = o.dependencies;
                      u.push.apply(u, [{
                        ref: this.ref,
                        data: l.join("")
                      }].concat(_toConsumableArray(o.annotations)));
                      return _context6.abrupt("return", u);
                    case 20:
                    case "end":
                      return _context6.stop();
                  }
                }, _callee6, this);
              }));
              function saveNewAnnotations(_x14, _x15, _x16) {
                return _saveNewAnnotations.apply(this, arguments);
              }
              return saveNewAnnotations;
            }()
          }, {
            key: "save",
            value: function save(e, t, a) {
              var r = new b.PartialEvaluator({
                xref: this.xref,
                handler: e,
                pageIndex: this.pageIndex,
                idFactory: this._localIdFactory,
                fontCache: this.fontCache,
                builtInCMapCache: this.builtInCMapCache,
                standardFontDataCache: this.standardFontDataCache,
                globalImageCache: this.globalImageCache,
                options: this.evaluatorOptions
              });
              return this._parsedAnnotations.then(function (e) {
                var n = [];
                var _iterator18 = _createForOfIteratorHelper(e),
                  _step18;
                try {
                  for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
                    var _s4 = _step18.value;
                    _s4.mustBePrinted(a) && n.push(_s4.save(r, t, a).catch(function (e) {
                      (0, i.warn)("save - ignoring annotation data during \"".concat(t.name, "\" task: \"").concat(e, "\"."));
                      return null;
                    }));
                  }
                } catch (err) {
                  _iterator18.e(err);
                } finally {
                  _iterator18.f();
                }
                return Promise.all(n).then(function (e) {
                  return e.filter(function (e) {
                    return !!e;
                  });
                });
              });
            }
          }, {
            key: "loadResources",
            value: function loadResources(e) {
              var _this13 = this;
              this.resourcesPromise || (this.resourcesPromise = this.pdfManager.ensure(this, "resources"));
              return this.resourcesPromise.then(function () {
                return new p.ObjectLoader(_this13.resources, e, _this13.xref).load();
              });
            }
          }, {
            key: "getOperatorList",
            value: function getOperatorList(_ref15) {
              var _this14 = this;
              var e = _ref15.handler,
                t = _ref15.sink,
                a = _ref15.task,
                s = _ref15.intent,
                o = _ref15.cacheKey,
                _ref15$annotationStor = _ref15.annotationStorage,
                c = _ref15$annotationStor === void 0 ? null : _ref15$annotationStor;
              var l = this.getContentStream(),
                h = this.loadResources(["ColorSpace", "ExtGState", "Font", "Pattern", "Properties", "Shading", "XObject"]),
                u = new b.PartialEvaluator({
                  xref: this.xref,
                  handler: e,
                  pageIndex: this.pageIndex,
                  idFactory: this._localIdFactory,
                  fontCache: this.fontCache,
                  builtInCMapCache: this.builtInCMapCache,
                  standardFontDataCache: this.standardFontDataCache,
                  globalImageCache: this.globalImageCache,
                  options: this.evaluatorOptions
                }),
                d = this.xfaFactory ? null : (0, n.getNewAnnotationsMap)(c);
              var f = Promise.resolve(null);
              if (d) {
                var _e33 = d.get(this.pageIndex);
                _e33 && (f = r.AnnotationFactory.printNewAnnotations(u, a, _e33));
              }
              var g = Promise.all([l, h]).then(function (_ref16) {
                var _ref17 = _slicedToArray(_ref16, 1),
                  r = _ref17[0];
                var i = new m.OperatorList(s, t);
                e.send("StartRenderPage", {
                  transparency: u.hasBlendModes(_this14.resources, _this14.nonBlendModesSet),
                  pageIndex: _this14.pageIndex,
                  cacheKey: o
                });
                return u.getOperatorList({
                  stream: r,
                  task: a,
                  resources: _this14.resources,
                  operatorList: i
                }).then(function () {
                  return i;
                });
              });
              return Promise.all([g, this._parsedAnnotations, f]).then(function (_ref18) {
                var _ref19 = _slicedToArray(_ref18, 3),
                  e = _ref19[0],
                  t = _ref19[1],
                  r = _ref19[2];
                r && (t = t.concat(r));
                if (0 === t.length || s & i.RenderingIntentFlag.ANNOTATIONS_DISABLE) {
                  e.flush(!0);
                  return {
                    length: e.totalLength
                  };
                }
                var n = !!(s & i.RenderingIntentFlag.ANNOTATIONS_FORMS),
                  o = !!(s & i.RenderingIntentFlag.ANY),
                  l = !!(s & i.RenderingIntentFlag.DISPLAY),
                  h = !!(s & i.RenderingIntentFlag.PRINT),
                  d = [];
                var _iterator19 = _createForOfIteratorHelper(t),
                  _step19;
                try {
                  for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {
                    var _e34 = _step19.value;
                    (o || l && _e34.mustBeViewed(c) || h && _e34.mustBePrinted(c)) && d.push(_e34.getOperatorList(u, a, s, n, c).catch(function (e) {
                      (0, i.warn)("getOperatorList - ignoring annotation data during \"".concat(a.name, "\" task: \"").concat(e, "\"."));
                      return {
                        opList: null,
                        separateForm: !1,
                        separateCanvas: !1
                      };
                    }));
                  }
                } catch (err) {
                  _iterator19.e(err);
                } finally {
                  _iterator19.f();
                }
                return Promise.all(d).then(function (t) {
                  var a = !1,
                    r = !1;
                  var _iterator20 = _createForOfIteratorHelper(t),
                    _step20;
                  try {
                    for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {
                      var _step20$value = _step20.value,
                        _i22 = _step20$value.opList,
                        _n7 = _step20$value.separateForm,
                        _s5 = _step20$value.separateCanvas;
                      e.addOpList(_i22);
                      a || (a = _n7);
                      r || (r = _s5);
                    }
                  } catch (err) {
                    _iterator20.e(err);
                  } finally {
                    _iterator20.f();
                  }
                  e.flush(!0, {
                    form: a,
                    canvas: r
                  });
                  return {
                    length: e.totalLength
                  };
                });
              });
            }
          }, {
            key: "extractTextContent",
            value: function extractTextContent(_ref20) {
              var _this15 = this;
              var e = _ref20.handler,
                t = _ref20.task,
                a = _ref20.includeMarkedContent,
                r = _ref20.disableNormalization,
                i = _ref20.sink;
              var n = this.getContentStream(),
                s = this.loadResources(["ExtGState", "Font", "Properties", "XObject"]);
              return Promise.all([n, s]).then(function (_ref21) {
                var _ref22 = _slicedToArray(_ref21, 1),
                  n = _ref22[0];
                return new b.PartialEvaluator({
                  xref: _this15.xref,
                  handler: e,
                  pageIndex: _this15.pageIndex,
                  idFactory: _this15._localIdFactory,
                  fontCache: _this15.fontCache,
                  builtInCMapCache: _this15.builtInCMapCache,
                  standardFontDataCache: _this15.standardFontDataCache,
                  globalImageCache: _this15.globalImageCache,
                  options: _this15.evaluatorOptions
                }).getTextContent({
                  stream: n,
                  task: t,
                  resources: _this15.resources,
                  includeMarkedContent: a,
                  disableNormalization: r,
                  sink: i,
                  viewBox: _this15.view
                });
              });
            }
          }, {
            key: "getStructTree",
            value: function () {
              var _getStructTree = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
                var e;
                return _regeneratorRuntime().wrap(function _callee7$(_context7) {
                  while (1) switch (_context7.prev = _context7.next) {
                    case 0:
                      _context7.next = 2;
                      return this.pdfManager.ensureCatalog("structTreeRoot");
                    case 2:
                      e = _context7.sent;
                      if (e) {
                        _context7.next = 5;
                        break;
                      }
                      return _context7.abrupt("return", null);
                    case 5:
                      _context7.next = 7;
                      return this.pdfManager.ensure(this, "_parseStructTree", [e]);
                    case 7:
                      return _context7.abrupt("return", _context7.sent.serializable);
                    case 8:
                    case "end":
                      return _context7.stop();
                  }
                }, _callee7, this);
              }));
              function getStructTree() {
                return _getStructTree.apply(this, arguments);
              }
              return getStructTree;
            }()
          }, {
            key: "_parseStructTree",
            value: function _parseStructTree(e) {
              var t = new w.StructTreePage(e, this.pageDict);
              t.parse();
              return t;
            }
          }, {
            key: "getAnnotationsData",
            value: function () {
              var _getAnnotationsData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(e, t, a) {
                var r, n, s, o, c, l, h, _iterator21, _step21, _a20, _r21;
                return _regeneratorRuntime().wrap(function _callee8$(_context8) {
                  while (1) switch (_context8.prev = _context8.next) {
                    case 0:
                      _context8.next = 2;
                      return this._parsedAnnotations;
                    case 2:
                      r = _context8.sent;
                      if (!(0 === r.length)) {
                        _context8.next = 5;
                        break;
                      }
                      return _context8.abrupt("return", []);
                    case 5:
                      n = [], s = [];
                      c = !!(a & i.RenderingIntentFlag.ANY), l = !!(a & i.RenderingIntentFlag.DISPLAY), h = !!(a & i.RenderingIntentFlag.PRINT);
                      _iterator21 = _createForOfIteratorHelper(r);
                      try {
                        for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {
                          _a20 = _step21.value;
                          _r21 = c || l && _a20.viewable;
                          (_r21 || h && _a20.printable) && n.push(_a20.data);
                          if (_a20.hasTextContent && _r21) {
                            o || (o = new b.PartialEvaluator({
                              xref: this.xref,
                              handler: e,
                              pageIndex: this.pageIndex,
                              idFactory: this._localIdFactory,
                              fontCache: this.fontCache,
                              builtInCMapCache: this.builtInCMapCache,
                              standardFontDataCache: this.standardFontDataCache,
                              globalImageCache: this.globalImageCache,
                              options: this.evaluatorOptions
                            }));
                            s.push(_a20.extractTextContent(o, t, this.view).catch(function (e) {
                              (0, i.warn)("getAnnotationsData - ignoring textContent during \"".concat(t.name, "\" task: \"").concat(e, "\"."));
                            }));
                          }
                        }
                      } catch (err) {
                        _iterator21.e(err);
                      } finally {
                        _iterator21.f();
                      }
                      _context8.next = 11;
                      return Promise.all(s);
                    case 11:
                      return _context8.abrupt("return", n);
                    case 12:
                    case "end":
                      return _context8.stop();
                  }
                }, _callee8, this);
              }));
              function getAnnotationsData(_x17, _x18, _x19) {
                return _getAnnotationsData.apply(this, arguments);
              }
              return getAnnotationsData;
            }()
          }, {
            key: "annotations",
            get: function get() {
              var e = this._getInheritableProperty("Annots");
              return (0, i.shadow)(this, "annotations", Array.isArray(e) ? e : []);
            }
          }, {
            key: "_parsedAnnotations",
            get: function get() {
              var _this16 = this;
              var e = this.pdfManager.ensure(this, "annotations").then(function () {
                var e = [];
                var _iterator22 = _createForOfIteratorHelper(_this16.annotations),
                  _step22;
                try {
                  for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {
                    var _t26 = _step22.value;
                    e.push(r.AnnotationFactory.create(_this16.xref, _t26, _this16.pdfManager, _this16._localIdFactory, !1).catch(function (e) {
                      (0, i.warn)("_parsedAnnotations: \"".concat(e, "\"."));
                      return null;
                    }));
                  }
                } catch (err) {
                  _iterator22.e(err);
                } finally {
                  _iterator22.f();
                }
                return Promise.all(e).then(function (e) {
                  if (0 === e.length) return e;
                  var t = [];
                  var a;
                  var _iterator23 = _createForOfIteratorHelper(e),
                    _step23;
                  try {
                    for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {
                      var _i23 = _step23.value;
                      _i23 && (_i23 instanceof r.PopupAnnotation ? (a || (a = [])).push(_i23) : t.push(_i23));
                    }
                  } catch (err) {
                    _iterator23.e(err);
                  } finally {
                    _iterator23.f();
                  }
                  a && t.push.apply(t, _toConsumableArray(a));
                  return t;
                });
              });
              return (0, i.shadow)(this, "_parsedAnnotations", e);
            }
          }, {
            key: "jsActions",
            get: function get() {
              var e = (0, n.collectActions)(this.xref, this.pageDict, i.PageActionEventType);
              return (0, i.shadow)(this, "jsActions", e);
            }
          }]);
          return Page;
        }();
        t.Page = Page;
        var v = new Uint8Array([37, 80, 68, 70, 45]),
          F = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]),
          O = new Uint8Array([101, 110, 100, 111, 98, 106]);
        function find(e, t) {
          var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1024;
          var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;
          var i = t.length,
            n = e.peekBytes(a),
            s = n.length - i;
          if (s <= 0) return !1;
          if (r) {
            var _a21 = i - 1;
            var _r22 = n.length - 1;
            for (; _r22 >= _a21;) {
              var _s6 = 0;
              for (; _s6 < i && n[_r22 - _s6] === t[_a21 - _s6];) _s6++;
              if (_s6 >= i) {
                e.pos += _r22 - _a21;
                return !0;
              }
              _r22--;
            }
          } else {
            var _a22 = 0;
            for (; _a22 <= s;) {
              var _r23 = 0;
              for (; _r23 < i && n[_a22 + _r23] === t[_r23];) _r23++;
              if (_r23 >= i) {
                e.pos += _a22;
                return !0;
              }
              _a22++;
            }
          }
          return !1;
        }
        t.PDFDocument = /*#__PURE__*/function () {
          function PDFDocument(e, t) {
            _classCallCheck(this, PDFDocument);
            if (t.length <= 0) throw new i.InvalidPDFException("The PDF file is empty, i.e. its size is zero bytes.");
            this.pdfManager = e;
            this.stream = t;
            this.xref = new C.XRef(t, e);
            this._pagePromises = new Map();
            this._version = null;
            var a = {
              font: 0
            };
            this._globalIdFactory = /*#__PURE__*/function () {
              function _class3() {
                _classCallCheck(this, _class3);
              }
              _createClass(_class3, null, [{
                key: "getDocId",
                value: function getDocId() {
                  return "g_".concat(e.docId);
                }
              }, {
                key: "createFontId",
                value: function createFontId() {
                  return "f" + ++a.font;
                }
              }, {
                key: "createObjId",
                value: function createObjId() {
                  (0, i.unreachable)("Abstract method `createObjId` called.");
                }
              }, {
                key: "getPageObjId",
                value: function getPageObjId() {
                  (0, i.unreachable)("Abstract method `getPageObjId` called.");
                }
              }]);
              return _class3;
            }();
          }
          _createClass(PDFDocument, [{
            key: "parse",
            value: function parse(e) {
              this.xref.parse(e);
              this.catalog = new h.Catalog(this.pdfManager, this.xref);
            }
          }, {
            key: "linearization",
            get: function get() {
              var e = null;
              try {
                e = f.Linearization.create(this.stream);
              } catch (e) {
                if (e instanceof n.MissingDataException) throw e;
                (0, i.info)(e);
              }
              return (0, i.shadow)(this, "linearization", e);
            }
          }, {
            key: "startXRef",
            get: function get() {
              var e = this.stream;
              var t = 0;
              if (this.linearization) {
                e.reset();
                find(e, O) && (t = e.pos + 6 - e.start);
              } else {
                var _a23 = 1024,
                  _r24 = F.length;
                var _i24 = !1,
                  _s7 = e.end;
                for (; !_i24 && _s7 > 0;) {
                  _s7 -= _a23 - _r24;
                  _s7 < 0 && (_s7 = 0);
                  e.pos = _s7;
                  _i24 = find(e, F, _a23, !0);
                }
                if (_i24) {
                  e.skip(9);
                  var _a24;
                  do {
                    _a24 = e.getByte();
                  } while ((0, n.isWhiteSpace)(_a24));
                  var _r25 = "";
                  for (; _a24 >= 32 && _a24 <= 57;) {
                    _r25 += String.fromCharCode(_a24);
                    _a24 = e.getByte();
                  }
                  t = parseInt(_r25, 10);
                  isNaN(t) && (t = 0);
                }
              }
              return (0, i.shadow)(this, "startXRef", t);
            }
          }, {
            key: "checkHeader",
            value: function checkHeader() {
              var e = this.stream;
              e.reset();
              if (!find(e, v)) return;
              e.moveStart();
              e.skip(v.length);
              var t,
                a = "";
              for (; (t = e.getByte()) > 32 && a.length < 7;) a += String.fromCharCode(t);
              n.PDF_VERSION_REGEXP.test(a) ? this._version = a : (0, i.warn)("Invalid PDF header version: ".concat(a));
            }
          }, {
            key: "parseStartXRef",
            value: function parseStartXRef() {
              this.xref.setStartXRef(this.startXRef);
            }
          }, {
            key: "numPages",
            get: function get() {
              var e = 0;
              e = this.catalog.hasActualNumPages ? this.catalog.numPages : this.xfaFactory ? this.xfaFactory.getNumPages() : this.linearization ? this.linearization.numPages : this.catalog.numPages;
              return (0, i.shadow)(this, "numPages", e);
            }
          }, {
            key: "_hasOnlyDocumentSignatures",
            value: function _hasOnlyDocumentSignatures(e) {
              var _this17 = this;
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
              return !!Array.isArray(e) && e.every(function (e) {
                if (!((e = _this17.xref.fetchIfRef(e)) instanceof s.Dict)) return !1;
                if (e.has("Kids")) {
                  if (++t > 10) {
                    (0, i.warn)("_hasOnlyDocumentSignatures: maximum recursion depth reached");
                    return !1;
                  }
                  return _this17._hasOnlyDocumentSignatures(e.get("Kids"), t);
                }
                var a = (0, s.isName)(e.get("FT"), "Sig"),
                  r = e.get("Rect"),
                  n = Array.isArray(r) && r.every(function (e) {
                    return 0 === e;
                  });
                return a && n;
              });
            }
          }, {
            key: "_xfaStreams",
            get: function get() {
              var e = this.catalog.acroForm;
              if (!e) return null;
              var t = e.get("XFA"),
                a = {
                  "xdp:xdp": "",
                  template: "",
                  datasets: "",
                  config: "",
                  connectionSet: "",
                  localeSet: "",
                  stylesheet: "",
                  "/xdp:xdp": ""
                };
              if (t instanceof c.BaseStream && !t.isEmpty) {
                a["xdp:xdp"] = t;
                return a;
              }
              if (!Array.isArray(t) || 0 === t.length) return null;
              for (var _e35 = 0, _r26 = t.length; _e35 < _r26; _e35 += 2) {
                var _i25 = void 0;
                _i25 = 0 === _e35 ? "xdp:xdp" : _e35 === _r26 - 2 ? "/xdp:xdp" : t[_e35];
                if (!a.hasOwnProperty(_i25)) continue;
                var _n8 = this.xref.fetchIfRef(t[_e35 + 1]);
                _n8 instanceof c.BaseStream && !_n8.isEmpty && (a[_i25] = _n8);
              }
              return a;
            }
          }, {
            key: "xfaDatasets",
            get: function get() {
              var e = this._xfaStreams;
              if (!e) return (0, i.shadow)(this, "xfaDatasets", null);
              for (var _i26 = 0, _arr = ["datasets", "xdp:xdp"]; _i26 < _arr.length; _i26++) {
                var _t27 = _arr[_i26];
                var _a25 = e[_t27];
                if (_a25) try {
                  var _e36 = _defineProperty({}, _t27, (0, i.stringToUTF8String)(_a25.getString()));
                  return (0, i.shadow)(this, "xfaDatasets", new d.DatasetReader(_e36));
                } catch (e) {
                  (0, i.warn)("XFA - Invalid utf-8 string.");
                  break;
                }
              }
              return (0, i.shadow)(this, "xfaDatasets", null);
            }
          }, {
            key: "xfaData",
            get: function get() {
              var e = this._xfaStreams;
              if (!e) return null;
              var t = Object.create(null);
              for (var _i27 = 0, _Object$entries3 = Object.entries(e); _i27 < _Object$entries3.length; _i27++) {
                var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i27], 2),
                  _a26 = _Object$entries3$_i[0],
                  _r27 = _Object$entries3$_i[1];
                if (_r27) try {
                  t[_a26] = (0, i.stringToUTF8String)(_r27.getString());
                } catch (e) {
                  (0, i.warn)("XFA - Invalid utf-8 string.");
                  return null;
                }
              }
              return t;
            }
          }, {
            key: "xfaFactory",
            get: function get() {
              var e;
              this.pdfManager.enableXfa && this.catalog.needsRendering && this.formInfo.hasXfa && !this.formInfo.hasAcroForm && (e = this.xfaData);
              return (0, i.shadow)(this, "xfaFactory", e ? new x.XFAFactory(e) : null);
            }
          }, {
            key: "isPureXfa",
            get: function get() {
              return !!this.xfaFactory && this.xfaFactory.isValid();
            }
          }, {
            key: "htmlForXfa",
            get: function get() {
              return this.xfaFactory ? this.xfaFactory.getPages() : null;
            }
          }, {
            key: "loadXfaImages",
            value: function () {
              var _loadXfaImages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
                var e, t, a, r, _iterator24, _step24, _a27, _t28;
                return _regeneratorRuntime().wrap(function _callee9$(_context9) {
                  while (1) switch (_context9.prev = _context9.next) {
                    case 0:
                      _context9.next = 2;
                      return this.pdfManager.ensureCatalog("xfaImages");
                    case 2:
                      e = _context9.sent;
                      if (e) {
                        _context9.next = 5;
                        break;
                      }
                      return _context9.abrupt("return");
                    case 5:
                      t = e.getKeys(), a = new p.ObjectLoader(e, t, this.xref);
                      _context9.next = 8;
                      return a.load();
                    case 8:
                      r = new Map();
                      _iterator24 = _createForOfIteratorHelper(t);
                      try {
                        for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {
                          _a27 = _step24.value;
                          _t28 = e.get(_a27);
                          _t28 instanceof c.BaseStream && r.set(_a27, _t28.getBytes());
                        }
                      } catch (err) {
                        _iterator24.e(err);
                      } finally {
                        _iterator24.f();
                      }
                      this.xfaFactory.setImages(r);
                    case 12:
                    case "end":
                      return _context9.stop();
                  }
                }, _callee9, this);
              }));
              function loadXfaImages() {
                return _loadXfaImages.apply(this, arguments);
              }
              return loadXfaImages;
            }()
          }, {
            key: "loadXfaFonts",
            value: function () {
              var _loadXfaFonts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(e, t) {
                var a, r, c, l, h, u, d, f, g, y, w, _iterator25, _step25, _step25$value, _e38, _a28, _o4, _c2, _l2, S, x, _iterator26, _step26, _e39, _iterator27, _step27, _e40, _i28, _arr2, _a29, _n9, _c3;
                return _regeneratorRuntime().wrap(function _callee10$(_context10) {
                  while (1) switch (_context10.prev = _context10.next) {
                    case 0:
                      _context10.next = 2;
                      return this.pdfManager.ensureCatalog("acroForm");
                    case 2:
                      a = _context10.sent;
                      if (a) {
                        _context10.next = 5;
                        break;
                      }
                      return _context10.abrupt("return");
                    case 5:
                      _context10.next = 7;
                      return a.getAsync("DR");
                    case 7:
                      r = _context10.sent;
                      if (r instanceof s.Dict) {
                        _context10.next = 10;
                        break;
                      }
                      return _context10.abrupt("return");
                    case 10:
                      c = new p.ObjectLoader(r, ["Font"], this.xref);
                      _context10.next = 13;
                      return c.load();
                    case 13:
                      l = r.get("Font");
                      if (l instanceof s.Dict) {
                        _context10.next = 16;
                        break;
                      }
                      return _context10.abrupt("return");
                    case 16:
                      h = Object.assign(Object.create(null), this.pdfManager.evaluatorOptions);
                      h.useSystemFonts = !1;
                      u = new b.PartialEvaluator({
                        xref: this.xref,
                        handler: e,
                        pageIndex: -1,
                        idFactory: this._globalIdFactory,
                        fontCache: this.catalog.fontCache,
                        builtInCMapCache: this.catalog.builtInCMapCache,
                        standardFontDataCache: this.catalog.standardFontDataCache,
                        options: h
                      });
                      d = new m.OperatorList();
                      f = [];
                      _context10.t0 = function clone() {
                        return this;
                      };
                      g = {
                        get font() {
                          return f.at(-1);
                        },
                        set font(e) {
                          f.push(e);
                        },
                        clone: _context10.t0
                      };
                      y = new Map();
                      l.forEach(function (e, t) {
                        y.set(e, t);
                      });
                      w = [];
                      _iterator25 = _createForOfIteratorHelper(y);
                      _context10.prev = 27;
                      _iterator25.s();
                    case 29:
                      if ((_step25 = _iterator25.n()).done) {
                        _context10.next = 40;
                        break;
                      }
                      _step25$value = _slicedToArray(_step25.value, 2), _e38 = _step25$value[0], _a28 = _step25$value[1];
                      _o4 = _a28.get("FontDescriptor");
                      if (_o4 instanceof s.Dict) {
                        _context10.next = 34;
                        break;
                      }
                      return _context10.abrupt("continue", 38);
                    case 34:
                      _c2 = _o4.get("FontFamily");
                      _c2 = _c2.replaceAll(/[ ]+(\d)/g, "$1");
                      _l2 = {
                        fontFamily: _c2,
                        fontWeight: _o4.get("FontWeight"),
                        italicAngle: -_o4.get("ItalicAngle")
                      };
                      (0, n.validateCSSFont)(_l2) && w.push(u.handleSetFont(r, [s.Name.get(_e38), 1], null, d, t, g, null, _l2).catch(function (e) {
                        (0, i.warn)("loadXfaFonts: \"".concat(e, "\"."));
                        return null;
                      }));
                    case 38:
                      _context10.next = 29;
                      break;
                    case 40:
                      _context10.next = 45;
                      break;
                    case 42:
                      _context10.prev = 42;
                      _context10.t1 = _context10["catch"](27);
                      _iterator25.e(_context10.t1);
                    case 45:
                      _context10.prev = 45;
                      _iterator25.f();
                      return _context10.finish(45);
                    case 48:
                      _context10.next = 50;
                      return Promise.all(w);
                    case 50:
                      S = this.xfaFactory.setFonts(f);
                      if (S) {
                        _context10.next = 53;
                        break;
                      }
                      return _context10.abrupt("return");
                    case 53:
                      h.ignoreErrors = !0;
                      w.length = 0;
                      f.length = 0;
                      x = new Set();
                      _iterator26 = _createForOfIteratorHelper(S);
                      try {
                        for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {
                          _e39 = _step26.value;
                          (0, o.getXfaFontName)("".concat(_e39, "-Regular")) || x.add(_e39);
                        }
                      } catch (err) {
                        _iterator26.e(err);
                      } finally {
                        _iterator26.f();
                      }
                      x.size && S.push("PdfJS-Fallback");
                      _iterator27 = _createForOfIteratorHelper(S);
                      try {
                        for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {
                          _e40 = _step27.value;
                          if (!x.has(_e40)) for (_i28 = 0, _arr2 = [{
                            name: "Regular",
                            fontWeight: 400,
                            italicAngle: 0
                          }, {
                            name: "Bold",
                            fontWeight: 700,
                            italicAngle: 0
                          }, {
                            name: "Italic",
                            fontWeight: 400,
                            italicAngle: 12
                          }, {
                            name: "BoldItalic",
                            fontWeight: 700,
                            italicAngle: 12
                          }]; _i28 < _arr2.length; _i28++) {
                            _a29 = _arr2[_i28];
                            _n9 = "".concat(_e40, "-").concat(_a29.name), _c3 = (0, o.getXfaFontDict)(_n9);
                            w.push(u.handleSetFont(r, [s.Name.get(_n9), 1], null, d, t, g, _c3, {
                              fontFamily: _e40,
                              fontWeight: _a29.fontWeight,
                              italicAngle: _a29.italicAngle
                            }).catch(function (e) {
                              (0, i.warn)("loadXfaFonts: \"".concat(e, "\"."));
                              return null;
                            }));
                          }
                        }
                      } catch (err) {
                        _iterator27.e(err);
                      } finally {
                        _iterator27.f();
                      }
                      _context10.next = 64;
                      return Promise.all(w);
                    case 64:
                      this.xfaFactory.appendFonts(f, x);
                    case 65:
                    case "end":
                      return _context10.stop();
                  }
                }, _callee10, this, [[27, 42, 45, 48]]);
              }));
              function loadXfaFonts(_x20, _x21) {
                return _loadXfaFonts.apply(this, arguments);
              }
              return loadXfaFonts;
            }()
          }, {
            key: "serializeXfaData",
            value: function () {
              var _serializeXfaData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(e) {
                return _regeneratorRuntime().wrap(function _callee11$(_context11) {
                  while (1) switch (_context11.prev = _context11.next) {
                    case 0:
                      return _context11.abrupt("return", this.xfaFactory ? this.xfaFactory.serializeData(e) : null);
                    case 1:
                    case "end":
                      return _context11.stop();
                  }
                }, _callee11, this);
              }));
              function serializeXfaData(_x22) {
                return _serializeXfaData.apply(this, arguments);
              }
              return serializeXfaData;
            }()
          }, {
            key: "version",
            get: function get() {
              return this.catalog.version || this._version;
            }
          }, {
            key: "formInfo",
            get: function get() {
              var e = {
                  hasFields: !1,
                  hasAcroForm: !1,
                  hasXfa: !1,
                  hasSignatures: !1
                },
                t = this.catalog.acroForm;
              if (!t) return (0, i.shadow)(this, "formInfo", e);
              try {
                var _a30 = t.get("Fields"),
                  _r28 = Array.isArray(_a30) && _a30.length > 0;
                e.hasFields = _r28;
                var _i29 = t.get("XFA");
                e.hasXfa = Array.isArray(_i29) && _i29.length > 0 || _i29 instanceof c.BaseStream && !_i29.isEmpty;
                var _n10 = !!(1 & t.get("SigFlags")),
                  _s8 = _n10 && this._hasOnlyDocumentSignatures(_a30);
                e.hasAcroForm = _r28 && !_s8;
                e.hasSignatures = _n10;
              } catch (e) {
                if (e instanceof n.MissingDataException) throw e;
                (0, i.warn)("Cannot fetch form information: \"".concat(e, "\"."));
              }
              return (0, i.shadow)(this, "formInfo", e);
            }
          }, {
            key: "documentInfo",
            get: function get() {
              var e = {
                PDFFormatVersion: this.version,
                Language: this.catalog.lang,
                EncryptFilterName: this.xref.encrypt ? this.xref.encrypt.filterName : null,
                IsLinearized: !!this.linearization,
                IsAcroFormPresent: this.formInfo.hasAcroForm,
                IsXFAPresent: this.formInfo.hasXfa,
                IsCollectionPresent: !!this.catalog.collection,
                IsSignaturesPresent: this.formInfo.hasSignatures
              };
              var t;
              try {
                t = this.xref.trailer.get("Info");
              } catch (e) {
                if (e instanceof n.MissingDataException) throw e;
                (0, i.info)("The document information dictionary is invalid.");
              }
              if (!(t instanceof s.Dict)) return (0, i.shadow)(this, "documentInfo", e);
              var _iterator28 = _createForOfIteratorHelper(t.getKeys()),
                _step28;
              try {
                for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {
                  var _a31 = _step28.value;
                  var _r29 = t.get(_a31);
                  switch (_a31) {
                    case "Title":
                    case "Author":
                    case "Subject":
                    case "Keywords":
                    case "Creator":
                    case "Producer":
                    case "CreationDate":
                    case "ModDate":
                      if ("string" == typeof _r29) {
                        e[_a31] = (0, i.stringToPDFString)(_r29);
                        continue;
                      }
                      break;
                    case "Trapped":
                      if (_r29 instanceof s.Name) {
                        e[_a31] = _r29;
                        continue;
                      }
                      break;
                    default:
                      var _t29 = void 0;
                      switch (typeof _r29) {
                        case "string":
                          _t29 = (0, i.stringToPDFString)(_r29);
                          break;
                        case "number":
                        case "boolean":
                          _t29 = _r29;
                          break;
                        default:
                          _r29 instanceof s.Name && (_t29 = _r29);
                      }
                      if (void 0 === _t29) {
                        (0, i.warn)("Bad value, for custom key \"".concat(_a31, "\", in Info: ").concat(_r29, "."));
                        continue;
                      }
                      e.Custom || (e.Custom = Object.create(null));
                      e.Custom[_a31] = _t29;
                      continue;
                  }
                  (0, i.warn)("Bad value, for key \"".concat(_a31, "\", in Info: ").concat(_r29, "."));
                }
              } catch (err) {
                _iterator28.e(err);
              } finally {
                _iterator28.f();
              }
              return (0, i.shadow)(this, "documentInfo", e);
            }
          }, {
            key: "fingerprints",
            get: function get() {
              function validate(e) {
                return "string" == typeof e && e.length > 0 && "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" !== e;
              }
              function hexString(e) {
                var t = [];
                var _iterator29 = _createForOfIteratorHelper(e),
                  _step29;
                try {
                  for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {
                    var _a32 = _step29.value;
                    var _e41 = _a32.toString(16);
                    t.push(_e41.padStart(2, "0"));
                  }
                } catch (err) {
                  _iterator29.e(err);
                } finally {
                  _iterator29.f();
                }
                return t.join("");
              }
              var e = this.xref.trailer.get("ID");
              var t, a;
              if (Array.isArray(e) && validate(e[0])) {
                t = (0, i.stringToBytes)(e[0]);
                e[1] !== e[0] && validate(e[1]) && (a = (0, i.stringToBytes)(e[1]));
              } else t = (0, l.calculateMD5)(this.stream.getByteRange(0, 1024), 0, 1024);
              return (0, i.shadow)(this, "fingerprints", [hexString(t), a ? hexString(a) : null]);
            }
          }, {
            key: "_getLinearizationPage",
            value: function () {
              var _getLinearizationPage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(e) {
                var t, a, r, n, _e42, _a33;
                return _regeneratorRuntime().wrap(function _callee12$(_context12) {
                  while (1) switch (_context12.prev = _context12.next) {
                    case 0:
                      t = this.catalog, a = this.linearization, r = this.xref, n = s.Ref.get(a.objectNumberFirst, 0);
                      _context12.prev = 1;
                      _context12.next = 4;
                      return r.fetchAsync(n);
                    case 4:
                      _e42 = _context12.sent;
                      if (!(_e42 instanceof s.Dict)) {
                        _context12.next = 16;
                        break;
                      }
                      _a33 = _e42.getRaw("Type");
                      _context12.t0 = _a33 instanceof s.Ref;
                      if (!_context12.t0) {
                        _context12.next = 12;
                        break;
                      }
                      _context12.next = 11;
                      return r.fetchAsync(_a33);
                    case 11:
                      _a33 = _context12.sent;
                    case 12:
                      if (!((0, s.isName)(_a33, "Page") || !_e42.has("Type") && !_e42.has("Kids"))) {
                        _context12.next = 16;
                        break;
                      }
                      t.pageKidsCountCache.has(n) || t.pageKidsCountCache.put(n, 1);
                      t.pageIndexCache.has(n) || t.pageIndexCache.put(n, 0);
                      return _context12.abrupt("return", [_e42, n]);
                    case 16:
                      throw new i.FormatError("The Linearization dictionary doesn't point to a valid Page dictionary.");
                    case 19:
                      _context12.prev = 19;
                      _context12.t1 = _context12["catch"](1);
                      (0, i.warn)("_getLinearizationPage: \"".concat(_context12.t1.message, "\"."));
                      return _context12.abrupt("return", t.getPageDict(e));
                    case 23:
                    case "end":
                      return _context12.stop();
                  }
                }, _callee12, this, [[1, 19]]);
              }));
              function _getLinearizationPage(_x23) {
                return _getLinearizationPage2.apply(this, arguments);
              }
              return _getLinearizationPage;
            }()
          }, {
            key: "getPage",
            value: function getPage(e) {
              var _this18 = this;
              var t = this._pagePromises.get(e);
              if (t) return t;
              var a = this.catalog,
                r = this.linearization,
                i = this.xfaFactory;
              var n;
              n = i ? Promise.resolve([s.Dict.empty, null]) : r && r.pageFirst === e ? this._getLinearizationPage(e) : a.getPageDict(e);
              n = n.then(function (_ref23) {
                var _ref24 = _slicedToArray(_ref23, 2),
                  t = _ref24[0],
                  r = _ref24[1];
                return new Page({
                  pdfManager: _this18.pdfManager,
                  xref: _this18.xref,
                  pageIndex: e,
                  pageDict: t,
                  ref: r,
                  globalIdFactory: _this18._globalIdFactory,
                  fontCache: a.fontCache,
                  builtInCMapCache: a.builtInCMapCache,
                  standardFontDataCache: a.standardFontDataCache,
                  globalImageCache: a.globalImageCache,
                  nonBlendModesSet: a.nonBlendModesSet,
                  xfaFactory: i
                });
              });
              this._pagePromises.set(e, n);
              return n;
            }
          }, {
            key: "checkFirstPage",
            value: function () {
              var _checkFirstPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {
                var e,
                  _args13 = arguments;
                return _regeneratorRuntime().wrap(function _callee13$(_context13) {
                  while (1) switch (_context13.prev = _context13.next) {
                    case 0:
                      e = _args13.length > 0 && _args13[0] !== undefined ? _args13[0] : !1;
                      if (e) {
                        _context13.next = 14;
                        break;
                      }
                      _context13.prev = 2;
                      _context13.next = 5;
                      return this.getPage(0);
                    case 5:
                      _context13.next = 14;
                      break;
                    case 7:
                      _context13.prev = 7;
                      _context13.t0 = _context13["catch"](2);
                      if (!(_context13.t0 instanceof n.XRefEntryException)) {
                        _context13.next = 14;
                        break;
                      }
                      this._pagePromises.delete(0);
                      _context13.next = 13;
                      return this.cleanup();
                    case 13:
                      throw new n.XRefParseException();
                    case 14:
                    case "end":
                      return _context13.stop();
                  }
                }, _callee13, this, [[2, 7]]);
              }));
              function checkFirstPage() {
                return _checkFirstPage.apply(this, arguments);
              }
              return checkFirstPage;
            }()
          }, {
            key: "checkLastPage",
            value: function () {
              var _checkLastPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
                var e,
                  t,
                  a,
                  r,
                  _o5,
                  _iterator30,
                  _step30,
                  _step30$value,
                  _e43,
                  _step30$value$,
                  _r30,
                  _i30,
                  _n11,
                  _args14 = arguments;
                return _regeneratorRuntime().wrap(function _callee14$(_context14) {
                  while (1) switch (_context14.prev = _context14.next) {
                    case 0:
                      e = _args14.length > 0 && _args14[0] !== undefined ? _args14[0] : !1;
                      t = this.catalog, a = this.pdfManager;
                      t.setActualNumPages();
                      _context14.prev = 3;
                      _context14.next = 6;
                      return Promise.all([a.ensureDoc("xfaFactory"), a.ensureDoc("linearization"), a.ensureCatalog("numPages")]);
                    case 6:
                      if (!this.xfaFactory) {
                        _context14.next = 8;
                        break;
                      }
                      return _context14.abrupt("return");
                    case 8:
                      r = this.linearization ? this.linearization.numPages : t.numPages;
                      if (Number.isInteger(r)) {
                        _context14.next = 11;
                        break;
                      }
                      throw new i.FormatError("Page count is not an integer.");
                    case 11:
                      if (!(r <= 1)) {
                        _context14.next = 13;
                        break;
                      }
                      return _context14.abrupt("return");
                    case 13:
                      _context14.next = 15;
                      return this.getPage(r - 1);
                    case 15:
                      _context14.next = 40;
                      break;
                    case 17:
                      _context14.prev = 17;
                      _context14.t0 = _context14["catch"](3);
                      this._pagePromises.delete(r - 1);
                      _context14.next = 22;
                      return this.cleanup();
                    case 22:
                      if (!(_context14.t0 instanceof n.XRefEntryException && !e)) {
                        _context14.next = 24;
                        break;
                      }
                      throw new n.XRefParseException();
                    case 24:
                      (0, i.warn)("checkLastPage - invalid /Pages tree /Count: ".concat(r, "."));
                      _context14.prev = 25;
                      _context14.next = 28;
                      return t.getAllPageDicts(e);
                    case 28:
                      _o5 = _context14.sent;
                      _context14.next = 37;
                      break;
                    case 31:
                      _context14.prev = 31;
                      _context14.t1 = _context14["catch"](25);
                      if (!(_context14.t1 instanceof n.XRefEntryException && !e)) {
                        _context14.next = 35;
                        break;
                      }
                      throw new n.XRefParseException();
                    case 35:
                      t.setActualNumPages(1);
                      return _context14.abrupt("return");
                    case 37:
                      _iterator30 = _createForOfIteratorHelper(_o5);
                      try {
                        for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {
                          _step30$value = _slicedToArray(_step30.value, 2), _e43 = _step30$value[0], _step30$value$ = _slicedToArray(_step30$value[1], 2), _r30 = _step30$value$[0], _i30 = _step30$value$[1];
                          _n11 = void 0;
                          if (_r30 instanceof Error) {
                            _n11 = Promise.reject(_r30);
                            _n11.catch(function () {});
                          } else _n11 = Promise.resolve(new Page({
                            pdfManager: a,
                            xref: this.xref,
                            pageIndex: _e43,
                            pageDict: _r30,
                            ref: _i30,
                            globalIdFactory: this._globalIdFactory,
                            fontCache: t.fontCache,
                            builtInCMapCache: t.builtInCMapCache,
                            standardFontDataCache: t.standardFontDataCache,
                            globalImageCache: t.globalImageCache,
                            nonBlendModesSet: t.nonBlendModesSet,
                            xfaFactory: null
                          }));
                          this._pagePromises.set(_e43, _n11);
                        }
                      } catch (err) {
                        _iterator30.e(err);
                      } finally {
                        _iterator30.f();
                      }
                      t.setActualNumPages(_o5.size);
                    case 40:
                    case "end":
                      return _context14.stop();
                  }
                }, _callee14, this, [[3, 17], [25, 31]]);
              }));
              function checkLastPage() {
                return _checkLastPage.apply(this, arguments);
              }
              return checkLastPage;
            }()
          }, {
            key: "fontFallback",
            value: function fontFallback(e, t) {
              return this.catalog.fontFallback(e, t);
            }
          }, {
            key: "cleanup",
            value: function () {
              var _cleanup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {
                var e,
                  _args15 = arguments;
                return _regeneratorRuntime().wrap(function _callee15$(_context15) {
                  while (1) switch (_context15.prev = _context15.next) {
                    case 0:
                      e = _args15.length > 0 && _args15[0] !== undefined ? _args15[0] : !1;
                      return _context15.abrupt("return", this.catalog ? this.catalog.cleanup(e) : (0, u.clearGlobalCaches)());
                    case 2:
                    case "end":
                      return _context15.stop();
                  }
                }, _callee15, this);
              }));
              function cleanup() {
                return _cleanup.apply(this, arguments);
              }
              return cleanup;
            }()
          }, {
            key: "_collectFieldObjects",
            value: function _collectFieldObjects(e, t, a) {
              var n = this.xref.fetchIfRef(t);
              if (n.has("T")) {
                var _t30 = (0, i.stringToPDFString)(n.get("T"));
                e = "" === e ? _t30 : "".concat(e, ".").concat(_t30);
              }
              a.has(e) || a.set(e, []);
              a.get(e).push(r.AnnotationFactory.create(this.xref, t, this.pdfManager, this._localIdFactory, !0).then(function (e) {
                return e && e.getFieldObject();
              }).catch(function (e) {
                (0, i.warn)("_collectFieldObjects: \"".concat(e, "\"."));
                return null;
              }));
              if (n.has("Kids")) {
                var _t31 = n.get("Kids");
                var _iterator31 = _createForOfIteratorHelper(_t31),
                  _step31;
                try {
                  for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {
                    var r = _step31.value;
                    this._collectFieldObjects(e, r, a);
                  }
                } catch (err) {
                  _iterator31.e(err);
                } finally {
                  _iterator31.f();
                }
              }
            }
          }, {
            key: "fieldObjects",
            get: function get() {
              if (!this.formInfo.hasFields) return (0, i.shadow)(this, "fieldObjects", Promise.resolve(null));
              var e = Object.create(null),
                t = new Map();
              var _iterator32 = _createForOfIteratorHelper(this.catalog.acroForm.get("Fields")),
                _step32;
              try {
                for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {
                  var _e44 = _step32.value;
                  this._collectFieldObjects("", _e44, t);
                }
              } catch (err) {
                _iterator32.e(err);
              } finally {
                _iterator32.f();
              }
              var a = [];
              var _iterator33 = _createForOfIteratorHelper(t),
                _step33;
              try {
                var _loop3 = function _loop3() {
                  var _step33$value = _slicedToArray(_step33.value, 2),
                    r = _step33$value[0],
                    i = _step33$value[1];
                  a.push(Promise.all(i).then(function (t) {
                    (t = t.filter(function (e) {
                      return !!e;
                    })).length > 0 && (e[r] = t);
                  }));
                };
                for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {
                  _loop3();
                }
              } catch (err) {
                _iterator33.e(err);
              } finally {
                _iterator33.f();
              }
              return (0, i.shadow)(this, "fieldObjects", Promise.all(a).then(function () {
                return e;
              }));
            }
          }, {
            key: "hasJSActions",
            get: function get() {
              var e = this.pdfManager.ensureDoc("_parseHasJSActions");
              return (0, i.shadow)(this, "hasJSActions", e);
            }
          }, {
            key: "_parseHasJSActions",
            value: function () {
              var _parseHasJSActions2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {
                var _yield$Promise$all3, _yield$Promise$all4, e, t;
                return _regeneratorRuntime().wrap(function _callee16$(_context16) {
                  while (1) switch (_context16.prev = _context16.next) {
                    case 0:
                      _context16.next = 2;
                      return Promise.all([this.pdfManager.ensureCatalog("jsActions"), this.pdfManager.ensureDoc("fieldObjects")]);
                    case 2:
                      _yield$Promise$all3 = _context16.sent;
                      _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 2);
                      e = _yield$Promise$all4[0];
                      t = _yield$Promise$all4[1];
                      return _context16.abrupt("return", !!e || !!t && Object.values(t).some(function (e) {
                        return e.some(function (e) {
                          return null !== e.actions;
                        });
                      }));
                    case 7:
                    case "end":
                      return _context16.stop();
                  }
                }, _callee16, this);
              }));
              function _parseHasJSActions() {
                return _parseHasJSActions2.apply(this, arguments);
              }
              return _parseHasJSActions;
            }()
          }, {
            key: "calculationOrderIds",
            get: function get() {
              var e = this.catalog.acroForm;
              if (!e || !e.has("CO")) return (0, i.shadow)(this, "calculationOrderIds", null);
              var t = e.get("CO");
              if (!Array.isArray(t) || 0 === t.length) return (0, i.shadow)(this, "calculationOrderIds", null);
              var a = [];
              var _iterator34 = _createForOfIteratorHelper(t),
                _step34;
              try {
                for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {
                  var _e45 = _step34.value;
                  _e45 instanceof s.Ref && a.push(_e45.toString());
                }
              } catch (err) {
                _iterator34.e(err);
              } finally {
                _iterator34.f();
              }
              return 0 === a.length ? (0, i.shadow)(this, "calculationOrderIds", null) : (0, i.shadow)(this, "calculationOrderIds", a);
            }
          }]);
          return PDFDocument;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.PopupAnnotation = t.MarkupAnnotation = t.AnnotationFactory = t.AnnotationBorderStyle = t.Annotation = void 0;
        t.getQuadPoints = getQuadPoints;
        var r = a(2),
          i = a(3),
          n = a(11),
          s = a(4),
          o = a(65),
          c = a(5),
          l = a(60),
          h = a(69),
          u = a(12),
          d = a(72),
          f = a(75),
          g = a(63),
          p = a(8),
          m = a(76);
        t.AnnotationFactory = /*#__PURE__*/function () {
          function AnnotationFactory() {
            _classCallCheck(this, AnnotationFactory);
          }
          _createClass(AnnotationFactory, null, [{
            key: "create",
            value: function create(e, t, a, r, i) {
              var _this19 = this;
              return Promise.all([a.ensureCatalog("acroForm"), a.ensureCatalog("baseUrl"), a.ensureCatalog("attachments"), a.ensureDoc("xfaDatasets"), i ? this._getPageIndex(e, t, a) : -1]).then(function (_ref25) {
                var _ref26 = _slicedToArray(_ref25, 5),
                  n = _ref26[0],
                  s = _ref26[1],
                  o = _ref26[2],
                  c = _ref26[3],
                  l = _ref26[4];
                return a.ensure(_this19, "_create", [e, t, a, r, n, o, c, i, l]);
              });
            }
          }, {
            key: "_create",
            value: function _create(e, t, a, n, o) {
              var c = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;
              var l = arguments.length > 6 ? arguments[6] : undefined;
              var h = arguments.length > 7 ? arguments[7] : undefined;
              var u = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : -1;
              var d = e.fetchIfRef(t);
              if (!(d instanceof s.Dict)) return;
              var f = t instanceof s.Ref ? t.toString() : "annot_".concat(n.createObjId());
              var g = d.get("Subtype");
              g = g instanceof s.Name ? g.name : null;
              var p = o instanceof s.Dict ? o : s.Dict.empty,
                m = {
                  xref: e,
                  ref: t,
                  dict: d,
                  subtype: g,
                  id: f,
                  pdfManager: a,
                  acroForm: p,
                  attachments: c,
                  xfaDatasets: l,
                  collectFields: h,
                  needAppearances: !h && !0 === p.get("NeedAppearances"),
                  pageIndex: u,
                  isOffscreenCanvasSupported: a.evaluatorOptions.isOffscreenCanvasSupported
                };
              switch (g) {
                case "Link":
                  return new LinkAnnotation(m);
                case "Text":
                  return new TextAnnotation(m);
                case "Widget":
                  var _e46 = (0, i.getInheritableProperty)({
                    dict: d,
                    key: "FT"
                  });
                  _e46 = _e46 instanceof s.Name ? _e46.name : null;
                  switch (_e46) {
                    case "Tx":
                      return new TextWidgetAnnotation(m);
                    case "Btn":
                      return new ButtonWidgetAnnotation(m);
                    case "Ch":
                      return new ChoiceWidgetAnnotation(m);
                    case "Sig":
                      return new SignatureWidgetAnnotation(m);
                  }
                  (0, r.warn)("Unimplemented widget field type \"".concat(_e46, "\", falling back to base field type."));
                  return new WidgetAnnotation(m);
                case "Popup":
                  return new PopupAnnotation(m);
                case "FreeText":
                  return new FreeTextAnnotation(m);
                case "Line":
                  return new LineAnnotation(m);
                case "Square":
                  return new SquareAnnotation(m);
                case "Circle":
                  return new CircleAnnotation(m);
                case "PolyLine":
                  return new PolylineAnnotation(m);
                case "Polygon":
                  return new PolygonAnnotation(m);
                case "Caret":
                  return new CaretAnnotation(m);
                case "Ink":
                  return new InkAnnotation(m);
                case "Highlight":
                  return new HighlightAnnotation(m);
                case "Underline":
                  return new UnderlineAnnotation(m);
                case "Squiggly":
                  return new SquigglyAnnotation(m);
                case "StrikeOut":
                  return new StrikeOutAnnotation(m);
                case "Stamp":
                  return new StampAnnotation(m);
                case "FileAttachment":
                  return new FileAttachmentAnnotation(m);
                default:
                  h || (g ? (0, r.warn)("Unimplemented annotation type \"".concat(g, "\", falling back to base annotation.")) : (0, r.warn)("Annotation is missing the required /Subtype."));
                  return new Annotation(m);
              }
            }
          }, {
            key: "_getPageIndex",
            value: function () {
              var _getPageIndex2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(e, t, a) {
                var _r31, _i31;
                return _regeneratorRuntime().wrap(function _callee17$(_context17) {
                  while (1) switch (_context17.prev = _context17.next) {
                    case 0:
                      _context17.prev = 0;
                      _context17.next = 3;
                      return e.fetchIfRefAsync(t);
                    case 3:
                      _r31 = _context17.sent;
                      if (_r31 instanceof s.Dict) {
                        _context17.next = 6;
                        break;
                      }
                      return _context17.abrupt("return", -1);
                    case 6:
                      _i31 = _r31.getRaw("P");
                      if (_i31 instanceof s.Ref) {
                        _context17.next = 9;
                        break;
                      }
                      return _context17.abrupt("return", -1);
                    case 9:
                      _context17.next = 11;
                      return a.ensureCatalog("getPageIndex", [_i31]);
                    case 11:
                      return _context17.abrupt("return", _context17.sent);
                    case 14:
                      _context17.prev = 14;
                      _context17.t0 = _context17["catch"](0);
                      (0, r.warn)("_getPageIndex: \"".concat(_context17.t0, "\"."));
                      return _context17.abrupt("return", -1);
                    case 18:
                    case "end":
                      return _context17.stop();
                  }
                }, _callee17, null, [[0, 14]]);
              }));
              function _getPageIndex(_x24, _x25, _x26) {
                return _getPageIndex2.apply(this, arguments);
              }
              return _getPageIndex;
            }()
          }, {
            key: "saveNewAnnotations",
            value: function () {
              var _saveNewAnnotations2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(e, t, a) {
                var i, n, c, l, _iterator35, _step35, _h, _e47, _t32;
                return _regeneratorRuntime().wrap(function _callee18$(_context18) {
                  while (1) switch (_context18.prev = _context18.next) {
                    case 0:
                      i = e.xref;
                      c = [], l = [];
                      _iterator35 = _createForOfIteratorHelper(a);
                      _context18.prev = 3;
                      _iterator35.s();
                    case 5:
                      if ((_step35 = _iterator35.n()).done) {
                        _context18.next = 16;
                        break;
                      }
                      _h = _step35.value;
                      _context18.t0 = _h.annotationType;
                      _context18.next = _context18.t0 === r.AnnotationEditorType.FREETEXT ? 10 : _context18.t0 === r.AnnotationEditorType.INK ? 13 : 14;
                      break;
                    case 10:
                      if (!n) {
                        _e47 = new s.Dict(i);
                        _e47.set("BaseFont", s.Name.get("Helvetica"));
                        _e47.set("Type", s.Name.get("Font"));
                        _e47.set("Subtype", s.Name.get("Type1"));
                        _e47.set("Encoding", s.Name.get("WinAnsiEncoding"));
                        _t32 = [];
                        n = i.getNewTemporaryRef();
                        (0, o.writeObject)(n, _e47, _t32, null);
                        c.push({
                          ref: n,
                          data: _t32.join("")
                        });
                      }
                      l.push(FreeTextAnnotation.createNewAnnotation(i, _h, c, {
                        evaluator: e,
                        task: t,
                        baseFontRef: n
                      }));
                      return _context18.abrupt("break", 14);
                    case 13:
                      l.push(InkAnnotation.createNewAnnotation(i, _h, c));
                    case 14:
                      _context18.next = 5;
                      break;
                    case 16:
                      _context18.next = 21;
                      break;
                    case 18:
                      _context18.prev = 18;
                      _context18.t1 = _context18["catch"](3);
                      _iterator35.e(_context18.t1);
                    case 21:
                      _context18.prev = 21;
                      _iterator35.f();
                      return _context18.finish(21);
                    case 24:
                      _context18.next = 26;
                      return Promise.all(l);
                    case 26:
                      _context18.t2 = _context18.sent;
                      _context18.t3 = c;
                      return _context18.abrupt("return", {
                        annotations: _context18.t2,
                        dependencies: _context18.t3
                      });
                    case 29:
                    case "end":
                      return _context18.stop();
                  }
                }, _callee18, null, [[3, 18, 21, 24]]);
              }));
              function saveNewAnnotations(_x27, _x28, _x29) {
                return _saveNewAnnotations2.apply(this, arguments);
              }
              return saveNewAnnotations;
            }()
          }, {
            key: "printNewAnnotations",
            value: function () {
              var _printNewAnnotations = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(e, t, a) {
                var i, n, s, _iterator36, _step36, _o6;
                return _regeneratorRuntime().wrap(function _callee19$(_context19) {
                  while (1) switch (_context19.prev = _context19.next) {
                    case 0:
                      if (a) {
                        _context19.next = 2;
                        break;
                      }
                      return _context19.abrupt("return", null);
                    case 2:
                      i = e.xref, n = e.options.isOffscreenCanvasSupported, s = [];
                      _iterator36 = _createForOfIteratorHelper(a);
                      _context19.prev = 4;
                      _iterator36.s();
                    case 6:
                      if ((_step36 = _iterator36.n()).done) {
                        _context19.next = 16;
                        break;
                      }
                      _o6 = _step36.value;
                      _context19.t0 = _o6.annotationType;
                      _context19.next = _context19.t0 === r.AnnotationEditorType.FREETEXT ? 11 : _context19.t0 === r.AnnotationEditorType.INK ? 13 : 14;
                      break;
                    case 11:
                      s.push(FreeTextAnnotation.createNewPrintAnnotation(i, _o6, {
                        evaluator: e,
                        task: t,
                        isOffscreenCanvasSupported: n
                      }));
                      return _context19.abrupt("break", 14);
                    case 13:
                      s.push(InkAnnotation.createNewPrintAnnotation(i, _o6, {
                        isOffscreenCanvasSupported: n
                      }));
                    case 14:
                      _context19.next = 6;
                      break;
                    case 16:
                      _context19.next = 21;
                      break;
                    case 18:
                      _context19.prev = 18;
                      _context19.t1 = _context19["catch"](4);
                      _iterator36.e(_context19.t1);
                    case 21:
                      _context19.prev = 21;
                      _iterator36.f();
                      return _context19.finish(21);
                    case 24:
                      return _context19.abrupt("return", Promise.all(s));
                    case 25:
                    case "end":
                      return _context19.stop();
                  }
                }, _callee19, null, [[4, 18, 21, 24]]);
              }));
              function printNewAnnotations(_x30, _x31, _x32) {
                return _printNewAnnotations.apply(this, arguments);
              }
              return printNewAnnotations;
            }()
          }]);
          return AnnotationFactory;
        }();
        function getRgbColor(e) {
          var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint8ClampedArray(3);
          if (!Array.isArray(e)) return t;
          var a = t || new Uint8ClampedArray(3);
          switch (e.length) {
            case 0:
              return null;
            case 1:
              u.ColorSpace.singletons.gray.getRgbItem(e, 0, a, 0);
              return a;
            case 3:
              u.ColorSpace.singletons.rgb.getRgbItem(e, 0, a, 0);
              return a;
            case 4:
              u.ColorSpace.singletons.cmyk.getRgbItem(e, 0, a, 0);
              return a;
            default:
              return t;
          }
        }
        function getPdfColorArray(e) {
          return Array.from(e, function (e) {
            return e / 255;
          });
        }
        function getQuadPoints(e, t) {
          var a = e.getArray("QuadPoints");
          if (!Array.isArray(a) || 0 === a.length || a.length % 8 > 0) return null;
          var r = [];
          for (var _e48 = 0, _i32 = a.length / 8; _e48 < _i32; _e48++) {
            var _i33 = 1 / 0,
              n = -1 / 0,
              _s9 = 1 / 0,
              _o7 = -1 / 0;
            for (var _t33 = 8 * _e48, _r32 = 8 * _e48 + 8; _t33 < _r32; _t33 += 2) {
              var _e49 = a[_t33],
                _r33 = a[_t33 + 1];
              _i33 = Math.min(_e49, _i33);
              n = Math.max(_e49, n);
              _s9 = Math.min(_r33, _s9);
              _o7 = Math.max(_r33, _o7);
            }
            if (null !== t && (_i33 < t[0] || n > t[2] || _s9 < t[1] || _o7 > t[3])) return null;
            r.push([{
              x: _i33,
              y: _o7
            }, {
              x: n,
              y: _o7
            }, {
              x: _i33,
              y: _s9
            }, {
              x: n,
              y: _s9
            }]);
          }
          return r;
        }
        function getTransformMatrix(e, t, a) {
          var _r$Util$getAxialAlign = r.Util.getAxialAlignedBoundingBox(t, a),
            _r$Util$getAxialAlign2 = _slicedToArray(_r$Util$getAxialAlign, 4),
            i = _r$Util$getAxialAlign2[0],
            n = _r$Util$getAxialAlign2[1],
            s = _r$Util$getAxialAlign2[2],
            o = _r$Util$getAxialAlign2[3];
          if (i === s || n === o) return [1, 0, 0, 1, e[0], e[1]];
          var c = (e[2] - e[0]) / (s - i),
            l = (e[3] - e[1]) / (o - n);
          return [c, 0, 0, l, e[0] - i * c, e[1] - n * l];
        }
        var Annotation = /*#__PURE__*/function () {
          function Annotation(e) {
            _classCallCheck(this, Annotation);
            var t = e.dict,
              a = e.xref;
            this.setTitle(t.get("T"));
            this.setContents(t.get("Contents"));
            this.setModificationDate(t.get("M"));
            this.setFlags(t.get("F"));
            this.setRectangle(t.getArray("Rect"));
            this.setColor(t.getArray("C"));
            this.setBorderStyle(t);
            this.setAppearance(t);
            this.setOptionalContent(t);
            var n = t.get("MK");
            this.setBorderAndBackgroundColors(n);
            this.setRotation(n);
            this._streams = [];
            this.appearance && this._streams.push(this.appearance);
            var o = !!(this.flags & r.AnnotationFlag.LOCKED),
              c = !!(this.flags & r.AnnotationFlag.LOCKEDCONTENTS);
            this.data = {
              annotationFlags: this.flags,
              borderStyle: this.borderStyle,
              color: this.color,
              backgroundColor: this.backgroundColor,
              borderColor: this.borderColor,
              rotation: this.rotation,
              contentsObj: this._contents,
              hasAppearance: !!this.appearance,
              id: e.id,
              modificationDate: this.modificationDate,
              rect: this.rectangle,
              subtype: e.subtype,
              hasOwnCanvas: !1,
              noRotate: !!(this.flags & r.AnnotationFlag.NOROTATE),
              noHTML: o && c
            };
            if (e.collectFields) {
              var _n12 = t.get("Kids");
              if (Array.isArray(_n12)) {
                var _e50 = [];
                var _iterator37 = _createForOfIteratorHelper(_n12),
                  _step37;
                try {
                  for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {
                    var _t34 = _step37.value;
                    _t34 instanceof s.Ref && _e50.push(_t34.toString());
                  }
                } catch (err) {
                  _iterator37.e(err);
                } finally {
                  _iterator37.f();
                }
                0 !== _e50.length && (this.data.kidIds = _e50);
              }
              this.data.actions = (0, i.collectActions)(a, t, r.AnnotationActionEventType);
              this.data.fieldName = this._constructFieldName(t);
              this.data.pageIndex = e.pageIndex;
            }
            this._isOffscreenCanvasSupported = e.isOffscreenCanvasSupported;
            this._fallbackFontDict = null;
            this._needAppearances = !1;
          }
          _createClass(Annotation, [{
            key: "_hasFlag",
            value: function _hasFlag(e, t) {
              return !!(e & t);
            }
          }, {
            key: "_isViewable",
            value: function _isViewable(e) {
              return !this._hasFlag(e, r.AnnotationFlag.INVISIBLE) && !this._hasFlag(e, r.AnnotationFlag.NOVIEW);
            }
          }, {
            key: "_isPrintable",
            value: function _isPrintable(e) {
              return this._hasFlag(e, r.AnnotationFlag.PRINT) && !this._hasFlag(e, r.AnnotationFlag.INVISIBLE);
            }
          }, {
            key: "mustBeViewed",
            value: function mustBeViewed(e) {
              var t = e && e.get(this.data.id);
              return t && void 0 !== t.hidden ? !t.hidden : this.viewable && !this._hasFlag(this.flags, r.AnnotationFlag.HIDDEN);
            }
          }, {
            key: "mustBePrinted",
            value: function mustBePrinted(e) {
              var t = e && e.get(this.data.id);
              return t && void 0 !== t.print ? t.print : this.printable;
            }
          }, {
            key: "viewable",
            get: function get() {
              return null !== this.data.quadPoints && (0 === this.flags || this._isViewable(this.flags));
            }
          }, {
            key: "printable",
            get: function get() {
              return null !== this.data.quadPoints && 0 !== this.flags && this._isPrintable(this.flags);
            }
          }, {
            key: "_parseStringHelper",
            value: function _parseStringHelper(e) {
              var t = "string" == typeof e ? (0, r.stringToPDFString)(e) : "";
              return {
                str: t,
                dir: t && "rtl" === (0, l.bidi)(t).dir ? "rtl" : "ltr"
              };
            }
          }, {
            key: "setDefaultAppearance",
            value: function setDefaultAppearance(e) {
              var t = (0, i.getInheritableProperty)({
                dict: e.dict,
                key: "DA"
              }) || e.acroForm.get("DA");
              this._defaultAppearance = "string" == typeof t ? t : "";
              this.data.defaultAppearanceData = (0, n.parseDefaultAppearance)(this._defaultAppearance);
            }
          }, {
            key: "setTitle",
            value: function setTitle(e) {
              this._title = this._parseStringHelper(e);
            }
          }, {
            key: "setContents",
            value: function setContents(e) {
              this._contents = this._parseStringHelper(e);
            }
          }, {
            key: "setModificationDate",
            value: function setModificationDate(e) {
              this.modificationDate = "string" == typeof e ? e : null;
            }
          }, {
            key: "setFlags",
            value: function setFlags(e) {
              this.flags = Number.isInteger(e) && e > 0 ? e : 0;
            }
          }, {
            key: "hasFlag",
            value: function hasFlag(e) {
              return this._hasFlag(this.flags, e);
            }
          }, {
            key: "setRectangle",
            value: function setRectangle(e) {
              Array.isArray(e) && 4 === e.length ? this.rectangle = r.Util.normalizeRect(e) : this.rectangle = [0, 0, 0, 0];
            }
          }, {
            key: "setColor",
            value: function setColor(e) {
              this.color = getRgbColor(e);
            }
          }, {
            key: "setLineEndings",
            value: function setLineEndings(e) {
              this.lineEndings = ["None", "None"];
              if (Array.isArray(e) && 2 === e.length) for (var _t35 = 0; _t35 < 2; _t35++) {
                var _a34 = e[_t35];
                if (_a34 instanceof s.Name) switch (_a34.name) {
                  case "None":
                    continue;
                  case "Square":
                  case "Circle":
                  case "Diamond":
                  case "OpenArrow":
                  case "ClosedArrow":
                  case "Butt":
                  case "ROpenArrow":
                  case "RClosedArrow":
                  case "Slash":
                    this.lineEndings[_t35] = _a34.name;
                    continue;
                }
                (0, r.warn)("Ignoring invalid lineEnding: ".concat(_a34));
              }
            }
          }, {
            key: "setRotation",
            value: function setRotation(e) {
              this.rotation = 0;
              if (e instanceof s.Dict) {
                var _t36 = e.get("R") || 0;
                if (Number.isInteger(_t36) && 0 !== _t36) {
                  _t36 %= 360;
                  _t36 < 0 && (_t36 += 360);
                  _t36 % 90 == 0 && (this.rotation = _t36);
                }
              }
            }
          }, {
            key: "setBorderAndBackgroundColors",
            value: function setBorderAndBackgroundColors(e) {
              if (e instanceof s.Dict) {
                this.borderColor = getRgbColor(e.getArray("BC"), null);
                this.backgroundColor = getRgbColor(e.getArray("BG"), null);
              } else this.borderColor = this.backgroundColor = null;
            }
          }, {
            key: "setBorderStyle",
            value: function setBorderStyle(e) {
              this.borderStyle = new AnnotationBorderStyle();
              if (e instanceof s.Dict) if (e.has("BS")) {
                var _t37 = e.get("BS"),
                  _a35 = _t37.get("Type");
                if (!_a35 || (0, s.isName)(_a35, "Border")) {
                  this.borderStyle.setWidth(_t37.get("W"), this.rectangle);
                  this.borderStyle.setStyle(_t37.get("S"));
                  this.borderStyle.setDashArray(_t37.getArray("D"));
                }
              } else if (e.has("Border")) {
                var _t38 = e.getArray("Border");
                if (Array.isArray(_t38) && _t38.length >= 3) {
                  this.borderStyle.setHorizontalCornerRadius(_t38[0]);
                  this.borderStyle.setVerticalCornerRadius(_t38[1]);
                  this.borderStyle.setWidth(_t38[2], this.rectangle);
                  4 === _t38.length && this.borderStyle.setDashArray(_t38[3], !0);
                }
              } else this.borderStyle.setWidth(0);
            }
          }, {
            key: "setAppearance",
            value: function setAppearance(e) {
              this.appearance = null;
              var t = e.get("AP");
              if (!(t instanceof s.Dict)) return;
              var a = t.get("N");
              if (a instanceof c.BaseStream) {
                this.appearance = a;
                return;
              }
              if (!(a instanceof s.Dict)) return;
              var r = e.get("AS");
              if (!(r instanceof s.Name && a.has(r.name))) return;
              var i = a.get(r.name);
              i instanceof c.BaseStream && (this.appearance = i);
            }
          }, {
            key: "setOptionalContent",
            value: function setOptionalContent(e) {
              this.oc = null;
              var t = e.get("OC");
              t instanceof s.Name ? (0, r.warn)("setOptionalContent: Support for /Name-entry is not implemented.") : t instanceof s.Dict && (this.oc = t);
            }
          }, {
            key: "loadResources",
            value: function loadResources(e, t) {
              return t.dict.getAsync("Resources").then(function (t) {
                if (!t) return;
                return new f.ObjectLoader(t, e, t.xref).load().then(function () {
                  return t;
                });
              });
            }
          }, {
            key: "getOperatorList",
            value: function () {
              var _getOperatorList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(e, t, a, i, n) {
                var o, c, l, h, u, d, f, m, b, y;
                return _regeneratorRuntime().wrap(function _callee20$(_context20) {
                  while (1) switch (_context20.prev = _context20.next) {
                    case 0:
                      o = this.data;
                      c = this.appearance;
                      l = !!(this.data.hasOwnCanvas && a & r.RenderingIntentFlag.DISPLAY);
                      if (c) {
                        _context20.next = 8;
                        break;
                      }
                      if (l) {
                        _context20.next = 6;
                        break;
                      }
                      return _context20.abrupt("return", {
                        opList: new g.OperatorList(),
                        separateForm: !1,
                        separateCanvas: !1
                      });
                    case 6:
                      c = new p.StringStream("");
                      c.dict = new s.Dict();
                    case 8:
                      h = c.dict;
                      _context20.next = 11;
                      return this.loadResources(["ExtGState", "ColorSpace", "Pattern", "Shading", "XObject", "Font"], c);
                    case 11:
                      u = _context20.sent;
                      d = h.getArray("BBox") || [0, 0, 1, 1];
                      f = h.getArray("Matrix") || [1, 0, 0, 1, 0, 0];
                      m = getTransformMatrix(o.rect, d, f);
                      b = new g.OperatorList();
                      _context20.t0 = this.oc;
                      if (!_context20.t0) {
                        _context20.next = 21;
                        break;
                      }
                      _context20.next = 20;
                      return e.parseMarkedContentProps(this.oc, null);
                    case 20:
                      y = _context20.sent;
                    case 21:
                      void 0 !== y && b.addOp(r.OPS.beginMarkedContentProps, ["OC", y]);
                      b.addOp(r.OPS.beginAnnotation, [o.id, o.rect, m, f, l]);
                      _context20.next = 25;
                      return e.getOperatorList({
                        stream: c,
                        task: t,
                        resources: u,
                        operatorList: b,
                        fallbackFontDict: this._fallbackFontDict
                      });
                    case 25:
                      b.addOp(r.OPS.endAnnotation, []);
                      void 0 !== y && b.addOp(r.OPS.endMarkedContent, []);
                      this.reset();
                      return _context20.abrupt("return", {
                        opList: b,
                        separateForm: !1,
                        separateCanvas: l
                      });
                    case 29:
                    case "end":
                      return _context20.stop();
                  }
                }, _callee20, this);
              }));
              function getOperatorList(_x33, _x34, _x35, _x36, _x37) {
                return _getOperatorList.apply(this, arguments);
              }
              return getOperatorList;
            }()
          }, {
            key: "save",
            value: function () {
              var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(e, t, a) {
                return _regeneratorRuntime().wrap(function _callee21$(_context21) {
                  while (1) switch (_context21.prev = _context21.next) {
                    case 0:
                      return _context21.abrupt("return", null);
                    case 1:
                    case "end":
                      return _context21.stop();
                  }
                }, _callee21);
              }));
              function save(_x38, _x39, _x40) {
                return _save.apply(this, arguments);
              }
              return save;
            }()
          }, {
            key: "hasTextContent",
            get: function get() {
              return !1;
            }
          }, {
            key: "extractTextContent",
            value: function () {
              var _extractTextContent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(e, t, a) {
                var r, i, n, s;
                return _regeneratorRuntime().wrap(function _callee22$(_context22) {
                  while (1) switch (_context22.prev = _context22.next) {
                    case 0:
                      if (this.appearance) {
                        _context22.next = 2;
                        break;
                      }
                      return _context22.abrupt("return");
                    case 2:
                      _context22.next = 4;
                      return this.loadResources(["ExtGState", "Font", "Properties", "XObject"], this.appearance);
                    case 4:
                      r = _context22.sent;
                      i = [];
                      n = [];
                      s = {
                        desiredSize: Math.Infinity,
                        ready: !0,
                        enqueue: function enqueue(e, t) {
                          var _iterator38 = _createForOfIteratorHelper(e.items),
                            _step38;
                          try {
                            for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {
                              var _t39 = _step38.value;
                              n.push(_t39.str);
                              if (_t39.hasEOL) {
                                i.push(n.join(""));
                                n.length = 0;
                              }
                            }
                          } catch (err) {
                            _iterator38.e(err);
                          } finally {
                            _iterator38.f();
                          }
                        }
                      };
                      _context22.next = 10;
                      return e.getTextContent({
                        stream: this.appearance,
                        task: t,
                        resources: r,
                        includeMarkedContent: !0,
                        sink: s,
                        viewBox: a
                      });
                    case 10:
                      this.reset();
                      n.length && i.push(n.join(""));
                      i.length > 0 && (this.data.textContent = i);
                    case 13:
                    case "end":
                      return _context22.stop();
                  }
                }, _callee22, this);
              }));
              function extractTextContent(_x41, _x42, _x43) {
                return _extractTextContent.apply(this, arguments);
              }
              return extractTextContent;
            }()
          }, {
            key: "getFieldObject",
            value: function getFieldObject() {
              return this.data.kidIds ? {
                id: this.data.id,
                actions: this.data.actions,
                name: this.data.fieldName,
                strokeColor: this.data.borderColor,
                fillColor: this.data.backgroundColor,
                type: "",
                kidIds: this.data.kidIds,
                page: this.data.pageIndex,
                rotation: this.rotation
              } : null;
            }
          }, {
            key: "reset",
            value: function reset() {
              var _iterator39 = _createForOfIteratorHelper(this._streams),
                _step39;
              try {
                for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {
                  var _e51 = _step39.value;
                  _e51.reset();
                }
              } catch (err) {
                _iterator39.e(err);
              } finally {
                _iterator39.f();
              }
            }
          }, {
            key: "_constructFieldName",
            value: function _constructFieldName(e) {
              if (!e.has("T") && !e.has("Parent")) {
                (0, r.warn)("Unknown field name, falling back to empty field name.");
                return "";
              }
              if (!e.has("Parent")) return (0, r.stringToPDFString)(e.get("T"));
              var t = [];
              e.has("T") && t.unshift((0, r.stringToPDFString)(e.get("T")));
              var a = e;
              var i = new s.RefSet();
              e.objId && i.put(e.objId);
              for (; a.has("Parent");) {
                a = a.get("Parent");
                if (!(a instanceof s.Dict) || a.objId && i.has(a.objId)) break;
                a.objId && i.put(a.objId);
                if (a.has("T")) {
                  var _e52 = (0, r.stringToPDFString)(a.get("T"));
                  _e52.startsWith("#") || t.unshift(_e52);
                }
              }
              return t.join(".");
            }
          }]);
          return Annotation;
        }();
        t.Annotation = Annotation;
        var AnnotationBorderStyle = /*#__PURE__*/function () {
          function AnnotationBorderStyle() {
            _classCallCheck(this, AnnotationBorderStyle);
            this.width = 1;
            this.style = r.AnnotationBorderStyleType.SOLID;
            this.dashArray = [3];
            this.horizontalCornerRadius = 0;
            this.verticalCornerRadius = 0;
          }
          _createClass(AnnotationBorderStyle, [{
            key: "setWidth",
            value: function setWidth(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0, 0];
              if (e instanceof s.Name) this.width = 0;else if ("number" == typeof e) {
                if (e > 0) {
                  var _a36 = (t[2] - t[0]) / 2,
                    _i34 = (t[3] - t[1]) / 2;
                  if (_a36 > 0 && _i34 > 0 && (e > _a36 || e > _i34)) {
                    (0, r.warn)("AnnotationBorderStyle.setWidth - ignoring width: ".concat(e));
                    e = 1;
                  }
                }
                this.width = e;
              }
            }
          }, {
            key: "setStyle",
            value: function setStyle(e) {
              if (e instanceof s.Name) switch (e.name) {
                case "S":
                  this.style = r.AnnotationBorderStyleType.SOLID;
                  break;
                case "D":
                  this.style = r.AnnotationBorderStyleType.DASHED;
                  break;
                case "B":
                  this.style = r.AnnotationBorderStyleType.BEVELED;
                  break;
                case "I":
                  this.style = r.AnnotationBorderStyleType.INSET;
                  break;
                case "U":
                  this.style = r.AnnotationBorderStyleType.UNDERLINE;
              }
            }
          }, {
            key: "setDashArray",
            value: function setDashArray(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
              if (Array.isArray(e) && e.length > 0) {
                var _a37 = !0,
                  _r34 = !0;
                var _iterator40 = _createForOfIteratorHelper(e),
                  _step40;
                try {
                  for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {
                    var _t40 = _step40.value;
                    if (!(+_t40 >= 0)) {
                      _a37 = !1;
                      break;
                    }
                    _t40 > 0 && (_r34 = !1);
                  }
                } catch (err) {
                  _iterator40.e(err);
                } finally {
                  _iterator40.f();
                }
                if (_a37 && !_r34) {
                  this.dashArray = e;
                  t && this.setStyle(s.Name.get("D"));
                } else this.width = 0;
              } else e && (this.width = 0);
            }
          }, {
            key: "setHorizontalCornerRadius",
            value: function setHorizontalCornerRadius(e) {
              Number.isInteger(e) && (this.horizontalCornerRadius = e);
            }
          }, {
            key: "setVerticalCornerRadius",
            value: function setVerticalCornerRadius(e) {
              Number.isInteger(e) && (this.verticalCornerRadius = e);
            }
          }]);
          return AnnotationBorderStyle;
        }();
        t.AnnotationBorderStyle = AnnotationBorderStyle;
        var MarkupAnnotation = /*#__PURE__*/function (_Annotation) {
          _inherits(MarkupAnnotation, _Annotation);
          var _super19 = _createSuper(MarkupAnnotation);
          function MarkupAnnotation(e) {
            var _this20;
            _classCallCheck(this, MarkupAnnotation);
            _this20 = _super19.call(this, e);
            var t = e.dict;
            if (t.has("IRT")) {
              var _e53 = t.getRaw("IRT");
              _this20.data.inReplyTo = _e53 instanceof s.Ref ? _e53.toString() : null;
              var _a38 = t.get("RT");
              _this20.data.replyType = _a38 instanceof s.Name ? _a38.name : r.AnnotationReplyType.REPLY;
            }
            if (_this20.data.replyType === r.AnnotationReplyType.GROUP) {
              var _e54 = t.get("IRT");
              _this20.setTitle(_e54.get("T"));
              _this20.data.titleObj = _this20._title;
              _this20.setContents(_e54.get("Contents"));
              _this20.data.contentsObj = _this20._contents;
              if (_e54.has("CreationDate")) {
                _this20.setCreationDate(_e54.get("CreationDate"));
                _this20.data.creationDate = _this20.creationDate;
              } else _this20.data.creationDate = null;
              if (_e54.has("M")) {
                _this20.setModificationDate(_e54.get("M"));
                _this20.data.modificationDate = _this20.modificationDate;
              } else _this20.data.modificationDate = null;
              _this20.data.hasPopup = _e54.has("Popup");
              if (_e54.has("C")) {
                _this20.setColor(_e54.getArray("C"));
                _this20.data.color = _this20.color;
              } else _this20.data.color = null;
            } else {
              _this20.data.titleObj = _this20._title;
              _this20.setCreationDate(t.get("CreationDate"));
              _this20.data.creationDate = _this20.creationDate;
              _this20.data.hasPopup = t.has("Popup");
              t.has("C") || (_this20.data.color = null);
            }
            t.has("RC") && (_this20.data.richText = m.XFAFactory.getRichTextAsHtml(t.get("RC")));
            return _this20;
          }
          _createClass(MarkupAnnotation, [{
            key: "setCreationDate",
            value: function setCreationDate(e) {
              this.creationDate = "string" == typeof e ? e : null;
            }
          }, {
            key: "_setDefaultAppearance",
            value: function _setDefaultAppearance(_ref27) {
              var e = _ref27.xref,
                t = _ref27.extra,
                a = _ref27.strokeColor,
                r = _ref27.fillColor,
                i = _ref27.blendMode,
                n = _ref27.strokeAlpha,
                o = _ref27.fillAlpha,
                c = _ref27.pointsCallback;
              var l = Number.MAX_VALUE,
                h = Number.MAX_VALUE,
                u = Number.MIN_VALUE,
                d = Number.MIN_VALUE;
              var f = ["q"];
              t && f.push(t);
              a && f.push("".concat(a[0], " ").concat(a[1], " ").concat(a[2], " RG"));
              r && f.push("".concat(r[0], " ").concat(r[1], " ").concat(r[2], " rg"));
              var g = this.data.quadPoints;
              g || (g = [[{
                x: this.rectangle[0],
                y: this.rectangle[3]
              }, {
                x: this.rectangle[2],
                y: this.rectangle[3]
              }, {
                x: this.rectangle[0],
                y: this.rectangle[1]
              }, {
                x: this.rectangle[2],
                y: this.rectangle[1]
              }]]);
              var _iterator41 = _createForOfIteratorHelper(g),
                _step41;
              try {
                for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {
                  var _e55 = _step41.value;
                  var _c4 = c(f, _e55),
                    _c5 = _slicedToArray(_c4, 4),
                    _t41 = _c5[0],
                    _a39 = _c5[1],
                    _r35 = _c5[2],
                    _i35 = _c5[3];
                  l = Math.min(l, _t41);
                  u = Math.max(u, _a39);
                  h = Math.min(h, _r35);
                  d = Math.max(d, _i35);
                }
              } catch (err) {
                _iterator41.e(err);
              } finally {
                _iterator41.f();
              }
              f.push("Q");
              var m = new s.Dict(e),
                b = new s.Dict(e);
              b.set("Subtype", s.Name.get("Form"));
              var y = new p.StringStream(f.join(" "));
              y.dict = b;
              m.set("Fm0", y);
              var w = new s.Dict(e);
              i && w.set("BM", s.Name.get(i));
              "number" == typeof n && w.set("CA", n);
              "number" == typeof o && w.set("ca", o);
              var S = new s.Dict(e);
              S.set("GS0", w);
              var x = new s.Dict(e);
              x.set("ExtGState", S);
              x.set("XObject", m);
              var C = new s.Dict(e);
              C.set("Resources", x);
              var k = this.data.rect = [l, h, u, d];
              C.set("BBox", k);
              this.appearance = new p.StringStream("/GS0 gs /Fm0 Do");
              this.appearance.dict = C;
              this._streams.push(this.appearance, y);
            }
          }], [{
            key: "createNewAnnotation",
            value: function () {
              var _createNewAnnotation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(e, t, a, r) {
                var i, n, s, c, _r36, _i36, l;
                return _regeneratorRuntime().wrap(function _callee23$(_context23) {
                  while (1) switch (_context23.prev = _context23.next) {
                    case 0:
                      i = e.getNewTemporaryRef();
                      _context23.next = 3;
                      return this.createNewAppearanceStream(t, e, r);
                    case 3:
                      n = _context23.sent;
                      s = [];
                      if (n) {
                        _r36 = e.getNewTemporaryRef();
                        c = this.createNewDict(t, e, {
                          apRef: _r36
                        });
                        _i36 = e.encrypt ? e.encrypt.createCipherTransform(_r36.num, _r36.gen) : null;
                        (0, o.writeObject)(_r36, n, s, _i36);
                        a.push({
                          ref: _r36,
                          data: s.join("")
                        });
                      } else c = this.createNewDict(t, e, {});
                      s.length = 0;
                      l = e.encrypt ? e.encrypt.createCipherTransform(i.num, i.gen) : null;
                      (0, o.writeObject)(i, c, s, l);
                      return _context23.abrupt("return", {
                        ref: i,
                        data: s.join("")
                      });
                    case 10:
                    case "end":
                      return _context23.stop();
                  }
                }, _callee23, this);
              }));
              function createNewAnnotation(_x44, _x45, _x46, _x47) {
                return _createNewAnnotation.apply(this, arguments);
              }
              return createNewAnnotation;
            }()
          }, {
            key: "createNewPrintAnnotation",
            value: function () {
              var _createNewPrintAnnotation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(e, t, a) {
                var r, i;
                return _regeneratorRuntime().wrap(function _callee24$(_context24) {
                  while (1) switch (_context24.prev = _context24.next) {
                    case 0:
                      _context24.next = 2;
                      return this.createNewAppearanceStream(t, e, a);
                    case 2:
                      r = _context24.sent;
                      i = this.createNewDict(t, e, {
                        ap: r
                      });
                      return _context24.abrupt("return", new this.prototype.constructor({
                        dict: i,
                        xref: e,
                        isOffscreenCanvasSupported: a.isOffscreenCanvasSupported
                      }));
                    case 5:
                    case "end":
                      return _context24.stop();
                  }
                }, _callee24, this);
              }));
              function createNewPrintAnnotation(_x48, _x49, _x50) {
                return _createNewPrintAnnotation.apply(this, arguments);
              }
              return createNewPrintAnnotation;
            }()
          }]);
          return MarkupAnnotation;
        }(Annotation);
        t.MarkupAnnotation = MarkupAnnotation;
        var WidgetAnnotation = /*#__PURE__*/function (_Annotation2) {
          _inherits(WidgetAnnotation, _Annotation2);
          var _super20 = _createSuper(WidgetAnnotation);
          function WidgetAnnotation(e) {
            var _this21;
            _classCallCheck(this, WidgetAnnotation);
            _this21 = _super20.call(this, e);
            var t = e.dict,
              a = e.xref,
              n = _this21.data;
            _this21.ref = e.ref;
            _this21._needAppearances = e.needAppearances;
            n.annotationType = r.AnnotationType.WIDGET;
            void 0 === n.fieldName && (n.fieldName = _this21._constructFieldName(t));
            void 0 === n.actions && (n.actions = (0, i.collectActions)(a, t, r.AnnotationActionEventType));
            var o = (0, i.getInheritableProperty)({
              dict: t,
              key: "V",
              getArray: !0
            });
            n.fieldValue = _this21._decodeFormValue(o);
            var c = (0, i.getInheritableProperty)({
              dict: t,
              key: "DV",
              getArray: !0
            });
            n.defaultFieldValue = _this21._decodeFormValue(c);
            if (void 0 === o && e.xfaDatasets) {
              var _t42 = _this21._title.str;
              if (_t42) {
                _this21._hasValueFromXFA = !0;
                n.fieldValue = o = e.xfaDatasets.getValue(_t42);
              }
            }
            void 0 === o && null !== n.defaultFieldValue && (n.fieldValue = n.defaultFieldValue);
            n.alternativeText = (0, r.stringToPDFString)(t.get("TU") || "");
            _this21.setDefaultAppearance(e);
            n.hasAppearance || (n.hasAppearance = _this21._needAppearances && void 0 !== n.fieldValue && null !== n.fieldValue);
            var l = (0, i.getInheritableProperty)({
              dict: t,
              key: "FT"
            });
            n.fieldType = l instanceof s.Name ? l.name : null;
            var h = (0, i.getInheritableProperty)({
                dict: t,
                key: "DR"
              }),
              u = e.acroForm.get("DR"),
              d = _this21.appearance && _this21.appearance.dict.get("Resources");
            _this21._fieldResources = {
              localResources: h,
              acroFormResources: u,
              appearanceResources: d,
              mergedResources: s.Dict.merge({
                xref: a,
                dictArray: [h, d, u],
                mergeSubDicts: !0
              })
            };
            n.fieldFlags = (0, i.getInheritableProperty)({
              dict: t,
              key: "Ff"
            });
            (!Number.isInteger(n.fieldFlags) || n.fieldFlags < 0) && (n.fieldFlags = 0);
            n.readOnly = _this21.hasFieldFlag(r.AnnotationFieldFlag.READONLY);
            n.required = _this21.hasFieldFlag(r.AnnotationFieldFlag.REQUIRED);
            n.hidden = _this21._hasFlag(n.annotationFlags, r.AnnotationFlag.HIDDEN);
            return _this21;
          }
          _createClass(WidgetAnnotation, [{
            key: "_decodeFormValue",
            value: function _decodeFormValue(e) {
              return Array.isArray(e) ? e.filter(function (e) {
                return "string" == typeof e;
              }).map(function (e) {
                return (0, r.stringToPDFString)(e);
              }) : e instanceof s.Name ? (0, r.stringToPDFString)(e.name) : "string" == typeof e ? (0, r.stringToPDFString)(e) : null;
            }
          }, {
            key: "hasFieldFlag",
            value: function hasFieldFlag(e) {
              return !!(this.data.fieldFlags & e);
            }
          }, {
            key: "getRotationMatrix",
            value: function getRotationMatrix(e) {
              var t = e ? e.get(this.data.id) : void 0;
              var a = t && t.rotation;
              void 0 === a && (a = this.rotation);
              if (0 === a) return r.IDENTITY_MATRIX;
              var n = this.data.rect[2] - this.data.rect[0],
                s = this.data.rect[3] - this.data.rect[1];
              return (0, i.getRotationMatrix)(a, n, s);
            }
          }, {
            key: "getBorderAndBackgroundAppearances",
            value: function getBorderAndBackgroundAppearances(e) {
              var t = e ? e.get(this.data.id) : void 0;
              var a = t && t.rotation;
              void 0 === a && (a = this.rotation);
              if (!this.backgroundColor && !this.borderColor) return "";
              var r = this.data.rect[2] - this.data.rect[0],
                i = this.data.rect[3] - this.data.rect[1],
                s = 0 === a || 180 === a ? "0 0 ".concat(r, " ").concat(i, " re") : "0 0 ".concat(i, " ").concat(r, " re");
              var o = "";
              this.backgroundColor && (o = "".concat((0, n.getPdfColor)(this.backgroundColor, !0), " ").concat(s, " f "));
              if (this.borderColor) {
                o += "".concat(this.borderStyle.width || 1, " w ").concat((0, n.getPdfColor)(this.borderColor, !1), " ").concat(s, " S ");
              }
              return o;
            }
          }, {
            key: "getOperatorList",
            value: function () {
              var _getOperatorList2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(e, t, a, i, n) {
                var s, o, c, l, h, u;
                return _regeneratorRuntime().wrap(function _callee25$(_context25) {
                  while (1) switch (_context25.prev = _context25.next) {
                    case 0:
                      if (!(i && !(this instanceof SignatureWidgetAnnotation) && !this.data.noHTML && !this.data.hasOwnCanvas)) {
                        _context25.next = 2;
                        break;
                      }
                      return _context25.abrupt("return", {
                        opList: new g.OperatorList(),
                        separateForm: !0,
                        separateCanvas: !1
                      });
                    case 2:
                      if (this._hasText) {
                        _context25.next = 4;
                        break;
                      }
                      return _context25.abrupt("return", _get(_getPrototypeOf(WidgetAnnotation.prototype), "getOperatorList", this).call(this, e, t, a, i, n));
                    case 4:
                      _context25.next = 6;
                      return this._getAppearance(e, t, a, n);
                    case 6:
                      s = _context25.sent;
                      if (!(this.appearance && null === s)) {
                        _context25.next = 9;
                        break;
                      }
                      return _context25.abrupt("return", _get(_getPrototypeOf(WidgetAnnotation.prototype), "getOperatorList", this).call(this, e, t, a, i, n));
                    case 9:
                      o = new g.OperatorList();
                      if (!(!this._defaultAppearance || null === s)) {
                        _context25.next = 12;
                        break;
                      }
                      return _context25.abrupt("return", {
                        opList: o,
                        separateForm: !1,
                        separateCanvas: !1
                      });
                    case 12:
                      c = [0, 0, this.data.rect[2] - this.data.rect[0], this.data.rect[3] - this.data.rect[1]], l = getTransformMatrix(this.data.rect, c, [1, 0, 0, 1, 0, 0]);
                      _context25.t0 = this.oc;
                      if (!_context25.t0) {
                        _context25.next = 18;
                        break;
                      }
                      _context25.next = 17;
                      return e.parseMarkedContentProps(this.oc, null);
                    case 17:
                      h = _context25.sent;
                    case 18:
                      void 0 !== h && o.addOp(r.OPS.beginMarkedContentProps, ["OC", h]);
                      o.addOp(r.OPS.beginAnnotation, [this.data.id, this.data.rect, l, this.getRotationMatrix(n), !1]);
                      u = new p.StringStream(s);
                      _context25.next = 23;
                      return e.getOperatorList({
                        stream: u,
                        task: t,
                        resources: this._fieldResources.mergedResources,
                        operatorList: o
                      });
                    case 23:
                      o.addOp(r.OPS.endAnnotation, []);
                      void 0 !== h && o.addOp(r.OPS.endMarkedContent, []);
                      return _context25.abrupt("return", {
                        opList: o,
                        separateForm: !1,
                        separateCanvas: !1
                      });
                    case 26:
                    case "end":
                      return _context25.stop();
                  }
                }, _callee25, this);
              }));
              function getOperatorList(_x51, _x52, _x53, _x54, _x55) {
                return _getOperatorList2.apply(this, arguments);
              }
              return getOperatorList;
            }()
          }, {
            key: "_getMKDict",
            value: function _getMKDict(e) {
              var t = new s.Dict(null);
              e && t.set("R", e);
              this.borderColor && t.set("BC", getPdfColorArray(this.borderColor));
              this.backgroundColor && t.set("BG", getPdfColorArray(this.backgroundColor));
              return t.size > 0 ? t : null;
            }
          }, {
            key: "amendSavedDict",
            value: function amendSavedDict(e, t) {}
          }, {
            key: "save",
            value: function () {
              var _save2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(e, t, a) {
                var _this22 = this;
                var n, c, l, h, u, d, f, g, _iterator42, _step42, _e57, m, encoder, b, y, w, S, x, _e56, _t43, _i37, _n13, _c6, _l3, _u;
                return _regeneratorRuntime().wrap(function _callee26$(_context26) {
                  while (1) switch (_context26.prev = _context26.next) {
                    case 0:
                      n = a ? a.get(this.data.id) : void 0;
                      c = n && n.value, l = n && n.rotation;
                      if (!(c === this.data.fieldValue || void 0 === c)) {
                        _context26.next = 6;
                        break;
                      }
                      if (!(!this._hasValueFromXFA && void 0 === l)) {
                        _context26.next = 5;
                        break;
                      }
                      return _context26.abrupt("return", null);
                    case 5:
                      c || (c = this.data.fieldValue);
                    case 6:
                      if (!(void 0 === l && !this._hasValueFromXFA && Array.isArray(c) && Array.isArray(this.data.fieldValue) && c.length === this.data.fieldValue.length && c.every(function (e, t) {
                        return e === _this22.data.fieldValue[t];
                      }))) {
                        _context26.next = 8;
                        break;
                      }
                      return _context26.abrupt("return", null);
                    case 8:
                      void 0 === l && (l = this.rotation);
                      h = null;
                      if (this._needAppearances) {
                        _context26.next = 16;
                        break;
                      }
                      _context26.next = 13;
                      return this._getAppearance(e, t, r.RenderingIntentFlag.SAVE, a);
                    case 13:
                      h = _context26.sent;
                      if (!(null === h)) {
                        _context26.next = 16;
                        break;
                      }
                      return _context26.abrupt("return", null);
                    case 16:
                      u = !1;
                      if (h && h.needAppearances) {
                        u = !0;
                        h = null;
                      }
                      d = e.xref, f = d.fetchIfRef(this.ref);
                      if (f instanceof s.Dict) {
                        _context26.next = 21;
                        break;
                      }
                      return _context26.abrupt("return", null);
                    case 21:
                      g = new s.Dict(d);
                      _iterator42 = _createForOfIteratorHelper(f.getKeys());
                      try {
                        for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {
                          _e57 = _step42.value;
                          "AP" !== _e57 && g.set(_e57, f.getRaw(_e57));
                        }
                      } catch (err) {
                        _iterator42.e(err);
                      } finally {
                        _iterator42.f();
                      }
                      m = {
                        path: this.data.fieldName,
                        value: c
                      }, encoder = function encoder(e) {
                        return (0, i.isAscii)(e) ? e : (0, i.stringToUTF16String)(e, !0);
                      };
                      g.set("V", Array.isArray(c) ? c.map(encoder) : encoder(c));
                      this.amendSavedDict(a, g);
                      b = this._getMKDict(l);
                      b && g.set("MK", b);
                      y = d.encrypt, w = y ? y.createCipherTransform(this.ref.num, this.ref.gen) : null, S = [], x = [{
                        ref: this.ref,
                        data: "",
                        xfa: m,
                        needAppearances: u
                      }];
                      if (null !== h) {
                        _e56 = d.getNewTemporaryRef(), _t43 = new s.Dict(d);
                        g.set("AP", _t43);
                        _t43.set("N", _e56);
                        _i37 = null;
                        y && (_i37 = y.createCipherTransform(_e56.num, _e56.gen));
                        _n13 = this._getSaveFieldResources(d), _c6 = new p.StringStream(h), _l3 = _c6.dict = new s.Dict(d);
                        _l3.set("Subtype", s.Name.get("Form"));
                        _l3.set("Resources", _n13);
                        _l3.set("BBox", [0, 0, this.data.rect[2] - this.data.rect[0], this.data.rect[3] - this.data.rect[1]]);
                        _u = this.getRotationMatrix(a);
                        _u !== r.IDENTITY_MATRIX && _l3.set("Matrix", _u);
                        (0, o.writeObject)(_e56, _c6, S, _i37);
                        x.push({
                          ref: _e56,
                          data: S.join(""),
                          xfa: null,
                          needAppearances: !1
                        });
                        S.length = 0;
                      }
                      g.set("M", "D:".concat((0, r.getModificationDate)()));
                      (0, o.writeObject)(this.ref, g, S, w);
                      x[0].data = S.join("");
                      return _context26.abrupt("return", x);
                    case 35:
                    case "end":
                      return _context26.stop();
                  }
                }, _callee26, this);
              }));
              function save(_x56, _x57, _x58) {
                return _save2.apply(this, arguments);
              }
              return save;
            }()
          }, {
            key: "_getAppearance",
            value: function () {
              var _getAppearance2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27(e, t, a, s) {
                var _ref29;
                var o, c, l, h, _e58, u, d, f, g, p, m, b, y, w, S, _iterator43, _step43, _e61, _t46, _a40, _r37, _s10, _o8, _e59, _iterator44, _step44, _t44, _l4, _e60, _t45, _h2, _this$_computeFontSiz, _this$_computeFontSiz2, _this$_computeFontSiz3, _this$_computeFontSiz4, x, C, k, v;
                return _regeneratorRuntime().wrap(function _callee27$(_context27) {
                  while (1) switch (_context27.prev = _context27.next) {
                    case 0:
                      if (!this.hasFieldFlag(r.AnnotationFieldFlag.PASSWORD)) {
                        _context27.next = 2;
                        break;
                      }
                      return _context27.abrupt("return", null);
                    case 2:
                      o = s ? s.get(this.data.id) : void 0;
                      if (o) {
                        c = o.formattedValue || o.value;
                        l = o.rotation;
                      }
                      if (!(void 0 === l && void 0 === c && !this._needAppearances && (!this._hasValueFromXFA || this.appearance))) {
                        _context27.next = 6;
                        break;
                      }
                      return _context27.abrupt("return", null);
                    case 6:
                      h = this.getBorderAndBackgroundAppearances(s);
                      if (!(void 0 === c)) {
                        _context27.next = 11;
                        break;
                      }
                      c = this.data.fieldValue;
                      if (c) {
                        _context27.next = 11;
                        break;
                      }
                      return _context27.abrupt("return", "/Tx BMC q ".concat(h, "Q EMC"));
                    case 11:
                      Array.isArray(c) && 1 === c.length && (c = c[0]);
                      (0, r.assert)("string" == typeof c, "Expected `value` to be a string.");
                      c = c.trim();
                      if (this.data.combo) {
                        _e58 = this.data.options.find(function (_ref28) {
                          var e = _ref28.exportValue;
                          return c === e;
                        });
                        c = _e58 && _e58.displayValue || c;
                      }
                      if (!("" === c)) {
                        _context27.next = 17;
                        break;
                      }
                      return _context27.abrupt("return", "/Tx BMC q ".concat(h, "Q EMC"));
                    case 17:
                      void 0 === l && (l = this.rotation);
                      d = -1;
                      if (this.data.multiLine) {
                        u = c.split(/\r\n?|\n/).map(function (e) {
                          return e.normalize("NFC");
                        });
                        d = u.length;
                      } else u = [c.replace(/\r\n?|\n/, "").normalize("NFC")];
                      f = this.data.rect[3] - this.data.rect[1], g = this.data.rect[2] - this.data.rect[0];
                      90 !== l && 270 !== l || (_ref29 = [f, g], g = _ref29[0], f = _ref29[1], _ref29);
                      this._defaultAppearance || (this.data.defaultAppearanceData = (0, n.parseDefaultAppearance)(this._defaultAppearance = "/Helvetica 0 Tf 0 g"));
                      _context27.next = 25;
                      return WidgetAnnotation._getFontData(e, t, this.data.defaultAppearanceData, this._fieldResources.mergedResources);
                    case 25:
                      y = _context27.sent;
                      w = [];
                      S = !1;
                      _iterator43 = _createForOfIteratorHelper(u);
                      try {
                        for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {
                          _e61 = _step43.value;
                          _t46 = y.encodeString(_e61);
                          _t46.length > 1 && (S = !0);
                          w.push(_t46.join(""));
                        }
                      } catch (err) {
                        _iterator43.e(err);
                      } finally {
                        _iterator43.f();
                      }
                      if (!(S && a & r.RenderingIntentFlag.SAVE)) {
                        _context27.next = 32;
                        break;
                      }
                      return _context27.abrupt("return", {
                        needAppearances: !0
                      });
                    case 32:
                      if (!(S && this._isOffscreenCanvasSupported)) {
                        _context27.next = 51;
                        break;
                      }
                      _a40 = this.data.comb ? "monospace" : "sans-serif", _r37 = new n.FakeUnicodeFont(e.xref, _a40), _s10 = _r37.createFontResources(u.join("")), _o8 = _s10.getRaw("Font");
                      if (this._fieldResources.mergedResources.has("Font")) {
                        _e59 = this._fieldResources.mergedResources.get("Font");
                        _iterator44 = _createForOfIteratorHelper(_o8.getKeys());
                        try {
                          for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {
                            _t44 = _step44.value;
                            _e59.set(_t44, _o8.getRaw(_t44));
                          }
                        } catch (err) {
                          _iterator44.e(err);
                        } finally {
                          _iterator44.f();
                        }
                      } else this._fieldResources.mergedResources.set("Font", _o8);
                      _l4 = _r37.fontName.name;
                      _context27.next = 38;
                      return WidgetAnnotation._getFontData(e, t, {
                        fontName: _l4,
                        fontSize: 0
                      }, _s10);
                    case 38:
                      y = _context27.sent;
                      for (_e60 = 0, _t45 = w.length; _e60 < _t45; _e60++) w[_e60] = (0, i.stringToUTF16String)(u[_e60]);
                      _h2 = Object.assign(Object.create(null), this.data.defaultAppearanceData);
                      this.data.defaultAppearanceData.fontSize = 0;
                      this.data.defaultAppearanceData.fontName = _l4;
                      _this$_computeFontSiz = this._computeFontSize(f - 2, g - 4, c, y, d);
                      _this$_computeFontSiz2 = _slicedToArray(_this$_computeFontSiz, 3);
                      p = _this$_computeFontSiz2[0];
                      m = _this$_computeFontSiz2[1];
                      b = _this$_computeFontSiz2[2];
                      this.data.defaultAppearanceData = _h2;
                      _context27.next = 57;
                      break;
                    case 51:
                      this._isOffscreenCanvasSupported || (0, r.warn)("_getAppearance: OffscreenCanvas is not supported, annotation may not render correctly.");
                      _this$_computeFontSiz3 = this._computeFontSize(f - 2, g - 4, c, y, d);
                      _this$_computeFontSiz4 = _slicedToArray(_this$_computeFontSiz3, 3);
                      p = _this$_computeFontSiz4[0];
                      m = _this$_computeFontSiz4[1];
                      b = _this$_computeFontSiz4[2];
                    case 57:
                      x = y.descent;
                      x = isNaN(x) ? r.BASELINE_FACTOR * b : Math.max(r.BASELINE_FACTOR * b, Math.abs(x) * m);
                      C = Math.min(Math.floor((f - m) / 2), 1), k = this.data.textAlignment;
                      if (!this.data.multiLine) {
                        _context27.next = 62;
                        break;
                      }
                      return _context27.abrupt("return", this._getMultilineAppearance(p, w, y, m, g, f, k, 2, C, x, b, s));
                    case 62:
                      if (!this.data.comb) {
                        _context27.next = 64;
                        break;
                      }
                      return _context27.abrupt("return", this._getCombAppearance(p, y, w[0], m, g, f, 2, C, x, b, s));
                    case 64:
                      v = C + x;
                      if (!(0 === k || k > 2)) {
                        _context27.next = 67;
                        break;
                      }
                      return _context27.abrupt("return", "/Tx BMC q ".concat(h, "BT ") + p + " 1 0 0 1 ".concat((0, i.numberToString)(2), " ").concat((0, i.numberToString)(v), " Tm (").concat((0, i.escapeString)(w[0]), ") Tj ET Q EMC"));
                    case 67:
                      return _context27.abrupt("return", "/Tx BMC q ".concat(h, "BT ") + p + " 1 0 0 1 0 0 Tm ".concat(this._renderText(w[0], y, m, g, k, {
                        shift: 0
                      }, 2, v), " ET Q EMC"));
                    case 68:
                    case "end":
                      return _context27.stop();
                  }
                }, _callee27, this);
              }));
              function _getAppearance(_x59, _x60, _x61, _x62) {
                return _getAppearance2.apply(this, arguments);
              }
              return _getAppearance;
            }()
          }, {
            key: "_getTextWidth",
            value: function _getTextWidth(e, t) {
              return t.charsToGlyphs(e).reduce(function (e, t) {
                return e + t.width;
              }, 0) / 1e3;
            }
          }, {
            key: "_computeFontSize",
            value: function _computeFontSize(e, t, a, i, s) {
              var _this23 = this;
              var o = this.data.defaultAppearanceData.fontSize,
                c = (o || 12) * r.LINE_FACTOR,
                l = Math.round(e / c);
              if (!o) {
                var roundWithTwoDigits = function roundWithTwoDigits(e) {
                  return Math.floor(100 * e) / 100;
                };
                if (-1 === s) {
                  var _n14 = this._getTextWidth(a, i);
                  o = roundWithTwoDigits(Math.min(e / r.LINE_FACTOR, _n14 > t ? t / _n14 : 1 / 0));
                  l = 1;
                } else {
                  var _n15 = a.split(/\r\n?|\n/),
                    _h3 = [];
                  var _iterator45 = _createForOfIteratorHelper(_n15),
                    _step45;
                  try {
                    for (_iterator45.s(); !(_step45 = _iterator45.n()).done;) {
                      var _e62 = _step45.value;
                      var _t47 = i.encodeString(_e62).join(""),
                        _a41 = i.charsToGlyphs(_t47),
                        _r38 = i.getCharPositions(_t47);
                      _h3.push({
                        line: _t47,
                        glyphs: _a41,
                        positions: _r38
                      });
                    }
                  } catch (err) {
                    _iterator45.e(err);
                  } finally {
                    _iterator45.f();
                  }
                  var isTooBig = function isTooBig(a) {
                    var r = 0;
                    for (var _i38 = 0, _h4 = _h3; _i38 < _h4.length; _i38++) {
                      var _n16 = _h4[_i38];
                      r += _this23._splitLine(null, i, a, t, _n16).length * a;
                      if (r > e) return !0;
                    }
                    return !1;
                  };
                  l = Math.max(l, s);
                  for (;;) {
                    c = e / l;
                    o = roundWithTwoDigits(c / r.LINE_FACTOR);
                    if (!isTooBig(o)) break;
                    l++;
                  }
                }
                var _this$data$defaultApp = this.data.defaultAppearanceData,
                  h = _this$data$defaultApp.fontName,
                  _u2 = _this$data$defaultApp.fontColor;
                this._defaultAppearance = (0, n.createDefaultAppearance)({
                  fontSize: o,
                  fontName: h,
                  fontColor: _u2
                });
              }
              return [this._defaultAppearance, o, e / l];
            }
          }, {
            key: "_renderText",
            value: function _renderText(e, t, a, r, n, s, o, c) {
              var l;
              if (1 === n) {
                l = (r - this._getTextWidth(e, t) * a) / 2;
              } else if (2 === n) {
                l = r - this._getTextWidth(e, t) * a - o;
              } else l = o;
              var h = (0, i.numberToString)(l - s.shift);
              s.shift = l;
              return "".concat(h, " ").concat(c = (0, i.numberToString)(c), " Td (").concat((0, i.escapeString)(e), ") Tj");
            }
          }, {
            key: "_getSaveFieldResources",
            value: function _getSaveFieldResources(e) {
              var _this$_fieldResources = this._fieldResources,
                t = _this$_fieldResources.localResources,
                a = _this$_fieldResources.appearanceResources,
                r = _this$_fieldResources.acroFormResources,
                i = this.data.defaultAppearanceData && this.data.defaultAppearanceData.fontName;
              if (!i) return t || s.Dict.empty;
              for (var _i39 = 0, _arr3 = [t, a]; _i39 < _arr3.length; _i39++) {
                var _e63 = _arr3[_i39];
                if (_e63 instanceof s.Dict) {
                  var _t48 = _e63.get("Font");
                  if (_t48 instanceof s.Dict && _t48.has(i)) return _e63;
                }
              }
              if (r instanceof s.Dict) {
                var _a42 = r.get("Font");
                if (_a42 instanceof s.Dict && _a42.has(i)) {
                  var _r39 = new s.Dict(e);
                  _r39.set(i, _a42.getRaw(i));
                  var _n17 = new s.Dict(e);
                  _n17.set("Font", _r39);
                  return s.Dict.merge({
                    xref: e,
                    dictArray: [_n17, t],
                    mergeSubDicts: !0
                  });
                }
              }
              return t || s.Dict.empty;
            }
          }, {
            key: "getFieldObject",
            value: function getFieldObject() {
              return null;
            }
          }], [{
            key: "_getFontData",
            value: function () {
              var _getFontData2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(e, t, a, r) {
                var i, n, o, c;
                return _regeneratorRuntime().wrap(function _callee28$(_context28) {
                  while (1) switch (_context28.prev = _context28.next) {
                    case 0:
                      i = new g.OperatorList(), n = {
                        font: null,
                        clone: function clone() {
                          return this;
                        }
                      }, o = a.fontName, c = a.fontSize;
                      _context28.next = 3;
                      return e.handleSetFont(r, [o && s.Name.get(o), c], null, i, t, n, null);
                    case 3:
                      return _context28.abrupt("return", n.font);
                    case 4:
                    case "end":
                      return _context28.stop();
                  }
                }, _callee28);
              }));
              function _getFontData(_x63, _x64, _x65, _x66) {
                return _getFontData2.apply(this, arguments);
              }
              return _getFontData;
            }()
          }]);
          return WidgetAnnotation;
        }(Annotation);
        var TextWidgetAnnotation = /*#__PURE__*/function (_WidgetAnnotation) {
          _inherits(TextWidgetAnnotation, _WidgetAnnotation);
          var _super21 = _createSuper(TextWidgetAnnotation);
          function TextWidgetAnnotation(e) {
            var _this24;
            _classCallCheck(this, TextWidgetAnnotation);
            _this24 = _super21.call(this, e);
            _this24.data.hasOwnCanvas = _this24.data.readOnly && !_this24.data.noHTML;
            _this24._hasText = !0;
            var t = e.dict;
            "string" != typeof _this24.data.fieldValue && (_this24.data.fieldValue = "");
            var a = (0, i.getInheritableProperty)({
              dict: t,
              key: "Q"
            });
            (!Number.isInteger(a) || a < 0 || a > 2) && (a = null);
            _this24.data.textAlignment = a;
            var n = (0, i.getInheritableProperty)({
              dict: t,
              key: "MaxLen"
            });
            (!Number.isInteger(n) || n < 0) && (n = 0);
            _this24.data.maxLen = n;
            _this24.data.multiLine = _this24.hasFieldFlag(r.AnnotationFieldFlag.MULTILINE);
            _this24.data.comb = _this24.hasFieldFlag(r.AnnotationFieldFlag.COMB) && !_this24.hasFieldFlag(r.AnnotationFieldFlag.MULTILINE) && !_this24.hasFieldFlag(r.AnnotationFieldFlag.PASSWORD) && !_this24.hasFieldFlag(r.AnnotationFieldFlag.FILESELECT) && 0 !== _this24.data.maxLen;
            _this24.data.doNotScroll = _this24.hasFieldFlag(r.AnnotationFieldFlag.DONOTSCROLL);
            return _this24;
          }
          _createClass(TextWidgetAnnotation, [{
            key: "_getCombAppearance",
            value: function _getCombAppearance(e, t, a, r, n, s, o, c, l, h, u) {
              var d = n / this.data.maxLen,
                f = this.getBorderAndBackgroundAppearances(u),
                g = [],
                p = t.getCharPositions(a);
              var _iterator46 = _createForOfIteratorHelper(p),
                _step46;
              try {
                for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {
                  var _step46$value = _slicedToArray(_step46.value, 2),
                    _e64 = _step46$value[0],
                    _t49 = _step46$value[1];
                  g.push("(".concat((0, i.escapeString)(a.substring(_e64, _t49)), ") Tj"));
                }
              } catch (err) {
                _iterator46.e(err);
              } finally {
                _iterator46.f();
              }
              var m = g.join(" ".concat((0, i.numberToString)(d), " 0 Td "));
              return "/Tx BMC q ".concat(f, "BT ") + e + " 1 0 0 1 ".concat((0, i.numberToString)(o), " ").concat((0, i.numberToString)(c + l), " Tm ").concat(m, " ET Q EMC");
            }
          }, {
            key: "_getMultilineAppearance",
            value: function _getMultilineAppearance(e, t, a, r, n, s, o, c, l, h, u, d) {
              var f = [],
                g = n - 2 * c,
                p = {
                  shift: 0
                };
              for (var _e65 = 0, _i40 = t.length; _e65 < _i40; _e65++) {
                var _i41 = t[_e65],
                  _s11 = this._splitLine(_i41, a, r, g);
                for (var _t50 = 0, _i42 = _s11.length; _t50 < _i42; _t50++) {
                  var _i43 = _s11[_t50],
                    _d = 0 === _e65 && 0 === _t50 ? -l - (u - h) : -u;
                  f.push(this._renderText(_i43, a, r, n, o, p, c, _d));
                }
              }
              var m = this.getBorderAndBackgroundAppearances(d),
                b = f.join("\n");
              return "/Tx BMC q ".concat(m, "BT ") + e + " 1 0 0 1 0 ".concat((0, i.numberToString)(s), " Tm ").concat(b, " ET Q EMC");
            }
          }, {
            key: "_splitLine",
            value: function _splitLine(e, t, a, r) {
              var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
              e = i.line || e;
              var n = i.glyphs || t.charsToGlyphs(e);
              if (n.length <= 1) return [e];
              var s = i.positions || t.getCharPositions(e),
                o = a / 1e3,
                c = [];
              var l = -1,
                h = -1,
                u = -1,
                d = 0,
                f = 0;
              for (var _t51 = 0, _a43 = n.length; _t51 < _a43; _t51++) {
                var _s$_t = _slicedToArray(s[_t51], 2),
                  _a44 = _s$_t[0],
                  _i44 = _s$_t[1],
                  _g = n[_t51],
                  _p = _g.width * o;
                if (" " === _g.unicode) {
                  if (f + _p > r) {
                    c.push(e.substring(d, _a44));
                    d = _a44;
                    f = _p;
                    l = -1;
                    u = -1;
                  } else {
                    f += _p;
                    l = _a44;
                    h = _i44;
                    u = _t51;
                  }
                } else if (f + _p > r) {
                  if (-1 !== l) {
                    c.push(e.substring(d, h));
                    d = h;
                    _t51 = u + 1;
                    l = -1;
                    f = 0;
                  } else {
                    c.push(e.substring(d, _a44));
                    d = _a44;
                    f = _p;
                  }
                } else f += _p;
              }
              d < e.length && c.push(e.substring(d, e.length));
              return c;
            }
          }, {
            key: "getFieldObject",
            value: function getFieldObject() {
              return {
                id: this.data.id,
                value: this.data.fieldValue,
                defaultValue: this.data.defaultFieldValue || "",
                multiline: this.data.multiLine,
                password: this.hasFieldFlag(r.AnnotationFieldFlag.PASSWORD),
                charLimit: this.data.maxLen,
                comb: this.data.comb,
                editable: !this.data.readOnly,
                hidden: this.data.hidden,
                name: this.data.fieldName,
                rect: this.data.rect,
                actions: this.data.actions,
                page: this.data.pageIndex,
                strokeColor: this.data.borderColor,
                fillColor: this.data.backgroundColor,
                rotation: this.rotation,
                type: "text"
              };
            }
          }]);
          return TextWidgetAnnotation;
        }(WidgetAnnotation);
        var ButtonWidgetAnnotation = /*#__PURE__*/function (_WidgetAnnotation2) {
          _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);
          var _super22 = _createSuper(ButtonWidgetAnnotation);
          function ButtonWidgetAnnotation(e) {
            var _this25;
            _classCallCheck(this, ButtonWidgetAnnotation);
            _this25 = _super22.call(this, e);
            _this25.checkedAppearance = null;
            _this25.uncheckedAppearance = null;
            _this25.data.checkBox = !_this25.hasFieldFlag(r.AnnotationFieldFlag.RADIO) && !_this25.hasFieldFlag(r.AnnotationFieldFlag.PUSHBUTTON);
            _this25.data.radioButton = _this25.hasFieldFlag(r.AnnotationFieldFlag.RADIO) && !_this25.hasFieldFlag(r.AnnotationFieldFlag.PUSHBUTTON);
            _this25.data.pushButton = _this25.hasFieldFlag(r.AnnotationFieldFlag.PUSHBUTTON);
            _this25.data.isTooltipOnly = !1;
            if (_this25.data.checkBox) _this25._processCheckBox(e);else if (_this25.data.radioButton) _this25._processRadioButton(e);else if (_this25.data.pushButton) {
              _this25.data.hasOwnCanvas = !0;
              _this25._processPushButton(e);
            } else (0, r.warn)("Invalid field flags for button widget annotation");
            return _this25;
          }
          _createClass(ButtonWidgetAnnotation, [{
            key: "getOperatorList",
            value: function () {
              var _getOperatorList3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29(e, t, a, i, n) {
                var s, o, _e66, c, _s12, l, _h5;
                return _regeneratorRuntime().wrap(function _callee29$(_context29) {
                  while (1) switch (_context29.prev = _context29.next) {
                    case 0:
                      if (!this.data.pushButton) {
                        _context29.next = 2;
                        break;
                      }
                      return _context29.abrupt("return", _get(_getPrototypeOf(ButtonWidgetAnnotation.prototype), "getOperatorList", this).call(this, e, t, a, !1, n));
                    case 2:
                      s = null, o = null;
                      if (n) {
                        _e66 = n.get(this.data.id);
                        s = _e66 ? _e66.value : null;
                        o = _e66 ? _e66.rotation : null;
                      }
                      if (!(null === s && this.appearance)) {
                        _context29.next = 6;
                        break;
                      }
                      return _context29.abrupt("return", _get(_getPrototypeOf(ButtonWidgetAnnotation.prototype), "getOperatorList", this).call(this, e, t, a, i, n));
                    case 6:
                      null == s && (s = this.data.checkBox ? this.data.fieldValue === this.data.exportValue : this.data.fieldValue === this.data.buttonValue);
                      c = s ? this.checkedAppearance : this.uncheckedAppearance;
                      if (!c) {
                        _context29.next = 16;
                        break;
                      }
                      _s12 = this.appearance, l = c.dict.getArray("Matrix") || r.IDENTITY_MATRIX;
                      o && c.dict.set("Matrix", this.getRotationMatrix(n));
                      this.appearance = c;
                      _h5 = _get(_getPrototypeOf(ButtonWidgetAnnotation.prototype), "getOperatorList", this).call(this, e, t, a, i, n);
                      this.appearance = _s12;
                      c.dict.set("Matrix", l);
                      return _context29.abrupt("return", _h5);
                    case 16:
                      return _context29.abrupt("return", {
                        opList: new g.OperatorList(),
                        separateForm: !1,
                        separateCanvas: !1
                      });
                    case 17:
                    case "end":
                      return _context29.stop();
                  }
                }, _callee29, this);
              }));
              function getOperatorList(_x67, _x68, _x69, _x70, _x71) {
                return _getOperatorList3.apply(this, arguments);
              }
              return getOperatorList;
            }()
          }, {
            key: "save",
            value: function () {
              var _save3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(e, t, a) {
                return _regeneratorRuntime().wrap(function _callee30$(_context30) {
                  while (1) switch (_context30.prev = _context30.next) {
                    case 0:
                      return _context30.abrupt("return", this.data.checkBox ? this._saveCheckbox(e, t, a) : this.data.radioButton ? this._saveRadioButton(e, t, a) : null);
                    case 1:
                    case "end":
                      return _context30.stop();
                  }
                }, _callee30, this);
              }));
              function save(_x72, _x73, _x74) {
                return _save3.apply(this, arguments);
              }
              return save;
            }()
          }, {
            key: "_saveCheckbox",
            value: function () {
              var _saveCheckbox2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(e, t, a) {
                var i, n, c, l, h, u, d, f, g, p;
                return _regeneratorRuntime().wrap(function _callee31$(_context31) {
                  while (1) switch (_context31.prev = _context31.next) {
                    case 0:
                      if (a) {
                        _context31.next = 2;
                        break;
                      }
                      return _context31.abrupt("return", null);
                    case 2:
                      i = a.get(this.data.id);
                      n = i && i.rotation, c = i && i.value;
                      if (!(void 0 === n)) {
                        _context31.next = 9;
                        break;
                      }
                      if (!(void 0 === c)) {
                        _context31.next = 7;
                        break;
                      }
                      return _context31.abrupt("return", null);
                    case 7:
                      if (!(this.data.fieldValue === this.data.exportValue === c)) {
                        _context31.next = 9;
                        break;
                      }
                      return _context31.abrupt("return", null);
                    case 9:
                      l = e.xref.fetchIfRef(this.ref);
                      if (l instanceof s.Dict) {
                        _context31.next = 12;
                        break;
                      }
                      return _context31.abrupt("return", null);
                    case 12:
                      void 0 === n && (n = this.rotation);
                      void 0 === c && (c = this.data.fieldValue === this.data.exportValue);
                      h = {
                        path: this.data.fieldName,
                        value: c ? this.data.exportValue : ""
                      }, u = s.Name.get(c ? this.data.exportValue : "Off");
                      l.set("V", u);
                      l.set("AS", u);
                      l.set("M", "D:".concat((0, r.getModificationDate)()));
                      d = this._getMKDict(n);
                      d && l.set("MK", d);
                      f = e.xref.encrypt;
                      g = null;
                      f && (g = f.createCipherTransform(this.ref.num, this.ref.gen));
                      p = ["".concat(this.ref.num, " ").concat(this.ref.gen, " obj\n")];
                      (0, o.writeDict)(l, p, g);
                      p.push("\nendobj\n");
                      return _context31.abrupt("return", [{
                        ref: this.ref,
                        data: p.join(""),
                        xfa: h
                      }]);
                    case 27:
                    case "end":
                      return _context31.stop();
                  }
                }, _callee31, this);
              }));
              function _saveCheckbox(_x75, _x76, _x77) {
                return _saveCheckbox2.apply(this, arguments);
              }
              return _saveCheckbox;
            }()
          }, {
            key: "_saveRadioButton",
            value: function () {
              var _saveRadioButton2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32(e, t, a) {
                var i, n, c, l, h, u, d, f, _t52, _a45, g, p, m, b;
                return _regeneratorRuntime().wrap(function _callee32$(_context32) {
                  while (1) switch (_context32.prev = _context32.next) {
                    case 0:
                      if (a) {
                        _context32.next = 2;
                        break;
                      }
                      return _context32.abrupt("return", null);
                    case 2:
                      i = a.get(this.data.id);
                      n = i && i.rotation, c = i && i.value;
                      if (!(void 0 === n)) {
                        _context32.next = 9;
                        break;
                      }
                      if (!(void 0 === c)) {
                        _context32.next = 7;
                        break;
                      }
                      return _context32.abrupt("return", null);
                    case 7:
                      if (!(this.data.fieldValue === this.data.buttonValue === c)) {
                        _context32.next = 9;
                        break;
                      }
                      return _context32.abrupt("return", null);
                    case 9:
                      l = e.xref.fetchIfRef(this.ref);
                      if (l instanceof s.Dict) {
                        _context32.next = 12;
                        break;
                      }
                      return _context32.abrupt("return", null);
                    case 12:
                      void 0 === c && (c = this.data.fieldValue === this.data.buttonValue);
                      void 0 === n && (n = this.rotation);
                      h = {
                        path: this.data.fieldName,
                        value: c ? this.data.buttonValue : ""
                      }, u = s.Name.get(c ? this.data.buttonValue : "Off");
                      d = null;
                      f = e.xref.encrypt;
                      if (c) if (this.parent instanceof s.Ref) {
                        _t52 = e.xref.fetch(this.parent);
                        _a45 = null;
                        f && (_a45 = f.createCipherTransform(this.parent.num, this.parent.gen));
                        _t52.set("V", u);
                        d = ["".concat(this.parent.num, " ").concat(this.parent.gen, " obj\n")];
                        (0, o.writeDict)(_t52, d, _a45);
                        d.push("\nendobj\n");
                      } else this.parent instanceof s.Dict && this.parent.set("V", u);
                      l.set("AS", u);
                      l.set("M", "D:".concat((0, r.getModificationDate)()));
                      g = this._getMKDict(n);
                      g && l.set("MK", g);
                      p = null;
                      f && (p = f.createCipherTransform(this.ref.num, this.ref.gen));
                      m = ["".concat(this.ref.num, " ").concat(this.ref.gen, " obj\n")];
                      (0, o.writeDict)(l, m, p);
                      m.push("\nendobj\n");
                      b = [{
                        ref: this.ref,
                        data: m.join(""),
                        xfa: h
                      }];
                      null !== d && b.push({
                        ref: this.parent,
                        data: d.join(""),
                        xfa: null
                      });
                      return _context32.abrupt("return", b);
                    case 30:
                    case "end":
                      return _context32.stop();
                  }
                }, _callee32, this);
              }));
              function _saveRadioButton(_x78, _x79, _x80) {
                return _saveRadioButton2.apply(this, arguments);
              }
              return _saveRadioButton;
            }()
          }, {
            key: "_getDefaultCheckedAppearance",
            value: function _getDefaultCheckedAppearance(e, t) {
              var a = this.data.rect[2] - this.data.rect[0],
                n = this.data.rect[3] - this.data.rect[1],
                o = [0, 0, a, n],
                c = .8 * Math.min(a, n);
              var l, h;
              if ("check" === t) {
                l = {
                  width: .755 * c,
                  height: .705 * c
                };
                h = "3";
              } else if ("disc" === t) {
                l = {
                  width: .791 * c,
                  height: .705 * c
                };
                h = "l";
              } else (0, r.unreachable)("_getDefaultCheckedAppearance - unsupported type: ".concat(t));
              var u = "q BT /PdfJsZaDb ".concat(c, " Tf 0 g ").concat((0, i.numberToString)((a - l.width) / 2), " ").concat((0, i.numberToString)((n - l.height) / 2), " Td (").concat(h, ") Tj ET Q"),
                d = new s.Dict(e.xref);
              d.set("FormType", 1);
              d.set("Subtype", s.Name.get("Form"));
              d.set("Type", s.Name.get("XObject"));
              d.set("BBox", o);
              d.set("Matrix", [1, 0, 0, 1, 0, 0]);
              d.set("Length", u.length);
              var f = new s.Dict(e.xref),
                g = new s.Dict(e.xref);
              g.set("PdfJsZaDb", this.fallbackFontDict);
              f.set("Font", g);
              d.set("Resources", f);
              this.checkedAppearance = new p.StringStream(u);
              this.checkedAppearance.dict = d;
              this._streams.push(this.checkedAppearance);
            }
          }, {
            key: "_processCheckBox",
            value: function _processCheckBox(e) {
              var t = e.dict.get("AP");
              if (!(t instanceof s.Dict)) return;
              var a = t.get("N");
              if (!(a instanceof s.Dict)) return;
              var r = this._decodeFormValue(e.dict.get("AS"));
              "string" == typeof r && (this.data.fieldValue = r);
              var i = null !== this.data.fieldValue && "Off" !== this.data.fieldValue ? this.data.fieldValue : "Yes",
                n = a.getKeys();
              if (0 === n.length) n.push("Off", i);else if (1 === n.length) "Off" === n[0] ? n.push(i) : n.unshift("Off");else if (n.includes(i)) {
                n.length = 0;
                n.push("Off", i);
              } else {
                var _e67 = n.find(function (e) {
                  return "Off" !== e;
                });
                n.length = 0;
                n.push("Off", _e67);
              }
              n.includes(this.data.fieldValue) || (this.data.fieldValue = "Off");
              this.data.exportValue = n[1];
              var o = a.get(this.data.exportValue);
              this.checkedAppearance = o instanceof c.BaseStream ? o : null;
              var l = a.get("Off");
              this.uncheckedAppearance = l instanceof c.BaseStream ? l : null;
              this.checkedAppearance ? this._streams.push(this.checkedAppearance) : this._getDefaultCheckedAppearance(e, "check");
              this.uncheckedAppearance && this._streams.push(this.uncheckedAppearance);
              this._fallbackFontDict = this.fallbackFontDict;
            }
          }, {
            key: "_processRadioButton",
            value: function _processRadioButton(e) {
              this.data.fieldValue = this.data.buttonValue = null;
              var t = e.dict.get("Parent");
              if (t instanceof s.Dict) {
                this.parent = e.dict.getRaw("Parent");
                var _a46 = t.get("V");
                _a46 instanceof s.Name && (this.data.fieldValue = this._decodeFormValue(_a46));
              }
              var a = e.dict.get("AP");
              if (!(a instanceof s.Dict)) return;
              var r = a.get("N");
              if (!(r instanceof s.Dict)) return;
              var _iterator47 = _createForOfIteratorHelper(r.getKeys()),
                _step47;
              try {
                for (_iterator47.s(); !(_step47 = _iterator47.n()).done;) {
                  var _e68 = _step47.value;
                  if ("Off" !== _e68) {
                    this.data.buttonValue = this._decodeFormValue(_e68);
                    break;
                  }
                }
              } catch (err) {
                _iterator47.e(err);
              } finally {
                _iterator47.f();
              }
              var i = r.get(this.data.buttonValue);
              this.checkedAppearance = i instanceof c.BaseStream ? i : null;
              var n = r.get("Off");
              this.uncheckedAppearance = n instanceof c.BaseStream ? n : null;
              this.checkedAppearance ? this._streams.push(this.checkedAppearance) : this._getDefaultCheckedAppearance(e, "disc");
              this.uncheckedAppearance && this._streams.push(this.uncheckedAppearance);
              this._fallbackFontDict = this.fallbackFontDict;
            }
          }, {
            key: "_processPushButton",
            value: function _processPushButton(e) {
              if (e.dict.has("A") || e.dict.has("AA") || this.data.alternativeText) {
                this.data.isTooltipOnly = !e.dict.has("A") && !e.dict.has("AA");
                h.Catalog.parseDestDictionary({
                  destDict: e.dict,
                  resultObj: this.data,
                  docBaseUrl: e.pdfManager.docBaseUrl,
                  docAttachments: e.attachments
                });
              } else (0, r.warn)("Push buttons without action dictionaries are not supported");
            }
          }, {
            key: "getFieldObject",
            value: function getFieldObject() {
              var e,
                t = "button";
              if (this.data.checkBox) {
                t = "checkbox";
                e = this.data.exportValue;
              } else if (this.data.radioButton) {
                t = "radiobutton";
                e = this.data.buttonValue;
              }
              return {
                id: this.data.id,
                value: this.data.fieldValue || "Off",
                defaultValue: this.data.defaultFieldValue,
                exportValues: e,
                editable: !this.data.readOnly,
                name: this.data.fieldName,
                rect: this.data.rect,
                hidden: this.data.hidden,
                actions: this.data.actions,
                page: this.data.pageIndex,
                strokeColor: this.data.borderColor,
                fillColor: this.data.backgroundColor,
                rotation: this.rotation,
                type: t
              };
            }
          }, {
            key: "fallbackFontDict",
            get: function get() {
              var e = new s.Dict();
              e.set("BaseFont", s.Name.get("ZapfDingbats"));
              e.set("Type", s.Name.get("FallbackType"));
              e.set("Subtype", s.Name.get("FallbackType"));
              e.set("Encoding", s.Name.get("ZapfDingbatsEncoding"));
              return (0, r.shadow)(this, "fallbackFontDict", e);
            }
          }]);
          return ButtonWidgetAnnotation;
        }(WidgetAnnotation);
        var ChoiceWidgetAnnotation = /*#__PURE__*/function (_WidgetAnnotation3) {
          _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);
          var _super23 = _createSuper(ChoiceWidgetAnnotation);
          function ChoiceWidgetAnnotation(e) {
            var _this26;
            _classCallCheck(this, ChoiceWidgetAnnotation);
            _this26 = _super23.call(this, e);
            var t = e.dict,
              a = e.xref;
            _this26.indices = t.getArray("I");
            _this26.hasIndices = Array.isArray(_this26.indices) && _this26.indices.length > 0;
            _this26.data.options = [];
            var n = (0, i.getInheritableProperty)({
              dict: t,
              key: "Opt"
            });
            if (Array.isArray(n)) for (var _e69 = 0, _t53 = n.length; _e69 < _t53; _e69++) {
              var _t54 = a.fetchIfRef(n[_e69]),
                _r40 = Array.isArray(_t54);
              _this26.data.options[_e69] = {
                exportValue: _this26._decodeFormValue(_r40 ? a.fetchIfRef(_t54[0]) : _t54),
                displayValue: _this26._decodeFormValue(_r40 ? a.fetchIfRef(_t54[1]) : _t54)
              };
            }
            if (_this26.hasIndices) {
              _this26.data.fieldValue = [];
              var _e70 = _this26.data.options.length;
              var _iterator48 = _createForOfIteratorHelper(_this26.indices),
                _step48;
              try {
                for (_iterator48.s(); !(_step48 = _iterator48.n()).done;) {
                  var _t55 = _step48.value;
                  Number.isInteger(_t55) && _t55 >= 0 && _t55 < _e70 && _this26.data.fieldValue.push(_this26.data.options[_t55].exportValue);
                }
              } catch (err) {
                _iterator48.e(err);
              } finally {
                _iterator48.f();
              }
            } else "string" == typeof _this26.data.fieldValue ? _this26.data.fieldValue = [_this26.data.fieldValue] : _this26.data.fieldValue || (_this26.data.fieldValue = []);
            _this26.data.combo = _this26.hasFieldFlag(r.AnnotationFieldFlag.COMBO);
            _this26.data.multiSelect = _this26.hasFieldFlag(r.AnnotationFieldFlag.MULTISELECT);
            _this26._hasText = !0;
            return _this26;
          }
          _createClass(ChoiceWidgetAnnotation, [{
            key: "getFieldObject",
            value: function getFieldObject() {
              var e = this.data.combo ? "combobox" : "listbox",
                t = this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : null;
              return {
                id: this.data.id,
                value: t,
                defaultValue: this.data.defaultFieldValue,
                editable: !this.data.readOnly,
                name: this.data.fieldName,
                rect: this.data.rect,
                numItems: this.data.fieldValue.length,
                multipleSelection: this.data.multiSelect,
                hidden: this.data.hidden,
                actions: this.data.actions,
                items: this.data.options,
                page: this.data.pageIndex,
                strokeColor: this.data.borderColor,
                fillColor: this.data.backgroundColor,
                rotation: this.rotation,
                type: e
              };
            }
          }, {
            key: "amendSavedDict",
            value: function amendSavedDict(e, t) {
              if (!this.hasIndices) return;
              var a = e ? e.get(this.data.id) : void 0;
              var r = a && a.value;
              Array.isArray(r) || (r = [r]);
              var i = [],
                n = this.data.options;
              for (var _e71 = 0, _t56 = 0, _a47 = n.length; _e71 < _a47; _e71++) if (n[_e71].exportValue === r[_t56]) {
                i.push(_e71);
                _t56 += 1;
              }
              t.set("I", i);
            }
          }, {
            key: "_getAppearance",
            value: function () {
              var _getAppearance3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(e, t, a, i) {
                var _ref30;
                var s, o, c, l, h, u, d, _e72, _t57, f, g, p, _e73, _t58, _a48, _iterator49, _step49, _e74, _r41, _this$_computeFontSiz5, _this$_computeFontSiz6, m, b, y, w, _e75, S, x, _iterator50, _step50, _e76, C, _e77, _t59, _a49;
                return _regeneratorRuntime().wrap(function _callee33$(_context33) {
                  while (1) switch (_context33.prev = _context33.next) {
                    case 0:
                      if (!this.data.combo) {
                        _context33.next = 2;
                        break;
                      }
                      return _context33.abrupt("return", _get(_getPrototypeOf(ChoiceWidgetAnnotation.prototype), "_getAppearance", this).call(this, e, t, a, i));
                    case 2:
                      c = i ? i.get(this.data.id) : void 0;
                      if (c) {
                        o = c.rotation;
                        s = c.value;
                      }
                      if (!(void 0 === o && void 0 === s && !this._needAppearances)) {
                        _context33.next = 6;
                        break;
                      }
                      return _context33.abrupt("return", null);
                    case 6:
                      void 0 === s ? s = this.data.fieldValue : Array.isArray(s) || (s = [s]);
                      l = this.data.rect[3] - this.data.rect[1], h = this.data.rect[2] - this.data.rect[0];
                      90 !== o && 270 !== o || (_ref30 = [l, h], h = _ref30[0], l = _ref30[1], _ref30);
                      u = this.data.options.length, d = [];
                      for (_e72 = 0; _e72 < u; _e72++) {
                        _t57 = this.data.options[_e72].exportValue;
                        s.includes(_t57) && d.push(_e72);
                      }
                      this._defaultAppearance || (this.data.defaultAppearanceData = (0, n.parseDefaultAppearance)(this._defaultAppearance = "/Helvetica 0 Tf 0 g"));
                      _context33.next = 14;
                      return WidgetAnnotation._getFontData(e, t, this.data.defaultAppearanceData, this._fieldResources.mergedResources);
                    case 14:
                      f = _context33.sent;
                      p = this.data.defaultAppearanceData.fontSize;
                      if (p) g = this._defaultAppearance;else {
                        _e73 = (l - 1) / u;
                        _a48 = -1;
                        _iterator49 = _createForOfIteratorHelper(this.data.options);
                        try {
                          for (_iterator49.s(); !(_step49 = _iterator49.n()).done;) {
                            _e74 = _step49.value.displayValue;
                            _r41 = this._getTextWidth(_e74, f);
                            if (_r41 > _a48) {
                              _a48 = _r41;
                              _t58 = _e74;
                            }
                          }
                        } catch (err) {
                          _iterator49.e(err);
                        } finally {
                          _iterator49.f();
                        }
                        _this$_computeFontSiz5 = this._computeFontSize(_e73, h - 4, _t58, f, -1);
                        _this$_computeFontSiz6 = _slicedToArray(_this$_computeFontSiz5, 2);
                        g = _this$_computeFontSiz6[0];
                        p = _this$_computeFontSiz6[1];
                      }
                      m = p * r.LINE_FACTOR, b = (m - p) / 2, y = Math.floor(l / m);
                      if (1 === d.length) {
                        _e75 = d[0];
                        w = _e75 - _e75 % y;
                      } else w = d.length ? d[0] : 0;
                      S = Math.min(w + y + 1, u), x = ["/Tx BMC q", "1 1 ".concat(h, " ").concat(l, " re W n")];
                      if (d.length) {
                        x.push("0.600006 0.756866 0.854904 rg");
                        _iterator50 = _createForOfIteratorHelper(d);
                        try {
                          for (_iterator50.s(); !(_step50 = _iterator50.n()).done;) {
                            _e76 = _step50.value;
                            w <= _e76 && _e76 < S && x.push("1 ".concat(l - (_e76 - w + 1) * m, " ").concat(h, " ").concat(m, " re f"));
                          }
                        } catch (err) {
                          _iterator50.e(err);
                        } finally {
                          _iterator50.f();
                        }
                      }
                      x.push("BT", g, "1 0 0 1 0 ".concat(l, " Tm"));
                      C = {
                        shift: 0
                      };
                      for (_e77 = w; _e77 < S; _e77++) {
                        _t59 = this.data.options[_e77].displayValue, _a49 = _e77 === w ? b : 0;
                        x.push(this._renderText(_t59, f, p, h, 0, C, 2, -m + _a49));
                      }
                      x.push("ET Q EMC");
                      return _context33.abrupt("return", x.join("\n"));
                    case 26:
                    case "end":
                      return _context33.stop();
                  }
                }, _callee33, this);
              }));
              function _getAppearance(_x81, _x82, _x83, _x84) {
                return _getAppearance3.apply(this, arguments);
              }
              return _getAppearance;
            }()
          }]);
          return ChoiceWidgetAnnotation;
        }(WidgetAnnotation);
        var SignatureWidgetAnnotation = /*#__PURE__*/function (_WidgetAnnotation4) {
          _inherits(SignatureWidgetAnnotation, _WidgetAnnotation4);
          var _super24 = _createSuper(SignatureWidgetAnnotation);
          function SignatureWidgetAnnotation(e) {
            var _this27;
            _classCallCheck(this, SignatureWidgetAnnotation);
            _this27 = _super24.call(this, e);
            _this27.data.fieldValue = null;
            _this27.data.hasOwnCanvas = _this27.data.noRotate;
            return _this27;
          }
          _createClass(SignatureWidgetAnnotation, [{
            key: "getFieldObject",
            value: function getFieldObject() {
              return {
                id: this.data.id,
                value: null,
                page: this.data.pageIndex,
                type: "signature"
              };
            }
          }]);
          return SignatureWidgetAnnotation;
        }(WidgetAnnotation);
        var TextAnnotation = /*#__PURE__*/function (_MarkupAnnotation) {
          _inherits(TextAnnotation, _MarkupAnnotation);
          var _super25 = _createSuper(TextAnnotation);
          function TextAnnotation(e) {
            var _this28;
            _classCallCheck(this, TextAnnotation);
            _this28 = _super25.call(this, e);
            _this28.data.noRotate = !0;
            _this28.data.hasOwnCanvas = _this28.data.noRotate;
            var t = e.dict;
            _this28.data.annotationType = r.AnnotationType.TEXT;
            if (_this28.data.hasAppearance) _this28.data.name = "NoIcon";else {
              _this28.data.rect[1] = _this28.data.rect[3] - 22;
              _this28.data.rect[2] = _this28.data.rect[0] + 22;
              _this28.data.name = t.has("Name") ? t.get("Name").name : "Note";
            }
            if (t.has("State")) {
              _this28.data.state = t.get("State") || null;
              _this28.data.stateModel = t.get("StateModel") || null;
            } else {
              _this28.data.state = null;
              _this28.data.stateModel = null;
            }
            return _this28;
          }
          return _createClass(TextAnnotation);
        }(MarkupAnnotation);
        var LinkAnnotation = /*#__PURE__*/function (_Annotation3) {
          _inherits(LinkAnnotation, _Annotation3);
          var _super26 = _createSuper(LinkAnnotation);
          function LinkAnnotation(e) {
            var _this29$data;
            var _this29;
            _classCallCheck(this, LinkAnnotation);
            _this29 = _super26.call(this, e);
            _this29.data.annotationType = r.AnnotationType.LINK;
            var t = getQuadPoints(e.dict, _this29.rectangle);
            t && (_this29.data.quadPoints = t);
            (_this29$data = _this29.data).borderColor || (_this29$data.borderColor = _this29.data.color);
            h.Catalog.parseDestDictionary({
              destDict: e.dict,
              resultObj: _this29.data,
              docBaseUrl: e.pdfManager.docBaseUrl,
              docAttachments: e.attachments
            });
            return _this29;
          }
          return _createClass(LinkAnnotation);
        }(Annotation);
        var PopupAnnotation = /*#__PURE__*/function (_Annotation4) {
          _inherits(PopupAnnotation, _Annotation4);
          var _super27 = _createSuper(PopupAnnotation);
          function PopupAnnotation(e) {
            var _this30;
            _classCallCheck(this, PopupAnnotation);
            _this30 = _super27.call(this, e);
            var t = e.dict;
            _this30.data.annotationType = r.AnnotationType.POPUP;
            var a = t.get("Parent");
            if (!a) {
              (0, r.warn)("Popup annotation has a missing or invalid parent annotation.");
              return _possibleConstructorReturn(_this30);
            }
            var i = a.get("Subtype");
            _this30.data.parentType = i instanceof s.Name ? i.name : null;
            var n = t.getRaw("Parent");
            _this30.data.parentId = n instanceof s.Ref ? n.toString() : null;
            var o = a.getArray("Rect");
            Array.isArray(o) && 4 === o.length ? _this30.data.parentRect = r.Util.normalizeRect(o) : _this30.data.parentRect = [0, 0, 0, 0];
            var c = a.get("RT");
            (0, s.isName)(c, r.AnnotationReplyType.GROUP) && (a = a.get("IRT"));
            if (a.has("M")) {
              _this30.setModificationDate(a.get("M"));
              _this30.data.modificationDate = _this30.modificationDate;
            } else _this30.data.modificationDate = null;
            if (a.has("C")) {
              _this30.setColor(a.getArray("C"));
              _this30.data.color = _this30.color;
            } else _this30.data.color = null;
            if (!_this30.viewable) {
              var _e78 = a.get("F");
              _this30._isViewable(_e78) && _this30.setFlags(_e78);
            }
            _this30.setTitle(a.get("T"));
            _this30.data.titleObj = _this30._title;
            _this30.setContents(a.get("Contents"));
            _this30.data.contentsObj = _this30._contents;
            a.has("RC") && (_this30.data.richText = m.XFAFactory.getRichTextAsHtml(a.get("RC")));
            return _this30;
          }
          return _createClass(PopupAnnotation);
        }(Annotation);
        t.PopupAnnotation = PopupAnnotation;
        var FreeTextAnnotation = /*#__PURE__*/function (_MarkupAnnotation2) {
          _inherits(FreeTextAnnotation, _MarkupAnnotation2);
          var _super28 = _createSuper(FreeTextAnnotation);
          function FreeTextAnnotation(e) {
            var _this31;
            _classCallCheck(this, FreeTextAnnotation);
            _this31 = _super28.call(this, e);
            _this31.data.hasOwnCanvas = _this31.data.noRotate;
            var t = e.xref;
            _this31.data.annotationType = r.AnnotationType.FREETEXT;
            _this31.setDefaultAppearance(e);
            if (!_this31.appearance && _this31._isOffscreenCanvasSupported) {
              var _a50 = e.dict.get("CA"),
                _r42 = new n.FakeUnicodeFont(t, "sans-serif"),
                _i45 = _this31.data.defaultAppearanceData;
              _this31.appearance = _r42.createAppearance(_this31._contents.str, _this31.rectangle, _this31.rotation, _i45.fontSize || 10, _i45.fontColor, _a50);
              _this31._streams.push(_this31.appearance, n.FakeUnicodeFont.toUnicodeStream);
            } else _this31._isOffscreenCanvasSupported || (0, r.warn)("FreeTextAnnotation: OffscreenCanvas is not supported, annotation may not render correctly.");
            return _this31;
          }
          _createClass(FreeTextAnnotation, [{
            key: "hasTextContent",
            get: function get() {
              return !!this.appearance;
            }
          }], [{
            key: "createNewDict",
            value: function createNewDict(e, t, _ref31) {
              var a = _ref31.apRef,
                o = _ref31.ap;
              var c = e.color,
                l = e.fontSize,
                h = e.rect,
                u = e.rotation,
                d = e.user,
                f = e.value,
                g = new s.Dict(t);
              g.set("Type", s.Name.get("Annot"));
              g.set("Subtype", s.Name.get("FreeText"));
              g.set("CreationDate", "D:".concat((0, r.getModificationDate)()));
              g.set("Rect", h);
              var p = "/Helv ".concat(l, " Tf ").concat((0, n.getPdfColor)(c, !0));
              g.set("DA", p);
              g.set("Contents", (0, i.isAscii)(f) ? f : (0, i.stringToUTF16String)(f, !0));
              g.set("F", 4);
              g.set("Border", [0, 0, 0]);
              g.set("Rotate", u);
              d && g.set("T", (0, i.isAscii)(d) ? d : (0, i.stringToUTF16String)(d, !0));
              if (a || o) {
                var _e79 = new s.Dict(t);
                g.set("AP", _e79);
                a ? _e79.set("N", a) : _e79.set("N", o);
              }
              return g;
            }
          }, {
            key: "createNewAppearanceStream",
            value: function () {
              var _createNewAppearanceStream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34(e, t, a) {
                var _ref32;
                var o, c, l, h, u, d, f, g, m, b, _e80, y, _d2, w, S, x, C, k, v, F, O, T, M, _iterator51, _step51, _e83, _t60, _a51, _r43, _iterator52, _step52, _e84, E, D, N, R, L, _, $, j, _i46, _M, _e81, U, X, _e82, H;
                return _regeneratorRuntime().wrap(function _callee34$(_context34) {
                  while (1) switch (_context34.prev = _context34.next) {
                    case 0:
                      o = a.baseFontRef, c = a.evaluator, l = a.task, h = e.color, u = e.fontSize, d = e.rect, f = e.rotation, g = e.value, m = new s.Dict(t), b = new s.Dict(t);
                      if (o) b.set("Helv", o);else {
                        _e80 = new s.Dict(t);
                        _e80.set("BaseFont", s.Name.get("Helvetica"));
                        _e80.set("Type", s.Name.get("Font"));
                        _e80.set("Subtype", s.Name.get("Type1"));
                        _e80.set("Encoding", s.Name.get("WinAnsiEncoding"));
                        b.set("Helv", _e80);
                      }
                      m.set("Font", b);
                      _context34.next = 5;
                      return WidgetAnnotation._getFontData(c, l, {
                        fontName: "Helvetica",
                        fontSize: u
                      }, m);
                    case 5:
                      y = _context34.sent;
                      _d2 = _slicedToArray(d, 4);
                      w = _d2[0];
                      S = _d2[1];
                      x = _d2[2];
                      C = _d2[3];
                      k = x - w, v = C - S;
                      f % 180 != 0 && (_ref32 = [v, k], k = _ref32[0], v = _ref32[1], _ref32);
                      F = g.split("\n"), O = u / 1e3;
                      T = -1 / 0;
                      M = [];
                      _iterator51 = _createForOfIteratorHelper(F);
                      _context34.prev = 17;
                      _iterator51.s();
                    case 19:
                      if ((_step51 = _iterator51.n()).done) {
                        _context34.next = 33;
                        break;
                      }
                      _e83 = _step51.value;
                      _t60 = y.encodeString(_e83);
                      if (!(_t60.length > 1)) {
                        _context34.next = 24;
                        break;
                      }
                      return _context34.abrupt("return", null);
                    case 24:
                      _e83 = _t60.join("");
                      M.push(_e83);
                      _a51 = 0;
                      _r43 = y.charsToGlyphs(_e83);
                      _iterator52 = _createForOfIteratorHelper(_r43);
                      try {
                        for (_iterator52.s(); !(_step52 = _iterator52.n()).done;) {
                          _e84 = _step52.value;
                          _a51 += _e84.width * O;
                        }
                      } catch (err) {
                        _iterator52.e(err);
                      } finally {
                        _iterator52.f();
                      }
                      T = Math.max(T, _a51);
                    case 31:
                      _context34.next = 19;
                      break;
                    case 33:
                      _context34.next = 38;
                      break;
                    case 35:
                      _context34.prev = 35;
                      _context34.t0 = _context34["catch"](17);
                      _iterator51.e(_context34.t0);
                    case 38:
                      _context34.prev = 38;
                      _iterator51.f();
                      return _context34.finish(38);
                    case 41:
                      E = 1;
                      T > k && (E = k / T);
                      D = 1;
                      N = r.LINE_FACTOR * u, R = r.LINE_DESCENT_FACTOR * u, L = N * F.length;
                      L > v && (D = v / L);
                      _ = u * Math.min(E, D), $ = ["q", "0 0 ".concat((0, i.numberToString)(k), " ").concat((0, i.numberToString)(v), " re W n"), "BT", "1 0 0 1 0 ".concat((0, i.numberToString)(v + R), " Tm 0 Tc ").concat((0, n.getPdfColor)(h, !0)), "/Helv ".concat((0, i.numberToString)(_), " Tf")], j = (0, i.numberToString)(N);
                      for (_i46 = 0, _M = M; _i46 < _M.length; _i46++) {
                        _e81 = _M[_i46];
                        $.push("0 -".concat(j, " Td (").concat((0, i.escapeString)(_e81), ") Tj"));
                      }
                      $.push("ET", "Q");
                      U = $.join("\n"), X = new s.Dict(t);
                      X.set("FormType", 1);
                      X.set("Subtype", s.Name.get("Form"));
                      X.set("Type", s.Name.get("XObject"));
                      X.set("BBox", [0, 0, k, v]);
                      X.set("Resources", m);
                      if (f) {
                        _e82 = (0, i.getRotationMatrix)(f, k, v);
                        X.set("Matrix", _e82);
                      }
                      H = new p.StringStream(U);
                      H.dict = X;
                      return _context34.abrupt("return", H);
                    case 59:
                    case "end":
                      return _context34.stop();
                  }
                }, _callee34, null, [[17, 35, 38, 41]]);
              }));
              function createNewAppearanceStream(_x85, _x86, _x87) {
                return _createNewAppearanceStream.apply(this, arguments);
              }
              return createNewAppearanceStream;
            }()
          }]);
          return FreeTextAnnotation;
        }(MarkupAnnotation);
        var LineAnnotation = /*#__PURE__*/function (_MarkupAnnotation3) {
          _inherits(LineAnnotation, _MarkupAnnotation3);
          var _super29 = _createSuper(LineAnnotation);
          function LineAnnotation(e) {
            var _this32;
            _classCallCheck(this, LineAnnotation);
            _this32 = _super29.call(this, e);
            var t = e.dict,
              a = e.xref;
            _this32.data.annotationType = r.AnnotationType.LINE;
            _this32.data.hasOwnCanvas = _this32.data.noRotate;
            var i = t.getArray("L");
            _this32.data.lineCoordinates = r.Util.normalizeRect(i);
            _this32.setLineEndings(t.getArray("LE"));
            _this32.data.lineEndings = _this32.lineEndings;
            if (!_this32.appearance) {
              var _e85 = _this32.color ? getPdfColorArray(_this32.color) : [0, 0, 0],
                _n18 = t.get("CA"),
                _s13 = getRgbColor(t.getArray("IC"), null),
                _o9 = _s13 ? getPdfColorArray(_s13) : null,
                _c7 = _o9 ? _n18 : null,
                l = _this32.borderStyle.width || 1,
                _h6 = 2 * l,
                _u3 = [_this32.data.lineCoordinates[0] - _h6, _this32.data.lineCoordinates[1] - _h6, _this32.data.lineCoordinates[2] + _h6, _this32.data.lineCoordinates[3] + _h6];
              r.Util.intersect(_this32.rectangle, _u3) || (_this32.rectangle = _u3);
              _this32._setDefaultAppearance({
                xref: a,
                extra: "".concat(l, " w"),
                strokeColor: _e85,
                fillColor: _o9,
                strokeAlpha: _n18,
                fillAlpha: _c7,
                pointsCallback: function pointsCallback(e, t) {
                  e.push("".concat(i[0], " ").concat(i[1], " m"), "".concat(i[2], " ").concat(i[3], " l"), "S");
                  return [t[0].x - l, t[1].x + l, t[3].y - l, t[1].y + l];
                }
              });
            }
            return _this32;
          }
          return _createClass(LineAnnotation);
        }(MarkupAnnotation);
        var SquareAnnotation = /*#__PURE__*/function (_MarkupAnnotation4) {
          _inherits(SquareAnnotation, _MarkupAnnotation4);
          var _super30 = _createSuper(SquareAnnotation);
          function SquareAnnotation(e) {
            var _this33;
            _classCallCheck(this, SquareAnnotation);
            _this33 = _super30.call(this, e);
            var t = e.dict,
              a = e.xref;
            _this33.data.annotationType = r.AnnotationType.SQUARE;
            _this33.data.hasOwnCanvas = _this33.data.noRotate;
            if (!_this33.appearance) {
              var _e86 = _this33.color ? getPdfColorArray(_this33.color) : [0, 0, 0],
                _r44 = t.get("CA"),
                _i47 = getRgbColor(t.getArray("IC"), null),
                _n19 = _i47 ? getPdfColorArray(_i47) : null,
                _s14 = _n19 ? _r44 : null;
              if (0 === _this33.borderStyle.width && !_n19) return _possibleConstructorReturn(_this33);
              _this33._setDefaultAppearance({
                xref: a,
                extra: "".concat(_this33.borderStyle.width, " w"),
                strokeColor: _e86,
                fillColor: _n19,
                strokeAlpha: _r44,
                fillAlpha: _s14,
                pointsCallback: function pointsCallback(e, t) {
                  var a = t[2].x + _this33.borderStyle.width / 2,
                    r = t[2].y + _this33.borderStyle.width / 2,
                    i = t[3].x - t[2].x - _this33.borderStyle.width,
                    s = t[1].y - t[3].y - _this33.borderStyle.width;
                  e.push("".concat(a, " ").concat(r, " ").concat(i, " ").concat(s, " re"));
                  _n19 ? e.push("B") : e.push("S");
                  return [t[0].x, t[1].x, t[3].y, t[1].y];
                }
              });
            }
            return _this33;
          }
          return _createClass(SquareAnnotation);
        }(MarkupAnnotation);
        var CircleAnnotation = /*#__PURE__*/function (_MarkupAnnotation5) {
          _inherits(CircleAnnotation, _MarkupAnnotation5);
          var _super31 = _createSuper(CircleAnnotation);
          function CircleAnnotation(e) {
            var _this34;
            _classCallCheck(this, CircleAnnotation);
            _this34 = _super31.call(this, e);
            var t = e.dict,
              a = e.xref;
            _this34.data.annotationType = r.AnnotationType.CIRCLE;
            if (!_this34.appearance) {
              var _e87 = _this34.color ? getPdfColorArray(_this34.color) : [0, 0, 0],
                _r45 = t.get("CA"),
                _i48 = getRgbColor(t.getArray("IC"), null),
                _n20 = _i48 ? getPdfColorArray(_i48) : null,
                _s15 = _n20 ? _r45 : null;
              if (0 === _this34.borderStyle.width && !_n20) return _possibleConstructorReturn(_this34);
              var _o10 = 4 / 3 * Math.tan(Math.PI / 8);
              _this34._setDefaultAppearance({
                xref: a,
                extra: "".concat(_this34.borderStyle.width, " w"),
                strokeColor: _e87,
                fillColor: _n20,
                strokeAlpha: _r45,
                fillAlpha: _s15,
                pointsCallback: function pointsCallback(e, t) {
                  var a = t[0].x + _this34.borderStyle.width / 2,
                    r = t[0].y - _this34.borderStyle.width / 2,
                    i = t[3].x - _this34.borderStyle.width / 2,
                    s = t[3].y + _this34.borderStyle.width / 2,
                    c = a + (i - a) / 2,
                    l = r + (s - r) / 2,
                    h = (i - a) / 2 * _o10,
                    u = (s - r) / 2 * _o10;
                  e.push("".concat(c, " ").concat(s, " m"), "".concat(c + h, " ").concat(s, " ").concat(i, " ").concat(l + u, " ").concat(i, " ").concat(l, " c"), "".concat(i, " ").concat(l - u, " ").concat(c + h, " ").concat(r, " ").concat(c, " ").concat(r, " c"), "".concat(c - h, " ").concat(r, " ").concat(a, " ").concat(l - u, " ").concat(a, " ").concat(l, " c"), "".concat(a, " ").concat(l + u, " ").concat(c - h, " ").concat(s, " ").concat(c, " ").concat(s, " c"), "h");
                  _n20 ? e.push("B") : e.push("S");
                  return [t[0].x, t[1].x, t[3].y, t[1].y];
                }
              });
            }
            return _this34;
          }
          return _createClass(CircleAnnotation);
        }(MarkupAnnotation);
        var PolylineAnnotation = /*#__PURE__*/function (_MarkupAnnotation6) {
          _inherits(PolylineAnnotation, _MarkupAnnotation6);
          var _super32 = _createSuper(PolylineAnnotation);
          function PolylineAnnotation(e) {
            var _this35;
            _classCallCheck(this, PolylineAnnotation);
            _this35 = _super32.call(this, e);
            var t = e.dict,
              a = e.xref;
            _this35.data.annotationType = r.AnnotationType.POLYLINE;
            _this35.data.hasOwnCanvas = _this35.data.noRotate;
            _this35.data.vertices = [];
            if (!(_assertThisInitialized(_this35) instanceof PolygonAnnotation)) {
              _this35.setLineEndings(t.getArray("LE"));
              _this35.data.lineEndings = _this35.lineEndings;
            }
            var i = t.getArray("Vertices");
            if (Array.isArray(i)) {
              for (var _e88 = 0, _t61 = i.length; _e88 < _t61; _e88 += 2) _this35.data.vertices.push({
                x: i[_e88],
                y: i[_e88 + 1]
              });
              if (!_this35.appearance) {
                var _e89 = _this35.color ? getPdfColorArray(_this35.color) : [0, 0, 0],
                  _i49 = t.get("CA"),
                  _n21 = _this35.borderStyle.width || 1,
                  _s16 = 2 * _n21,
                  _o11 = [1 / 0, 1 / 0, -1 / 0, -1 / 0];
                var _iterator53 = _createForOfIteratorHelper(_this35.data.vertices),
                  _step53;
                try {
                  for (_iterator53.s(); !(_step53 = _iterator53.n()).done;) {
                    var _e90 = _step53.value;
                    _o11[0] = Math.min(_o11[0], _e90.x - _s16);
                    _o11[1] = Math.min(_o11[1], _e90.y - _s16);
                    _o11[2] = Math.max(_o11[2], _e90.x + _s16);
                    _o11[3] = Math.max(_o11[3], _e90.y + _s16);
                  }
                } catch (err) {
                  _iterator53.e(err);
                } finally {
                  _iterator53.f();
                }
                r.Util.intersect(_this35.rectangle, _o11) || (_this35.rectangle = _o11);
                _this35._setDefaultAppearance({
                  xref: a,
                  extra: "".concat(_n21, " w"),
                  strokeColor: _e89,
                  strokeAlpha: _i49,
                  pointsCallback: function pointsCallback(e, t) {
                    var a = _this35.data.vertices;
                    for (var _t62 = 0, _r46 = a.length; _t62 < _r46; _t62++) e.push("".concat(a[_t62].x, " ").concat(a[_t62].y, " ").concat(0 === _t62 ? "m" : "l"));
                    e.push("S");
                    return [t[0].x, t[1].x, t[3].y, t[1].y];
                  }
                });
              }
            }
            return _this35;
          }
          return _createClass(PolylineAnnotation);
        }(MarkupAnnotation);
        var PolygonAnnotation = /*#__PURE__*/function (_PolylineAnnotation) {
          _inherits(PolygonAnnotation, _PolylineAnnotation);
          var _super33 = _createSuper(PolygonAnnotation);
          function PolygonAnnotation(e) {
            var _this36;
            _classCallCheck(this, PolygonAnnotation);
            _this36 = _super33.call(this, e);
            _this36.data.annotationType = r.AnnotationType.POLYGON;
            return _this36;
          }
          return _createClass(PolygonAnnotation);
        }(PolylineAnnotation);
        var CaretAnnotation = /*#__PURE__*/function (_MarkupAnnotation7) {
          _inherits(CaretAnnotation, _MarkupAnnotation7);
          var _super34 = _createSuper(CaretAnnotation);
          function CaretAnnotation(e) {
            var _this37;
            _classCallCheck(this, CaretAnnotation);
            _this37 = _super34.call(this, e);
            _this37.data.annotationType = r.AnnotationType.CARET;
            return _this37;
          }
          return _createClass(CaretAnnotation);
        }(MarkupAnnotation);
        var InkAnnotation = /*#__PURE__*/function (_MarkupAnnotation8) {
          _inherits(InkAnnotation, _MarkupAnnotation8);
          var _super35 = _createSuper(InkAnnotation);
          function InkAnnotation(e) {
            var _this38;
            _classCallCheck(this, InkAnnotation);
            _this38 = _super35.call(this, e);
            _this38.data.hasOwnCanvas = _this38.data.noRotate;
            var t = e.dict,
              a = e.xref;
            _this38.data.annotationType = r.AnnotationType.INK;
            _this38.data.inkLists = [];
            var i = t.getArray("InkList");
            if (Array.isArray(i)) {
              for (var _e91 = 0, _t63 = i.length; _e91 < _t63; ++_e91) {
                _this38.data.inkLists.push([]);
                for (var _t64 = 0, _r47 = i[_e91].length; _t64 < _r47; _t64 += 2) _this38.data.inkLists[_e91].push({
                  x: a.fetchIfRef(i[_e91][_t64]),
                  y: a.fetchIfRef(i[_e91][_t64 + 1])
                });
              }
              if (!_this38.appearance) {
                var _e92 = _this38.color ? getPdfColorArray(_this38.color) : [0, 0, 0],
                  _i50 = t.get("CA"),
                  _n22 = _this38.borderStyle.width || 1,
                  _s17 = 2 * _n22,
                  _o12 = [1 / 0, 1 / 0, -1 / 0, -1 / 0];
                var _iterator54 = _createForOfIteratorHelper(_this38.data.inkLists),
                  _step54;
                try {
                  for (_iterator54.s(); !(_step54 = _iterator54.n()).done;) {
                    var _e93 = _step54.value;
                    var _iterator56 = _createForOfIteratorHelper(_e93),
                      _step56;
                    try {
                      for (_iterator56.s(); !(_step56 = _iterator56.n()).done;) {
                        var _t66 = _step56.value;
                        _o12[0] = Math.min(_o12[0], _t66.x - _s17);
                        _o12[1] = Math.min(_o12[1], _t66.y - _s17);
                        _o12[2] = Math.max(_o12[2], _t66.x + _s17);
                        _o12[3] = Math.max(_o12[3], _t66.y + _s17);
                      }
                    } catch (err) {
                      _iterator56.e(err);
                    } finally {
                      _iterator56.f();
                    }
                  }
                } catch (err) {
                  _iterator54.e(err);
                } finally {
                  _iterator54.f();
                }
                r.Util.intersect(_this38.rectangle, _o12) || (_this38.rectangle = _o12);
                _this38._setDefaultAppearance({
                  xref: a,
                  extra: "".concat(_n22, " w"),
                  strokeColor: _e92,
                  strokeAlpha: _i50,
                  pointsCallback: function pointsCallback(e, t) {
                    var _iterator55 = _createForOfIteratorHelper(_this38.data.inkLists),
                      _step55;
                    try {
                      for (_iterator55.s(); !(_step55 = _iterator55.n()).done;) {
                        var _t65 = _step55.value;
                        for (var _a52 = 0, _r48 = _t65.length; _a52 < _r48; _a52++) e.push("".concat(_t65[_a52].x, " ").concat(_t65[_a52].y, " ").concat(0 === _a52 ? "m" : "l"));
                        e.push("S");
                      }
                    } catch (err) {
                      _iterator55.e(err);
                    } finally {
                      _iterator55.f();
                    }
                    return [t[0].x, t[1].x, t[3].y, t[1].y];
                  }
                });
              }
            }
            return _this38;
          }
          _createClass(InkAnnotation, null, [{
            key: "createNewDict",
            value: function createNewDict(e, t, _ref33) {
              var a = _ref33.apRef,
                i = _ref33.ap;
              var n = e.paths,
                o = e.rect,
                c = e.rotation,
                l = new s.Dict(t);
              l.set("Type", s.Name.get("Annot"));
              l.set("Subtype", s.Name.get("Ink"));
              l.set("CreationDate", "D:".concat((0, r.getModificationDate)()));
              l.set("Rect", o);
              l.set("InkList", n.map(function (e) {
                return e.points;
              }));
              l.set("F", 4);
              l.set("Border", [0, 0, 0]);
              l.set("Rotate", c);
              var h = new s.Dict(t);
              l.set("AP", h);
              a ? h.set("N", a) : h.set("N", i);
              return l;
            }
          }, {
            key: "createNewAppearanceStream",
            value: function () {
              var _createNewAppearanceStream2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(e, t, a) {
                var _ref34;
                var r, o, c, l, h, u, _o13, d, f, g, m, b, y, w, S, _iterator57, _step57, _e96, _t67, _a54, _a55, x, C, _e94, _e95, _a53, _r49, k;
                return _regeneratorRuntime().wrap(function _callee35$(_context35) {
                  while (1) switch (_context35.prev = _context35.next) {
                    case 0:
                      r = e.color, o = e.rect, c = e.rotation, l = e.paths, h = e.thickness, u = e.opacity, _o13 = _slicedToArray(o, 4), d = _o13[0], f = _o13[1], g = _o13[2], m = _o13[3];
                      b = g - d, y = m - f;
                      c % 180 != 0 && (_ref34 = [y, b], b = _ref34[0], y = _ref34[1], _ref34);
                      w = ["".concat(h, " w 1 J 1 j"), "".concat((0, n.getPdfColor)(r, !1))];
                      1 !== u && w.push("/R0 gs");
                      S = [];
                      _iterator57 = _createForOfIteratorHelper(l);
                      try {
                        for (_iterator57.s(); !(_step57 = _iterator57.n()).done;) {
                          _e96 = _step57.value.bezier;
                          S.length = 0;
                          S.push("".concat((0, i.numberToString)(_e96[0]), " ").concat((0, i.numberToString)(_e96[1]), " m"));
                          for (_t67 = 2, _a54 = _e96.length; _t67 < _a54; _t67 += 6) {
                            _a55 = _e96.slice(_t67, _t67 + 6).map(i.numberToString).join(" ");
                            S.push("".concat(_a55, " c"));
                          }
                          S.push("S");
                          w.push(S.join("\n"));
                        }
                      } catch (err) {
                        _iterator57.e(err);
                      } finally {
                        _iterator57.f();
                      }
                      x = w.join("\n"), C = new s.Dict(t);
                      C.set("FormType", 1);
                      C.set("Subtype", s.Name.get("Form"));
                      C.set("Type", s.Name.get("XObject"));
                      C.set("BBox", [0, 0, b, y]);
                      C.set("Length", x.length);
                      if (c) {
                        _e94 = (0, i.getRotationMatrix)(c, b, y);
                        C.set("Matrix", _e94);
                      }
                      if (1 !== u) {
                        _e95 = new s.Dict(t), _a53 = new s.Dict(t), _r49 = new s.Dict(t);
                        _r49.set("CA", u);
                        _r49.set("Type", s.Name.get("ExtGState"));
                        _a53.set("R0", _r49);
                        _e95.set("ExtGState", _a53);
                        C.set("Resources", _e95);
                      }
                      k = new p.StringStream(x);
                      k.dict = C;
                      return _context35.abrupt("return", k);
                    case 19:
                    case "end":
                      return _context35.stop();
                  }
                }, _callee35);
              }));
              function createNewAppearanceStream(_x88, _x89, _x90) {
                return _createNewAppearanceStream2.apply(this, arguments);
              }
              return createNewAppearanceStream;
            }()
          }]);
          return InkAnnotation;
        }(MarkupAnnotation);
        var HighlightAnnotation = /*#__PURE__*/function (_MarkupAnnotation9) {
          _inherits(HighlightAnnotation, _MarkupAnnotation9);
          var _super36 = _createSuper(HighlightAnnotation);
          function HighlightAnnotation(e) {
            var _this39;
            _classCallCheck(this, HighlightAnnotation);
            _this39 = _super36.call(this, e);
            var t = e.dict,
              a = e.xref;
            _this39.data.annotationType = r.AnnotationType.HIGHLIGHT;
            if (_this39.data.quadPoints = getQuadPoints(t, null)) {
              var _e97 = _this39.appearance && _this39.appearance.dict.get("Resources");
              if (!_this39.appearance || !_e97 || !_e97.has("ExtGState")) {
                _this39.appearance && (0, r.warn)("HighlightAnnotation - ignoring built-in appearance stream.");
                var _e98 = _this39.color ? getPdfColorArray(_this39.color) : [1, 1, 0],
                  _i51 = t.get("CA");
                _this39._setDefaultAppearance({
                  xref: a,
                  fillColor: _e98,
                  blendMode: "Multiply",
                  fillAlpha: _i51,
                  pointsCallback: function pointsCallback(e, t) {
                    e.push("".concat(t[0].x, " ").concat(t[0].y, " m"), "".concat(t[1].x, " ").concat(t[1].y, " l"), "".concat(t[3].x, " ").concat(t[3].y, " l"), "".concat(t[2].x, " ").concat(t[2].y, " l"), "f");
                    return [t[0].x, t[1].x, t[3].y, t[1].y];
                  }
                });
              }
            } else _this39.data.hasPopup = !1;
            return _this39;
          }
          return _createClass(HighlightAnnotation);
        }(MarkupAnnotation);
        var UnderlineAnnotation = /*#__PURE__*/function (_MarkupAnnotation10) {
          _inherits(UnderlineAnnotation, _MarkupAnnotation10);
          var _super37 = _createSuper(UnderlineAnnotation);
          function UnderlineAnnotation(e) {
            var _this40;
            _classCallCheck(this, UnderlineAnnotation);
            _this40 = _super37.call(this, e);
            var t = e.dict,
              a = e.xref;
            _this40.data.annotationType = r.AnnotationType.UNDERLINE;
            if (_this40.data.quadPoints = getQuadPoints(t, null)) {
              if (!_this40.appearance) {
                var _e99 = _this40.color ? getPdfColorArray(_this40.color) : [0, 0, 0],
                  _r50 = t.get("CA");
                _this40._setDefaultAppearance({
                  xref: a,
                  extra: "[] 0 d 1 w",
                  strokeColor: _e99,
                  strokeAlpha: _r50,
                  pointsCallback: function pointsCallback(e, t) {
                    e.push("".concat(t[2].x, " ").concat(t[2].y, " m"), "".concat(t[3].x, " ").concat(t[3].y, " l"), "S");
                    return [t[0].x, t[1].x, t[3].y, t[1].y];
                  }
                });
              }
            } else _this40.data.hasPopup = !1;
            return _this40;
          }
          return _createClass(UnderlineAnnotation);
        }(MarkupAnnotation);
        var SquigglyAnnotation = /*#__PURE__*/function (_MarkupAnnotation11) {
          _inherits(SquigglyAnnotation, _MarkupAnnotation11);
          var _super38 = _createSuper(SquigglyAnnotation);
          function SquigglyAnnotation(e) {
            var _this41;
            _classCallCheck(this, SquigglyAnnotation);
            _this41 = _super38.call(this, e);
            var t = e.dict,
              a = e.xref;
            _this41.data.annotationType = r.AnnotationType.SQUIGGLY;
            if (_this41.data.quadPoints = getQuadPoints(t, null)) {
              if (!_this41.appearance) {
                var _e100 = _this41.color ? getPdfColorArray(_this41.color) : [0, 0, 0],
                  _r51 = t.get("CA");
                _this41._setDefaultAppearance({
                  xref: a,
                  extra: "[] 0 d 1 w",
                  strokeColor: _e100,
                  strokeAlpha: _r51,
                  pointsCallback: function pointsCallback(e, t) {
                    var a = (t[0].y - t[2].y) / 6;
                    var r = a,
                      i = t[2].x;
                    var n = t[2].y,
                      s = t[3].x;
                    e.push("".concat(i, " ").concat(n + r, " m"));
                    do {
                      i += 2;
                      r = 0 === r ? a : 0;
                      e.push("".concat(i, " ").concat(n + r, " l"));
                    } while (i < s);
                    e.push("S");
                    return [t[2].x, s, n - 2 * a, n + 2 * a];
                  }
                });
              }
            } else _this41.data.hasPopup = !1;
            return _this41;
          }
          return _createClass(SquigglyAnnotation);
        }(MarkupAnnotation);
        var StrikeOutAnnotation = /*#__PURE__*/function (_MarkupAnnotation12) {
          _inherits(StrikeOutAnnotation, _MarkupAnnotation12);
          var _super39 = _createSuper(StrikeOutAnnotation);
          function StrikeOutAnnotation(e) {
            var _this42;
            _classCallCheck(this, StrikeOutAnnotation);
            _this42 = _super39.call(this, e);
            var t = e.dict,
              a = e.xref;
            _this42.data.annotationType = r.AnnotationType.STRIKEOUT;
            if (_this42.data.quadPoints = getQuadPoints(t, null)) {
              if (!_this42.appearance) {
                var _e101 = _this42.color ? getPdfColorArray(_this42.color) : [0, 0, 0],
                  _r52 = t.get("CA");
                _this42._setDefaultAppearance({
                  xref: a,
                  extra: "[] 0 d 1 w",
                  strokeColor: _e101,
                  strokeAlpha: _r52,
                  pointsCallback: function pointsCallback(e, t) {
                    e.push((t[0].x + t[2].x) / 2 + " " + (t[0].y + t[2].y) / 2 + " m", (t[1].x + t[3].x) / 2 + " " + (t[1].y + t[3].y) / 2 + " l", "S");
                    return [t[0].x, t[1].x, t[3].y, t[1].y];
                  }
                });
              }
            } else _this42.data.hasPopup = !1;
            return _this42;
          }
          return _createClass(StrikeOutAnnotation);
        }(MarkupAnnotation);
        var StampAnnotation = /*#__PURE__*/function (_MarkupAnnotation13) {
          _inherits(StampAnnotation, _MarkupAnnotation13);
          var _super40 = _createSuper(StampAnnotation);
          function StampAnnotation(e) {
            var _this43;
            _classCallCheck(this, StampAnnotation);
            _this43 = _super40.call(this, e);
            _this43.data.annotationType = r.AnnotationType.STAMP;
            _this43.data.hasOwnCanvas = _this43.data.noRotate;
            return _this43;
          }
          return _createClass(StampAnnotation);
        }(MarkupAnnotation);
        var FileAttachmentAnnotation = /*#__PURE__*/function (_MarkupAnnotation14) {
          _inherits(FileAttachmentAnnotation, _MarkupAnnotation14);
          var _super41 = _createSuper(FileAttachmentAnnotation);
          function FileAttachmentAnnotation(e) {
            var _this44;
            _classCallCheck(this, FileAttachmentAnnotation);
            _this44 = _super41.call(this, e);
            var t = e.dict,
              a = e.xref,
              i = new d.FileSpec(t.get("FS"), a);
            _this44.data.annotationType = r.AnnotationType.FILEATTACHMENT;
            _this44.data.hasOwnCanvas = _this44.data.noRotate;
            _this44.data.file = i.serializable;
            var n = t.get("Name");
            _this44.data.name = n instanceof s.Name ? (0, r.stringToPDFString)(n.name) : "PushPin";
            return _this44;
          }
          return _createClass(FileAttachmentAnnotation);
        }(MarkupAnnotation);
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.FakeUnicodeFont = void 0;
        t.createDefaultAppearance = function createDefaultAppearance(_ref35) {
          var e = _ref35.fontSize,
            t = _ref35.fontName,
            a = _ref35.fontColor;
          return "/".concat((0, i.escapePDFName)(t), " ").concat(e, " Tf ").concat(getPdfColor(a, !0));
        };
        t.getPdfColor = getPdfColor;
        t.parseDefaultAppearance = function parseDefaultAppearance(e) {
          return new DefaultAppearanceEvaluator(e).parse();
        };
        var r = a(4),
          i = a(3),
          n = a(2),
          s = a(12),
          o = a(13),
          c = a(8);
        var DefaultAppearanceEvaluator = /*#__PURE__*/function (_o$EvaluatorPreproces) {
          _inherits(DefaultAppearanceEvaluator, _o$EvaluatorPreproces);
          var _super42 = _createSuper(DefaultAppearanceEvaluator);
          function DefaultAppearanceEvaluator(e) {
            _classCallCheck(this, DefaultAppearanceEvaluator);
            return _super42.call(this, new c.StringStream(e));
          }
          _createClass(DefaultAppearanceEvaluator, [{
            key: "parse",
            value: function parse() {
              var e = {
                  fn: 0,
                  args: []
                },
                t = {
                  fontSize: 0,
                  fontName: "",
                  fontColor: new Uint8ClampedArray(3)
                };
              try {
                for (;;) {
                  e.args.length = 0;
                  if (!this.read(e)) break;
                  if (0 !== this.savedStatesDepth) continue;
                  var _a56 = e.fn,
                    _i52 = e.args;
                  switch (0 | a) {
                    case n.OPS.setFont:
                      var _i53 = _slicedToArray(_i52, 2),
                        _e102 = _i53[0],
                        _a57 = _i53[1];
                      _e102 instanceof r.Name && (t.fontName = _e102.name);
                      "number" == typeof _a57 && _a57 > 0 && (t.fontSize = _a57);
                      break;
                    case n.OPS.setFillRGBColor:
                      s.ColorSpace.singletons.rgb.getRgbItem(_i52, 0, t.fontColor, 0);
                      break;
                    case n.OPS.setFillGray:
                      s.ColorSpace.singletons.gray.getRgbItem(_i52, 0, t.fontColor, 0);
                      break;
                    case n.OPS.setFillColorSpace:
                      s.ColorSpace.singletons.cmyk.getRgbItem(_i52, 0, t.fontColor, 0);
                  }
                }
              } catch (e) {
                (0, n.warn)("parseDefaultAppearance - ignoring errors: \"".concat(e, "\"."));
              }
              return t;
            }
          }]);
          return DefaultAppearanceEvaluator;
        }(o.EvaluatorPreprocessor);
        function getPdfColor(e, t) {
          if (e[0] === e[1] && e[1] === e[2]) {
            var _a58 = e[0] / 255;
            return "".concat((0, i.numberToString)(_a58), " ").concat(t ? "g" : "G");
          }
          return Array.from(e, function (e) {
            return (0, i.numberToString)(e / 255);
          }).join(" ") + " " + (t ? "rg" : "RG");
        }
        var FakeUnicodeFont = /*#__PURE__*/function () {
          function FakeUnicodeFont(e, t) {
            _classCallCheck(this, FakeUnicodeFont);
            this.xref = e;
            this.widths = null;
            this.firstChar = 1 / 0;
            this.lastChar = -1 / 0;
            this.fontFamily = t;
            var a = new OffscreenCanvas(1, 1);
            this.ctxMeasure = a.getContext("2d");
            FakeUnicodeFont._fontNameId || (FakeUnicodeFont._fontNameId = 1);
            this.fontName = r.Name.get("InvalidPDFjsFont_".concat(t, "_").concat(FakeUnicodeFont._fontNameId++));
          }
          _createClass(FakeUnicodeFont, [{
            key: "toUnicodeRef",
            get: function get() {
              if (!FakeUnicodeFont._toUnicodeRef) {
                var _e103 = "/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo\n<< /Registry (Adobe)\n/Ordering (UCS) /Supplement 0 >> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000> <FFFF>\nendcodespacerange\n1 beginbfrange\n<0000> <FFFF> <0000>\nendbfrange\nendcmap CMapName currentdict /CMap defineresource pop end end",
                  _t68 = FakeUnicodeFont.toUnicodeStream = new c.StringStream(_e103),
                  _a59 = new r.Dict(this.xref);
                _t68.dict = _a59;
                _a59.set("Length", _e103.length);
                FakeUnicodeFont._toUnicodeRef = this.xref.getNewPersistentRef(_t68);
              }
              return FakeUnicodeFont._toUnicodeRef;
            }
          }, {
            key: "fontDescriptorRef",
            get: function get() {
              if (!FakeUnicodeFont._fontDescriptorRef) {
                var _e104 = new r.Dict(this.xref);
                _e104.set("Type", r.Name.get("FontDescriptor"));
                _e104.set("FontName", this.fontName);
                _e104.set("FontFamily", "MyriadPro Regular");
                _e104.set("FontBBox", [0, 0, 0, 0]);
                _e104.set("FontStretch", r.Name.get("Normal"));
                _e104.set("FontWeight", 400);
                _e104.set("ItalicAngle", 0);
                FakeUnicodeFont._fontDescriptorRef = this.xref.getNewPersistentRef(_e104);
              }
              return FakeUnicodeFont._fontDescriptorRef;
            }
          }, {
            key: "descendantFontRef",
            get: function get() {
              var e = new r.Dict(this.xref);
              e.set("BaseFont", this.fontName);
              e.set("Type", r.Name.get("Font"));
              e.set("Subtype", r.Name.get("CIDFontType0"));
              e.set("CIDToGIDMap", r.Name.get("Identity"));
              e.set("FirstChar", this.firstChar);
              e.set("LastChar", this.lastChar);
              e.set("FontDescriptor", this.fontDescriptorRef);
              e.set("DW", 1e3);
              var t = [],
                a = _toConsumableArray(this.widths.entries()).sort();
              var i = null,
                n = null;
              var _iterator58 = _createForOfIteratorHelper(a),
                _step58;
              try {
                for (_iterator58.s(); !(_step58 = _iterator58.n()).done;) {
                  var _step58$value = _slicedToArray(_step58.value, 2),
                    _e105 = _step58$value[0],
                    _r53 = _step58$value[1];
                  if (i) {
                    if (_e105 === i + n.length) n.push(_r53);else {
                      t.push(i, n);
                      i = _e105;
                      n = [_r53];
                    }
                  } else {
                    i = _e105;
                    n = [_r53];
                  }
                }
              } catch (err) {
                _iterator58.e(err);
              } finally {
                _iterator58.f();
              }
              i && t.push(i, n);
              e.set("W", t);
              var s = new r.Dict(this.xref);
              s.set("Ordering", "Identity");
              s.set("Registry", "Adobe");
              s.set("Supplement", 0);
              e.set("CIDSystemInfo", s);
              return this.xref.getNewPersistentRef(e);
            }
          }, {
            key: "baseFontRef",
            get: function get() {
              var e = new r.Dict(this.xref);
              e.set("BaseFont", this.fontName);
              e.set("Type", r.Name.get("Font"));
              e.set("Subtype", r.Name.get("Type0"));
              e.set("Encoding", r.Name.get("Identity-H"));
              e.set("DescendantFonts", [this.descendantFontRef]);
              e.set("ToUnicode", this.toUnicodeRef);
              return this.xref.getNewPersistentRef(e);
            }
          }, {
            key: "resources",
            get: function get() {
              var e = new r.Dict(this.xref),
                t = new r.Dict(this.xref);
              t.set(this.fontName.name, this.baseFontRef);
              e.set("Font", t);
              return e;
            }
          }, {
            key: "_createContext",
            value: function _createContext() {
              this.widths = new Map();
              this.ctxMeasure.font = "1000px ".concat(this.fontFamily);
              return this.ctxMeasure;
            }
          }, {
            key: "createFontResources",
            value: function createFontResources(e) {
              var t = this._createContext();
              var _iterator59 = _createForOfIteratorHelper(e.split(/\r\n?|\n/)),
                _step59;
              try {
                for (_iterator59.s(); !(_step59 = _iterator59.n()).done;) {
                  var _a60 = _step59.value;
                  var _iterator60 = _createForOfIteratorHelper(_a60.split("")),
                    _step60;
                  try {
                    for (_iterator60.s(); !(_step60 = _iterator60.n()).done;) {
                      var _e106 = _step60.value;
                      var _a61 = _e106.charCodeAt(0);
                      if (this.widths.has(_a61)) continue;
                      var _r54 = t.measureText(_e106),
                        _i54 = Math.ceil(_r54.width);
                      this.widths.set(_a61, _i54);
                      this.firstChar = Math.min(_a61, this.firstChar);
                      this.lastChar = Math.max(_a61, this.lastChar);
                    }
                  } catch (err) {
                    _iterator60.e(err);
                  } finally {
                    _iterator60.f();
                  }
                }
              } catch (err) {
                _iterator59.e(err);
              } finally {
                _iterator59.f();
              }
              return this.resources;
            }
          }, {
            key: "createAppearance",
            value: function createAppearance(e, t, a, s, o, l) {
              var _ref36;
              var h = this._createContext(),
                u = [];
              var d = -1 / 0;
              var _iterator61 = _createForOfIteratorHelper(e.split(/\r\n?|\n/)),
                _step61;
              try {
                for (_iterator61.s(); !(_step61 = _iterator61.n()).done;) {
                  var _t71 = _step61.value;
                  u.push(_t71);
                  var _e110 = h.measureText(_t71).width;
                  d = Math.max(d, _e110);
                  var _iterator62 = _createForOfIteratorHelper(_t71.split("")),
                    _step62;
                  try {
                    for (_iterator62.s(); !(_step62 = _iterator62.n()).done;) {
                      var _e111 = _step62.value;
                      var _t72 = _e111.charCodeAt(0);
                      var _a62 = this.widths.get(_t72);
                      if (void 0 === _a62) {
                        var _r55 = h.measureText(_e111);
                        _a62 = Math.ceil(_r55.width);
                        this.widths.set(_t72, _a62);
                        this.firstChar = Math.min(_t72, this.firstChar);
                        this.lastChar = Math.max(_t72, this.lastChar);
                      }
                    }
                  } catch (err) {
                    _iterator62.e(err);
                  } finally {
                    _iterator62.f();
                  }
                }
              } catch (err) {
                _iterator61.e(err);
              } finally {
                _iterator61.f();
              }
              d *= s / 1e3;
              var _t69 = _slicedToArray(t, 4),
                f = _t69[0],
                g = _t69[1],
                p = _t69[2],
                m = _t69[3];
              var b = p - f,
                y = m - g;
              a % 180 != 0 && (_ref36 = [y, b], b = _ref36[0], y = _ref36[1], _ref36);
              var w = 1;
              d > b && (w = b / d);
              var S = 1;
              var x = n.LINE_FACTOR * s,
                C = n.LINE_DESCENT_FACTOR * s,
                k = x * u.length;
              k > y && (S = y / k);
              var v = s * Math.min(w, S),
                F = ["q", "0 0 ".concat((0, i.numberToString)(b), " ").concat((0, i.numberToString)(y), " re W n"), "BT", "1 0 0 1 0 ".concat((0, i.numberToString)(y + C), " Tm 0 Tc ").concat(getPdfColor(o, !0)), "/".concat(this.fontName.name, " ").concat((0, i.numberToString)(v), " Tf")],
                O = this.resources;
              if (1 !== (l = "number" == typeof l && l >= 0 && l <= 1 ? l : 1)) {
                F.push("/R0 gs");
                var _e107 = new r.Dict(this.xref),
                  _t70 = new r.Dict(this.xref);
                _t70.set("ca", l);
                _t70.set("CA", l);
                _t70.set("Type", r.Name.get("ExtGState"));
                _e107.set("R0", _t70);
                O.set("ExtGState", _e107);
              }
              var T = (0, i.numberToString)(x);
              for (var _i55 = 0, _u4 = u; _i55 < _u4.length; _i55++) {
                var _e108 = _u4[_i55];
                F.push("0 -".concat(T, " Td <").concat((0, i.stringToUTF16HexString)(_e108), "> Tj"));
              }
              F.push("ET", "Q");
              var M = F.join("\n"),
                E = new r.Dict(this.xref);
              E.set("Subtype", r.Name.get("Form"));
              E.set("Type", r.Name.get("XObject"));
              E.set("BBox", [0, 0, b, y]);
              E.set("Length", M.length);
              E.set("Resources", O);
              if (a) {
                var _e109 = (0, i.getRotationMatrix)(a, b, y);
                E.set("Matrix", _e109);
              }
              var D = new c.StringStream(M);
              D.dict = E;
              return D;
            }
          }]);
          return FakeUnicodeFont;
        }();
        t.FakeUnicodeFont = FakeUnicodeFont;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.ColorSpace = void 0;
        var r = a(2),
          i = a(4),
          n = a(5),
          s = a(3);
        var ColorSpace = /*#__PURE__*/function () {
          function ColorSpace(e, t) {
            _classCallCheck(this, ColorSpace);
            this.constructor === ColorSpace && (0, r.unreachable)("Cannot initialize ColorSpace.");
            this.name = e;
            this.numComps = t;
          }
          _createClass(ColorSpace, [{
            key: "getRgb",
            value: function getRgb(e, t) {
              var a = new Uint8ClampedArray(3);
              this.getRgbItem(e, t, a, 0);
              return a;
            }
          }, {
            key: "getRgbItem",
            value: function getRgbItem(e, t, a, i) {
              (0, r.unreachable)("Should not call ColorSpace.getRgbItem");
            }
          }, {
            key: "getRgbBuffer",
            value: function getRgbBuffer(e, t, a, i, n, s, o) {
              (0, r.unreachable)("Should not call ColorSpace.getRgbBuffer");
            }
          }, {
            key: "getOutputLength",
            value: function getOutputLength(e, t) {
              (0, r.unreachable)("Should not call ColorSpace.getOutputLength");
            }
          }, {
            key: "isPassthrough",
            value: function isPassthrough(e) {
              return !1;
            }
          }, {
            key: "isDefaultDecode",
            value: function isDefaultDecode(e, t) {
              return ColorSpace.isDefaultDecode(e, this.numComps);
            }
          }, {
            key: "fillRgb",
            value: function fillRgb(e, t, a, r, i, n, s, o, c) {
              var l = t * a;
              var h = null;
              var u = 1 << s,
                d = a !== i || t !== r;
              if (this.isPassthrough(s)) h = o;else if (1 === this.numComps && l > u && "DeviceGray" !== this.name && "DeviceRGB" !== this.name) {
                var _t73 = s <= 8 ? new Uint8Array(u) : new Uint16Array(u);
                for (var _e112 = 0; _e112 < u; _e112++) _t73[_e112] = _e112;
                var _a63 = new Uint8ClampedArray(3 * u);
                this.getRgbBuffer(_t73, 0, u, _a63, 0, s, 0);
                if (d) {
                  h = new Uint8Array(3 * l);
                  var _e113 = 0;
                  for (var _t74 = 0; _t74 < l; ++_t74) {
                    var _r56 = 3 * o[_t74];
                    h[_e113++] = _a63[_r56];
                    h[_e113++] = _a63[_r56 + 1];
                    h[_e113++] = _a63[_r56 + 2];
                  }
                } else {
                  var _t75 = 0;
                  for (var _r57 = 0; _r57 < l; ++_r57) {
                    var _i56 = 3 * o[_r57];
                    e[_t75++] = _a63[_i56];
                    e[_t75++] = _a63[_i56 + 1];
                    e[_t75++] = _a63[_i56 + 2];
                    _t75 += c;
                  }
                }
              } else if (d) {
                h = new Uint8ClampedArray(3 * l);
                this.getRgbBuffer(o, 0, l, h, 0, s, 0);
              } else this.getRgbBuffer(o, 0, r * n, e, 0, s, c);
              if (h) if (d) !function resizeRgbImage(e, t, a, r, i, n, s) {
                s = 1 !== s ? 0 : s;
                var o = a / i,
                  c = r / n;
                var l,
                  h = 0;
                var u = new Uint16Array(i),
                  d = 3 * a;
                for (var _e114 = 0; _e114 < i; _e114++) u[_e114] = 3 * Math.floor(_e114 * o);
                for (var _a64 = 0; _a64 < n; _a64++) {
                  var _r58 = Math.floor(_a64 * c) * d;
                  for (var _a65 = 0; _a65 < i; _a65++) {
                    l = _r58 + u[_a65];
                    t[h++] = e[l++];
                    t[h++] = e[l++];
                    t[h++] = e[l++];
                    h += s;
                  }
                }
              }(h, e, t, a, r, i, c);else {
                var _t76 = 0,
                  _a66 = 0;
                for (var _i57 = 0, _s18 = r * n; _i57 < _s18; _i57++) {
                  e[_t76++] = h[_a66++];
                  e[_t76++] = h[_a66++];
                  e[_t76++] = h[_a66++];
                  _t76 += c;
                }
              }
            }
          }, {
            key: "usesZeroToOneRange",
            get: function get() {
              return (0, r.shadow)(this, "usesZeroToOneRange", !0);
            }
          }], [{
            key: "_cache",
            value: function _cache(e, t, a, r) {
              if (!a) throw new Error('ColorSpace._cache - expected "localColorSpaceCache" argument.');
              if (!r) throw new Error('ColorSpace._cache - expected "parsedColorSpace" argument.');
              var n, s;
              if (e instanceof i.Ref) {
                s = e;
                e = t.fetch(e);
              }
              e instanceof i.Name && (n = e.name);
              (n || s) && a.set(n, s, r);
            }
          }, {
            key: "getCached",
            value: function getCached(e, t, a) {
              if (!a) throw new Error('ColorSpace.getCached - expected "localColorSpaceCache" argument.');
              if (e instanceof i.Ref) {
                var _r59 = a.getByRef(e);
                if (_r59) return _r59;
                try {
                  e = t.fetch(e);
                } catch (e) {
                  if (e instanceof s.MissingDataException) throw e;
                }
              }
              if (e instanceof i.Name) {
                var _t77 = a.getByName(e.name);
                if (_t77) return _t77;
              }
              return null;
            }
          }, {
            key: "parseAsync",
            value: function () {
              var _parseAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36(_ref37) {
                var e, t, _ref37$resources, a, r, i, n;
                return _regeneratorRuntime().wrap(function _callee36$(_context36) {
                  while (1) switch (_context36.prev = _context36.next) {
                    case 0:
                      e = _ref37.cs, t = _ref37.xref, _ref37$resources = _ref37.resources, a = _ref37$resources === void 0 ? null : _ref37$resources, r = _ref37.pdfFunctionFactory, i = _ref37.localColorSpaceCache;
                      n = this._parse(e, t, a, r);
                      this._cache(e, t, i, n);
                      return _context36.abrupt("return", n);
                    case 4:
                    case "end":
                      return _context36.stop();
                  }
                }, _callee36, this);
              }));
              function parseAsync(_x91) {
                return _parseAsync.apply(this, arguments);
              }
              return parseAsync;
            }()
          }, {
            key: "parse",
            value: function parse(_ref38) {
              var e = _ref38.cs,
                t = _ref38.xref,
                _ref38$resources = _ref38.resources,
                a = _ref38$resources === void 0 ? null : _ref38$resources,
                r = _ref38.pdfFunctionFactory,
                i = _ref38.localColorSpaceCache;
              var n = this.getCached(e, t, i);
              if (n) return n;
              var s = this._parse(e, t, a, r);
              this._cache(e, t, i, s);
              return s;
            }
          }, {
            key: "_parse",
            value: function _parse(e, t) {
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
              var n = arguments.length > 3 ? arguments[3] : undefined;
              if ((e = t.fetchIfRef(e)) instanceof i.Name) switch (e.name) {
                case "G":
                case "DeviceGray":
                  return this.singletons.gray;
                case "RGB":
                case "DeviceRGB":
                  return this.singletons.rgb;
                case "CMYK":
                case "DeviceCMYK":
                  return this.singletons.cmyk;
                case "Pattern":
                  return new PatternCS(null);
                default:
                  if (a instanceof i.Dict) {
                    var _r60 = a.get("ColorSpace");
                    if (_r60 instanceof i.Dict) {
                      var _s19 = _r60.get(e.name);
                      if (_s19) {
                        if (_s19 instanceof i.Name) return this._parse(_s19, t, a, n);
                        e = _s19;
                        break;
                      }
                    }
                  }
                  throw new r.FormatError("Unrecognized ColorSpace: ".concat(e.name));
              }
              if (Array.isArray(e)) {
                var _i58 = t.fetchIfRef(e[0]).name;
                var _s20, _o14, u, d, f, g;
                switch (_i58) {
                  case "G":
                  case "DeviceGray":
                    return this.singletons.gray;
                  case "RGB":
                  case "DeviceRGB":
                    return this.singletons.rgb;
                  case "CMYK":
                  case "DeviceCMYK":
                    return this.singletons.cmyk;
                  case "CalGray":
                    _s20 = t.fetchIfRef(e[1]);
                    d = _s20.getArray("WhitePoint");
                    f = _s20.getArray("BlackPoint");
                    g = _s20.get("Gamma");
                    return new c(d, f, g);
                  case "CalRGB":
                    _s20 = t.fetchIfRef(e[1]);
                    d = _s20.getArray("WhitePoint");
                    f = _s20.getArray("BlackPoint");
                    g = _s20.getArray("Gamma");
                    var p = _s20.getArray("Matrix");
                    return new l(d, f, g, p);
                  case "ICCBased":
                    var m = t.fetchIfRef(e[1]).dict;
                    _o14 = m.get("N");
                    var b = m.get("Alternate");
                    if (b) {
                      var _e115 = this._parse(b, t, a, n);
                      if (_e115.numComps === _o14) return _e115;
                      (0, r.warn)("ICCBased color space: Ignoring incorrect /Alternate entry.");
                    }
                    if (1 === _o14) return this.singletons.gray;
                    if (3 === _o14) return this.singletons.rgb;
                    if (4 === _o14) return this.singletons.cmyk;
                    break;
                  case "Pattern":
                    u = e[1] || null;
                    u && (u = this._parse(u, t, a, n));
                    return new PatternCS(u);
                  case "I":
                  case "Indexed":
                    u = this._parse(e[1], t, a, n);
                    var y = t.fetchIfRef(e[2]) + 1,
                      w = t.fetchIfRef(e[3]);
                    return new IndexedCS(u, y, w);
                  case "Separation":
                  case "DeviceN":
                    var S = t.fetchIfRef(e[1]);
                    _o14 = Array.isArray(S) ? S.length : 1;
                    u = this._parse(e[2], t, a, n);
                    var x = n.create(e[3]);
                    return new AlternateCS(_o14, u, x);
                  case "Lab":
                    _s20 = t.fetchIfRef(e[1]);
                    d = _s20.getArray("WhitePoint");
                    f = _s20.getArray("BlackPoint");
                    var C = _s20.getArray("Range");
                    return new h(d, f, C);
                  default:
                    throw new r.FormatError("Unimplemented ColorSpace object: ".concat(_i58));
                }
              }
              throw new r.FormatError("Unrecognized ColorSpace object: ".concat(e));
            }
          }, {
            key: "isDefaultDecode",
            value: function isDefaultDecode(e, t) {
              if (!Array.isArray(e)) return !0;
              if (2 * t !== e.length) {
                (0, r.warn)("The decode map is not the correct length");
                return !0;
              }
              for (var _t78 = 0, _a67 = e.length; _t78 < _a67; _t78 += 2) if (0 !== e[_t78] || 1 !== e[_t78 + 1]) return !1;
              return !0;
            }
          }, {
            key: "singletons",
            get: function get() {
              return (0, r.shadow)(this, "singletons", {
                get gray() {
                  return (0, r.shadow)(this, "gray", new DeviceGrayCS());
                },
                get rgb() {
                  return (0, r.shadow)(this, "rgb", new DeviceRgbCS());
                },
                get cmyk() {
                  return (0, r.shadow)(this, "cmyk", new o());
                }
              });
            }
          }]);
          return ColorSpace;
        }();
        t.ColorSpace = ColorSpace;
        var AlternateCS = /*#__PURE__*/function (_ColorSpace) {
          _inherits(AlternateCS, _ColorSpace);
          var _super43 = _createSuper(AlternateCS);
          function AlternateCS(e, t, a) {
            var _this45;
            _classCallCheck(this, AlternateCS);
            _this45 = _super43.call(this, "Alternate", e);
            _this45.base = t;
            _this45.tintFn = a;
            _this45.tmpBuf = new Float32Array(t.numComps);
            return _this45;
          }
          _createClass(AlternateCS, [{
            key: "getRgbItem",
            value: function getRgbItem(e, t, a, r) {
              var i = this.tmpBuf;
              this.tintFn(e, t, i, 0);
              this.base.getRgbItem(i, 0, a, r);
            }
          }, {
            key: "getRgbBuffer",
            value: function getRgbBuffer(e, t, a, r, i, n, s) {
              var o = this.tintFn,
                c = this.base,
                l = 1 / ((1 << n) - 1),
                h = c.numComps,
                u = c.usesZeroToOneRange,
                d = (c.isPassthrough(8) || !u) && 0 === s;
              var f = d ? i : 0;
              var g = d ? r : new Uint8ClampedArray(h * a),
                p = this.numComps,
                m = new Float32Array(p),
                b = new Float32Array(h);
              var y, w;
              for (y = 0; y < a; y++) {
                for (w = 0; w < p; w++) m[w] = e[t++] * l;
                o(m, 0, b, 0);
                if (u) for (w = 0; w < h; w++) g[f++] = 255 * b[w];else {
                  c.getRgbItem(b, 0, g, f);
                  f += h;
                }
              }
              d || c.getRgbBuffer(g, 0, a, r, i, 8, s);
            }
          }, {
            key: "getOutputLength",
            value: function getOutputLength(e, t) {
              return this.base.getOutputLength(e * this.base.numComps / this.numComps, t);
            }
          }]);
          return AlternateCS;
        }(ColorSpace);
        var PatternCS = /*#__PURE__*/function (_ColorSpace2) {
          _inherits(PatternCS, _ColorSpace2);
          var _super44 = _createSuper(PatternCS);
          function PatternCS(e) {
            var _this46;
            _classCallCheck(this, PatternCS);
            _this46 = _super44.call(this, "Pattern", null);
            _this46.base = e;
            return _this46;
          }
          _createClass(PatternCS, [{
            key: "isDefaultDecode",
            value: function isDefaultDecode(e, t) {
              (0, r.unreachable)("Should not call PatternCS.isDefaultDecode");
            }
          }]);
          return PatternCS;
        }(ColorSpace);
        var IndexedCS = /*#__PURE__*/function (_ColorSpace3) {
          _inherits(IndexedCS, _ColorSpace3);
          var _super45 = _createSuper(IndexedCS);
          function IndexedCS(e, t, a) {
            var _this47;
            _classCallCheck(this, IndexedCS);
            _this47 = _super45.call(this, "Indexed", 1);
            _this47.base = e;
            _this47.highVal = t;
            var i = e.numComps * t;
            _this47.lookup = new Uint8Array(i);
            if (a instanceof n.BaseStream) {
              var _e116 = a.getBytes(i);
              _this47.lookup.set(_e116);
            } else {
              if ("string" != typeof a) throw new r.FormatError("IndexedCS - unrecognized lookup table: ".concat(a));
              for (var _e117 = 0; _e117 < i; ++_e117) _this47.lookup[_e117] = 255 & a.charCodeAt(_e117);
            }
            return _this47;
          }
          _createClass(IndexedCS, [{
            key: "getRgbItem",
            value: function getRgbItem(e, t, a, r) {
              var i = this.base.numComps,
                n = e[t] * i;
              this.base.getRgbBuffer(this.lookup, n, 1, a, r, 8, 0);
            }
          }, {
            key: "getRgbBuffer",
            value: function getRgbBuffer(e, t, a, r, i, n, s) {
              var o = this.base,
                c = o.numComps,
                l = o.getOutputLength(c, s),
                h = this.lookup;
              for (var _n23 = 0; _n23 < a; ++_n23) {
                var _a68 = e[t++] * c;
                o.getRgbBuffer(h, _a68, 1, r, i, 8, s);
                i += l;
              }
            }
          }, {
            key: "getOutputLength",
            value: function getOutputLength(e, t) {
              return this.base.getOutputLength(e * this.base.numComps, t);
            }
          }, {
            key: "isDefaultDecode",
            value: function isDefaultDecode(e, t) {
              if (!Array.isArray(e)) return !0;
              if (2 !== e.length) {
                (0, r.warn)("Decode map length is not correct");
                return !0;
              }
              if (!Number.isInteger(t) || t < 1) {
                (0, r.warn)("Bits per component is not correct");
                return !0;
              }
              return 0 === e[0] && e[1] === (1 << t) - 1;
            }
          }]);
          return IndexedCS;
        }(ColorSpace);
        var DeviceGrayCS = /*#__PURE__*/function (_ColorSpace4) {
          _inherits(DeviceGrayCS, _ColorSpace4);
          var _super46 = _createSuper(DeviceGrayCS);
          function DeviceGrayCS() {
            _classCallCheck(this, DeviceGrayCS);
            return _super46.call(this, "DeviceGray", 1);
          }
          _createClass(DeviceGrayCS, [{
            key: "getRgbItem",
            value: function getRgbItem(e, t, a, r) {
              var i = 255 * e[t];
              a[r] = a[r + 1] = a[r + 2] = i;
            }
          }, {
            key: "getRgbBuffer",
            value: function getRgbBuffer(e, t, a, r, i, n, s) {
              var o = 255 / ((1 << n) - 1);
              var c = t,
                l = i;
              for (var _t79 = 0; _t79 < a; ++_t79) {
                var _t80 = o * e[c++];
                r[l++] = _t80;
                r[l++] = _t80;
                r[l++] = _t80;
                l += s;
              }
            }
          }, {
            key: "getOutputLength",
            value: function getOutputLength(e, t) {
              return e * (3 + t);
            }
          }]);
          return DeviceGrayCS;
        }(ColorSpace);
        var DeviceRgbCS = /*#__PURE__*/function (_ColorSpace5) {
          _inherits(DeviceRgbCS, _ColorSpace5);
          var _super47 = _createSuper(DeviceRgbCS);
          function DeviceRgbCS() {
            _classCallCheck(this, DeviceRgbCS);
            return _super47.call(this, "DeviceRGB", 3);
          }
          _createClass(DeviceRgbCS, [{
            key: "getRgbItem",
            value: function getRgbItem(e, t, a, r) {
              a[r] = 255 * e[t];
              a[r + 1] = 255 * e[t + 1];
              a[r + 2] = 255 * e[t + 2];
            }
          }, {
            key: "getRgbBuffer",
            value: function getRgbBuffer(e, t, a, r, i, n, s) {
              if (8 === n && 0 === s) {
                r.set(e.subarray(t, t + 3 * a), i);
                return;
              }
              var o = 255 / ((1 << n) - 1);
              var c = t,
                l = i;
              for (var _t81 = 0; _t81 < a; ++_t81) {
                r[l++] = o * e[c++];
                r[l++] = o * e[c++];
                r[l++] = o * e[c++];
                l += s;
              }
            }
          }, {
            key: "getOutputLength",
            value: function getOutputLength(e, t) {
              return e * (3 + t) / 3 | 0;
            }
          }, {
            key: "isPassthrough",
            value: function isPassthrough(e) {
              return 8 === e;
            }
          }]);
          return DeviceRgbCS;
        }(ColorSpace);
        var o = function DeviceCmykCSClosure() {
            function convertToRgb(e, t, a, r, i) {
              var n = e[t] * a,
                s = e[t + 1] * a,
                o = e[t + 2] * a,
                c = e[t + 3] * a;
              r[i] = 255 + n * (-4.387332384609988 * n + 54.48615194189176 * s + 18.82290502165302 * o + 212.25662451639585 * c - 285.2331026137004) + s * (1.7149763477362134 * s - 5.6096736904047315 * o + -17.873870861415444 * c - 5.497006427196366) + o * (-2.5217340131683033 * o - 21.248923337353073 * c + 17.5119270841813) + c * (-21.86122147463605 * c - 189.48180835922747);
              r[i + 1] = 255 + n * (8.841041422036149 * n + 60.118027045597366 * s + 6.871425592049007 * o + 31.159100130055922 * c - 79.2970844816548) + s * (-15.310361306967817 * s + 17.575251261109482 * o + 131.35250912493976 * c - 190.9453302588951) + o * (4.444339102852739 * o + 9.8632861493405 * c - 24.86741582555878) + c * (-20.737325471181034 * c - 187.80453709719578);
              r[i + 2] = 255 + n * (.8842522430003296 * n + 8.078677503112928 * s + 30.89978309703729 * o - .23883238689178934 * c - 14.183576799673286) + s * (10.49593273432072 * s + 63.02378494754052 * o + 50.606957656360734 * c - 112.23884253719248) + o * (.03296041114873217 * o + 115.60384449646641 * c - 193.58209356861505) + c * (-22.33816807309886 * c - 180.12613974708367);
            }
            return /*#__PURE__*/function (_ColorSpace6) {
              _inherits(DeviceCmykCS, _ColorSpace6);
              var _super48 = _createSuper(DeviceCmykCS);
              function DeviceCmykCS() {
                _classCallCheck(this, DeviceCmykCS);
                return _super48.call(this, "DeviceCMYK", 4);
              }
              _createClass(DeviceCmykCS, [{
                key: "getRgbItem",
                value: function getRgbItem(e, t, a, r) {
                  convertToRgb(e, t, 1, a, r);
                }
              }, {
                key: "getRgbBuffer",
                value: function getRgbBuffer(e, t, a, r, i, n, s) {
                  var o = 1 / ((1 << n) - 1);
                  for (var _n24 = 0; _n24 < a; _n24++) {
                    convertToRgb(e, t, o, r, i);
                    t += 4;
                    i += 3 + s;
                  }
                }
              }, {
                key: "getOutputLength",
                value: function getOutputLength(e, t) {
                  return e / 4 * (3 + t) | 0;
                }
              }]);
              return DeviceCmykCS;
            }(ColorSpace);
          }(),
          c = function CalGrayCSClosure() {
            function convertToRgb(e, t, a, r, i, n) {
              var s = Math.pow(t[a] * n, e.G),
                o = e.YW * s,
                c = Math.max(295.8 * Math.pow(o, .3333333333333333) - 40.8, 0);
              r[i] = c;
              r[i + 1] = c;
              r[i + 2] = c;
            }
            return /*#__PURE__*/function (_ColorSpace7) {
              _inherits(CalGrayCS, _ColorSpace7);
              var _super49 = _createSuper(CalGrayCS);
              function CalGrayCS(e, t, a) {
                var _this48;
                _classCallCheck(this, CalGrayCS);
                _this48 = _super49.call(this, "CalGray", 1);
                if (!e) throw new r.FormatError("WhitePoint missing - required for color space CalGray");
                t = t || [0, 0, 0];
                a = a || 1;
                _this48.XW = e[0];
                _this48.YW = e[1];
                _this48.ZW = e[2];
                _this48.XB = t[0];
                _this48.YB = t[1];
                _this48.ZB = t[2];
                _this48.G = a;
                if (_this48.XW < 0 || _this48.ZW < 0 || 1 !== _this48.YW) throw new r.FormatError("Invalid WhitePoint components for ".concat(_this48.name, ", no fallback available"));
                if (_this48.XB < 0 || _this48.YB < 0 || _this48.ZB < 0) {
                  (0, r.info)("Invalid BlackPoint for ".concat(_this48.name, ", falling back to default."));
                  _this48.XB = _this48.YB = _this48.ZB = 0;
                }
                0 === _this48.XB && 0 === _this48.YB && 0 === _this48.ZB || (0, r.warn)("".concat(_this48.name, ", BlackPoint: XB: ").concat(_this48.XB, ", YB: ").concat(_this48.YB, ", ZB: ").concat(_this48.ZB, ", only default values are supported."));
                if (_this48.G < 1) {
                  (0, r.info)("Invalid Gamma: ".concat(_this48.G, " for ").concat(_this48.name, ", falling back to default."));
                  _this48.G = 1;
                }
                return _this48;
              }
              _createClass(CalGrayCS, [{
                key: "getRgbItem",
                value: function getRgbItem(e, t, a, r) {
                  convertToRgb(this, e, t, a, r, 1);
                }
              }, {
                key: "getRgbBuffer",
                value: function getRgbBuffer(e, t, a, r, i, n, s) {
                  var o = 1 / ((1 << n) - 1);
                  for (var _n25 = 0; _n25 < a; ++_n25) {
                    convertToRgb(this, e, t, r, i, o);
                    t += 1;
                    i += 3 + s;
                  }
                }
              }, {
                key: "getOutputLength",
                value: function getOutputLength(e, t) {
                  return e * (3 + t);
                }
              }]);
              return CalGrayCS;
            }(ColorSpace);
          }(),
          l = function CalRGBCSClosure() {
            var e = new Float32Array([.8951, .2664, -.1614, -.7502, 1.7135, .0367, .0389, -.0685, 1.0296]),
              t = new Float32Array([.9869929, -.1470543, .1599627, .4323053, .5183603, .0492912, -.0085287, .0400428, .9684867]),
              a = new Float32Array([3.2404542, -1.5371385, -.4985314, -.969266, 1.8760108, .041556, .0556434, -.2040259, 1.0572252]),
              i = new Float32Array([1, 1, 1]),
              n = new Float32Array(3),
              s = new Float32Array(3),
              o = new Float32Array(3),
              c = Math.pow(24 / 116, 3) / 8;
            function matrixProduct(e, t, a) {
              a[0] = e[0] * t[0] + e[1] * t[1] + e[2] * t[2];
              a[1] = e[3] * t[0] + e[4] * t[1] + e[5] * t[2];
              a[2] = e[6] * t[0] + e[7] * t[1] + e[8] * t[2];
            }
            function sRGBTransferFunction(e) {
              return e <= .0031308 ? adjustToRange(0, 1, 12.92 * e) : e >= .99554525 ? 1 : adjustToRange(0, 1, 1.055 * Math.pow(e, 1 / 2.4) - .055);
            }
            function adjustToRange(e, t, a) {
              return Math.max(e, Math.min(t, a));
            }
            function decodeL(e) {
              return e < 0 ? -decodeL(-e) : e > 8 ? Math.pow((e + 16) / 116, 3) : e * c;
            }
            function convertToRgb(r, c, l, h, u, d) {
              var f = adjustToRange(0, 1, c[l] * d),
                g = adjustToRange(0, 1, c[l + 1] * d),
                p = adjustToRange(0, 1, c[l + 2] * d),
                m = 1 === f ? 1 : Math.pow(f, r.GR),
                b = 1 === g ? 1 : Math.pow(g, r.GG),
                y = 1 === p ? 1 : Math.pow(p, r.GB),
                w = r.MXA * m + r.MXB * b + r.MXC * y,
                S = r.MYA * m + r.MYB * b + r.MYC * y,
                x = r.MZA * m + r.MZB * b + r.MZC * y,
                C = s;
              C[0] = w;
              C[1] = S;
              C[2] = x;
              var k = o;
              !function normalizeWhitePointToFlat(a, r, i) {
                if (1 === a[0] && 1 === a[2]) {
                  i[0] = r[0];
                  i[1] = r[1];
                  i[2] = r[2];
                  return;
                }
                var s = i;
                matrixProduct(e, r, s);
                var o = n;
                !function convertToFlat(e, t, a) {
                  a[0] = 1 * t[0] / e[0];
                  a[1] = 1 * t[1] / e[1];
                  a[2] = 1 * t[2] / e[2];
                }(a, s, o);
                matrixProduct(t, o, i);
              }(r.whitePoint, C, k);
              var v = s;
              !function compensateBlackPoint(e, t, a) {
                if (0 === e[0] && 0 === e[1] && 0 === e[2]) {
                  a[0] = t[0];
                  a[1] = t[1];
                  a[2] = t[2];
                  return;
                }
                var r = decodeL(0),
                  i = (1 - r) / (1 - decodeL(e[0])),
                  n = 1 - i,
                  s = (1 - r) / (1 - decodeL(e[1])),
                  o = 1 - s,
                  c = (1 - r) / (1 - decodeL(e[2])),
                  l = 1 - c;
                a[0] = t[0] * i + n;
                a[1] = t[1] * s + o;
                a[2] = t[2] * c + l;
              }(r.blackPoint, k, v);
              var F = o;
              !function normalizeWhitePointToD65(a, r, i) {
                var s = i;
                matrixProduct(e, r, s);
                var o = n;
                !function convertToD65(e, t, a) {
                  a[0] = .95047 * t[0] / e[0];
                  a[1] = 1 * t[1] / e[1];
                  a[2] = 1.08883 * t[2] / e[2];
                }(a, s, o);
                matrixProduct(t, o, i);
              }(i, v, F);
              var O = s;
              matrixProduct(a, F, O);
              h[u] = 255 * sRGBTransferFunction(O[0]);
              h[u + 1] = 255 * sRGBTransferFunction(O[1]);
              h[u + 2] = 255 * sRGBTransferFunction(O[2]);
            }
            return /*#__PURE__*/function (_ColorSpace8) {
              _inherits(CalRGBCS, _ColorSpace8);
              var _super50 = _createSuper(CalRGBCS);
              function CalRGBCS(e, t, a, i) {
                var _this49;
                _classCallCheck(this, CalRGBCS);
                _this49 = _super50.call(this, "CalRGB", 3);
                if (!e) throw new r.FormatError("WhitePoint missing - required for color space CalRGB");
                t || (t = new Float32Array(3));
                a || (a = new Float32Array([1, 1, 1]));
                i || (i = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]));
                var n = e[0],
                  s = e[1],
                  o = e[2];
                _this49.whitePoint = e;
                var c = t[0],
                  l = t[1],
                  h = t[2];
                _this49.blackPoint = t;
                _this49.GR = a[0];
                _this49.GG = a[1];
                _this49.GB = a[2];
                _this49.MXA = i[0];
                _this49.MYA = i[1];
                _this49.MZA = i[2];
                _this49.MXB = i[3];
                _this49.MYB = i[4];
                _this49.MZB = i[5];
                _this49.MXC = i[6];
                _this49.MYC = i[7];
                _this49.MZC = i[8];
                if (n < 0 || o < 0 || 1 !== s) throw new r.FormatError("Invalid WhitePoint components for ".concat(_this49.name, ", no fallback available"));
                if (c < 0 || l < 0 || h < 0) {
                  (0, r.info)("Invalid BlackPoint for ".concat(_this49.name, " [").concat(c, ", ").concat(l, ", ").concat(h, "], falling back to default."));
                  _this49.blackPoint = new Float32Array(3);
                }
                if (_this49.GR < 0 || _this49.GG < 0 || _this49.GB < 0) {
                  (0, r.info)("Invalid Gamma [".concat(_this49.GR, ", ").concat(_this49.GG, ", ").concat(_this49.GB, "] for ").concat(_this49.name, ", falling back to default."));
                  _this49.GR = _this49.GG = _this49.GB = 1;
                }
                return _this49;
              }
              _createClass(CalRGBCS, [{
                key: "getRgbItem",
                value: function getRgbItem(e, t, a, r) {
                  convertToRgb(this, e, t, a, r, 1);
                }
              }, {
                key: "getRgbBuffer",
                value: function getRgbBuffer(e, t, a, r, i, n, s) {
                  var o = 1 / ((1 << n) - 1);
                  for (var _n26 = 0; _n26 < a; ++_n26) {
                    convertToRgb(this, e, t, r, i, o);
                    t += 3;
                    i += 3 + s;
                  }
                }
              }, {
                key: "getOutputLength",
                value: function getOutputLength(e, t) {
                  return e * (3 + t) / 3 | 0;
                }
              }]);
              return CalRGBCS;
            }(ColorSpace);
          }(),
          h = function LabCSClosure() {
            function fn_g(e) {
              var t;
              t = e >= 6 / 29 ? Math.pow(e, 3) : 108 / 841 * (e - 4 / 29);
              return t;
            }
            function decode(e, t, a, r) {
              return a + e * (r - a) / t;
            }
            function convertToRgb(e, t, a, r, i, n) {
              var s = t[a],
                o = t[a + 1],
                c = t[a + 2];
              if (!1 !== r) {
                s = decode(s, r, 0, 100);
                o = decode(o, r, e.amin, e.amax);
                c = decode(c, r, e.bmin, e.bmax);
              }
              o > e.amax ? o = e.amax : o < e.amin && (o = e.amin);
              c > e.bmax ? c = e.bmax : c < e.bmin && (c = e.bmin);
              var l = (s + 16) / 116,
                h = l + o / 500,
                u = l - c / 200,
                d = e.XW * fn_g(h),
                f = e.YW * fn_g(l),
                g = e.ZW * fn_g(u);
              var p, m, b;
              if (e.ZW < 1) {
                p = 3.1339 * d + -1.617 * f + -.4906 * g;
                m = -.9785 * d + 1.916 * f + .0333 * g;
                b = .072 * d + -.229 * f + 1.4057 * g;
              } else {
                p = 3.2406 * d + -1.5372 * f + -.4986 * g;
                m = -.9689 * d + 1.8758 * f + .0415 * g;
                b = .0557 * d + -.204 * f + 1.057 * g;
              }
              i[n] = 255 * Math.sqrt(p);
              i[n + 1] = 255 * Math.sqrt(m);
              i[n + 2] = 255 * Math.sqrt(b);
            }
            return /*#__PURE__*/function (_ColorSpace9) {
              _inherits(LabCS, _ColorSpace9);
              var _super51 = _createSuper(LabCS);
              function LabCS(e, t, a) {
                var _this50;
                _classCallCheck(this, LabCS);
                _this50 = _super51.call(this, "Lab", 3);
                if (!e) throw new r.FormatError("WhitePoint missing - required for color space Lab");
                t || (t = [0, 0, 0]);
                a || (a = [-100, 100, -100, 100]);
                _this50.XW = e[0];
                _this50.YW = e[1];
                _this50.ZW = e[2];
                _this50.amin = a[0];
                _this50.amax = a[1];
                _this50.bmin = a[2];
                _this50.bmax = a[3];
                _this50.XB = t[0];
                _this50.YB = t[1];
                _this50.ZB = t[2];
                if (_this50.XW < 0 || _this50.ZW < 0 || 1 !== _this50.YW) throw new r.FormatError("Invalid WhitePoint components, no fallback available");
                if (_this50.XB < 0 || _this50.YB < 0 || _this50.ZB < 0) {
                  (0, r.info)("Invalid BlackPoint, falling back to default");
                  _this50.XB = _this50.YB = _this50.ZB = 0;
                }
                if (_this50.amin > _this50.amax || _this50.bmin > _this50.bmax) {
                  (0, r.info)("Invalid Range, falling back to defaults");
                  _this50.amin = -100;
                  _this50.amax = 100;
                  _this50.bmin = -100;
                  _this50.bmax = 100;
                }
                return _this50;
              }
              _createClass(LabCS, [{
                key: "getRgbItem",
                value: function getRgbItem(e, t, a, r) {
                  convertToRgb(this, e, t, !1, a, r);
                }
              }, {
                key: "getRgbBuffer",
                value: function getRgbBuffer(e, t, a, r, i, n, s) {
                  var o = (1 << n) - 1;
                  for (var _n27 = 0; _n27 < a; _n27++) {
                    convertToRgb(this, e, t, o, r, i);
                    t += 3;
                    i += 3 + s;
                  }
                }
              }, {
                key: "getOutputLength",
                value: function getOutputLength(e, t) {
                  return e * (3 + t) / 3 | 0;
                }
              }, {
                key: "isDefaultDecode",
                value: function isDefaultDecode(e, t) {
                  return !0;
                }
              }, {
                key: "usesZeroToOneRange",
                get: function get() {
                  return (0, r.shadow)(this, "usesZeroToOneRange", !1);
                }
              }]);
              return LabCS;
            }(ColorSpace);
          }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.PartialEvaluator = t.EvaluatorPreprocessor = void 0;
        var r = a(2),
          i = a(14),
          n = a(4),
          s = a(34),
          o = a(37),
          c = a(41),
          l = a(50),
          h = a(51),
          u = a(42),
          d = a(57),
          f = a(16),
          g = a(59),
          p = a(8),
          m = a(5),
          b = a(60),
          y = a(12),
          w = a(18),
          S = a(38),
          x = a(39),
          C = a(3),
          k = a(45),
          v = a(40),
          F = a(61),
          O = a(62),
          T = a(63),
          M = a(64);
        var E = Object.freeze({
            maxImageSize: -1,
            disableFontFace: !1,
            ignoreErrors: !1,
            isEvalSupported: !0,
            isOffscreenCanvasSupported: !1,
            canvasMaxAreaInBytes: -1,
            fontExtraProperties: !1,
            useSystemFonts: !0,
            cMapUrl: null,
            standardFontDataUrl: null
          }),
          D = 1,
          N = 2,
          R = Promise.resolve();
        function normalizeBlendMode(e) {
          var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
          if (Array.isArray(e)) {
            var _iterator63 = _createForOfIteratorHelper(e),
              _step63;
            try {
              for (_iterator63.s(); !(_step63 = _iterator63.n()).done;) {
                var _t82 = _step63.value;
                var _e118 = normalizeBlendMode(_t82, !0);
                if (_e118) return _e118;
              }
            } catch (err) {
              _iterator63.e(err);
            } finally {
              _iterator63.f();
            }
            (0, r.warn)("Unsupported blend mode Array: ".concat(e));
            return "source-over";
          }
          if (!(e instanceof n.Name)) return t ? null : "source-over";
          switch (e.name) {
            case "Normal":
            case "Compatible":
              return "source-over";
            case "Multiply":
              return "multiply";
            case "Screen":
              return "screen";
            case "Overlay":
              return "overlay";
            case "Darken":
              return "darken";
            case "Lighten":
              return "lighten";
            case "ColorDodge":
              return "color-dodge";
            case "ColorBurn":
              return "color-burn";
            case "HardLight":
              return "hard-light";
            case "SoftLight":
              return "soft-light";
            case "Difference":
              return "difference";
            case "Exclusion":
              return "exclusion";
            case "Hue":
              return "hue";
            case "Saturation":
              return "saturation";
            case "Color":
              return "color";
            case "Luminosity":
              return "luminosity";
          }
          if (t) return null;
          (0, r.warn)("Unsupported blend mode: ".concat(e.name));
          return "source-over";
        }
        function incrementCachedImageMaskCount(e) {
          e.fn === r.OPS.paintImageMaskXObject && e.args[0] && e.args[0].count > 0 && e.args[0].count++;
        }
        var TimeSlotManager = /*#__PURE__*/function () {
          function TimeSlotManager() {
            _classCallCheck(this, TimeSlotManager);
            this.reset();
          }
          _createClass(TimeSlotManager, [{
            key: "check",
            value: function check() {
              if (++this.checked < TimeSlotManager.CHECK_TIME_EVERY) return !1;
              this.checked = 0;
              return this.endTime <= Date.now();
            }
          }, {
            key: "reset",
            value: function reset() {
              this.endTime = Date.now() + TimeSlotManager.TIME_SLOT_DURATION_MS;
              this.checked = 0;
            }
          }]);
          return TimeSlotManager;
        }();
        _defineProperty(TimeSlotManager, "TIME_SLOT_DURATION_MS", 20);
        _defineProperty(TimeSlotManager, "CHECK_TIME_EVERY", 100);
        var PartialEvaluator = /*#__PURE__*/function () {
          function PartialEvaluator(_ref39) {
            var e = _ref39.xref,
              t = _ref39.handler,
              a = _ref39.pageIndex,
              r = _ref39.idFactory,
              i = _ref39.fontCache,
              n = _ref39.builtInCMapCache,
              s = _ref39.standardFontDataCache,
              o = _ref39.globalImageCache,
              _ref39$options = _ref39.options,
              c = _ref39$options === void 0 ? null : _ref39$options;
            _classCallCheck(this, PartialEvaluator);
            this.xref = e;
            this.handler = t;
            this.pageIndex = a;
            this.idFactory = r;
            this.fontCache = i;
            this.builtInCMapCache = n;
            this.standardFontDataCache = s;
            this.globalImageCache = o;
            this.options = c || E;
            this.parsingType3Font = !1;
            this._regionalImageCache = new g.RegionalImageCache();
            this._fetchBuiltInCMapBound = this.fetchBuiltInCMap.bind(this);
            F.ImageResizer.setMaxArea(this.options.canvasMaxAreaInBytes);
          }
          _createClass(PartialEvaluator, [{
            key: "_pdfFunctionFactory",
            get: function get() {
              var e = new d.PDFFunctionFactory({
                xref: this.xref,
                isEvalSupported: this.options.isEvalSupported
              });
              return (0, r.shadow)(this, "_pdfFunctionFactory", e);
            }
          }, {
            key: "clone",
            value: function clone() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
              var t = Object.create(this);
              t.options = Object.assign(Object.create(null), this.options, e);
              return t;
            }
          }, {
            key: "hasBlendModes",
            value: function hasBlendModes(e, t) {
              if (!(e instanceof n.Dict)) return !1;
              if (e.objId && t.has(e.objId)) return !1;
              var a = new n.RefSet(t);
              e.objId && a.put(e.objId);
              var i = [e],
                s = this.xref;
              for (; i.length;) {
                var _e119 = i.shift(),
                  _t83 = _e119.get("ExtGState");
                if (_t83 instanceof n.Dict) {
                  var _iterator64 = _createForOfIteratorHelper(_t83.getRawValues()),
                    _step64;
                  try {
                    for (_iterator64.s(); !(_step64 = _iterator64.n()).done;) {
                      var _e120 = _step64.value;
                      if (_e120 instanceof n.Ref) {
                        if (a.has(_e120)) continue;
                        try {
                          _e120 = s.fetch(_e120);
                        } catch (t) {
                          a.put(_e120);
                          (0, r.info)("hasBlendModes - ignoring ExtGState: \"".concat(t, "\"."));
                          continue;
                        }
                      }
                      if (!(_e120 instanceof n.Dict)) continue;
                      _e120.objId && a.put(_e120.objId);
                      var _t84 = _e120.get("BM");
                      if (_t84 instanceof n.Name) {
                        if ("Normal" !== _t84.name) return !0;
                      } else if (void 0 !== _t84 && Array.isArray(_t84)) {
                        var _iterator65 = _createForOfIteratorHelper(_t84),
                          _step65;
                        try {
                          for (_iterator65.s(); !(_step65 = _iterator65.n()).done;) {
                            var _e121 = _step65.value;
                            if (_e121 instanceof n.Name && "Normal" !== _e121.name) return !0;
                          }
                        } catch (err) {
                          _iterator65.e(err);
                        } finally {
                          _iterator65.f();
                        }
                      }
                    }
                  } catch (err) {
                    _iterator64.e(err);
                  } finally {
                    _iterator64.f();
                  }
                }
                var _o15 = _e119.get("XObject");
                if (_o15 instanceof n.Dict) {
                  var _iterator66 = _createForOfIteratorHelper(_o15.getRawValues()),
                    _step66;
                  try {
                    for (_iterator66.s(); !(_step66 = _iterator66.n()).done;) {
                      var _e122 = _step66.value;
                      if (_e122 instanceof n.Ref) {
                        if (a.has(_e122)) continue;
                        try {
                          _e122 = s.fetch(_e122);
                        } catch (t) {
                          a.put(_e122);
                          (0, r.info)("hasBlendModes - ignoring XObject: \"".concat(t, "\"."));
                          continue;
                        }
                      }
                      if (!(_e122 instanceof m.BaseStream)) continue;
                      _e122.dict.objId && a.put(_e122.dict.objId);
                      var _t85 = _e122.dict.get("Resources");
                      if (_t85 instanceof n.Dict && (!_t85.objId || !a.has(_t85.objId))) {
                        i.push(_t85);
                        _t85.objId && a.put(_t85.objId);
                      }
                    }
                  } catch (err) {
                    _iterator66.e(err);
                  } finally {
                    _iterator66.f();
                  }
                }
              }
              var _iterator67 = _createForOfIteratorHelper(a),
                _step67;
              try {
                for (_iterator67.s(); !(_step67 = _iterator67.n()).done;) {
                  var _e123 = _step67.value;
                  t.put(_e123);
                }
              } catch (err) {
                _iterator67.e(err);
              } finally {
                _iterator67.f();
              }
              return !1;
            }
          }, {
            key: "fetchBuiltInCMap",
            value: function () {
              var _fetchBuiltInCMap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37(e) {
                var t, a, _t86, _i59;
                return _regeneratorRuntime().wrap(function _callee37$(_context37) {
                  while (1) switch (_context37.prev = _context37.next) {
                    case 0:
                      t = this.builtInCMapCache.get(e);
                      if (!t) {
                        _context37.next = 3;
                        break;
                      }
                      return _context37.abrupt("return", t);
                    case 3:
                      if (!(null !== this.options.cMapUrl)) {
                        _context37.next = 19;
                        break;
                      }
                      _t86 = "".concat(this.options.cMapUrl).concat(e, ".bcmap");
                      _context37.next = 7;
                      return fetch(_t86);
                    case 7:
                      _i59 = _context37.sent;
                      if (_i59.ok) {
                        _context37.next = 10;
                        break;
                      }
                      throw new Error("fetchBuiltInCMap: failed to fetch file \"".concat(_t86, "\" with \"").concat(_i59.statusText, "\"."));
                    case 10:
                      _context37.t0 = Uint8Array;
                      _context37.next = 13;
                      return _i59.arrayBuffer();
                    case 13:
                      _context37.t1 = _context37.sent;
                      _context37.t2 = new _context37.t0(_context37.t1);
                      _context37.t3 = r.CMapCompressionType.BINARY;
                      a = {
                        cMapData: _context37.t2,
                        compressionType: _context37.t3
                      };
                      _context37.next = 22;
                      break;
                    case 19:
                      _context37.next = 21;
                      return this.handler.sendWithPromise("FetchBuiltInCMap", {
                        name: e
                      });
                    case 21:
                      a = _context37.sent;
                    case 22:
                      a.compressionType !== r.CMapCompressionType.NONE && this.builtInCMapCache.set(e, a);
                      return _context37.abrupt("return", a);
                    case 24:
                    case "end":
                      return _context37.stop();
                  }
                }, _callee37, this);
              }));
              function fetchBuiltInCMap(_x92) {
                return _fetchBuiltInCMap.apply(this, arguments);
              }
              return fetchBuiltInCMap;
            }()
          }, {
            key: "fetchStandardFontData",
            value: function () {
              var _fetchStandardFontData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38(e) {
                var t, a, i, _e124, _t87;
                return _regeneratorRuntime().wrap(function _callee38$(_context38) {
                  while (1) switch (_context38.prev = _context38.next) {
                    case 0:
                      t = this.standardFontDataCache.get(e);
                      if (!t) {
                        _context38.next = 3;
                        break;
                      }
                      return _context38.abrupt("return", new p.Stream(t));
                    case 3:
                      if (!(this.options.useSystemFonts && "Symbol" !== e && "ZapfDingbats" !== e)) {
                        _context38.next = 5;
                        break;
                      }
                      return _context38.abrupt("return", null);
                    case 5:
                      a = (0, c.getFontNameToFileMap)()[e];
                      if (!(null !== this.options.standardFontDataUrl)) {
                        _context38.next = 20;
                        break;
                      }
                      _e124 = "".concat(this.options.standardFontDataUrl).concat(a);
                      _context38.next = 10;
                      return fetch(_e124);
                    case 10:
                      _t87 = _context38.sent;
                      if (!_t87.ok) {
                        _context38.next = 17;
                        break;
                      }
                      _context38.next = 14;
                      return _t87.arrayBuffer();
                    case 14:
                      i = _context38.sent;
                      _context38.next = 18;
                      break;
                    case 17:
                      (0, r.warn)("fetchStandardFontData: failed to fetch file \"".concat(_e124, "\" with \"").concat(_t87.statusText, "\"."));
                    case 18:
                      _context38.next = 29;
                      break;
                    case 20:
                      _context38.prev = 20;
                      _context38.next = 23;
                      return this.handler.sendWithPromise("FetchStandardFontData", {
                        filename: a
                      });
                    case 23:
                      i = _context38.sent;
                      _context38.next = 29;
                      break;
                    case 26:
                      _context38.prev = 26;
                      _context38.t0 = _context38["catch"](20);
                      (0, r.warn)("fetchStandardFontData: failed to fetch file \"".concat(a, "\" with \"").concat(_context38.t0, "\"."));
                    case 29:
                      if (i) {
                        _context38.next = 31;
                        break;
                      }
                      return _context38.abrupt("return", null);
                    case 31:
                      this.standardFontDataCache.set(e, i);
                      return _context38.abrupt("return", new p.Stream(i));
                    case 33:
                    case "end":
                      return _context38.stop();
                  }
                }, _callee38, this, [[20, 26]]);
              }));
              function fetchStandardFontData(_x93) {
                return _fetchStandardFontData.apply(this, arguments);
              }
              return fetchStandardFontData;
            }()
          }, {
            key: "buildFormXObject",
            value: function () {
              var _buildFormXObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39(e, t, a, i, s, o, c) {
                var l, h, u, d, f, g, _t88, _s21, _t89, _a69, p;
                return _regeneratorRuntime().wrap(function _callee39$(_context39) {
                  while (1) switch (_context39.prev = _context39.next) {
                    case 0:
                      l = t.dict, h = l.getArray("Matrix");
                      f = l.getArray("BBox");
                      f = Array.isArray(f) && 4 === f.length ? r.Util.normalizeRect(f) : null;
                      _context39.t0 = l.has("OC");
                      if (!_context39.t0) {
                        _context39.next = 8;
                        break;
                      }
                      _context39.next = 7;
                      return this.parseMarkedContentProps(l.get("OC"), e);
                    case 7:
                      u = _context39.sent;
                    case 8:
                      void 0 !== u && i.addOp(r.OPS.beginMarkedContentProps, ["OC", u]);
                      g = l.get("Group");
                      if (!g) {
                        _context39.next = 27;
                        break;
                      }
                      d = {
                        matrix: h,
                        bbox: f,
                        smask: a,
                        isolated: !1,
                        knockout: !1
                      };
                      _t88 = g.get("S");
                      _s21 = null;
                      if (!(0, n.isName)(_t88, "Transparency")) {
                        _context39.next = 25;
                        break;
                      }
                      d.isolated = g.get("I") || !1;
                      d.knockout = g.get("K") || !1;
                      if (!g.has("CS")) {
                        _context39.next = 25;
                        break;
                      }
                      _t89 = g.getRaw("CS"), _a69 = y.ColorSpace.getCached(_t89, this.xref, c);
                      _context39.t1 = _a69;
                      if (_context39.t1) {
                        _context39.next = 24;
                        break;
                      }
                      _context39.next = 23;
                      return this.parseColorSpace({
                        cs: _t89,
                        resources: e,
                        localColorSpaceCache: c
                      });
                    case 23:
                      _context39.t1 = _context39.sent;
                    case 24:
                      _s21 = _context39.t1;
                    case 25:
                      if (a && a.backdrop) {
                        _s21 || (_s21 = y.ColorSpace.singletons.rgb);
                        a.backdrop = _s21.getRgb(a.backdrop, 0);
                      }
                      i.addOp(r.OPS.beginGroup, [d]);
                    case 27:
                      p = g ? [h, null] : [h, f];
                      i.addOp(r.OPS.paintFormXObjectBegin, p);
                      return _context39.abrupt("return", this.getOperatorList({
                        stream: t,
                        task: s,
                        resources: l.get("Resources") || e,
                        operatorList: i,
                        initialState: o
                      }).then(function () {
                        i.addOp(r.OPS.paintFormXObjectEnd, []);
                        g && i.addOp(r.OPS.endGroup, [d]);
                        void 0 !== u && i.addOp(r.OPS.endMarkedContent, []);
                      }));
                    case 30:
                    case "end":
                      return _context39.stop();
                  }
                }, _callee39, this);
              }));
              function buildFormXObject(_x94, _x95, _x96, _x97, _x98, _x99, _x100) {
                return _buildFormXObject.apply(this, arguments);
              }
              return buildFormXObject;
            }()
          }, {
            key: "_sendImgData",
            value: function _sendImgData(e, t) {
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
              var r = t ? [t.bitmap || t.data.buffer] : null;
              return this.parsingType3Font || a ? this.handler.send("commonobj", [e, "Image", t], r) : this.handler.send("obj", [e, this.pageIndex, "Image", t], r);
            }
          }, {
            key: "buildPaintImageXObject",
            value: function () {
              var _buildPaintImageXObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee41(_ref40) {
                var _this51 = this;
                var e, t, _ref40$isInline, a, i, n, s, o, c, l, h, u, d, _e125, f, g, p, _e126, _a70, _o16, _d3, _e127, _e128, _m, _e129, m, b, _n28, y, S, _e131;
                return _regeneratorRuntime().wrap(function _callee41$(_context41) {
                  while (1) switch (_context41.prev = _context41.next) {
                    case 0:
                      e = _ref40.resources, t = _ref40.image, _ref40$isInline = _ref40.isInline, a = _ref40$isInline === void 0 ? !1 : _ref40$isInline, i = _ref40.operatorList, n = _ref40.cacheKey, s = _ref40.localImageCache, o = _ref40.localColorSpaceCache;
                      c = t.dict, l = c.objId, h = c.get("W", "Width"), u = c.get("H", "Height");
                      if (!(!h || "number" != typeof h || !u || "number" != typeof u)) {
                        _context41.next = 5;
                        break;
                      }
                      (0, r.warn)("Image dimensions are missing, or not numbers.");
                      return _context41.abrupt("return");
                    case 5:
                      d = this.options.maxImageSize;
                      if (!(-1 !== d && h * u > d)) {
                        _context41.next = 12;
                        break;
                      }
                      _e125 = "Image exceeded maximum allowed size and was removed.";
                      if (!this.options.ignoreErrors) {
                        _context41.next = 11;
                        break;
                      }
                      (0, r.warn)(_e125);
                      return _context41.abrupt("return");
                    case 11:
                      throw new Error(_e125);
                    case 12:
                      _context41.t0 = c.has("OC");
                      if (!_context41.t0) {
                        _context41.next = 17;
                        break;
                      }
                      _context41.next = 16;
                      return this.parseMarkedContentProps(c.get("OC"), e);
                    case 16:
                      f = _context41.sent;
                    case 17:
                      if (!(c.get("IM", "ImageMask") || !1)) {
                        _context41.next = 40;
                        break;
                      }
                      _e126 = c.get("I", "Interpolate"), _a70 = h + 7 >> 3, _o16 = t.getBytes(_a70 * u), _d3 = c.getArray("D", "Decode");
                      if (!this.parsingType3Font) {
                        _context41.next = 26;
                        break;
                      }
                      g = M.PDFImage.createRawMask({
                        imgArray: _o16,
                        width: h,
                        height: u,
                        imageIsFromDecodeStream: t instanceof w.DecodeStream,
                        inverseDecode: !!_d3 && _d3[0] > 0,
                        interpolate: _e126
                      });
                      g.cached = !!n;
                      p = [g];
                      i.addImageOps(r.OPS.paintImageMaskXObject, p, f);
                      if (n) {
                        _e127 = {
                          fn: r.OPS.paintImageMaskXObject,
                          args: p,
                          optionalContent: f
                        };
                        s.set(n, l, _e127);
                        l && this._regionalImageCache.set(null, l, _e127);
                      }
                      return _context41.abrupt("return");
                    case 26:
                      _context41.next = 28;
                      return M.PDFImage.createMask({
                        imgArray: _o16,
                        width: h,
                        height: u,
                        imageIsFromDecodeStream: t instanceof w.DecodeStream,
                        inverseDecode: !!_d3 && _d3[0] > 0,
                        interpolate: _e126,
                        isOffscreenCanvasSupported: this.options.isOffscreenCanvasSupported
                      });
                    case 28:
                      g = _context41.sent;
                      if (!g.isSingleOpaquePixel) {
                        _context41.next = 33;
                        break;
                      }
                      i.addImageOps(r.OPS.paintSolidColorImageMask, [], f);
                      if (n) {
                        _e128 = {
                          fn: r.OPS.paintSolidColorImageMask,
                          args: [],
                          optionalContent: f
                        };
                        s.set(n, l, _e128);
                        l && this._regionalImageCache.set(null, l, _e128);
                      }
                      return _context41.abrupt("return");
                    case 33:
                      _m = "mask_".concat(this.idFactory.createObjId());
                      i.addDependency(_m);
                      this._sendImgData(_m, g);
                      p = [{
                        data: _m,
                        width: g.width,
                        height: g.height,
                        interpolate: g.interpolate,
                        count: 1
                      }];
                      i.addImageOps(r.OPS.paintImageMaskXObject, p, f);
                      if (n) {
                        _e129 = {
                          fn: r.OPS.paintImageMaskXObject,
                          args: p,
                          optionalContent: f
                        };
                        s.set(n, l, _e129);
                        l && this._regionalImageCache.set(null, l, _e129);
                      }
                      return _context41.abrupt("return");
                    case 40:
                      m = c.get("SM", "SMask") || !1, b = c.get("Mask") || !1;
                      if (!(a && !m && !b && h + u < 200)) {
                        _context41.next = 49;
                        break;
                      }
                      _n28 = new M.PDFImage({
                        xref: this.xref,
                        res: e,
                        image: t,
                        isInline: a,
                        pdfFunctionFactory: this._pdfFunctionFactory,
                        localColorSpaceCache: o
                      });
                      _context41.next = 45;
                      return _n28.createImageData(!0, !1);
                    case 45:
                      g = _context41.sent;
                      i.isOffscreenCanvasSupported = this.options.isOffscreenCanvasSupported;
                      i.addImageOps(r.OPS.paintInlineImageXObject, [g], f);
                      return _context41.abrupt("return");
                    case 49:
                      y = "img_".concat(this.idFactory.createObjId()), S = !1;
                      if (this.parsingType3Font) y = "".concat(this.idFactory.getDocId(), "_type3_").concat(y);else if (l) {
                        S = this.globalImageCache.shouldCache(l, this.pageIndex);
                        S && (y = "".concat(this.idFactory.getDocId(), "_").concat(y));
                      }
                      i.addDependency(y);
                      p = [y, h, u];
                      M.PDFImage.buildImage({
                        xref: this.xref,
                        res: e,
                        image: t,
                        isInline: a,
                        pdfFunctionFactory: this._pdfFunctionFactory,
                        localColorSpaceCache: o
                      }).then( /*#__PURE__*/function () {
                        var _ref41 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40(e) {
                          var _e130;
                          return _regeneratorRuntime().wrap(function _callee40$(_context40) {
                            while (1) switch (_context40.prev = _context40.next) {
                              case 0:
                                _context40.next = 2;
                                return e.createImageData(!1, _this51.options.isOffscreenCanvasSupported);
                              case 2:
                                g = _context40.sent;
                                if (n && l && S) {
                                  _e130 = 0;
                                  _e130 = g.bitmap ? g.width * g.height * 4 : g.data.length;
                                  _this51.globalImageCache.addByteSize(l, _e130);
                                }
                                return _context40.abrupt("return", _this51._sendImgData(y, g, S));
                              case 5:
                              case "end":
                                return _context40.stop();
                            }
                          }, _callee40);
                        }));
                        return function (_x102) {
                          return _ref41.apply(this, arguments);
                        };
                      }()).catch(function (e) {
                        (0, r.warn)("Unable to decode image \"".concat(y, "\": \"").concat(e, "\"."));
                        return _this51._sendImgData(y, null, S);
                      });
                      i.addImageOps(r.OPS.paintImageXObject, p, f);
                      if (n) {
                        _e131 = {
                          fn: r.OPS.paintImageXObject,
                          args: p,
                          optionalContent: f
                        };
                        s.set(n, l, _e131);
                        if (l) {
                          this._regionalImageCache.set(null, l, _e131);
                          if (S) {
                            (0, r.assert)(!a, "Cannot cache an inline image globally.");
                            this.globalImageCache.setData(l, {
                              objId: y,
                              fn: r.OPS.paintImageXObject,
                              args: p,
                              optionalContent: f,
                              byteSize: 0
                            });
                          }
                        }
                      }
                    case 56:
                    case "end":
                      return _context41.stop();
                  }
                }, _callee41, this);
              }));
              function buildPaintImageXObject(_x101) {
                return _buildPaintImageXObject.apply(this, arguments);
              }
              return buildPaintImageXObject;
            }()
          }, {
            key: "handleSMask",
            value: function handleSMask(e, t, a, r, i, n) {
              var s = e.get("G"),
                o = {
                  subtype: e.get("S").name,
                  backdrop: e.get("BC")
                },
                c = e.get("TR");
              if ((0, d.isPDFFunction)(c)) {
                var _e132 = this._pdfFunctionFactory.create(c),
                  _t90 = new Uint8Array(256),
                  _a71 = new Float32Array(1);
                for (var _r61 = 0; _r61 < 256; _r61++) {
                  _a71[0] = _r61 / 255;
                  _e132(_a71, 0, _a71, 0);
                  _t90[_r61] = 255 * _a71[0] | 0;
                }
                o.transferMap = _t90;
              }
              return this.buildFormXObject(t, s, o, a, r, i.state.clone(), n);
            }
          }, {
            key: "handleTransferFunction",
            value: function handleTransferFunction(e) {
              var t;
              if (Array.isArray(e)) t = e;else {
                if (!(0, d.isPDFFunction)(e)) return null;
                t = [e];
              }
              var a = [];
              var r = 0,
                i = 0;
              var _iterator68 = _createForOfIteratorHelper(t),
                _step68;
              try {
                for (_iterator68.s(); !(_step68 = _iterator68.n()).done;) {
                  var _e133 = _step68.value;
                  var _t91 = this.xref.fetchIfRef(_e133);
                  r++;
                  if ((0, n.isName)(_t91, "Identity")) {
                    a.push(null);
                    continue;
                  }
                  if (!(0, d.isPDFFunction)(_t91)) return null;
                  var _s22 = this._pdfFunctionFactory.create(_t91),
                    _o17 = new Uint8Array(256),
                    _c8 = new Float32Array(1);
                  for (var _e134 = 0; _e134 < 256; _e134++) {
                    _c8[0] = _e134 / 255;
                    _s22(_c8, 0, _c8, 0);
                    _o17[_e134] = 255 * _c8[0] | 0;
                  }
                  a.push(_o17);
                  i++;
                }
              } catch (err) {
                _iterator68.e(err);
              } finally {
                _iterator68.f();
              }
              return 1 !== r && 4 !== r || 0 === i ? null : a;
            }
          }, {
            key: "handleTilingType",
            value: function handleTilingType(e, t, a, i, s, o, c, h) {
              var _this52 = this;
              var u = new T.OperatorList(),
                d = n.Dict.merge({
                  xref: this.xref,
                  dictArray: [s.get("Resources"), a]
                });
              return this.getOperatorList({
                stream: i,
                task: c,
                resources: d,
                operatorList: u
              }).then(function () {
                var a = u.getIR(),
                  r = (0, l.getTilingPatternIR)(a, s, t);
                o.addDependencies(u.dependencies);
                o.addOp(e, r);
                s.objId && h.set(null, s.objId, {
                  operatorListIR: a,
                  dict: s
                });
              }).catch(function (e) {
                if (!(e instanceof r.AbortException)) {
                  if (!_this52.options.ignoreErrors) throw e;
                  (0, r.warn)("handleTilingType - ignoring pattern: \"".concat(e, "\"."));
                }
              });
            }
          }, {
            key: "handleSetFont",
            value: function handleSetFont(e, t, a, r, i, o) {
              var _this53 = this;
              var c = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;
              var l = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;
              var h = t && t[0] instanceof n.Name ? t[0].name : null;
              return this.loadFont(h, a, e, c, l).then(function (t) {
                return t.font.isType3Font ? t.loadType3Data(_this53, e, i).then(function () {
                  r.addDependencies(t.type3Dependencies);
                  return t;
                }).catch(function (e) {
                  return new TranslatedFont({
                    loadedName: "g_font_error",
                    font: new s.ErrorFont("Type3 font load error: ".concat(e)),
                    dict: t.font,
                    evaluatorOptions: _this53.options
                  });
                }) : t;
              }).then(function (e) {
                o.font = e.font;
                e.send(_this53.handler);
                return e.loadedName;
              });
            }
          }, {
            key: "handleText",
            value: function handleText(e, t) {
              var a = t.font,
                i = a.charsToGlyphs(e);
              if (a.data) {
                (!!(t.textRenderingMode & r.TextRenderingMode.ADD_TO_PATH_FLAG) || "Pattern" === t.fillColorSpace.name || a.disableFontFace || this.options.disableFontFace) && PartialEvaluator.buildFontPaths(a, i, this.handler, this.options);
              }
              return i;
            }
          }, {
            key: "ensureStateFont",
            value: function ensureStateFont(e) {
              if (e.font) return;
              var t = new r.FormatError("Missing setFont (Tf) operator before text rendering operator.");
              if (!this.options.ignoreErrors) throw t;
              (0, r.warn)("ensureStateFont: \"".concat(t, "\"."));
            }
          }, {
            key: "setGState",
            value: function () {
              var _setGState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee42(_ref42) {
                var _this54 = this;
                var e, t, a, i, s, o, c, l, h, u, d, f, _iterator69, _step69, _loop4;
                return _regeneratorRuntime().wrap(function _callee42$(_context43) {
                  while (1) switch (_context43.prev = _context43.next) {
                    case 0:
                      e = _ref42.resources, t = _ref42.gState, a = _ref42.operatorList, i = _ref42.cacheKey, s = _ref42.task, o = _ref42.stateManager, c = _ref42.localGStateCache, l = _ref42.localColorSpaceCache;
                      h = t.objId;
                      u = !0;
                      d = [];
                      f = Promise.resolve();
                      _iterator69 = _createForOfIteratorHelper(t.getKeys());
                      _context43.prev = 6;
                      _loop4 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop4() {
                        var i, c, _t92;
                        return _regeneratorRuntime().wrap(function _loop4$(_context42) {
                          while (1) switch (_context42.prev = _context42.next) {
                            case 0:
                              i = _step69.value;
                              c = t.get(i);
                              _context42.t0 = i;
                              _context42.next = _context42.t0 === "Type" ? 5 : _context42.t0 === "LW" ? 6 : _context42.t0 === "LC" ? 6 : _context42.t0 === "LJ" ? 6 : _context42.t0 === "ML" ? 6 : _context42.t0 === "D" ? 6 : _context42.t0 === "RI" ? 6 : _context42.t0 === "FL" ? 6 : _context42.t0 === "CA" ? 6 : _context42.t0 === "ca" ? 6 : _context42.t0 === "Font" ? 8 : _context42.t0 === "BM" ? 11 : _context42.t0 === "SMask" ? 13 : _context42.t0 === "TR" ? 18 : _context42.t0 === "OP" ? 21 : _context42.t0 === "op" ? 21 : _context42.t0 === "OPM" ? 21 : _context42.t0 === "BG" ? 21 : _context42.t0 === "BG2" ? 21 : _context42.t0 === "UCR" ? 21 : _context42.t0 === "UCR2" ? 21 : _context42.t0 === "TR2" ? 21 : _context42.t0 === "HT" ? 21 : _context42.t0 === "SM" ? 21 : _context42.t0 === "SA" ? 21 : _context42.t0 === "AIS" ? 21 : _context42.t0 === "TK" ? 21 : 23;
                              break;
                            case 5:
                              return _context42.abrupt("break", 24);
                            case 6:
                              d.push([i, c]);
                              return _context42.abrupt("break", 24);
                            case 8:
                              u = !1;
                              f = f.then(function () {
                                return _this54.handleSetFont(e, null, c[0], a, s, o.state).then(function (e) {
                                  a.addDependency(e);
                                  d.push([i, [e, c[1]]]);
                                });
                              });
                              return _context42.abrupt("break", 24);
                            case 11:
                              d.push([i, normalizeBlendMode(c)]);
                              return _context42.abrupt("break", 24);
                            case 13:
                              if (!(0, n.isName)(c, "None")) {
                                _context42.next = 16;
                                break;
                              }
                              d.push([i, !1]);
                              return _context42.abrupt("break", 24);
                            case 16:
                              if (c instanceof n.Dict) {
                                u = !1;
                                f = f.then(function () {
                                  return _this54.handleSMask(c, e, a, s, o, l);
                                });
                                d.push([i, !0]);
                              } else (0, r.warn)("Unsupported SMask type");
                              return _context42.abrupt("break", 24);
                            case 18:
                              _t92 = _this54.handleTransferFunction(c);
                              d.push([i, _t92]);
                              return _context42.abrupt("break", 24);
                            case 21:
                              (0, r.info)("graphic state operator " + i);
                              return _context42.abrupt("break", 24);
                            case 23:
                              (0, r.info)("Unknown graphic state operator " + i);
                            case 24:
                            case "end":
                              return _context42.stop();
                          }
                        }, _loop4);
                      });
                      _iterator69.s();
                    case 9:
                      if ((_step69 = _iterator69.n()).done) {
                        _context43.next = 13;
                        break;
                      }
                      return _context43.delegateYield(_loop4(), "t0", 11);
                    case 11:
                      _context43.next = 9;
                      break;
                    case 13:
                      _context43.next = 18;
                      break;
                    case 15:
                      _context43.prev = 15;
                      _context43.t1 = _context43["catch"](6);
                      _iterator69.e(_context43.t1);
                    case 18:
                      _context43.prev = 18;
                      _iterator69.f();
                      return _context43.finish(18);
                    case 21:
                      return _context43.abrupt("return", f.then(function () {
                        d.length > 0 && a.addOp(r.OPS.setGState, [d]);
                        u && c.set(i, h, d);
                      }));
                    case 22:
                    case "end":
                      return _context43.stop();
                  }
                }, _callee42, null, [[6, 15, 18, 21]]);
              }));
              function setGState(_x103) {
                return _setGState.apply(this, arguments);
              }
              return setGState;
            }()
          }, {
            key: "loadFont",
            value: function loadFont(e, t, a) {
              var _this55 = this;
              var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
              var o = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
              var errorFont = /*#__PURE__*/function () {
                  var _ref43 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee43() {
                    return _regeneratorRuntime().wrap(function _callee43$(_context44) {
                      while (1) switch (_context44.prev = _context44.next) {
                        case 0:
                          return _context44.abrupt("return", new TranslatedFont({
                            loadedName: "g_font_error",
                            font: new s.ErrorFont("Font \"".concat(e, "\" is not available.")),
                            dict: t,
                            evaluatorOptions: _this55.options
                          }));
                        case 1:
                        case "end":
                          return _context44.stop();
                      }
                    }, _callee43);
                  }));
                  return function errorFont() {
                    return _ref43.apply(this, arguments);
                  };
                }(),
                c = this.xref;
              var l;
              if (t) t instanceof n.Ref && (l = t);else {
                var _t93 = a.get("Font");
                _t93 && (l = _t93.getRaw(e));
              }
              if (!l) {
                var _a72 = "Font \"".concat(e || t && t.toString(), "\" is not available");
                if (!this.options.ignoreErrors && !this.parsingType3Font) {
                  (0, r.warn)("".concat(_a72, "."));
                  return errorFont();
                }
                (0, r.warn)("".concat(_a72, " -- attempting to fallback to a default font."));
                l = i || PartialEvaluator.fallbackFontDict;
              }
              if (this.parsingType3Font && this.type3FontRefs.has(l)) return errorFont();
              if (this.fontCache.has(l)) return this.fontCache.get(l);
              if (!((t = c.fetchIfRef(l)) instanceof n.Dict)) return errorFont();
              if (t.cacheKey && this.fontCache.has(t.cacheKey)) return this.fontCache.get(t.cacheKey);
              var h = new r.PromiseCapability();
              var u;
              try {
                u = this.preEvaluateFont(t);
                u.cssFontInfo = o;
              } catch (e) {
                (0, r.warn)("loadFont - preEvaluateFont failed: \"".concat(e, "\"."));
                return errorFont();
              }
              var _u5 = u,
                d = _u5.descriptor,
                f = _u5.hash,
                g = l instanceof n.Ref;
              var p;
              g && (p = "f".concat(l.toString()));
              if (f && d instanceof n.Dict) {
                var _e135 = d.fontAliases || (d.fontAliases = Object.create(null));
                if (_e135[f]) {
                  var _t94 = _e135[f].aliasRef;
                  if (g && _t94 && this.fontCache.has(_t94)) {
                    this.fontCache.putAlias(l, _t94);
                    return this.fontCache.get(l);
                  }
                } else _e135[f] = {
                  fontID: this.idFactory.createFontId()
                };
                g && (_e135[f].aliasRef = l);
                p = _e135[f].fontID;
              }
              if (g) this.fontCache.put(l, h.promise);else {
                p || (p = this.idFactory.createFontId());
                t.cacheKey = "cacheKey_".concat(p);
                this.fontCache.put(t.cacheKey, h.promise);
              }
              (0, r.assert)(p && p.startsWith("f"), 'The "fontID" must be (correctly) defined.');
              t.loadedName = "".concat(this.idFactory.getDocId(), "_").concat(p);
              this.translateFont(u).then(function (e) {
                h.resolve(new TranslatedFont({
                  loadedName: t.loadedName,
                  font: e,
                  dict: t,
                  evaluatorOptions: _this55.options
                }));
              }).catch(function (e) {
                (0, r.warn)("loadFont - translateFont failed: \"".concat(e, "\"."));
                h.resolve(new TranslatedFont({
                  loadedName: t.loadedName,
                  font: new s.ErrorFont(e instanceof Error ? e.message : e),
                  dict: t,
                  evaluatorOptions: _this55.options
                }));
              });
              return h.promise;
            }
          }, {
            key: "buildPath",
            value: function buildPath(e, t, a) {
              var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;
              var n = e.length - 1;
              a || (a = []);
              if (n < 0 || e.fnArray[n] !== r.OPS.constructPath) {
                if (i) {
                  (0, r.warn)("Encountered path operator \"".concat(t, "\" inside of a text object."));
                  e.addOp(r.OPS.save, null);
                }
                var _n29;
                switch (t) {
                  case r.OPS.rectangle:
                    var _e136 = a[0] + a[2],
                      _t95 = a[1] + a[3];
                    _n29 = [Math.min(a[0], _e136), Math.max(a[0], _e136), Math.min(a[1], _t95), Math.max(a[1], _t95)];
                    break;
                  case r.OPS.moveTo:
                  case r.OPS.lineTo:
                    _n29 = [a[0], a[0], a[1], a[1]];
                    break;
                  default:
                    _n29 = [1 / 0, -1 / 0, 1 / 0, -1 / 0];
                }
                e.addOp(r.OPS.constructPath, [[t], a, _n29]);
                i && e.addOp(r.OPS.restore, null);
              } else {
                var _i60$;
                var _i60 = e.argsArray[n];
                _i60[0].push(t);
                (_i60$ = _i60[1]).push.apply(_i60$, _toConsumableArray(a));
                var _s23 = _i60[2];
                switch (t) {
                  case r.OPS.rectangle:
                    var _e137 = a[0] + a[2],
                      _t96 = a[1] + a[3];
                    _s23[0] = Math.min(_s23[0], a[0], _e137);
                    _s23[1] = Math.max(_s23[1], a[0], _e137);
                    _s23[2] = Math.min(_s23[2], a[1], _t96);
                    _s23[3] = Math.max(_s23[3], a[1], _t96);
                    break;
                  case r.OPS.moveTo:
                  case r.OPS.lineTo:
                    _s23[0] = Math.min(_s23[0], a[0]);
                    _s23[1] = Math.max(_s23[1], a[0]);
                    _s23[2] = Math.min(_s23[2], a[1]);
                    _s23[3] = Math.max(_s23[3], a[1]);
                }
              }
            }
          }, {
            key: "parseColorSpace",
            value: function parseColorSpace(_ref44) {
              var _this56 = this;
              var e = _ref44.cs,
                t = _ref44.resources,
                a = _ref44.localColorSpaceCache;
              return y.ColorSpace.parseAsync({
                cs: e,
                xref: this.xref,
                resources: t,
                pdfFunctionFactory: this._pdfFunctionFactory,
                localColorSpaceCache: a
              }).catch(function (e) {
                if (e instanceof r.AbortException) return null;
                if (_this56.options.ignoreErrors) {
                  (0, r.warn)("parseColorSpace - ignoring ColorSpace: \"".concat(e, "\"."));
                  return null;
                }
                throw e;
              });
            }
          }, {
            key: "parseShading",
            value: function parseShading(_ref45) {
              var e = _ref45.shading,
                t = _ref45.resources,
                a = _ref45.localColorSpaceCache,
                r = _ref45.localShadingPatternCache;
              var i = r.get(e);
              if (!i) {
                var _n30 = l.Pattern.parseShading(e, this.xref, t, this._pdfFunctionFactory, a).getIR();
                i = "pattern_".concat(this.idFactory.createObjId());
                this.parsingType3Font && (i = "".concat(this.idFactory.getDocId(), "_type3_").concat(i));
                r.set(e, i);
                this.parsingType3Font ? this.handler.send("commonobj", [i, "Pattern", _n30]) : this.handler.send("obj", [i, this.pageIndex, "Pattern", _n30]);
              }
              return i;
            }
          }, {
            key: "handleColorN",
            value: function handleColorN(e, t, a, i, s, o, c, h, u, d) {
              var f = a.pop();
              if (f instanceof n.Name) {
                var g = s.getRaw(f.name),
                  p = g instanceof n.Ref && u.getByRef(g);
                if (p) try {
                  var _r62 = i.base ? i.base.getRgb(a, 0) : null,
                    _n31 = (0, l.getTilingPatternIR)(p.operatorListIR, p.dict, _r62);
                  e.addOp(t, _n31);
                  return;
                } catch (e) {}
                var _b = this.xref.fetchIfRef(g);
                if (_b) {
                  var _n32 = _b instanceof m.BaseStream ? _b.dict : _b,
                    _s24 = _n32.get("PatternType");
                  if (_s24 === D) {
                    var _r63 = i.base ? i.base.getRgb(a, 0) : null;
                    return this.handleTilingType(t, _r63, o, _b, _n32, e, c, u);
                  }
                  if (_s24 === N) {
                    var _a73 = _n32.get("Shading"),
                      _r64 = _n32.getArray("Matrix"),
                      _i61 = this.parseShading({
                        shading: _a73,
                        resources: o,
                        localColorSpaceCache: h,
                        localShadingPatternCache: d
                      });
                    e.addOp(t, ["Shading", _i61, _r64]);
                    return;
                  }
                  throw new r.FormatError("Unknown PatternType: ".concat(_s24));
                }
              }
              throw new r.FormatError("Unknown PatternName: ".concat(f));
            }
          }, {
            key: "_parseVisibilityExpression",
            value: function _parseVisibilityExpression(e, t, a) {
              if (++t > 10) {
                (0, r.warn)("Visibility expression is too deeply nested");
                return;
              }
              var i = e.length,
                s = this.xref.fetchIfRef(e[0]);
              if (!(i < 2) && s instanceof n.Name) {
                switch (s.name) {
                  case "And":
                  case "Or":
                  case "Not":
                    a.push(s.name);
                    break;
                  default:
                    (0, r.warn)("Invalid operator ".concat(s.name, " in visibility expression"));
                    return;
                }
                for (var _r65 = 1; _r65 < i; _r65++) {
                  var _i62 = e[_r65],
                    _s25 = this.xref.fetchIfRef(_i62);
                  if (Array.isArray(_s25)) {
                    var _e138 = [];
                    a.push(_e138);
                    this._parseVisibilityExpression(_s25, t, _e138);
                  } else _i62 instanceof n.Ref && a.push(_i62.toString());
                }
              } else (0, r.warn)("Invalid visibility expression");
            }
          }, {
            key: "parseMarkedContentProps",
            value: function () {
              var _parseMarkedContentProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee44(e, t) {
                var a, i, _e139, _t97, _t98, _e140, _iterator70, _step70, _a74;
                return _regeneratorRuntime().wrap(function _callee44$(_context45) {
                  while (1) switch (_context45.prev = _context45.next) {
                    case 0:
                      if (!(e instanceof n.Name)) {
                        _context45.next = 4;
                        break;
                      }
                      a = t.get("Properties").get(e.name);
                      _context45.next = 7;
                      break;
                    case 4:
                      if (e instanceof n.Dict) {
                        _context45.next = 6;
                        break;
                      }
                      throw new r.FormatError("Optional content properties malformed.");
                    case 6:
                      a = e;
                    case 7:
                      i = a.get("Type").name;
                      if (!("OCG" === i)) {
                        _context45.next = 10;
                        break;
                      }
                      return _context45.abrupt("return", {
                        type: i,
                        id: a.objId
                      });
                    case 10:
                      if (!("OCMD" === i)) {
                        _context45.next = 24;
                        break;
                      }
                      _e139 = a.get("VE");
                      if (!Array.isArray(_e139)) {
                        _context45.next = 17;
                        break;
                      }
                      _t97 = [];
                      this._parseVisibilityExpression(_e139, 0, _t97);
                      if (!(_t97.length > 0)) {
                        _context45.next = 17;
                        break;
                      }
                      return _context45.abrupt("return", {
                        type: "OCMD",
                        expression: _t97
                      });
                    case 17:
                      _t98 = a.get("OCGs");
                      if (!(Array.isArray(_t98) || _t98 instanceof n.Dict)) {
                        _context45.next = 22;
                        break;
                      }
                      _e140 = [];
                      if (Array.isArray(_t98)) {
                        _iterator70 = _createForOfIteratorHelper(_t98);
                        try {
                          for (_iterator70.s(); !(_step70 = _iterator70.n()).done;) {
                            _a74 = _step70.value;
                            _e140.push(_a74.toString());
                          }
                        } catch (err) {
                          _iterator70.e(err);
                        } finally {
                          _iterator70.f();
                        }
                      } else _e140.push(_t98.objId);
                      return _context45.abrupt("return", {
                        type: i,
                        ids: _e140,
                        policy: a.get("P") instanceof n.Name ? a.get("P").name : null,
                        expression: null
                      });
                    case 22:
                      if (!(_t98 instanceof n.Ref)) {
                        _context45.next = 24;
                        break;
                      }
                      return _context45.abrupt("return", {
                        type: i,
                        id: _t98.toString()
                      });
                    case 24:
                      return _context45.abrupt("return", null);
                    case 25:
                    case "end":
                      return _context45.stop();
                  }
                }, _callee44, this);
              }));
              function parseMarkedContentProps(_x104, _x105) {
                return _parseMarkedContentProps.apply(this, arguments);
              }
              return parseMarkedContentProps;
            }()
          }, {
            key: "getOperatorList",
            value: function getOperatorList(_ref46) {
              var _this57 = this;
              var e = _ref46.stream,
                t = _ref46.task,
                a = _ref46.resources,
                i = _ref46.operatorList,
                _ref46$initialState = _ref46.initialState,
                s = _ref46$initialState === void 0 ? null : _ref46$initialState,
                _ref46$fallbackFontDi = _ref46.fallbackFontDict,
                o = _ref46$fallbackFontDi === void 0 ? null : _ref46$fallbackFontDi;
              a || (a = n.Dict.empty);
              s || (s = new EvalState());
              if (!i) throw new Error('getOperatorList: missing "operatorList" parameter');
              var c = this,
                l = this.xref;
              var h = !1;
              var u = new g.LocalImageCache(),
                d = new g.LocalColorSpaceCache(),
                f = new g.LocalGStateCache(),
                p = new g.LocalTilingPatternCache(),
                b = new Map(),
                w = a.get("XObject") || n.Dict.empty,
                S = a.get("Pattern") || n.Dict.empty,
                x = new StateManager(s),
                C = new EvaluatorPreprocessor(e, l, x),
                k = new TimeSlotManager();
              function closePendingRestoreOPS(e) {
                for (var _e141 = 0, _t99 = C.savedStatesDepth; _e141 < _t99; _e141++) i.addOp(r.OPS.restore, []);
              }
              return new Promise(function promiseBody(e, s) {
                var next = function next(t) {
                  Promise.all([t, i.ready]).then(function () {
                    try {
                      promiseBody(e, s);
                    } catch (e) {
                      s(e);
                    }
                  }, s);
                };
                t.ensureNotTerminated();
                k.reset();
                var g = {};
                var v, F, O, T, M, E;
                for (; !(v = k.check());) {
                  g.args = null;
                  if (!C.read(g)) break;
                  var _e142 = g.args,
                    _s26 = g.fn;
                  switch (0 | _s26) {
                    case r.OPS.paintXObject:
                      E = _e142[0] instanceof n.Name;
                      M = _e142[0].name;
                      if (E) {
                        var _t100 = u.getByName(M);
                        if (_t100) {
                          i.addImageOps(_t100.fn, _t100.args, _t100.optionalContent);
                          incrementCachedImageMaskCount(_t100);
                          _e142 = null;
                          continue;
                        }
                      }
                      next(new Promise(function (e, s) {
                        if (!E) throw new r.FormatError("XObject must be referred to by name.");
                        var o = w.getRaw(M);
                        if (o instanceof n.Ref) {
                          var _t101 = u.getByRef(o) || c._regionalImageCache.getByRef(o);
                          if (_t101) {
                            i.addImageOps(_t101.fn, _t101.args, _t101.optionalContent);
                            incrementCachedImageMaskCount(_t101);
                            e();
                            return;
                          }
                          var _a75 = c.globalImageCache.getData(o, c.pageIndex);
                          if (_a75) {
                            i.addDependency(_a75.objId);
                            i.addImageOps(_a75.fn, _a75.args, _a75.optionalContent);
                            e();
                            return;
                          }
                          o = l.fetch(o);
                        }
                        if (!(o instanceof m.BaseStream)) throw new r.FormatError("XObject should be a stream");
                        var h = o.dict.get("Subtype");
                        if (!(h instanceof n.Name)) throw new r.FormatError("XObject should have a Name subtype");
                        if ("Form" !== h.name) {
                          if ("Image" !== h.name) {
                            if ("PS" !== h.name) throw new r.FormatError("Unhandled XObject subtype ".concat(h.name));
                            (0, r.info)("Ignored XObject subtype PS");
                            e();
                          } else c.buildPaintImageXObject({
                            resources: a,
                            image: o,
                            operatorList: i,
                            cacheKey: M,
                            localImageCache: u,
                            localColorSpaceCache: d
                          }).then(e, s);
                        } else {
                          x.save();
                          c.buildFormXObject(a, o, null, i, t, x.state.clone(), d).then(function () {
                            x.restore();
                            e();
                          }, s);
                        }
                      }).catch(function (e) {
                        if (!(e instanceof r.AbortException)) {
                          if (!c.options.ignoreErrors) throw e;
                          (0, r.warn)("getOperatorList - ignoring XObject: \"".concat(e, "\"."));
                        }
                      }));
                      return;
                    case r.OPS.setFont:
                      var D = _e142[1];
                      next(c.handleSetFont(a, _e142, null, i, t, x.state, o).then(function (e) {
                        i.addDependency(e);
                        i.addOp(r.OPS.setFont, [e, D]);
                      }));
                      return;
                    case r.OPS.beginText:
                      h = !0;
                      break;
                    case r.OPS.endText:
                      h = !1;
                      break;
                    case r.OPS.endInlineImage:
                      var N = _e142[0].cacheKey;
                      if (N) {
                        var _t102 = u.getByName(N);
                        if (_t102) {
                          i.addImageOps(_t102.fn, _t102.args, _t102.optionalContent);
                          incrementCachedImageMaskCount(_t102);
                          _e142 = null;
                          continue;
                        }
                      }
                      next(c.buildPaintImageXObject({
                        resources: a,
                        image: _e142[0],
                        isInline: !0,
                        operatorList: i,
                        cacheKey: N,
                        localImageCache: u,
                        localColorSpaceCache: d
                      }));
                      return;
                    case r.OPS.showText:
                      if (!x.state.font) {
                        c.ensureStateFont(x.state);
                        continue;
                      }
                      _e142[0] = c.handleText(_e142[0], x.state);
                      break;
                    case r.OPS.showSpacedText:
                      if (!x.state.font) {
                        c.ensureStateFont(x.state);
                        continue;
                      }
                      var L = [],
                        _ = x.state;
                      var _iterator71 = _createForOfIteratorHelper(_e142[0]),
                        _step71;
                      try {
                        for (_iterator71.s(); !(_step71 = _iterator71.n()).done;) {
                          var _L;
                          var _t103 = _step71.value;
                          "string" == typeof _t103 ? (_L = L).push.apply(_L, _toConsumableArray(c.handleText(_t103, _))) : "number" == typeof _t103 && L.push(_t103);
                        }
                      } catch (err) {
                        _iterator71.e(err);
                      } finally {
                        _iterator71.f();
                      }
                      _e142[0] = L;
                      _s26 = r.OPS.showText;
                      break;
                    case r.OPS.nextLineShowText:
                      if (!x.state.font) {
                        c.ensureStateFont(x.state);
                        continue;
                      }
                      i.addOp(r.OPS.nextLine);
                      _e142[0] = c.handleText(_e142[0], x.state);
                      _s26 = r.OPS.showText;
                      break;
                    case r.OPS.nextLineSetSpacingShowText:
                      if (!x.state.font) {
                        c.ensureStateFont(x.state);
                        continue;
                      }
                      i.addOp(r.OPS.nextLine);
                      i.addOp(r.OPS.setWordSpacing, [_e142.shift()]);
                      i.addOp(r.OPS.setCharSpacing, [_e142.shift()]);
                      _e142[0] = c.handleText(_e142[0], x.state);
                      _s26 = r.OPS.showText;
                      break;
                    case r.OPS.setTextRenderingMode:
                      x.state.textRenderingMode = _e142[0];
                      break;
                    case r.OPS.setFillColorSpace:
                      {
                        var _t104 = y.ColorSpace.getCached(_e142[0], l, d);
                        if (_t104) {
                          x.state.fillColorSpace = _t104;
                          continue;
                        }
                        next(c.parseColorSpace({
                          cs: _e142[0],
                          resources: a,
                          localColorSpaceCache: d
                        }).then(function (e) {
                          e && (x.state.fillColorSpace = e);
                        }));
                        return;
                      }
                    case r.OPS.setStrokeColorSpace:
                      {
                        var _t105 = y.ColorSpace.getCached(_e142[0], l, d);
                        if (_t105) {
                          x.state.strokeColorSpace = _t105;
                          continue;
                        }
                        next(c.parseColorSpace({
                          cs: _e142[0],
                          resources: a,
                          localColorSpaceCache: d
                        }).then(function (e) {
                          e && (x.state.strokeColorSpace = e);
                        }));
                        return;
                      }
                    case r.OPS.setFillColor:
                      T = x.state.fillColorSpace;
                      _e142 = T.getRgb(_e142, 0);
                      _s26 = r.OPS.setFillRGBColor;
                      break;
                    case r.OPS.setStrokeColor:
                      T = x.state.strokeColorSpace;
                      _e142 = T.getRgb(_e142, 0);
                      _s26 = r.OPS.setStrokeRGBColor;
                      break;
                    case r.OPS.setFillGray:
                      x.state.fillColorSpace = y.ColorSpace.singletons.gray;
                      _e142 = y.ColorSpace.singletons.gray.getRgb(_e142, 0);
                      _s26 = r.OPS.setFillRGBColor;
                      break;
                    case r.OPS.setStrokeGray:
                      x.state.strokeColorSpace = y.ColorSpace.singletons.gray;
                      _e142 = y.ColorSpace.singletons.gray.getRgb(_e142, 0);
                      _s26 = r.OPS.setStrokeRGBColor;
                      break;
                    case r.OPS.setFillCMYKColor:
                      x.state.fillColorSpace = y.ColorSpace.singletons.cmyk;
                      _e142 = y.ColorSpace.singletons.cmyk.getRgb(_e142, 0);
                      _s26 = r.OPS.setFillRGBColor;
                      break;
                    case r.OPS.setStrokeCMYKColor:
                      x.state.strokeColorSpace = y.ColorSpace.singletons.cmyk;
                      _e142 = y.ColorSpace.singletons.cmyk.getRgb(_e142, 0);
                      _s26 = r.OPS.setStrokeRGBColor;
                      break;
                    case r.OPS.setFillRGBColor:
                      x.state.fillColorSpace = y.ColorSpace.singletons.rgb;
                      _e142 = y.ColorSpace.singletons.rgb.getRgb(_e142, 0);
                      break;
                    case r.OPS.setStrokeRGBColor:
                      x.state.strokeColorSpace = y.ColorSpace.singletons.rgb;
                      _e142 = y.ColorSpace.singletons.rgb.getRgb(_e142, 0);
                      break;
                    case r.OPS.setFillColorN:
                      T = x.state.fillColorSpace;
                      if ("Pattern" === T.name) {
                        next(c.handleColorN(i, r.OPS.setFillColorN, _e142, T, S, a, t, d, p, b));
                        return;
                      }
                      _e142 = T.getRgb(_e142, 0);
                      _s26 = r.OPS.setFillRGBColor;
                      break;
                    case r.OPS.setStrokeColorN:
                      T = x.state.strokeColorSpace;
                      if ("Pattern" === T.name) {
                        next(c.handleColorN(i, r.OPS.setStrokeColorN, _e142, T, S, a, t, d, p, b));
                        return;
                      }
                      _e142 = T.getRgb(_e142, 0);
                      _s26 = r.OPS.setStrokeRGBColor;
                      break;
                    case r.OPS.shadingFill:
                      var $ = a.get("Shading");
                      if (!$) throw new r.FormatError("No shading resource found");
                      var j = $.get(_e142[0].name);
                      if (!j) throw new r.FormatError("No shading object found");
                      _e142 = [c.parseShading({
                        shading: j,
                        resources: a,
                        localColorSpaceCache: d,
                        localShadingPatternCache: b
                      })];
                      _s26 = r.OPS.shadingFill;
                      break;
                    case r.OPS.setGState:
                      E = _e142[0] instanceof n.Name;
                      M = _e142[0].name;
                      if (E) {
                        var _t106 = f.getByName(M);
                        if (_t106) {
                          _t106.length > 0 && i.addOp(r.OPS.setGState, [_t106]);
                          _e142 = null;
                          continue;
                        }
                      }
                      next(new Promise(function (e, s) {
                        if (!E) throw new r.FormatError("GState must be referred to by name.");
                        var o = a.get("ExtGState");
                        if (!(o instanceof n.Dict)) throw new r.FormatError("ExtGState should be a dictionary.");
                        var l = o.get(M);
                        if (!(l instanceof n.Dict)) throw new r.FormatError("GState should be a dictionary.");
                        c.setGState({
                          resources: a,
                          gState: l,
                          operatorList: i,
                          cacheKey: M,
                          task: t,
                          stateManager: x,
                          localGStateCache: f,
                          localColorSpaceCache: d
                        }).then(e, s);
                      }).catch(function (e) {
                        if (!(e instanceof r.AbortException)) {
                          if (!c.options.ignoreErrors) throw e;
                          (0, r.warn)("getOperatorList - ignoring ExtGState: \"".concat(e, "\"."));
                        }
                      }));
                      return;
                    case r.OPS.moveTo:
                    case r.OPS.lineTo:
                    case r.OPS.curveTo:
                    case r.OPS.curveTo2:
                    case r.OPS.curveTo3:
                    case r.OPS.closePath:
                    case r.OPS.rectangle:
                      c.buildPath(i, _s26, _e142, h);
                      continue;
                    case r.OPS.markPoint:
                    case r.OPS.markPointProps:
                    case r.OPS.beginCompat:
                    case r.OPS.endCompat:
                      continue;
                    case r.OPS.beginMarkedContentProps:
                      if (!(_e142[0] instanceof n.Name)) {
                        (0, r.warn)("Expected name for beginMarkedContentProps arg0=".concat(_e142[0]));
                        continue;
                      }
                      if ("OC" === _e142[0].name) {
                        next(c.parseMarkedContentProps(_e142[1], a).then(function (e) {
                          i.addOp(r.OPS.beginMarkedContentProps, ["OC", e]);
                        }).catch(function (e) {
                          if (!(e instanceof r.AbortException)) {
                            if (!c.options.ignoreErrors) throw e;
                            (0, r.warn)("getOperatorList - ignoring beginMarkedContentProps: \"".concat(e, "\"."));
                          }
                        }));
                        return;
                      }
                      _e142 = [_e142[0].name, _e142[1] instanceof n.Dict ? _e142[1].get("MCID") : null];
                      break;
                    case r.OPS.beginMarkedContent:
                    case r.OPS.endMarkedContent:
                    default:
                      if (null !== _e142) {
                        for (F = 0, O = _e142.length; F < O && !(_e142[F] instanceof n.Dict); F++);
                        if (F < O) {
                          (0, r.warn)("getOperatorList - ignoring operator: " + _s26);
                          continue;
                        }
                      }
                  }
                  i.addOp(_s26, _e142);
                }
                if (v) next(R);else {
                  closePendingRestoreOPS();
                  e();
                }
              }).catch(function (e) {
                if (!(e instanceof r.AbortException)) {
                  if (!_this57.options.ignoreErrors) throw e;
                  (0, r.warn)("getOperatorList - ignoring errors during \"".concat(t.name, "\" task: \"").concat(e, "\"."));
                  closePendingRestoreOPS();
                }
              });
            }
          }, {
            key: "getTextContent",
            value: function getTextContent(_ref47) {
              var _this58 = this;
              var e = _ref47.stream,
                t = _ref47.task,
                a = _ref47.resources,
                _ref47$stateManager = _ref47.stateManager,
                i = _ref47$stateManager === void 0 ? null : _ref47$stateManager,
                _ref47$includeMarkedC = _ref47.includeMarkedContent,
                s = _ref47$includeMarkedC === void 0 ? !1 : _ref47$includeMarkedC,
                o = _ref47.sink,
                _ref47$seenStyles = _ref47.seenStyles,
                c = _ref47$seenStyles === void 0 ? new Set() : _ref47$seenStyles,
                l = _ref47.viewBox,
                _ref47$markedContentD = _ref47.markedContentData,
                h = _ref47$markedContentD === void 0 ? null : _ref47$markedContentD,
                _ref47$disableNormali = _ref47.disableNormalization,
                u = _ref47$disableNormali === void 0 ? !1 : _ref47$disableNormali;
              a || (a = n.Dict.empty);
              i || (i = new StateManager(new TextState()));
              s && (h || (h = {
                level: 0
              }));
              var d = {
                  items: [],
                  styles: Object.create(null)
                },
                f = {
                  initialized: !1,
                  str: [],
                  totalWidth: 0,
                  totalHeight: 0,
                  width: 0,
                  height: 0,
                  vertical: !1,
                  prevTransform: null,
                  textAdvanceScale: 0,
                  spaceInFlowMin: 0,
                  spaceInFlowMax: 0,
                  trackingSpaceMin: 1 / 0,
                  negativeSpaceMax: -1 / 0,
                  notASpace: -1 / 0,
                  transform: null,
                  fontName: null,
                  hasEOL: !1
                },
                p = [" ", " "];
              var y = 0;
              function saveLastChar(e) {
                var t = (y + 1) % 2,
                  a = " " !== p[y] && " " === p[t];
                p[y] = e;
                y = t;
                return a;
              }
              function shouldAddWhitepsace() {
                return " " !== p[y] && " " === p[(y + 1) % 2];
              }
              function resetLastChars() {
                p[0] = p[1] = " ";
                y = 0;
              }
              var w = this,
                S = this.xref,
                x = [];
              var C = null;
              var k = new g.LocalImageCache(),
                v = new g.LocalGStateCache(),
                F = new EvaluatorPreprocessor(e, S, i);
              var O;
              function pushWhitespace(_ref48) {
                var _ref48$width = _ref48.width,
                  e = _ref48$width === void 0 ? 0 : _ref48$width,
                  _ref48$height = _ref48.height,
                  t = _ref48$height === void 0 ? 0 : _ref48$height,
                  _ref48$transform = _ref48.transform,
                  a = _ref48$transform === void 0 ? f.prevTransform : _ref48$transform,
                  _ref48$fontName = _ref48.fontName,
                  r = _ref48$fontName === void 0 ? f.fontName : _ref48$fontName;
                d.items.push({
                  str: " ",
                  dir: "ltr",
                  width: e,
                  height: t,
                  transform: a,
                  fontName: r,
                  hasEOL: !1
                });
              }
              function getCurrentTextTransform() {
                var e = O.font,
                  t = [O.fontSize * O.textHScale, 0, 0, O.fontSize, 0, O.textRise];
                if (e.isType3Font && (O.fontSize <= 1 || e.isCharBBox) && !(0, r.isArrayEqual)(O.fontMatrix, r.FONT_IDENTITY_MATRIX)) {
                  var _a76 = e.bbox[3] - e.bbox[1];
                  _a76 > 0 && (t[3] *= _a76 * O.fontMatrix[3]);
                }
                return r.Util.transform(O.ctm, r.Util.transform(O.textMatrix, t));
              }
              function ensureTextContentItem() {
                if (f.initialized) return f;
                var _O = O,
                  e = _O.font,
                  t = _O.loadedName;
                if (!c.has(t)) {
                  c.add(t);
                  d.styles[t] = {
                    fontFamily: e.fallbackName,
                    ascent: e.ascent,
                    descent: e.descent,
                    vertical: e.vertical
                  };
                }
                f.fontName = t;
                var a = f.transform = getCurrentTextTransform();
                if (e.vertical) {
                  f.width = f.totalWidth = Math.hypot(a[0], a[1]);
                  f.height = f.totalHeight = 0;
                  f.vertical = !0;
                } else {
                  f.width = f.totalWidth = 0;
                  f.height = f.totalHeight = Math.hypot(a[2], a[3]);
                  f.vertical = !1;
                }
                var r = Math.hypot(O.textLineMatrix[0], O.textLineMatrix[1]),
                  i = Math.hypot(O.ctm[0], O.ctm[1]);
                f.textAdvanceScale = i * r;
                var _O2 = O,
                  n = _O2.fontSize;
                f.trackingSpaceMin = .102 * n;
                f.notASpace = .03 * n;
                f.negativeSpaceMax = -.2 * n;
                f.spaceInFlowMin = .102 * n;
                f.spaceInFlowMax = .6 * n;
                f.hasEOL = !1;
                f.initialized = !0;
                return f;
              }
              function updateAdvanceScale() {
                if (!f.initialized) return;
                var e = Math.hypot(O.textLineMatrix[0], O.textLineMatrix[1]),
                  t = Math.hypot(O.ctm[0], O.ctm[1]) * e;
                if (t !== f.textAdvanceScale) {
                  if (f.vertical) {
                    f.totalHeight += f.height * f.textAdvanceScale;
                    f.height = 0;
                  } else {
                    f.totalWidth += f.width * f.textAdvanceScale;
                    f.width = 0;
                  }
                  f.textAdvanceScale = t;
                }
              }
              function handleSetFont(e, i) {
                return w.loadFont(e, i, a).then(function (e) {
                  return e.font.isType3Font ? e.loadType3Data(w, a, t).catch(function () {}).then(function () {
                    return e;
                  }) : e;
                }).then(function (e) {
                  O.loadedName = e.loadedName;
                  O.font = e.font;
                  O.fontMatrix = e.font.fontMatrix || r.FONT_IDENTITY_MATRIX;
                });
              }
              function applyInverseRotation(e, t, a) {
                var r = Math.hypot(a[0], a[1]);
                return [(a[0] * e + a[1] * t) / r, (a[2] * e + a[3] * t) / r];
              }
              function compareWithLastPosition(e) {
                var t = getCurrentTextTransform();
                var a = t[4],
                  r = t[5];
                if (O.font && O.font.vertical) {
                  if (a < l[0] || a > l[2] || r + e < l[1] || r > l[3]) return !1;
                } else if (a + e < l[0] || a > l[2] || r < l[1] || r > l[3]) return !1;
                if (!O.font || !f.prevTransform) return !0;
                var i = f.prevTransform[4],
                  n = f.prevTransform[5];
                if (i === a && n === r) return !0;
                var s = -1;
                t[0] && 0 === t[1] && 0 === t[2] ? s = t[0] > 0 ? 0 : 180 : t[1] && 0 === t[0] && 0 === t[3] && (s = t[1] > 0 ? 90 : 270);
                switch (s) {
                  case 0:
                    break;
                  case 90:
                    var _ref49 = [r, a];
                    a = _ref49[0];
                    r = _ref49[1];
                    var _ref50 = [n, i];
                    i = _ref50[0];
                    n = _ref50[1];
                    break;
                  case 180:
                    var _ref51 = [-a, -r, -i, -n];
                    a = _ref51[0];
                    r = _ref51[1];
                    i = _ref51[2];
                    n = _ref51[3];
                    break;
                  case 270:
                    var _ref52 = [-r, -a];
                    a = _ref52[0];
                    r = _ref52[1];
                    var _ref53 = [-n, -i];
                    i = _ref53[0];
                    n = _ref53[1];
                    break;
                  default:
                    var _applyInverseRotation = applyInverseRotation(a, r, t);
                    var _applyInverseRotation2 = _slicedToArray(_applyInverseRotation, 2);
                    a = _applyInverseRotation2[0];
                    r = _applyInverseRotation2[1];
                    var _applyInverseRotation3 = applyInverseRotation(i, n, f.prevTransform);
                    var _applyInverseRotation4 = _slicedToArray(_applyInverseRotation3, 2);
                    i = _applyInverseRotation4[0];
                    n = _applyInverseRotation4[1];
                }
                if (O.font.vertical) {
                  var _e143 = (n - r) / f.textAdvanceScale,
                    _t107 = a - i,
                    _s27 = Math.sign(f.height);
                  if (_e143 < _s27 * f.negativeSpaceMax) {
                    if (Math.abs(_t107) > .5 * f.width) {
                      appendEOL();
                      return !0;
                    }
                    resetLastChars();
                    flushTextContentItem();
                    return !0;
                  }
                  if (Math.abs(_t107) > f.width) {
                    appendEOL();
                    return !0;
                  }
                  _e143 <= _s27 * f.notASpace && resetLastChars();
                  if (_e143 <= _s27 * f.trackingSpaceMin) {
                    if (shouldAddWhitepsace()) {
                      resetLastChars();
                      flushTextContentItem();
                      pushWhitespace({
                        height: Math.abs(_e143)
                      });
                    } else f.height += _e143;
                  } else if (!addFakeSpaces(_e143, f.prevTransform, _s27)) if (0 === f.str.length) {
                    resetLastChars();
                    pushWhitespace({
                      height: Math.abs(_e143)
                    });
                  } else f.height += _e143;
                  Math.abs(_t107) > .25 * f.width && flushTextContentItem();
                  return !0;
                }
                var o = (a - i) / f.textAdvanceScale,
                  c = r - n,
                  h = Math.sign(f.width);
                if (o < h * f.negativeSpaceMax) {
                  if (Math.abs(c) > .5 * f.height) {
                    appendEOL();
                    return !0;
                  }
                  resetLastChars();
                  flushTextContentItem();
                  return !0;
                }
                if (Math.abs(c) > f.height) {
                  appendEOL();
                  return !0;
                }
                o <= h * f.notASpace && resetLastChars();
                if (o <= h * f.trackingSpaceMin) {
                  if (shouldAddWhitepsace()) {
                    resetLastChars();
                    flushTextContentItem();
                    pushWhitespace({
                      width: Math.abs(o)
                    });
                  } else f.width += o;
                } else if (!addFakeSpaces(o, f.prevTransform, h)) if (0 === f.str.length) {
                  resetLastChars();
                  pushWhitespace({
                    width: Math.abs(o)
                  });
                } else f.width += o;
                Math.abs(c) > .25 * f.height && flushTextContentItem();
                return !0;
              }
              function buildTextContentItem(_ref54) {
                var e = _ref54.chars,
                  t = _ref54.extraSpacing;
                var a = O.font;
                if (!e) {
                  var _e144 = O.charSpacing + t;
                  _e144 && (a.vertical ? O.translateTextMatrix(0, -_e144) : O.translateTextMatrix(_e144 * O.textHScale, 0));
                  return;
                }
                var r = a.charsToGlyphs(e),
                  i = O.fontMatrix[0] * O.fontSize;
                for (var _e145 = 0, _n33 = r.length; _e145 < _n33; _e145++) {
                  var _s28 = r[_e145],
                    _o18 = _s28.category;
                  if (_o18.isInvisibleFormatMark) continue;
                  var _c9 = O.charSpacing + (_e145 + 1 === _n33 ? t : 0),
                    _l5 = _s28.width;
                  a.vertical && (_l5 = _s28.vmetric ? _s28.vmetric[0] : -_l5);
                  var _h7 = _l5 * i;
                  if (_o18.isWhitespace) {
                    if (a.vertical) {
                      _c9 += -_h7 + O.wordSpacing;
                      O.translateTextMatrix(0, -_c9);
                    } else {
                      _c9 += _h7 + O.wordSpacing;
                      O.translateTextMatrix(_c9 * O.textHScale, 0);
                    }
                    saveLastChar(" ");
                    continue;
                  }
                  if (!_o18.isZeroWidthDiacritic && !compareWithLastPosition(_h7)) {
                    a.vertical ? O.translateTextMatrix(0, _h7) : O.translateTextMatrix(_h7 * O.textHScale, 0);
                    continue;
                  }
                  var _u6 = ensureTextContentItem();
                  _o18.isZeroWidthDiacritic && (_h7 = 0);
                  if (a.vertical) {
                    O.translateTextMatrix(0, _h7);
                    _h7 = Math.abs(_h7);
                    _u6.height += _h7;
                  } else {
                    _h7 *= O.textHScale;
                    O.translateTextMatrix(_h7, 0);
                    _u6.width += _h7;
                  }
                  _h7 && (_u6.prevTransform = getCurrentTextTransform());
                  var _d4 = _s28.unicode;
                  saveLastChar(_d4) && _u6.str.push(" ");
                  _u6.str.push(_d4);
                  _c9 && (a.vertical ? O.translateTextMatrix(0, -_c9) : O.translateTextMatrix(_c9 * O.textHScale, 0));
                }
              }
              function appendEOL() {
                resetLastChars();
                if (f.initialized) {
                  f.hasEOL = !0;
                  flushTextContentItem();
                } else d.items.push({
                  str: "",
                  dir: "ltr",
                  width: 0,
                  height: 0,
                  transform: getCurrentTextTransform(),
                  fontName: O.loadedName,
                  hasEOL: !0
                });
              }
              function addFakeSpaces(e, t, a) {
                if (a * f.spaceInFlowMin <= e && e <= a * f.spaceInFlowMax) {
                  if (f.initialized) {
                    resetLastChars();
                    f.str.push(" ");
                  }
                  return !1;
                }
                var r = f.fontName;
                var i = 0;
                if (f.vertical) {
                  i = e;
                  e = 0;
                }
                flushTextContentItem();
                resetLastChars();
                pushWhitespace({
                  width: Math.abs(e),
                  height: Math.abs(i),
                  transform: t || getCurrentTextTransform(),
                  fontName: r
                });
                return !0;
              }
              function flushTextContentItem() {
                if (f.initialized && f.str) {
                  f.vertical ? f.totalHeight += f.height * f.textAdvanceScale : f.totalWidth += f.width * f.textAdvanceScale;
                  d.items.push(function runBidiTransform(e) {
                    var t = e.str.join("");
                    u || (t = (0, r.normalizeUnicode)(t));
                    var a = (0, b.bidi)(t, -1, e.vertical);
                    return {
                      str: a.str,
                      dir: a.dir,
                      width: Math.abs(e.totalWidth),
                      height: Math.abs(e.totalHeight),
                      transform: e.transform,
                      fontName: e.fontName,
                      hasEOL: e.hasEOL
                    };
                  }(f));
                  f.initialized = !1;
                  f.str.length = 0;
                }
              }
              function enqueueChunk() {
                var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
                var t = d.items.length;
                if (0 !== t && !(e && t < 10)) {
                  o.enqueue(d, t);
                  d.items = [];
                  d.styles = Object.create(null);
                }
              }
              var T = new TimeSlotManager();
              return new Promise(function promiseBody(e, f) {
                var next = function next(t) {
                  enqueueChunk(!0);
                  Promise.all([t, o.ready]).then(function () {
                    try {
                      promiseBody(e, f);
                    } catch (e) {
                      f(e);
                    }
                  }, f);
                };
                t.ensureNotTerminated();
                T.reset();
                var g = {};
                var p,
                  b = [];
                for (; !(p = T.check());) {
                  b.length = 0;
                  g.args = b;
                  if (!F.read(g)) break;
                  O = i.state;
                  var _e146 = g.fn;
                  b = g.args;
                  switch (0 | e) {
                    case r.OPS.setFont:
                      var y = b[0].name,
                        M = b[1];
                      if (O.font && y === O.fontName && M === O.fontSize) break;
                      flushTextContentItem();
                      O.fontName = y;
                      O.fontSize = M;
                      next(handleSetFont(y, null));
                      return;
                    case r.OPS.setTextRise:
                      O.textRise = b[0];
                      break;
                    case r.OPS.setHScale:
                      O.textHScale = b[0] / 100;
                      break;
                    case r.OPS.setLeading:
                      O.leading = b[0];
                      break;
                    case r.OPS.moveText:
                      O.translateTextLineMatrix(b[0], b[1]);
                      O.textMatrix = O.textLineMatrix.slice();
                      break;
                    case r.OPS.setLeadingMoveText:
                      O.leading = -b[1];
                      O.translateTextLineMatrix(b[0], b[1]);
                      O.textMatrix = O.textLineMatrix.slice();
                      break;
                    case r.OPS.nextLine:
                      O.carriageReturn();
                      break;
                    case r.OPS.setTextMatrix:
                      O.setTextMatrix(b[0], b[1], b[2], b[3], b[4], b[5]);
                      O.setTextLineMatrix(b[0], b[1], b[2], b[3], b[4], b[5]);
                      updateAdvanceScale();
                      break;
                    case r.OPS.setCharSpacing:
                      O.charSpacing = b[0];
                      break;
                    case r.OPS.setWordSpacing:
                      O.wordSpacing = b[0];
                      break;
                    case r.OPS.beginText:
                      O.textMatrix = r.IDENTITY_MATRIX.slice();
                      O.textLineMatrix = r.IDENTITY_MATRIX.slice();
                      break;
                    case r.OPS.showSpacedText:
                      if (!i.state.font) {
                        w.ensureStateFont(i.state);
                        continue;
                      }
                      var _e147 = (O.font.vertical ? 1 : -1) * O.fontSize / 1e3,
                        _f = b[0];
                      for (var _t108 = 0, _a77 = _f.length; _t108 < _a77 - 1; _t108++) {
                        var _a78 = _f[_t108];
                        if ("string" == typeof _a78) x.push(_a78);else if ("number" == typeof _a78 && 0 !== _a78) {
                          var _t109 = x.join("");
                          x.length = 0;
                          buildTextContentItem({
                            chars: _t109,
                            extraSpacing: _a78 * _e147
                          });
                        }
                      }
                      var _g2 = _f.at(-1);
                      "string" == typeof _g2 && x.push(_g2);
                      if (x.length > 0) {
                        var _e148 = x.join("");
                        x.length = 0;
                        buildTextContentItem({
                          chars: _e148,
                          extraSpacing: 0
                        });
                      }
                      break;
                    case r.OPS.showText:
                      if (!i.state.font) {
                        w.ensureStateFont(i.state);
                        continue;
                      }
                      buildTextContentItem({
                        chars: b[0],
                        extraSpacing: 0
                      });
                      break;
                    case r.OPS.nextLineShowText:
                      if (!i.state.font) {
                        w.ensureStateFont(i.state);
                        continue;
                      }
                      O.carriageReturn();
                      buildTextContentItem({
                        chars: b[0],
                        extraSpacing: 0
                      });
                      break;
                    case r.OPS.nextLineSetSpacingShowText:
                      if (!i.state.font) {
                        w.ensureStateFont(i.state);
                        continue;
                      }
                      O.wordSpacing = b[0];
                      O.charSpacing = b[1];
                      O.carriageReturn();
                      buildTextContentItem({
                        chars: b[2],
                        extraSpacing: 0
                      });
                      break;
                    case r.OPS.paintXObject:
                      flushTextContentItem();
                      C || (C = a.get("XObject") || n.Dict.empty);
                      var E = b[0] instanceof n.Name,
                        D = b[0].name;
                      if (E && k.getByName(D)) break;
                      next(new Promise(function (e, d) {
                        if (!E) throw new r.FormatError("XObject must be referred to by name.");
                        var f = C.getRaw(D);
                        if (f instanceof n.Ref) {
                          if (k.getByRef(f)) {
                            e();
                            return;
                          }
                          if (w.globalImageCache.getData(f, w.pageIndex)) {
                            e();
                            return;
                          }
                          f = S.fetch(f);
                        }
                        if (!(f instanceof m.BaseStream)) throw new r.FormatError("XObject should be a stream");
                        var g = f.dict.get("Subtype");
                        if (!(g instanceof n.Name)) throw new r.FormatError("XObject should have a Name subtype");
                        if ("Form" !== g.name) {
                          k.set(D, f.dict.objId, !0);
                          e();
                          return;
                        }
                        var p = i.state.clone(),
                          b = new StateManager(p),
                          y = f.dict.getArray("Matrix");
                        Array.isArray(y) && 6 === y.length && b.transform(y);
                        enqueueChunk();
                        var x = {
                          enqueueInvoked: !1,
                          enqueue: function enqueue(e, t) {
                            this.enqueueInvoked = !0;
                            o.enqueue(e, t);
                          },
                          get desiredSize() {
                            return o.desiredSize;
                          },
                          get ready() {
                            return o.ready;
                          }
                        };
                        w.getTextContent({
                          stream: f,
                          task: t,
                          resources: f.dict.get("Resources") || a,
                          stateManager: b,
                          includeMarkedContent: s,
                          sink: x,
                          seenStyles: c,
                          viewBox: l,
                          markedContentData: h,
                          disableNormalization: u
                        }).then(function () {
                          x.enqueueInvoked || k.set(D, f.dict.objId, !0);
                          e();
                        }, d);
                      }).catch(function (e) {
                        if (!(e instanceof r.AbortException)) {
                          if (!w.options.ignoreErrors) throw e;
                          (0, r.warn)("getTextContent - ignoring XObject: \"".concat(e, "\"."));
                        }
                      }));
                      return;
                    case r.OPS.setGState:
                      E = b[0] instanceof n.Name;
                      D = b[0].name;
                      if (E && v.getByName(D)) break;
                      next(new Promise(function (e, t) {
                        if (!E) throw new r.FormatError("GState must be referred to by name.");
                        var i = a.get("ExtGState");
                        if (!(i instanceof n.Dict)) throw new r.FormatError("ExtGState should be a dictionary.");
                        var s = i.get(D);
                        if (!(s instanceof n.Dict)) throw new r.FormatError("GState should be a dictionary.");
                        var o = s.get("Font");
                        if (o) {
                          flushTextContentItem();
                          O.fontName = null;
                          O.fontSize = o[1];
                          handleSetFont(null, o[0]).then(e, t);
                        } else {
                          v.set(D, s.objId, !0);
                          e();
                        }
                      }).catch(function (e) {
                        if (!(e instanceof r.AbortException)) {
                          if (!w.options.ignoreErrors) throw e;
                          (0, r.warn)("getTextContent - ignoring ExtGState: \"".concat(e, "\"."));
                        }
                      }));
                      return;
                    case r.OPS.beginMarkedContent:
                      flushTextContentItem();
                      if (s) {
                        h.level++;
                        d.items.push({
                          type: "beginMarkedContent",
                          tag: b[0] instanceof n.Name ? b[0].name : null
                        });
                      }
                      break;
                    case r.OPS.beginMarkedContentProps:
                      flushTextContentItem();
                      if (s) {
                        h.level++;
                        var _e149 = null;
                        b[1] instanceof n.Dict && (_e149 = b[1].get("MCID"));
                        d.items.push({
                          type: "beginMarkedContentProps",
                          id: Number.isInteger(_e149) ? "".concat(w.idFactory.getPageObjId(), "_mcid").concat(_e149) : null,
                          tag: b[0] instanceof n.Name ? b[0].name : null
                        });
                      }
                      break;
                    case r.OPS.endMarkedContent:
                      flushTextContentItem();
                      if (s) {
                        if (0 === h.level) break;
                        h.level--;
                        d.items.push({
                          type: "endMarkedContent"
                        });
                      }
                  }
                  if (d.items.length >= o.desiredSize) {
                    p = !0;
                    break;
                  }
                }
                if (p) next(R);else {
                  flushTextContentItem();
                  enqueueChunk();
                  e();
                }
              }).catch(function (e) {
                if (!(e instanceof r.AbortException)) {
                  if (!_this58.options.ignoreErrors) throw e;
                  (0, r.warn)("getTextContent - ignoring errors during \"".concat(t.name, "\" task: \"").concat(e, "\"."));
                  flushTextContentItem();
                  enqueueChunk();
                }
              });
            }
          }, {
            key: "extractDataStructures",
            value: function extractDataStructures(e, t, a) {
              var _this59 = this;
              var i = this.xref;
              var s;
              var c = this.readToUnicode(a.toUnicode || e.get("ToUnicode") || t.get("ToUnicode"));
              if (a.composite) {
                var _t110 = e.get("CIDSystemInfo");
                _t110 instanceof n.Dict && (a.cidSystemInfo = {
                  registry: (0, r.stringToPDFString)(_t110.get("Registry")),
                  ordering: (0, r.stringToPDFString)(_t110.get("Ordering")),
                  supplement: _t110.get("Supplement")
                });
                try {
                  var _t111 = e.get("CIDToGIDMap");
                  _t111 instanceof m.BaseStream && (s = _t111.getBytes());
                } catch (e) {
                  if (!this.options.ignoreErrors) throw e;
                  (0, r.warn)("extractDataStructures - ignoring CIDToGIDMap data: \"".concat(e, "\"."));
                }
              }
              var l = [];
              var h,
                u = null;
              if (e.has("Encoding")) {
                h = e.get("Encoding");
                if (h instanceof n.Dict) {
                  u = h.get("BaseEncoding");
                  u = u instanceof n.Name ? u.name : null;
                  if (h.has("Differences")) {
                    var _e150 = h.get("Differences");
                    var _t112 = 0;
                    var _iterator72 = _createForOfIteratorHelper(_e150),
                      _step72;
                    try {
                      for (_iterator72.s(); !(_step72 = _iterator72.n()).done;) {
                        var _a79 = _step72.value;
                        var _e151 = i.fetchIfRef(_a79);
                        if ("number" == typeof _e151) _t112 = _e151;else {
                          if (!(_e151 instanceof n.Name)) throw new r.FormatError("Invalid entry in 'Differences' array: ".concat(_e151));
                          l[_t112++] = _e151.name;
                        }
                      }
                    } catch (err) {
                      _iterator72.e(err);
                    } finally {
                      _iterator72.f();
                    }
                  }
                } else if (h instanceof n.Name) u = h.name;else {
                  var _e152 = "Encoding is not a Name nor a Dict";
                  if (!this.options.ignoreErrors) throw new r.FormatError(_e152);
                  (0, r.warn)(_e152);
                }
                "MacRomanEncoding" !== u && "MacExpertEncoding" !== u && "WinAnsiEncoding" !== u && (u = null);
              }
              if (u) a.defaultEncoding = (0, o.getEncoding)(u);else {
                var _e153 = !!(a.flags & S.FontFlags.Symbolic),
                  _t113 = !!(a.flags & S.FontFlags.Nonsymbolic);
                h = o.StandardEncoding;
                "TrueType" !== a.type || _t113 || (h = o.WinAnsiEncoding);
                if (_e153) {
                  h = o.MacRomanEncoding;
                  a.file && !a.isInternalFont || (/Symbol/i.test(a.name) ? h = o.SymbolSetEncoding : /Dingbats|Wingdings/i.test(a.name) && (h = o.ZapfDingbatsEncoding));
                }
                a.defaultEncoding = h;
              }
              a.differences = l;
              a.baseEncodingName = u;
              a.hasEncoding = !!u || l.length > 0;
              a.dict = e;
              return c.then(function (e) {
                a.toUnicode = e;
                return _this59.buildToUnicode(a);
              }).then(function (e) {
                a.toUnicode = e;
                s && (a.cidToGidMap = _this59.readCidToGidMap(s, e));
                return a;
              });
            }
          }, {
            key: "_simpleFontToUnicode",
            value: function _simpleFontToUnicode(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
              (0, r.assert)(!e.composite, "Must be a simple font.");
              var a = [],
                i = e.defaultEncoding.slice(),
                n = e.baseEncodingName,
                s = e.differences;
              for (var _e154 in s) {
                var _t114 = s[_e154];
                ".notdef" !== _t114 && (i[_e154] = _t114);
              }
              var c = (0, x.getGlyphsUnicode)();
              for (var _r66 in i) {
                var _s29 = i[_r66];
                if ("" === _s29) continue;
                var _l6 = c[_s29];
                if (void 0 !== _l6) {
                  a[_r66] = String.fromCharCode(_l6);
                  continue;
                }
                var _h8 = 0;
                switch (_s29[0]) {
                  case "G":
                    3 === _s29.length && (_h8 = parseInt(_s29.substring(1), 16));
                    break;
                  case "g":
                    5 === _s29.length && (_h8 = parseInt(_s29.substring(1), 16));
                    break;
                  case "C":
                  case "c":
                    if (_s29.length >= 3 && _s29.length <= 4) {
                      var _a80 = _s29.substring(1);
                      if (t) {
                        _h8 = parseInt(_a80, 16);
                        break;
                      }
                      _h8 = +_a80;
                      if (Number.isNaN(_h8) && Number.isInteger(parseInt(_a80, 16))) return this._simpleFontToUnicode(e, !0);
                    }
                    break;
                  case "u":
                    _l6 = (0, v.getUnicodeForGlyph)(_s29, c);
                    -1 !== _l6 && (_h8 = _l6);
                    break;
                  default:
                    switch (_s29) {
                      case "f_h":
                      case "f_t":
                      case "T_h":
                        a[_r66] = _s29.replaceAll("_", "");
                        continue;
                    }
                }
                if (_h8 > 0 && _h8 <= 1114111 && Number.isInteger(_h8)) {
                  if (n && _h8 === +_r66) {
                    var _e155 = (0, o.getEncoding)(n);
                    if (_e155 && (_s29 = _e155[_r66])) {
                      a[_r66] = String.fromCharCode(c[_s29]);
                      continue;
                    }
                  }
                  a[_r66] = String.fromCodePoint(_h8);
                }
              }
              return a;
            }
          }, {
            key: "buildToUnicode",
            value: function () {
              var _buildToUnicode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee45(e) {
                var _e$cidSystemInfo, _t115, a, _s30, _o19, _c10, _l7;
                return _regeneratorRuntime().wrap(function _callee45$(_context46) {
                  while (1) switch (_context46.prev = _context46.next) {
                    case 0:
                      e.hasIncludedToUnicodeMap = !!e.toUnicode && e.toUnicode.length > 0;
                      if (!e.hasIncludedToUnicodeMap) {
                        _context46.next = 4;
                        break;
                      }
                      !e.composite && e.hasEncoding && (e.fallbackToUnicode = this._simpleFontToUnicode(e));
                      return _context46.abrupt("return", e.toUnicode);
                    case 4:
                      if (e.composite) {
                        _context46.next = 6;
                        break;
                      }
                      return _context46.abrupt("return", new u.ToUnicodeMap(this._simpleFontToUnicode(e)));
                    case 6:
                      if (!(e.composite && (e.cMap.builtInCMap && !(e.cMap instanceof i.IdentityCMap) || "Adobe" === e.cidSystemInfo.registry && ("GB1" === e.cidSystemInfo.ordering || "CNS1" === e.cidSystemInfo.ordering || "Japan1" === e.cidSystemInfo.ordering || "Korea1" === e.cidSystemInfo.ordering)))) {
                        _context46.next = 18;
                        break;
                      }
                      _e$cidSystemInfo = e.cidSystemInfo;
                      _t115 = _e$cidSystemInfo.registry;
                      a = _e$cidSystemInfo.ordering;
                      _s30 = n.Name.get("".concat(_t115, "-").concat(a, "-UCS2"));
                      _context46.next = 13;
                      return i.CMapFactory.create({
                        encoding: _s30,
                        fetchBuiltInCMap: this._fetchBuiltInCMapBound,
                        useCMap: null
                      });
                    case 13:
                      _o19 = _context46.sent;
                      _c10 = [];
                      _l7 = [];
                      e.cMap.forEach(function (e, t) {
                        if (t > 65535) throw new r.FormatError("Max size of CID is 65,535");
                        var a = _o19.lookup(t);
                        if (a) {
                          _l7.length = 0;
                          for (var _e156 = 0, _t116 = a.length; _e156 < _t116; _e156 += 2) _l7.push((a.charCodeAt(_e156) << 8) + a.charCodeAt(_e156 + 1));
                          _c10[e] = String.fromCharCode.apply(String, _l7);
                        }
                      });
                      return _context46.abrupt("return", new u.ToUnicodeMap(_c10));
                    case 18:
                      return _context46.abrupt("return", new u.IdentityToUnicodeMap(e.firstChar, e.lastChar));
                    case 19:
                    case "end":
                      return _context46.stop();
                  }
                }, _callee45, this);
              }));
              function buildToUnicode(_x106) {
                return _buildToUnicode.apply(this, arguments);
              }
              return buildToUnicode;
            }()
          }, {
            key: "readToUnicode",
            value: function readToUnicode(e) {
              var _this60 = this;
              return e ? e instanceof n.Name ? i.CMapFactory.create({
                encoding: e,
                fetchBuiltInCMap: this._fetchBuiltInCMapBound,
                useCMap: null
              }).then(function (e) {
                return e instanceof i.IdentityCMap ? new u.IdentityToUnicodeMap(0, 65535) : new u.ToUnicodeMap(e.getMap());
              }) : e instanceof m.BaseStream ? i.CMapFactory.create({
                encoding: e,
                fetchBuiltInCMap: this._fetchBuiltInCMapBound,
                useCMap: null
              }).then(function (e) {
                if (e instanceof i.IdentityCMap) return new u.IdentityToUnicodeMap(0, 65535);
                var t = new Array(e.length);
                e.forEach(function (e, a) {
                  if ("number" == typeof a) {
                    t[e] = String.fromCodePoint(a);
                    return;
                  }
                  var r = [];
                  for (var _e157 = 0; _e157 < a.length; _e157 += 2) {
                    var _t117 = a.charCodeAt(_e157) << 8 | a.charCodeAt(_e157 + 1);
                    if (55296 != (63488 & _t117)) {
                      r.push(_t117);
                      continue;
                    }
                    _e157 += 2;
                    var _i63 = a.charCodeAt(_e157) << 8 | a.charCodeAt(_e157 + 1);
                    r.push(((1023 & _t117) << 10) + (1023 & _i63) + 65536);
                  }
                  t[e] = String.fromCodePoint.apply(String, r);
                });
                return new u.ToUnicodeMap(t);
              }, function (e) {
                if (e instanceof r.AbortException) return null;
                if (_this60.options.ignoreErrors) {
                  (0, r.warn)("readToUnicode - ignoring ToUnicode data: \"".concat(e, "\"."));
                  return null;
                }
                throw e;
              }) : Promise.resolve(null) : Promise.resolve(null);
            }
          }, {
            key: "readCidToGidMap",
            value: function readCidToGidMap(e, t) {
              var a = [];
              for (var _r67 = 0, _i64 = e.length; _r67 < _i64; _r67++) {
                var _i65 = e[_r67++] << 8 | e[_r67],
                  _n34 = _r67 >> 1;
                (0 !== _i65 || t.has(_n34)) && (a[_n34] = _i65);
              }
              return a;
            }
          }, {
            key: "extractWidths",
            value: function extractWidths(e, t, a) {
              var r = this.xref;
              var i = [],
                s = 0;
              var o = [];
              var c, l, h, u, d, f, g, p;
              if (a.composite) {
                s = e.has("DW") ? e.get("DW") : 1e3;
                p = e.get("W");
                if (p) for (l = 0, h = p.length; l < h; l++) {
                  f = r.fetchIfRef(p[l++]);
                  g = r.fetchIfRef(p[l]);
                  if (Array.isArray(g)) for (u = 0, d = g.length; u < d; u++) i[f++] = r.fetchIfRef(g[u]);else {
                    var _e158 = r.fetchIfRef(p[++l]);
                    for (u = f; u <= g; u++) i[u] = _e158;
                  }
                }
                if (a.vertical) {
                  var _t118 = e.getArray("DW2") || [880, -1e3];
                  c = [_t118[1], .5 * s, _t118[0]];
                  _t118 = e.get("W2");
                  if (_t118) for (l = 0, h = _t118.length; l < h; l++) {
                    f = r.fetchIfRef(_t118[l++]);
                    g = r.fetchIfRef(_t118[l]);
                    if (Array.isArray(g)) for (u = 0, d = g.length; u < d; u++) o[f++] = [r.fetchIfRef(g[u++]), r.fetchIfRef(g[u++]), r.fetchIfRef(g[u])];else {
                      var _e159 = [r.fetchIfRef(_t118[++l]), r.fetchIfRef(_t118[++l]), r.fetchIfRef(_t118[++l])];
                      for (u = f; u <= g; u++) o[u] = _e159;
                    }
                  }
                }
              } else {
                var _o20 = a.firstChar;
                p = e.get("Widths");
                if (p) {
                  u = _o20;
                  for (l = 0, h = p.length; l < h; l++) i[u++] = r.fetchIfRef(p[l]);
                  s = parseFloat(t.get("MissingWidth")) || 0;
                } else {
                  var _t119 = e.get("BaseFont");
                  if (_t119 instanceof n.Name) {
                    var _e160 = this.getBaseFontMetrics(_t119.name);
                    i = this.buildCharCodeToWidth(_e160.widths, a);
                    s = _e160.defaultWidth;
                  }
                }
              }
              var m = !0,
                b = s;
              for (var _e161 in i) {
                var _t120 = i[_e161];
                if (_t120) if (b) {
                  if (b !== _t120) {
                    m = !1;
                    break;
                  }
                } else b = _t120;
              }
              m && (a.flags |= S.FontFlags.FixedPitch);
              a.defaultWidth = s;
              a.widths = i;
              a.defaultVMetrics = c;
              a.vmetrics = o;
            }
          }, {
            key: "isSerifFont",
            value: function isSerifFont(e) {
              var t = e.split("-")[0];
              return t in (0, c.getSerifFonts)() || /serif/gi.test(t);
            }
          }, {
            key: "getBaseFontMetrics",
            value: function getBaseFontMetrics(e) {
              var t = 0,
                a = Object.create(null),
                r = !1;
              var i = (0, c.getStdFontMap)()[e] || e;
              var n = (0, k.getMetrics)();
              i in n || (i = this.isSerifFont(e) ? "Times-Roman" : "Helvetica");
              var s = n[i];
              if ("number" == typeof s) {
                t = s;
                r = !0;
              } else a = s();
              return {
                defaultWidth: t,
                monospace: r,
                widths: a
              };
            }
          }, {
            key: "buildCharCodeToWidth",
            value: function buildCharCodeToWidth(e, t) {
              var a = Object.create(null),
                r = t.differences,
                i = t.defaultEncoding;
              for (var _t121 = 0; _t121 < 256; _t121++) _t121 in r && e[r[_t121]] ? a[_t121] = e[r[_t121]] : _t121 in i && e[i[_t121]] && (a[_t121] = e[i[_t121]]);
              return a;
            }
          }, {
            key: "preEvaluateFont",
            value: function preEvaluateFont(e) {
              var t = e;
              var a = e.get("Subtype");
              if (!(a instanceof n.Name)) throw new r.FormatError("invalid font Subtype");
              var i,
                s,
                o = !1;
              if ("Type0" === a.name) {
                var _t122 = e.get("DescendantFonts");
                if (!_t122) throw new r.FormatError("Descendant fonts are not specified");
                if (!((e = Array.isArray(_t122) ? this.xref.fetchIfRef(_t122[0]) : _t122) instanceof n.Dict)) throw new r.FormatError("Descendant font is not a dictionary.");
                a = e.get("Subtype");
                if (!(a instanceof n.Name)) throw new r.FormatError("invalid font Subtype");
                o = !0;
              }
              var c = e.get("FirstChar") || 0,
                l = e.get("LastChar") || (o ? 65535 : 255),
                h = e.get("FontDescriptor");
              if (h) {
                i = new O.MurmurHash3_64();
                var _a81 = t.getRaw("Encoding");
                if (_a81 instanceof n.Name) i.update(_a81.name);else if (_a81 instanceof n.Ref) i.update(_a81.toString());else if (_a81 instanceof n.Dict) {
                  var _iterator73 = _createForOfIteratorHelper(_a81.getRawValues()),
                    _step73;
                  try {
                    for (_iterator73.s(); !(_step73 = _iterator73.n()).done;) {
                      var _e162 = _step73.value;
                      if (_e162 instanceof n.Name) i.update(_e162.name);else if (_e162 instanceof n.Ref) i.update(_e162.toString());else if (Array.isArray(_e162)) {
                        var _t123 = _e162.length,
                          _a82 = new Array(_t123);
                        for (var _r68 = 0; _r68 < _t123; _r68++) {
                          var _t124 = _e162[_r68];
                          _t124 instanceof n.Name ? _a82[_r68] = _t124.name : ("number" == typeof _t124 || _t124 instanceof n.Ref) && (_a82[_r68] = _t124.toString());
                        }
                        i.update(_a82.join());
                      }
                    }
                  } catch (err) {
                    _iterator73.e(err);
                  } finally {
                    _iterator73.f();
                  }
                }
                i.update("".concat(c, "-").concat(l));
                s = e.get("ToUnicode") || t.get("ToUnicode");
                if (s instanceof m.BaseStream) {
                  var _e163 = s.str || s,
                    _t125 = _e163.buffer ? new Uint8Array(_e163.buffer.buffer, 0, _e163.bufferLength) : new Uint8Array(_e163.bytes.buffer, _e163.start, _e163.end - _e163.start);
                  i.update(_t125);
                } else s instanceof n.Name && i.update(s.name);
                var _r69 = e.get("Widths") || t.get("Widths");
                if (Array.isArray(_r69)) {
                  var _e164 = [];
                  var _iterator74 = _createForOfIteratorHelper(_r69),
                    _step74;
                  try {
                    for (_iterator74.s(); !(_step74 = _iterator74.n()).done;) {
                      var _t126 = _step74.value;
                      ("number" == typeof _t126 || _t126 instanceof n.Ref) && _e164.push(_t126.toString());
                    }
                  } catch (err) {
                    _iterator74.e(err);
                  } finally {
                    _iterator74.f();
                  }
                  i.update(_e164.join());
                }
                if (o) {
                  i.update("compositeFont");
                  var _a83 = e.get("W") || t.get("W");
                  if (Array.isArray(_a83)) {
                    var _e165 = [];
                    var _iterator75 = _createForOfIteratorHelper(_a83),
                      _step75;
                    try {
                      for (_iterator75.s(); !(_step75 = _iterator75.n()).done;) {
                        var _t127 = _step75.value;
                        if ("number" == typeof _t127 || _t127 instanceof n.Ref) _e165.push(_t127.toString());else if (Array.isArray(_t127)) {
                          var _a84 = [];
                          var _iterator76 = _createForOfIteratorHelper(_t127),
                            _step76;
                          try {
                            for (_iterator76.s(); !(_step76 = _iterator76.n()).done;) {
                              var _e166 = _step76.value;
                              ("number" == typeof _e166 || _e166 instanceof n.Ref) && _a84.push(_e166.toString());
                            }
                          } catch (err) {
                            _iterator76.e(err);
                          } finally {
                            _iterator76.f();
                          }
                          _e165.push("[".concat(_a84.join(), "]"));
                        }
                      }
                    } catch (err) {
                      _iterator75.e(err);
                    } finally {
                      _iterator75.f();
                    }
                    i.update(_e165.join());
                  }
                  var _r70 = e.getRaw("CIDToGIDMap") || t.getRaw("CIDToGIDMap");
                  _r70 instanceof n.Name ? i.update(_r70.name) : _r70 instanceof n.Ref ? i.update(_r70.toString()) : _r70 instanceof m.BaseStream && i.update(_r70.peekBytes());
                }
              }
              return {
                descriptor: h,
                dict: e,
                baseDict: t,
                composite: o,
                type: a.name,
                firstChar: c,
                lastChar: l,
                toUnicode: s,
                hash: i ? i.hexdigest() : ""
              };
            }
          }, {
            key: "translateFont",
            value: function () {
              var _translateFont = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee46(_ref55) {
                var _this61 = this;
                var e, t, a, o, l, u, d, f, g, m, b, _e167, _i66, _o21, _h9, _g3, _p2, _y2, y, w, x, C, k, v, F, _e169, _t129, O, T, _e170, _e171, _e172, _e173, _t130;
                return _regeneratorRuntime().wrap(function _callee46$(_context47) {
                  while (1) switch (_context47.prev = _context47.next) {
                    case 0:
                      e = _ref55.descriptor, t = _ref55.dict, a = _ref55.baseDict, o = _ref55.composite, l = _ref55.type, u = _ref55.firstChar, d = _ref55.lastChar, f = _ref55.toUnicode, g = _ref55.cssFontInfo;
                      m = "Type3" === l;
                      if (e) {
                        _context47.next = 20;
                        break;
                      }
                      if (m) {
                        _context47.next = 18;
                        break;
                      }
                      _e167 = t.get("BaseFont");
                      if (_e167 instanceof n.Name) {
                        _context47.next = 7;
                        break;
                      }
                      throw new r.FormatError("Base font is not specified");
                    case 7:
                      _e167 = _e167.name.replaceAll(/[,_]/g, "-");
                      _i66 = this.getBaseFontMetrics(_e167), _o21 = _e167.split("-")[0], _h9 = (this.isSerifFont(_o21) ? S.FontFlags.Serif : 0) | (_i66.monospace ? S.FontFlags.FixedPitch : 0) | ((0, c.getSymbolsFonts)()[_o21] ? S.FontFlags.Symbolic : S.FontFlags.Nonsymbolic);
                      b = {
                        type: l,
                        name: _e167,
                        loadedName: a.loadedName,
                        widths: _i66.widths,
                        defaultWidth: _i66.defaultWidth,
                        isSimulatedFlags: !0,
                        flags: _h9,
                        firstChar: u,
                        lastChar: d,
                        toUnicode: f,
                        xHeight: 0,
                        capHeight: 0,
                        italicAngle: 0,
                        isType3Font: m
                      };
                      _g3 = t.get("Widths"), _p2 = (0, c.getStandardFontName)(_e167);
                      _y2 = null;
                      if (!_p2) {
                        _context47.next = 17;
                        break;
                      }
                      _context47.next = 15;
                      return this.fetchStandardFontData(_p2);
                    case 15:
                      _y2 = _context47.sent;
                      b.isInternalFont = !!_y2;
                    case 17:
                      return _context47.abrupt("return", this.extractDataStructures(t, t, b).then(function (t) {
                        if (_g3) {
                          var _e168 = [];
                          var _a85 = u;
                          var _iterator77 = _createForOfIteratorHelper(_g3),
                            _step77;
                          try {
                            for (_iterator77.s(); !(_step77 = _iterator77.n()).done;) {
                              var _t128 = _step77.value;
                              _e168[_a85++] = _this61.xref.fetchIfRef(_t128);
                            }
                          } catch (err) {
                            _iterator77.e(err);
                          } finally {
                            _iterator77.f();
                          }
                          t.widths = _e168;
                        } else t.widths = _this61.buildCharCodeToWidth(_i66.widths, t);
                        return new s.Font(_e167, _y2, t);
                      }));
                    case 18:
                      (e = new n.Dict(null)).set("FontName", n.Name.get(l));
                      e.set("FontBBox", t.getArray("FontBBox") || [0, 0, 0, 0]);
                    case 20:
                      v = e.get("FontName"), F = t.get("BaseFont");
                      "string" == typeof v && (v = n.Name.get(v));
                      "string" == typeof F && (F = n.Name.get(F));
                      if (!m) {
                        _e169 = v && v.name, _t129 = F && F.name;
                        if (_e169 !== _t129) {
                          (0, r.info)("The FontDescriptor's FontName is \"".concat(_e169, "\" but should be the same as the Font's BaseFont \"").concat(_t129, "\"."));
                          _e169 && _t129 && _t129.startsWith(_e169) && (v = F);
                        }
                      }
                      v || (v = F);
                      if (v instanceof n.Name) {
                        _context47.next = 27;
                        break;
                      }
                      throw new r.FormatError("invalid font name");
                    case 27:
                      _context47.prev = 27;
                      y = e.get("FontFile", "FontFile2", "FontFile3");
                      _context47.next = 37;
                      break;
                    case 31:
                      _context47.prev = 31;
                      _context47.t0 = _context47["catch"](27);
                      if (this.options.ignoreErrors) {
                        _context47.next = 35;
                        break;
                      }
                      throw _context47.t0;
                    case 35:
                      (0, r.warn)("translateFont - fetching \"".concat(v.name, "\" font file: \"").concat(_context47.t0, "\"."));
                      y = new p.NullStream();
                    case 37:
                      O = !1, T = null;
                      if (!y) {
                        _context47.next = 42;
                        break;
                      }
                      if (y.dict) {
                        _e170 = y.dict.get("Subtype");
                        _e170 instanceof n.Name && (w = _e170.name);
                        x = y.dict.get("Length1");
                        C = y.dict.get("Length2");
                        k = y.dict.get("Length3");
                      }
                      _context47.next = 63;
                      break;
                    case 42:
                      if (!g) {
                        _context47.next = 56;
                        break;
                      }
                      _e171 = (0, h.getXfaFontName)(v.name);
                      if (!_e171) {
                        _context47.next = 54;
                        break;
                      }
                      g.fontFamily = "".concat(g.fontFamily, "-PdfJS-XFA");
                      g.metrics = _e171.metrics || null;
                      T = _e171.factors || null;
                      _context47.next = 50;
                      return this.fetchStandardFontData(_e171.name);
                    case 50:
                      y = _context47.sent;
                      O = !!y;
                      a = t = (0, h.getXfaFontDict)(v.name);
                      o = !0;
                    case 54:
                      _context47.next = 63;
                      break;
                    case 56:
                      if (m) {
                        _context47.next = 63;
                        break;
                      }
                      _e172 = (0, c.getStandardFontName)(v.name);
                      if (!_e172) {
                        _context47.next = 63;
                        break;
                      }
                      _context47.next = 61;
                      return this.fetchStandardFontData(_e172);
                    case 61:
                      y = _context47.sent;
                      O = !!y;
                    case 63:
                      b = {
                        type: l,
                        name: v.name,
                        subtype: w,
                        file: y,
                        length1: x,
                        length2: C,
                        length3: k,
                        isInternalFont: O,
                        loadedName: a.loadedName,
                        composite: o,
                        fixedPitch: !1,
                        fontMatrix: t.getArray("FontMatrix") || r.FONT_IDENTITY_MATRIX,
                        firstChar: u,
                        lastChar: d,
                        toUnicode: f,
                        bbox: e.getArray("FontBBox") || t.getArray("FontBBox"),
                        ascent: e.get("Ascent"),
                        descent: e.get("Descent"),
                        xHeight: e.get("XHeight") || 0,
                        capHeight: e.get("CapHeight") || 0,
                        flags: e.get("Flags"),
                        italicAngle: e.get("ItalicAngle") || 0,
                        isType3Font: m,
                        cssFontInfo: g,
                        scaleFactors: T
                      };
                      if (!o) {
                        _context47.next = 72;
                        break;
                      }
                      _e173 = a.get("Encoding");
                      _e173 instanceof n.Name && (b.cidEncoding = _e173.name);
                      _context47.next = 69;
                      return i.CMapFactory.create({
                        encoding: _e173,
                        fetchBuiltInCMap: this._fetchBuiltInCMapBound,
                        useCMap: null
                      });
                    case 69:
                      _t130 = _context47.sent;
                      b.cMap = _t130;
                      b.vertical = b.cMap.vertical;
                    case 72:
                      return _context47.abrupt("return", this.extractDataStructures(t, a, b).then(function (a) {
                        _this61.extractWidths(t, e, a);
                        return new s.Font(v.name, y, a);
                      }));
                    case 73:
                    case "end":
                      return _context47.stop();
                  }
                }, _callee46, this, [[27, 31]]);
              }));
              function translateFont(_x107) {
                return _translateFont.apply(this, arguments);
              }
              return translateFont;
            }()
          }], [{
            key: "buildFontPaths",
            value: function buildFontPaths(e, t, a, i) {
              function buildPath(t) {
                var n = "".concat(e.loadedName, "_path_").concat(t);
                try {
                  if (e.renderer.hasBuiltPath(t)) return;
                  a.send("commonobj", [n, "FontPath", e.renderer.getPathJs(t)]);
                } catch (e) {
                  if (i.ignoreErrors) {
                    (0, r.warn)("buildFontPaths - ignoring ".concat(n, " glyph: \"").concat(e, "\"."));
                    return;
                  }
                  throw e;
                }
              }
              var _iterator78 = _createForOfIteratorHelper(t),
                _step78;
              try {
                for (_iterator78.s(); !(_step78 = _iterator78.n()).done;) {
                  var _e174 = _step78.value;
                  buildPath(_e174.fontChar);
                  var _t131 = _e174.accent;
                  _t131 && _t131.fontChar && buildPath(_t131.fontChar);
                }
              } catch (err) {
                _iterator78.e(err);
              } finally {
                _iterator78.f();
              }
            }
          }, {
            key: "fallbackFontDict",
            get: function get() {
              var e = new n.Dict();
              e.set("BaseFont", n.Name.get("PDFJS-FallbackFont"));
              e.set("Type", n.Name.get("FallbackType"));
              e.set("Subtype", n.Name.get("FallbackType"));
              e.set("Encoding", n.Name.get("WinAnsiEncoding"));
              return (0, r.shadow)(this, "fallbackFontDict", e);
            }
          }]);
          return PartialEvaluator;
        }();
        t.PartialEvaluator = PartialEvaluator;
        var TranslatedFont = /*#__PURE__*/function () {
          function TranslatedFont(_ref56) {
            var e = _ref56.loadedName,
              t = _ref56.font,
              a = _ref56.dict,
              r = _ref56.evaluatorOptions;
            _classCallCheck(this, TranslatedFont);
            this.loadedName = e;
            this.font = t;
            this.dict = a;
            this._evaluatorOptions = r || E;
            this.type3Loaded = null;
            this.type3Dependencies = t.isType3Font ? new Set() : null;
            this.sent = !1;
          }
          _createClass(TranslatedFont, [{
            key: "send",
            value: function send(e) {
              if (!this.sent) {
                this.sent = !0;
                e.send("commonobj", [this.loadedName, "Font", this.font.exportData(this._evaluatorOptions.fontExtraProperties)]);
              }
            }
          }, {
            key: "fallback",
            value: function fallback(e) {
              if (this.font.data) {
                this.font.disableFontFace = !0;
                PartialEvaluator.buildFontPaths(this.font, this.font.glyphCacheValues, e, this._evaluatorOptions);
              }
            }
          }, {
            key: "loadType3Data",
            value: function loadType3Data(e, t, a) {
              var _this62 = this;
              if (this.type3Loaded) return this.type3Loaded;
              if (!this.font.isType3Font) throw new Error("Must be a Type3 font.");
              var i = e.clone({
                ignoreErrors: !1
              });
              i.parsingType3Font = !0;
              var s = new n.RefSet(e.type3FontRefs);
              this.dict.objId && !s.has(this.dict.objId) && s.put(this.dict.objId);
              i.type3FontRefs = s;
              var o = this.font,
                c = this.type3Dependencies;
              var l = Promise.resolve();
              var h = this.dict.get("CharProcs"),
                u = this.dict.get("Resources") || t,
                d = Object.create(null),
                f = r.Util.normalizeRect(o.bbox || [0, 0, 0, 0]),
                g = f[2] - f[0],
                p = f[3] - f[1],
                m = Math.hypot(g, p);
              var _iterator79 = _createForOfIteratorHelper(h.getKeys()),
                _step79;
              try {
                var _loop5 = function _loop5() {
                  var e = _step79.value;
                  l = l.then(function () {
                    var t = h.get(e),
                      n = new T.OperatorList();
                    return i.getOperatorList({
                      stream: t,
                      task: a,
                      resources: u,
                      operatorList: n
                    }).then(function () {
                      n.fnArray[0] === r.OPS.setCharWidthAndBounds && _this62._removeType3ColorOperators(n, m);
                      d[e] = n.getIR();
                      var _iterator80 = _createForOfIteratorHelper(n.dependencies),
                        _step80;
                      try {
                        for (_iterator80.s(); !(_step80 = _iterator80.n()).done;) {
                          var _e175 = _step80.value;
                          c.add(_e175);
                        }
                      } catch (err) {
                        _iterator80.e(err);
                      } finally {
                        _iterator80.f();
                      }
                    }).catch(function (t) {
                      (0, r.warn)("Type3 font resource \"".concat(e, "\" is not available."));
                      var a = new T.OperatorList();
                      d[e] = a.getIR();
                    });
                  });
                };
                for (_iterator79.s(); !(_step79 = _iterator79.n()).done;) {
                  _loop5();
                }
              } catch (err) {
                _iterator79.e(err);
              } finally {
                _iterator79.f();
              }
              this.type3Loaded = l.then(function () {
                o.charProcOperatorList = d;
                if (_this62._bbox) {
                  o.isCharBBox = !0;
                  o.bbox = _this62._bbox;
                }
              });
              return this.type3Loaded;
            }
          }, {
            key: "_removeType3ColorOperators",
            value: function _removeType3ColorOperators(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NaN;
              var a = r.Util.normalizeRect(e.argsArray[0].slice(2)),
                i = a[2] - a[0],
                n = a[3] - a[1],
                s = Math.hypot(i, n);
              if (0 === i || 0 === n) {
                e.fnArray.splice(0, 1);
                e.argsArray.splice(0, 1);
              } else if (0 === t || Math.round(s / t) >= 10) {
                this._bbox || (this._bbox = [1 / 0, 1 / 0, -1 / 0, -1 / 0]);
                this._bbox[0] = Math.min(this._bbox[0], a[0]);
                this._bbox[1] = Math.min(this._bbox[1], a[1]);
                this._bbox[2] = Math.max(this._bbox[2], a[2]);
                this._bbox[3] = Math.max(this._bbox[3], a[3]);
              }
              var o = 0,
                c = e.length;
              for (; o < c;) {
                switch (e.fnArray[o]) {
                  case r.OPS.setCharWidthAndBounds:
                    break;
                  case r.OPS.setStrokeColorSpace:
                  case r.OPS.setFillColorSpace:
                  case r.OPS.setStrokeColor:
                  case r.OPS.setStrokeColorN:
                  case r.OPS.setFillColor:
                  case r.OPS.setFillColorN:
                  case r.OPS.setStrokeGray:
                  case r.OPS.setFillGray:
                  case r.OPS.setStrokeRGBColor:
                  case r.OPS.setFillRGBColor:
                  case r.OPS.setStrokeCMYKColor:
                  case r.OPS.setFillCMYKColor:
                  case r.OPS.shadingFill:
                  case r.OPS.setRenderingIntent:
                    e.fnArray.splice(o, 1);
                    e.argsArray.splice(o, 1);
                    c--;
                    continue;
                  case r.OPS.setGState:
                    var _e$argsArray$o = _slicedToArray(e.argsArray[o], 1),
                      _t132 = _e$argsArray$o[0];
                    var _a86 = 0,
                      _i67 = _t132.length;
                    for (; _a86 < _i67;) {
                      var _t132$_a = _slicedToArray(_t132[_a86], 1),
                        _e176 = _t132$_a[0];
                      switch (_e176) {
                        case "TR":
                        case "TR2":
                        case "HT":
                        case "BG":
                        case "BG2":
                        case "UCR":
                        case "UCR2":
                          _t132.splice(_a86, 1);
                          _i67--;
                          continue;
                      }
                      _a86++;
                    }
                }
                o++;
              }
            }
          }]);
          return TranslatedFont;
        }();
        var StateManager = /*#__PURE__*/function () {
          function StateManager() {
            var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new EvalState();
            _classCallCheck(this, StateManager);
            this.state = e;
            this.stateStack = [];
          }
          _createClass(StateManager, [{
            key: "save",
            value: function save() {
              var e = this.state;
              this.stateStack.push(this.state);
              this.state = e.clone();
            }
          }, {
            key: "restore",
            value: function restore() {
              var e = this.stateStack.pop();
              e && (this.state = e);
            }
          }, {
            key: "transform",
            value: function transform(e) {
              this.state.ctm = r.Util.transform(this.state.ctm, e);
            }
          }]);
          return StateManager;
        }();
        var TextState = /*#__PURE__*/function () {
          function TextState() {
            _classCallCheck(this, TextState);
            this.ctm = new Float32Array(r.IDENTITY_MATRIX);
            this.fontName = null;
            this.fontSize = 0;
            this.loadedName = null;
            this.font = null;
            this.fontMatrix = r.FONT_IDENTITY_MATRIX;
            this.textMatrix = r.IDENTITY_MATRIX.slice();
            this.textLineMatrix = r.IDENTITY_MATRIX.slice();
            this.charSpacing = 0;
            this.wordSpacing = 0;
            this.leading = 0;
            this.textHScale = 1;
            this.textRise = 0;
          }
          _createClass(TextState, [{
            key: "setTextMatrix",
            value: function setTextMatrix(e, t, a, r, i, n) {
              var s = this.textMatrix;
              s[0] = e;
              s[1] = t;
              s[2] = a;
              s[3] = r;
              s[4] = i;
              s[5] = n;
            }
          }, {
            key: "setTextLineMatrix",
            value: function setTextLineMatrix(e, t, a, r, i, n) {
              var s = this.textLineMatrix;
              s[0] = e;
              s[1] = t;
              s[2] = a;
              s[3] = r;
              s[4] = i;
              s[5] = n;
            }
          }, {
            key: "translateTextMatrix",
            value: function translateTextMatrix(e, t) {
              var a = this.textMatrix;
              a[4] = a[0] * e + a[2] * t + a[4];
              a[5] = a[1] * e + a[3] * t + a[5];
            }
          }, {
            key: "translateTextLineMatrix",
            value: function translateTextLineMatrix(e, t) {
              var a = this.textLineMatrix;
              a[4] = a[0] * e + a[2] * t + a[4];
              a[5] = a[1] * e + a[3] * t + a[5];
            }
          }, {
            key: "carriageReturn",
            value: function carriageReturn() {
              this.translateTextLineMatrix(0, -this.leading);
              this.textMatrix = this.textLineMatrix.slice();
            }
          }, {
            key: "clone",
            value: function clone() {
              var e = Object.create(this);
              e.textMatrix = this.textMatrix.slice();
              e.textLineMatrix = this.textLineMatrix.slice();
              e.fontMatrix = this.fontMatrix.slice();
              return e;
            }
          }]);
          return TextState;
        }();
        var EvalState = /*#__PURE__*/function () {
          function EvalState() {
            _classCallCheck(this, EvalState);
            this.ctm = new Float32Array(r.IDENTITY_MATRIX);
            this.font = null;
            this.textRenderingMode = r.TextRenderingMode.FILL;
            this.fillColorSpace = y.ColorSpace.singletons.gray;
            this.strokeColorSpace = y.ColorSpace.singletons.gray;
          }
          _createClass(EvalState, [{
            key: "clone",
            value: function clone() {
              return Object.create(this);
            }
          }]);
          return EvalState;
        }();
        var EvaluatorPreprocessor = /*#__PURE__*/function () {
          function EvaluatorPreprocessor(e, t) {
            var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new StateManager();
            _classCallCheck(this, EvaluatorPreprocessor);
            this.parser = new f.Parser({
              lexer: new f.Lexer(e, EvaluatorPreprocessor.opMap),
              xref: t
            });
            this.stateManager = a;
            this.nonProcessedArgs = [];
            this._isPathOp = !1;
            this._numInvalidPathOPS = 0;
          }
          _createClass(EvaluatorPreprocessor, [{
            key: "savedStatesDepth",
            get: function get() {
              return this.stateManager.stateStack.length;
            }
          }, {
            key: "read",
            value: function read(e) {
              var t = e.args;
              for (;;) {
                var a = this.parser.getObj();
                if (a instanceof n.Cmd) {
                  var _i68 = a.cmd,
                    _n35 = EvaluatorPreprocessor.opMap[_i68];
                  if (!_n35) {
                    (0, r.warn)("Unknown command \"".concat(_i68, "\"."));
                    continue;
                  }
                  var _s31 = _n35.id,
                    _o22 = _n35.numArgs;
                  var _c11 = null !== t ? t.length : 0;
                  this._isPathOp || (this._numInvalidPathOPS = 0);
                  this._isPathOp = _s31 >= r.OPS.moveTo && _s31 <= r.OPS.endPath;
                  if (_n35.variableArgs) _c11 > _o22 && (0, r.info)("Command ".concat(_i68, ": expected [0, ").concat(_o22, "] args, but received ").concat(_c11, " args."));else {
                    if (_c11 !== _o22) {
                      var _e177 = this.nonProcessedArgs;
                      for (; _c11 > _o22;) {
                        _e177.push(t.shift());
                        _c11--;
                      }
                      for (; _c11 < _o22 && 0 !== _e177.length;) {
                        null === t && (t = []);
                        t.unshift(_e177.pop());
                        _c11++;
                      }
                    }
                    if (_c11 < _o22) {
                      var _e178 = "command ".concat(_i68, ": expected ").concat(_o22, " args, but received ").concat(_c11, " args.");
                      if (this._isPathOp && ++this._numInvalidPathOPS > EvaluatorPreprocessor.MAX_INVALID_PATH_OPS) throw new r.FormatError("Invalid ".concat(_e178));
                      (0, r.warn)("Skipping ".concat(_e178));
                      null !== t && (t.length = 0);
                      continue;
                    }
                  }
                  this.preprocessCommand(_s31, t);
                  e.fn = _s31;
                  e.args = t;
                  return !0;
                }
                if (a === n.EOF) return !1;
                if (null !== a) {
                  null === t && (t = []);
                  t.push(a);
                  if (t.length > 33) throw new r.FormatError("Too many arguments");
                }
              }
            }
          }, {
            key: "preprocessCommand",
            value: function preprocessCommand(e, t) {
              switch (0 | e) {
                case r.OPS.save:
                  this.stateManager.save();
                  break;
                case r.OPS.restore:
                  this.stateManager.restore();
                  break;
                case r.OPS.transform:
                  this.stateManager.transform(t);
              }
            }
          }], [{
            key: "opMap",
            get: function get() {
              var e = (0, C.getLookupTableFactory)(function (e) {
                e.w = {
                  id: r.OPS.setLineWidth,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.J = {
                  id: r.OPS.setLineCap,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.j = {
                  id: r.OPS.setLineJoin,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.M = {
                  id: r.OPS.setMiterLimit,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.d = {
                  id: r.OPS.setDash,
                  numArgs: 2,
                  variableArgs: !1
                };
                e.ri = {
                  id: r.OPS.setRenderingIntent,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.i = {
                  id: r.OPS.setFlatness,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.gs = {
                  id: r.OPS.setGState,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.q = {
                  id: r.OPS.save,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.Q = {
                  id: r.OPS.restore,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.cm = {
                  id: r.OPS.transform,
                  numArgs: 6,
                  variableArgs: !1
                };
                e.m = {
                  id: r.OPS.moveTo,
                  numArgs: 2,
                  variableArgs: !1
                };
                e.l = {
                  id: r.OPS.lineTo,
                  numArgs: 2,
                  variableArgs: !1
                };
                e.c = {
                  id: r.OPS.curveTo,
                  numArgs: 6,
                  variableArgs: !1
                };
                e.v = {
                  id: r.OPS.curveTo2,
                  numArgs: 4,
                  variableArgs: !1
                };
                e.y = {
                  id: r.OPS.curveTo3,
                  numArgs: 4,
                  variableArgs: !1
                };
                e.h = {
                  id: r.OPS.closePath,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.re = {
                  id: r.OPS.rectangle,
                  numArgs: 4,
                  variableArgs: !1
                };
                e.S = {
                  id: r.OPS.stroke,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.s = {
                  id: r.OPS.closeStroke,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.f = {
                  id: r.OPS.fill,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.F = {
                  id: r.OPS.fill,
                  numArgs: 0,
                  variableArgs: !1
                };
                e["f*"] = {
                  id: r.OPS.eoFill,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.B = {
                  id: r.OPS.fillStroke,
                  numArgs: 0,
                  variableArgs: !1
                };
                e["B*"] = {
                  id: r.OPS.eoFillStroke,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.b = {
                  id: r.OPS.closeFillStroke,
                  numArgs: 0,
                  variableArgs: !1
                };
                e["b*"] = {
                  id: r.OPS.closeEOFillStroke,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.n = {
                  id: r.OPS.endPath,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.W = {
                  id: r.OPS.clip,
                  numArgs: 0,
                  variableArgs: !1
                };
                e["W*"] = {
                  id: r.OPS.eoClip,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.BT = {
                  id: r.OPS.beginText,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.ET = {
                  id: r.OPS.endText,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.Tc = {
                  id: r.OPS.setCharSpacing,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.Tw = {
                  id: r.OPS.setWordSpacing,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.Tz = {
                  id: r.OPS.setHScale,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.TL = {
                  id: r.OPS.setLeading,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.Tf = {
                  id: r.OPS.setFont,
                  numArgs: 2,
                  variableArgs: !1
                };
                e.Tr = {
                  id: r.OPS.setTextRenderingMode,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.Ts = {
                  id: r.OPS.setTextRise,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.Td = {
                  id: r.OPS.moveText,
                  numArgs: 2,
                  variableArgs: !1
                };
                e.TD = {
                  id: r.OPS.setLeadingMoveText,
                  numArgs: 2,
                  variableArgs: !1
                };
                e.Tm = {
                  id: r.OPS.setTextMatrix,
                  numArgs: 6,
                  variableArgs: !1
                };
                e["T*"] = {
                  id: r.OPS.nextLine,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.Tj = {
                  id: r.OPS.showText,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.TJ = {
                  id: r.OPS.showSpacedText,
                  numArgs: 1,
                  variableArgs: !1
                };
                e["'"] = {
                  id: r.OPS.nextLineShowText,
                  numArgs: 1,
                  variableArgs: !1
                };
                e['"'] = {
                  id: r.OPS.nextLineSetSpacingShowText,
                  numArgs: 3,
                  variableArgs: !1
                };
                e.d0 = {
                  id: r.OPS.setCharWidth,
                  numArgs: 2,
                  variableArgs: !1
                };
                e.d1 = {
                  id: r.OPS.setCharWidthAndBounds,
                  numArgs: 6,
                  variableArgs: !1
                };
                e.CS = {
                  id: r.OPS.setStrokeColorSpace,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.cs = {
                  id: r.OPS.setFillColorSpace,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.SC = {
                  id: r.OPS.setStrokeColor,
                  numArgs: 4,
                  variableArgs: !0
                };
                e.SCN = {
                  id: r.OPS.setStrokeColorN,
                  numArgs: 33,
                  variableArgs: !0
                };
                e.sc = {
                  id: r.OPS.setFillColor,
                  numArgs: 4,
                  variableArgs: !0
                };
                e.scn = {
                  id: r.OPS.setFillColorN,
                  numArgs: 33,
                  variableArgs: !0
                };
                e.G = {
                  id: r.OPS.setStrokeGray,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.g = {
                  id: r.OPS.setFillGray,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.RG = {
                  id: r.OPS.setStrokeRGBColor,
                  numArgs: 3,
                  variableArgs: !1
                };
                e.rg = {
                  id: r.OPS.setFillRGBColor,
                  numArgs: 3,
                  variableArgs: !1
                };
                e.K = {
                  id: r.OPS.setStrokeCMYKColor,
                  numArgs: 4,
                  variableArgs: !1
                };
                e.k = {
                  id: r.OPS.setFillCMYKColor,
                  numArgs: 4,
                  variableArgs: !1
                };
                e.sh = {
                  id: r.OPS.shadingFill,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.BI = {
                  id: r.OPS.beginInlineImage,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.ID = {
                  id: r.OPS.beginImageData,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.EI = {
                  id: r.OPS.endInlineImage,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.Do = {
                  id: r.OPS.paintXObject,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.MP = {
                  id: r.OPS.markPoint,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.DP = {
                  id: r.OPS.markPointProps,
                  numArgs: 2,
                  variableArgs: !1
                };
                e.BMC = {
                  id: r.OPS.beginMarkedContent,
                  numArgs: 1,
                  variableArgs: !1
                };
                e.BDC = {
                  id: r.OPS.beginMarkedContentProps,
                  numArgs: 2,
                  variableArgs: !1
                };
                e.EMC = {
                  id: r.OPS.endMarkedContent,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.BX = {
                  id: r.OPS.beginCompat,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.EX = {
                  id: r.OPS.endCompat,
                  numArgs: 0,
                  variableArgs: !1
                };
                e.BM = null;
                e.BD = null;
                e.true = null;
                e.fa = null;
                e.fal = null;
                e.fals = null;
                e.false = null;
                e.nu = null;
                e.nul = null;
                e.null = null;
              });
              return (0, r.shadow)(this, "opMap", e());
            }
          }]);
          return EvaluatorPreprocessor;
        }();
        _defineProperty(EvaluatorPreprocessor, "MAX_INVALID_PATH_OPS", 10);
        t.EvaluatorPreprocessor = EvaluatorPreprocessor;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.IdentityCMap = t.CMapFactory = t.CMap = void 0;
        var r = a(2),
          i = a(4),
          n = a(5),
          s = a(15),
          o = a(16),
          c = a(3),
          l = a(8);
        var h = ["Adobe-GB1-UCS2", "Adobe-CNS1-UCS2", "Adobe-Japan1-UCS2", "Adobe-Korea1-UCS2", "78-EUC-H", "78-EUC-V", "78-H", "78-RKSJ-H", "78-RKSJ-V", "78-V", "78ms-RKSJ-H", "78ms-RKSJ-V", "83pv-RKSJ-H", "90ms-RKSJ-H", "90ms-RKSJ-V", "90msp-RKSJ-H", "90msp-RKSJ-V", "90pv-RKSJ-H", "90pv-RKSJ-V", "Add-H", "Add-RKSJ-H", "Add-RKSJ-V", "Add-V", "Adobe-CNS1-0", "Adobe-CNS1-1", "Adobe-CNS1-2", "Adobe-CNS1-3", "Adobe-CNS1-4", "Adobe-CNS1-5", "Adobe-CNS1-6", "Adobe-GB1-0", "Adobe-GB1-1", "Adobe-GB1-2", "Adobe-GB1-3", "Adobe-GB1-4", "Adobe-GB1-5", "Adobe-Japan1-0", "Adobe-Japan1-1", "Adobe-Japan1-2", "Adobe-Japan1-3", "Adobe-Japan1-4", "Adobe-Japan1-5", "Adobe-Japan1-6", "Adobe-Korea1-0", "Adobe-Korea1-1", "Adobe-Korea1-2", "B5-H", "B5-V", "B5pc-H", "B5pc-V", "CNS-EUC-H", "CNS-EUC-V", "CNS1-H", "CNS1-V", "CNS2-H", "CNS2-V", "ETHK-B5-H", "ETHK-B5-V", "ETen-B5-H", "ETen-B5-V", "ETenms-B5-H", "ETenms-B5-V", "EUC-H", "EUC-V", "Ext-H", "Ext-RKSJ-H", "Ext-RKSJ-V", "Ext-V", "GB-EUC-H", "GB-EUC-V", "GB-H", "GB-V", "GBK-EUC-H", "GBK-EUC-V", "GBK2K-H", "GBK2K-V", "GBKp-EUC-H", "GBKp-EUC-V", "GBT-EUC-H", "GBT-EUC-V", "GBT-H", "GBT-V", "GBTpc-EUC-H", "GBTpc-EUC-V", "GBpc-EUC-H", "GBpc-EUC-V", "H", "HKdla-B5-H", "HKdla-B5-V", "HKdlb-B5-H", "HKdlb-B5-V", "HKgccs-B5-H", "HKgccs-B5-V", "HKm314-B5-H", "HKm314-B5-V", "HKm471-B5-H", "HKm471-B5-V", "HKscs-B5-H", "HKscs-B5-V", "Hankaku", "Hiragana", "KSC-EUC-H", "KSC-EUC-V", "KSC-H", "KSC-Johab-H", "KSC-Johab-V", "KSC-V", "KSCms-UHC-H", "KSCms-UHC-HW-H", "KSCms-UHC-HW-V", "KSCms-UHC-V", "KSCpc-EUC-H", "KSCpc-EUC-V", "Katakana", "NWP-H", "NWP-V", "RKSJ-H", "RKSJ-V", "Roman", "UniCNS-UCS2-H", "UniCNS-UCS2-V", "UniCNS-UTF16-H", "UniCNS-UTF16-V", "UniCNS-UTF32-H", "UniCNS-UTF32-V", "UniCNS-UTF8-H", "UniCNS-UTF8-V", "UniGB-UCS2-H", "UniGB-UCS2-V", "UniGB-UTF16-H", "UniGB-UTF16-V", "UniGB-UTF32-H", "UniGB-UTF32-V", "UniGB-UTF8-H", "UniGB-UTF8-V", "UniJIS-UCS2-H", "UniJIS-UCS2-HW-H", "UniJIS-UCS2-HW-V", "UniJIS-UCS2-V", "UniJIS-UTF16-H", "UniJIS-UTF16-V", "UniJIS-UTF32-H", "UniJIS-UTF32-V", "UniJIS-UTF8-H", "UniJIS-UTF8-V", "UniJIS2004-UTF16-H", "UniJIS2004-UTF16-V", "UniJIS2004-UTF32-H", "UniJIS2004-UTF32-V", "UniJIS2004-UTF8-H", "UniJIS2004-UTF8-V", "UniJISPro-UCS2-HW-V", "UniJISPro-UCS2-V", "UniJISPro-UTF8-V", "UniJISX0213-UTF32-H", "UniJISX0213-UTF32-V", "UniJISX02132004-UTF32-H", "UniJISX02132004-UTF32-V", "UniKS-UCS2-H", "UniKS-UCS2-V", "UniKS-UTF16-H", "UniKS-UTF16-V", "UniKS-UTF32-H", "UniKS-UTF32-V", "UniKS-UTF8-H", "UniKS-UTF8-V", "V", "WP-Symbol"],
          u = Math.pow(2, 24) - 1;
        var CMap = /*#__PURE__*/function () {
          function CMap() {
            var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
            _classCallCheck(this, CMap);
            this.codespaceRanges = [[], [], [], []];
            this.numCodespaceRanges = 0;
            this._map = [];
            this.name = "";
            this.vertical = !1;
            this.useCMap = null;
            this.builtInCMap = e;
          }
          _createClass(CMap, [{
            key: "addCodespaceRange",
            value: function addCodespaceRange(e, t, a) {
              this.codespaceRanges[e - 1].push(t, a);
              this.numCodespaceRanges++;
            }
          }, {
            key: "mapCidRange",
            value: function mapCidRange(e, t, a) {
              if (t - e > u) throw new Error("mapCidRange - ignoring data above MAX_MAP_RANGE.");
              for (; e <= t;) this._map[e++] = a++;
            }
          }, {
            key: "mapBfRange",
            value: function mapBfRange(e, t, a) {
              if (t - e > u) throw new Error("mapBfRange - ignoring data above MAX_MAP_RANGE.");
              var r = a.length - 1;
              for (; e <= t;) {
                this._map[e++] = a;
                var _t133 = a.charCodeAt(r) + 1;
                _t133 > 255 ? a = a.substring(0, r - 1) + String.fromCharCode(a.charCodeAt(r - 1) + 1) + "\0" : a = a.substring(0, r) + String.fromCharCode(_t133);
              }
            }
          }, {
            key: "mapBfRangeToArray",
            value: function mapBfRangeToArray(e, t, a) {
              if (t - e > u) throw new Error("mapBfRangeToArray - ignoring data above MAX_MAP_RANGE.");
              var r = a.length;
              var i = 0;
              for (; e <= t && i < r;) {
                this._map[e] = a[i++];
                ++e;
              }
            }
          }, {
            key: "mapOne",
            value: function mapOne(e, t) {
              this._map[e] = t;
            }
          }, {
            key: "lookup",
            value: function lookup(e) {
              return this._map[e];
            }
          }, {
            key: "contains",
            value: function contains(e) {
              return void 0 !== this._map[e];
            }
          }, {
            key: "forEach",
            value: function forEach(e) {
              var t = this._map,
                a = t.length;
              if (a <= 65536) for (var _r71 = 0; _r71 < a; _r71++) void 0 !== t[_r71] && e(_r71, t[_r71]);else for (var _a87 in t) e(_a87, t[_a87]);
            }
          }, {
            key: "charCodeOf",
            value: function charCodeOf(e) {
              var t = this._map;
              if (t.length <= 65536) return t.indexOf(e);
              for (var _a88 in t) if (t[_a88] === e) return 0 | _a88;
              return -1;
            }
          }, {
            key: "getMap",
            value: function getMap() {
              return this._map;
            }
          }, {
            key: "readCharCode",
            value: function readCharCode(e, t, a) {
              var r = 0;
              var i = this.codespaceRanges;
              for (var _n36 = 0, _s32 = i.length; _n36 < _s32; _n36++) {
                r = (r << 8 | e.charCodeAt(t + _n36)) >>> 0;
                var _s33 = i[_n36];
                for (var _e179 = 0, _t134 = _s33.length; _e179 < _t134;) {
                  var _t135 = _s33[_e179++],
                    _i69 = _s33[_e179++];
                  if (r >= _t135 && r <= _i69) {
                    a.charcode = r;
                    a.length = _n36 + 1;
                    return;
                  }
                }
              }
              a.charcode = 0;
              a.length = 1;
            }
          }, {
            key: "getCharCodeLength",
            value: function getCharCodeLength(e) {
              var t = this.codespaceRanges;
              for (var _a89 = 0, _r72 = t.length; _a89 < _r72; _a89++) {
                var _r73 = t[_a89];
                for (var _t136 = 0, _i70 = _r73.length; _t136 < _i70;) {
                  var _i71 = _r73[_t136++],
                    _n37 = _r73[_t136++];
                  if (e >= _i71 && e <= _n37) return _a89 + 1;
                }
              }
              return 1;
            }
          }, {
            key: "length",
            get: function get() {
              return this._map.length;
            }
          }, {
            key: "isIdentityCMap",
            get: function get() {
              if ("Identity-H" !== this.name && "Identity-V" !== this.name) return !1;
              if (65536 !== this._map.length) return !1;
              for (var _e180 = 0; _e180 < 65536; _e180++) if (this._map[_e180] !== _e180) return !1;
              return !0;
            }
          }]);
          return CMap;
        }();
        t.CMap = CMap;
        var IdentityCMap = /*#__PURE__*/function (_CMap) {
          _inherits(IdentityCMap, _CMap);
          var _super52 = _createSuper(IdentityCMap);
          function IdentityCMap(e, t) {
            var _this63;
            _classCallCheck(this, IdentityCMap);
            _this63 = _super52.call(this);
            _this63.vertical = e;
            _this63.addCodespaceRange(t, 0, 65535);
            return _this63;
          }
          _createClass(IdentityCMap, [{
            key: "mapCidRange",
            value: function mapCidRange(e, t, a) {
              (0, r.unreachable)("should not call mapCidRange");
            }
          }, {
            key: "mapBfRange",
            value: function mapBfRange(e, t, a) {
              (0, r.unreachable)("should not call mapBfRange");
            }
          }, {
            key: "mapBfRangeToArray",
            value: function mapBfRangeToArray(e, t, a) {
              (0, r.unreachable)("should not call mapBfRangeToArray");
            }
          }, {
            key: "mapOne",
            value: function mapOne(e, t) {
              (0, r.unreachable)("should not call mapCidOne");
            }
          }, {
            key: "lookup",
            value: function lookup(e) {
              return Number.isInteger(e) && e <= 65535 ? e : void 0;
            }
          }, {
            key: "contains",
            value: function contains(e) {
              return Number.isInteger(e) && e <= 65535;
            }
          }, {
            key: "forEach",
            value: function forEach(e) {
              for (var _t137 = 0; _t137 <= 65535; _t137++) e(_t137, _t137);
            }
          }, {
            key: "charCodeOf",
            value: function charCodeOf(e) {
              return Number.isInteger(e) && e <= 65535 ? e : -1;
            }
          }, {
            key: "getMap",
            value: function getMap() {
              var e = new Array(65536);
              for (var _t138 = 0; _t138 <= 65535; _t138++) e[_t138] = _t138;
              return e;
            }
          }, {
            key: "length",
            get: function get() {
              return 65536;
            }
          }, {
            key: "isIdentityCMap",
            get: function get() {
              (0, r.unreachable)("should not access .isIdentityCMap");
            }
          }]);
          return IdentityCMap;
        }(CMap);
        t.IdentityCMap = IdentityCMap;
        function strToInt(e) {
          var t = 0;
          for (var _a90 = 0; _a90 < e.length; _a90++) t = t << 8 | e.charCodeAt(_a90);
          return t >>> 0;
        }
        function expectString(e) {
          if ("string" != typeof e) throw new r.FormatError("Malformed CMap: expected string.");
        }
        function expectInt(e) {
          if (!Number.isInteger(e)) throw new r.FormatError("Malformed CMap: expected int.");
        }
        function parseBfChar(e, t) {
          for (;;) {
            var _a91 = t.getObj();
            if (_a91 === i.EOF) break;
            if ((0, i.isCmd)(_a91, "endbfchar")) return;
            expectString(_a91);
            var _r74 = strToInt(_a91);
            _a91 = t.getObj();
            expectString(_a91);
            var _n38 = _a91;
            e.mapOne(_r74, _n38);
          }
        }
        function parseBfRange(e, t) {
          for (;;) {
            var _a92 = t.getObj();
            if (_a92 === i.EOF) break;
            if ((0, i.isCmd)(_a92, "endbfrange")) return;
            expectString(_a92);
            var _r75 = strToInt(_a92);
            _a92 = t.getObj();
            expectString(_a92);
            var _n39 = strToInt(_a92);
            _a92 = t.getObj();
            if (Number.isInteger(_a92) || "string" == typeof _a92) {
              var _t139 = Number.isInteger(_a92) ? String.fromCharCode(_a92) : _a92;
              e.mapBfRange(_r75, _n39, _t139);
            } else {
              if (!(0, i.isCmd)(_a92, "[")) break;
              {
                _a92 = t.getObj();
                var _s34 = [];
                for (; !(0, i.isCmd)(_a92, "]") && _a92 !== i.EOF;) {
                  _s34.push(_a92);
                  _a92 = t.getObj();
                }
                e.mapBfRangeToArray(_r75, _n39, _s34);
              }
            }
          }
          throw new r.FormatError("Invalid bf range.");
        }
        function parseCidChar(e, t) {
          for (;;) {
            var _a93 = t.getObj();
            if (_a93 === i.EOF) break;
            if ((0, i.isCmd)(_a93, "endcidchar")) return;
            expectString(_a93);
            var _r76 = strToInt(_a93);
            _a93 = t.getObj();
            expectInt(_a93);
            var _n40 = _a93;
            e.mapOne(_r76, _n40);
          }
        }
        function parseCidRange(e, t) {
          for (;;) {
            var _a94 = t.getObj();
            if (_a94 === i.EOF) break;
            if ((0, i.isCmd)(_a94, "endcidrange")) return;
            expectString(_a94);
            var _r77 = strToInt(_a94);
            _a94 = t.getObj();
            expectString(_a94);
            var _n41 = strToInt(_a94);
            _a94 = t.getObj();
            expectInt(_a94);
            var _s35 = _a94;
            e.mapCidRange(_r77, _n41, _s35);
          }
        }
        function parseCodespaceRange(e, t) {
          for (;;) {
            var _a95 = t.getObj();
            if (_a95 === i.EOF) break;
            if ((0, i.isCmd)(_a95, "endcodespacerange")) return;
            if ("string" != typeof _a95) break;
            var _r78 = strToInt(_a95);
            _a95 = t.getObj();
            if ("string" != typeof _a95) break;
            var _n42 = strToInt(_a95);
            e.addCodespaceRange(_a95.length, _r78, _n42);
          }
          throw new r.FormatError("Invalid codespace range.");
        }
        function parseWMode(e, t) {
          var a = t.getObj();
          Number.isInteger(a) && (e.vertical = !!a);
        }
        function parseCMapName(e, t) {
          var a = t.getObj();
          a instanceof i.Name && (e.name = a.name);
        }
        function parseCMap(_x108, _x109, _x110, _x111) {
          return _parseCMap.apply(this, arguments);
        }
        function _parseCMap() {
          _parseCMap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee48(e, t, a, n) {
            var s, o, _a96;
            return _regeneratorRuntime().wrap(function _callee48$(_context49) {
              while (1) switch (_context49.prev = _context49.next) {
                case 0:
                  _context49.prev = 0;
                  _a96 = t.getObj();
                  if (!(_a96 === i.EOF)) {
                    _context49.next = 4;
                    break;
                  }
                  return _context49.abrupt("break", 35);
                case 4:
                  if (!(_a96 instanceof i.Name)) {
                    _context49.next = 9;
                    break;
                  }
                  "WMode" === _a96.name ? parseWMode(e, t) : "CMapName" === _a96.name && parseCMapName(e, t);
                  s = _a96;
                  _context49.next = 25;
                  break;
                case 9:
                  if (!(_a96 instanceof i.Cmd)) {
                    _context49.next = 25;
                    break;
                  }
                  _context49.t0 = _a96.cmd;
                  _context49.next = _context49.t0 === "endcmap" ? 13 : _context49.t0 === "usecmap" ? 14 : _context49.t0 === "begincodespacerange" ? 16 : _context49.t0 === "beginbfchar" ? 18 : _context49.t0 === "begincidchar" ? 20 : _context49.t0 === "beginbfrange" ? 22 : _context49.t0 === "begincidrange" ? 24 : 25;
                  break;
                case 13:
                  return _context49.abrupt("break", 35);
                case 14:
                  s instanceof i.Name && (o = s.name);
                  return _context49.abrupt("break", 25);
                case 16:
                  parseCodespaceRange(e, t);
                  return _context49.abrupt("break", 25);
                case 18:
                  parseBfChar(e, t);
                  return _context49.abrupt("break", 25);
                case 20:
                  parseCidChar(e, t);
                  return _context49.abrupt("break", 25);
                case 22:
                  parseBfRange(e, t);
                  return _context49.abrupt("break", 25);
                case 24:
                  parseCidRange(e, t);
                case 25:
                  _context49.next = 33;
                  break;
                case 27:
                  _context49.prev = 27;
                  _context49.t1 = _context49["catch"](0);
                  if (!(_context49.t1 instanceof c.MissingDataException)) {
                    _context49.next = 31;
                    break;
                  }
                  throw _context49.t1;
                case 31:
                  (0, r.warn)("Invalid cMap data: " + _context49.t1);
                  return _context49.abrupt("continue", 33);
                case 33:
                  _context49.next = 0;
                  break;
                case 35:
                  !n && o && (n = o);
                  return _context49.abrupt("return", n ? extendCMap(e, a, n) : e);
                case 37:
                case "end":
                  return _context49.stop();
              }
            }, _callee48, null, [[0, 27]]);
          }));
          return _parseCMap.apply(this, arguments);
        }
        function extendCMap(_x112, _x113, _x114) {
          return _extendCMap.apply(this, arguments);
        }
        function _extendCMap() {
          _extendCMap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee49(e, t, a) {
            var _t140, _a97;
            return _regeneratorRuntime().wrap(function _callee49$(_context50) {
              while (1) switch (_context50.prev = _context50.next) {
                case 0:
                  _context50.next = 2;
                  return createBuiltInCMap(a, t);
                case 2:
                  e.useCMap = _context50.sent;
                  if (0 === e.numCodespaceRanges) {
                    _t140 = e.useCMap.codespaceRanges;
                    for (_a97 = 0; _a97 < _t140.length; _a97++) e.codespaceRanges[_a97] = _t140[_a97].slice();
                    e.numCodespaceRanges = e.useCMap.numCodespaceRanges;
                  }
                  e.useCMap.forEach(function (t, a) {
                    e.contains(t) || e.mapOne(t, e.useCMap.lookup(t));
                  });
                  return _context50.abrupt("return", e);
                case 6:
                case "end":
                  return _context50.stop();
              }
            }, _callee49);
          }));
          return _extendCMap.apply(this, arguments);
        }
        function createBuiltInCMap(_x115, _x116) {
          return _createBuiltInCMap.apply(this, arguments);
        }
        function _createBuiltInCMap() {
          _createBuiltInCMap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee50(e, t) {
            var _yield$t, a, i, n, _e181;
            return _regeneratorRuntime().wrap(function _callee50$(_context51) {
              while (1) switch (_context51.prev = _context51.next) {
                case 0:
                  if (!("Identity-H" === e)) {
                    _context51.next = 2;
                    break;
                  }
                  return _context51.abrupt("return", new IdentityCMap(!1, 2));
                case 2:
                  if (!("Identity-V" === e)) {
                    _context51.next = 4;
                    break;
                  }
                  return _context51.abrupt("return", new IdentityCMap(!0, 2));
                case 4:
                  if (h.includes(e)) {
                    _context51.next = 6;
                    break;
                  }
                  throw new Error("Unknown CMap name: " + e);
                case 6:
                  if (t) {
                    _context51.next = 8;
                    break;
                  }
                  throw new Error("Built-in CMap parameters are not provided.");
                case 8:
                  _context51.next = 10;
                  return t(e);
                case 10:
                  _yield$t = _context51.sent;
                  a = _yield$t.cMapData;
                  i = _yield$t.compressionType;
                  n = new CMap(!0);
                  if (!(i === r.CMapCompressionType.BINARY)) {
                    _context51.next = 16;
                    break;
                  }
                  return _context51.abrupt("return", new s.BinaryCMapReader().process(a, n, function (e) {
                    return extendCMap(n, t, e);
                  }));
                case 16:
                  if (!(i === r.CMapCompressionType.NONE)) {
                    _context51.next = 19;
                    break;
                  }
                  _e181 = new o.Lexer(new l.Stream(a));
                  return _context51.abrupt("return", parseCMap(n, _e181, t, null));
                case 19:
                  throw new Error("Invalid CMap \"compressionType\" value: ".concat(i));
                case 20:
                case "end":
                  return _context51.stop();
              }
            }, _callee50);
          }));
          return _createBuiltInCMap.apply(this, arguments);
        }
        t.CMapFactory = /*#__PURE__*/function () {
          function CMapFactory() {
            _classCallCheck(this, CMapFactory);
          }
          _createClass(CMapFactory, null, [{
            key: "create",
            value: function () {
              var _create2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee47(_ref57) {
                var e, t, a, _r79;
                return _regeneratorRuntime().wrap(function _callee47$(_context48) {
                  while (1) switch (_context48.prev = _context48.next) {
                    case 0:
                      e = _ref57.encoding, t = _ref57.fetchBuiltInCMap, a = _ref57.useCMap;
                      if (!(e instanceof i.Name)) {
                        _context48.next = 3;
                        break;
                      }
                      return _context48.abrupt("return", createBuiltInCMap(e.name, t));
                    case 3:
                      if (!(e instanceof n.BaseStream)) {
                        _context48.next = 8;
                        break;
                      }
                      _context48.next = 6;
                      return parseCMap(new CMap(), new o.Lexer(e), t, a);
                    case 6:
                      _r79 = _context48.sent;
                      return _context48.abrupt("return", _r79.isIdentityCMap ? createBuiltInCMap(_r79.name, t) : _r79);
                    case 8:
                      throw new Error("Encoding required.");
                    case 9:
                    case "end":
                      return _context48.stop();
                  }
                }, _callee47);
              }));
              function create(_x117) {
                return _create2.apply(this, arguments);
              }
              return create;
            }()
          }]);
          return CMapFactory;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.BinaryCMapReader = void 0;
        var r = a(2);
        function hexToInt(e, t) {
          var a = 0;
          for (var _r80 = 0; _r80 <= t; _r80++) a = a << 8 | e[_r80];
          return a >>> 0;
        }
        function hexToStr(e, t) {
          return 1 === t ? String.fromCharCode(e[0], e[1]) : 3 === t ? String.fromCharCode(e[0], e[1], e[2], e[3]) : String.fromCharCode.apply(String, _toConsumableArray(e.subarray(0, t + 1)));
        }
        function addHex(e, t, a) {
          var r = 0;
          for (var _i72 = a; _i72 >= 0; _i72--) {
            r += e[_i72] + t[_i72];
            e[_i72] = 255 & r;
            r >>= 8;
          }
        }
        function incHex(e, t) {
          var a = 1;
          for (var _r81 = t; _r81 >= 0 && a > 0; _r81--) {
            a += e[_r81];
            e[_r81] = 255 & a;
            a >>= 8;
          }
        }
        var i = 16;
        var BinaryCMapStream = /*#__PURE__*/function () {
          function BinaryCMapStream(e) {
            _classCallCheck(this, BinaryCMapStream);
            this.buffer = e;
            this.pos = 0;
            this.end = e.length;
            this.tmpBuf = new Uint8Array(19);
          }
          _createClass(BinaryCMapStream, [{
            key: "readByte",
            value: function readByte() {
              return this.pos >= this.end ? -1 : this.buffer[this.pos++];
            }
          }, {
            key: "readNumber",
            value: function readNumber() {
              var e,
                t = 0;
              do {
                var _a98 = this.readByte();
                if (_a98 < 0) throw new r.FormatError("unexpected EOF in bcmap");
                e = !(128 & _a98);
                t = t << 7 | 127 & _a98;
              } while (!e);
              return t;
            }
          }, {
            key: "readSigned",
            value: function readSigned() {
              var e = this.readNumber();
              return 1 & e ? ~(e >>> 1) : e >>> 1;
            }
          }, {
            key: "readHex",
            value: function readHex(e, t) {
              e.set(this.buffer.subarray(this.pos, this.pos + t + 1));
              this.pos += t + 1;
            }
          }, {
            key: "readHexNumber",
            value: function readHexNumber(e, t) {
              var a;
              var i = this.tmpBuf;
              var n = 0;
              do {
                var _e182 = this.readByte();
                if (_e182 < 0) throw new r.FormatError("unexpected EOF in bcmap");
                a = !(128 & _e182);
                i[n++] = 127 & _e182;
              } while (!a);
              var s = t,
                o = 0,
                c = 0;
              for (; s >= 0;) {
                for (; c < 8 && i.length > 0;) {
                  o |= i[--n] << c;
                  c += 7;
                }
                e[s] = 255 & o;
                s--;
                o >>= 8;
                c -= 8;
              }
            }
          }, {
            key: "readHexSigned",
            value: function readHexSigned(e, t) {
              this.readHexNumber(e, t);
              var a = 1 & e[t] ? 255 : 0;
              var r = 0;
              for (var _i73 = 0; _i73 <= t; _i73++) {
                r = (1 & r) << 8 | e[_i73];
                e[_i73] = r >> 1 ^ a;
              }
            }
          }, {
            key: "readString",
            value: function readString() {
              var e = this.readNumber(),
                t = new Array(e);
              for (var _a99 = 0; _a99 < e; _a99++) t[_a99] = this.readNumber();
              return String.fromCharCode.apply(String, t);
            }
          }]);
          return BinaryCMapStream;
        }();
        t.BinaryCMapReader = /*#__PURE__*/function () {
          function BinaryCMapReader() {
            _classCallCheck(this, BinaryCMapReader);
          }
          _createClass(BinaryCMapReader, [{
            key: "process",
            value: function () {
              var _process = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee51(e, t, a) {
                var r, n, s, o, c, l, h, u, d, f, _e183, _a100, _n43, _g4, _p3, _e184, _e185, _e186, _e187, _e188, _e189;
                return _regeneratorRuntime().wrap(function _callee51$(_context52) {
                  while (1) switch (_context52.prev = _context52.next) {
                    case 0:
                      r = new BinaryCMapStream(e), n = r.readByte();
                      t.vertical = !!(1 & n);
                      s = null;
                      o = new Uint8Array(i), c = new Uint8Array(i), l = new Uint8Array(i), h = new Uint8Array(i), u = new Uint8Array(i);
                    case 4:
                      if (!((f = r.readByte()) >= 0)) {
                        _context52.next = 60;
                        break;
                      }
                      _e183 = f >> 5;
                      if (!(7 === _e183)) {
                        _context52.next = 14;
                        break;
                      }
                      _context52.t0 = 31 & f;
                      _context52.next = _context52.t0 === 0 ? 10 : _context52.t0 === 1 ? 12 : 13;
                      break;
                    case 10:
                      r.readString();
                      return _context52.abrupt("break", 13);
                    case 12:
                      s = r.readString();
                    case 13:
                      return _context52.abrupt("continue", 58);
                    case 14:
                      _a100 = !!(16 & f), _n43 = 15 & f;
                      if (!(_n43 + 1 > i)) {
                        _context52.next = 17;
                        break;
                      }
                      throw new Error("BinaryCMapReader.process: Invalid dataSize.");
                    case 17:
                      _g4 = 1, _p3 = r.readNumber();
                      _context52.t1 = _e183;
                      _context52.next = _context52.t1 === 0 ? 21 : _context52.t1 === 1 ? 27 : _context52.t1 === 2 ? 33 : _context52.t1 === 3 ? 38 : _context52.t1 === 4 ? 45 : _context52.t1 === 5 ? 50 : 57;
                      break;
                    case 21:
                      r.readHex(o, _n43);
                      r.readHexNumber(c, _n43);
                      addHex(c, o, _n43);
                      t.addCodespaceRange(_n43 + 1, hexToInt(o, _n43), hexToInt(c, _n43));
                      for (_e184 = 1; _e184 < _p3; _e184++) {
                        incHex(c, _n43);
                        r.readHexNumber(o, _n43);
                        addHex(o, c, _n43);
                        r.readHexNumber(c, _n43);
                        addHex(c, o, _n43);
                        t.addCodespaceRange(_n43 + 1, hexToInt(o, _n43), hexToInt(c, _n43));
                      }
                      return _context52.abrupt("break", 58);
                    case 27:
                      r.readHex(o, _n43);
                      r.readHexNumber(c, _n43);
                      addHex(c, o, _n43);
                      r.readNumber();
                      for (_e185 = 1; _e185 < _p3; _e185++) {
                        incHex(c, _n43);
                        r.readHexNumber(o, _n43);
                        addHex(o, c, _n43);
                        r.readHexNumber(c, _n43);
                        addHex(c, o, _n43);
                        r.readNumber();
                      }
                      return _context52.abrupt("break", 58);
                    case 33:
                      r.readHex(l, _n43);
                      d = r.readNumber();
                      t.mapOne(hexToInt(l, _n43), d);
                      for (_e186 = 1; _e186 < _p3; _e186++) {
                        incHex(l, _n43);
                        if (!_a100) {
                          r.readHexNumber(u, _n43);
                          addHex(l, u, _n43);
                        }
                        d = r.readSigned() + (d + 1);
                        t.mapOne(hexToInt(l, _n43), d);
                      }
                      return _context52.abrupt("break", 58);
                    case 38:
                      r.readHex(o, _n43);
                      r.readHexNumber(c, _n43);
                      addHex(c, o, _n43);
                      d = r.readNumber();
                      t.mapCidRange(hexToInt(o, _n43), hexToInt(c, _n43), d);
                      for (_e187 = 1; _e187 < _p3; _e187++) {
                        incHex(c, _n43);
                        if (_a100) o.set(c);else {
                          r.readHexNumber(o, _n43);
                          addHex(o, c, _n43);
                        }
                        r.readHexNumber(c, _n43);
                        addHex(c, o, _n43);
                        d = r.readNumber();
                        t.mapCidRange(hexToInt(o, _n43), hexToInt(c, _n43), d);
                      }
                      return _context52.abrupt("break", 58);
                    case 45:
                      r.readHex(l, _g4);
                      r.readHex(h, _n43);
                      t.mapOne(hexToInt(l, _g4), hexToStr(h, _n43));
                      for (_e188 = 1; _e188 < _p3; _e188++) {
                        incHex(l, _g4);
                        if (!_a100) {
                          r.readHexNumber(u, _g4);
                          addHex(l, u, _g4);
                        }
                        incHex(h, _n43);
                        r.readHexSigned(u, _n43);
                        addHex(h, u, _n43);
                        t.mapOne(hexToInt(l, _g4), hexToStr(h, _n43));
                      }
                      return _context52.abrupt("break", 58);
                    case 50:
                      r.readHex(o, _g4);
                      r.readHexNumber(c, _g4);
                      addHex(c, o, _g4);
                      r.readHex(h, _n43);
                      t.mapBfRange(hexToInt(o, _g4), hexToInt(c, _g4), hexToStr(h, _n43));
                      for (_e189 = 1; _e189 < _p3; _e189++) {
                        incHex(c, _g4);
                        if (_a100) o.set(c);else {
                          r.readHexNumber(o, _g4);
                          addHex(o, c, _g4);
                        }
                        r.readHexNumber(c, _g4);
                        addHex(c, o, _g4);
                        r.readHex(h, _n43);
                        t.mapBfRange(hexToInt(o, _g4), hexToInt(c, _g4), hexToStr(h, _n43));
                      }
                      return _context52.abrupt("break", 58);
                    case 57:
                      throw new Error("BinaryCMapReader.process - unknown type: ".concat(_e183));
                    case 58:
                      _context52.next = 4;
                      break;
                    case 60:
                      return _context52.abrupt("return", s ? a(s) : t);
                    case 61:
                    case "end":
                      return _context52.stop();
                  }
                }, _callee51);
              }));
              function process(_x118, _x119, _x120) {
                return _process.apply(this, arguments);
              }
              return process;
            }()
          }]);
          return BinaryCMapReader;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.Parser = t.Linearization = t.Lexer = void 0;
        var r = a(2),
          i = a(4),
          n = a(3),
          s = a(17),
          o = a(19),
          c = a(20),
          l = a(22),
          h = a(23),
          u = a(26),
          d = a(29),
          f = a(31),
          g = a(8),
          p = a(32),
          m = a(33);
        var Parser = /*#__PURE__*/function () {
          function Parser(_ref58) {
            var e = _ref58.lexer,
              t = _ref58.xref,
              _ref58$allowStreams = _ref58.allowStreams,
              a = _ref58$allowStreams === void 0 ? !1 : _ref58$allowStreams,
              _ref58$recoveryMode = _ref58.recoveryMode,
              r = _ref58$recoveryMode === void 0 ? !1 : _ref58$recoveryMode;
            _classCallCheck(this, Parser);
            this.lexer = e;
            this.xref = t;
            this.allowStreams = a;
            this.recoveryMode = r;
            this.imageCache = Object.create(null);
            this._imageId = 0;
            this.refill();
          }
          _createClass(Parser, [{
            key: "refill",
            value: function refill() {
              this.buf1 = this.lexer.getObj();
              this.buf2 = this.lexer.getObj();
            }
          }, {
            key: "shift",
            value: function shift() {
              if (this.buf2 instanceof i.Cmd && "ID" === this.buf2.cmd) {
                this.buf1 = this.buf2;
                this.buf2 = null;
              } else {
                this.buf1 = this.buf2;
                this.buf2 = this.lexer.getObj();
              }
            }
          }, {
            key: "tryShift",
            value: function tryShift() {
              try {
                this.shift();
                return !0;
              } catch (e) {
                if (e instanceof n.MissingDataException) throw e;
                return !1;
              }
            }
          }, {
            key: "getObj",
            value: function getObj() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
              var t = this.buf1;
              this.shift();
              if (t instanceof i.Cmd) switch (t.cmd) {
                case "BI":
                  return this.makeInlineImage(e);
                case "[":
                  var _a101 = [];
                  for (; !(0, i.isCmd)(this.buf1, "]") && this.buf1 !== i.EOF;) _a101.push(this.getObj(e));
                  if (this.buf1 === i.EOF) {
                    if (this.recoveryMode) return _a101;
                    throw new n.ParserEOFException("End of file inside array.");
                  }
                  this.shift();
                  return _a101;
                case "<<":
                  var _s36 = new i.Dict(this.xref);
                  for (; !(0, i.isCmd)(this.buf1, ">>") && this.buf1 !== i.EOF;) {
                    if (!(this.buf1 instanceof i.Name)) {
                      (0, r.info)("Malformed dictionary: key must be a name object");
                      this.shift();
                      continue;
                    }
                    var _t141 = this.buf1.name;
                    this.shift();
                    if (this.buf1 === i.EOF) break;
                    _s36.set(_t141, this.getObj(e));
                  }
                  if (this.buf1 === i.EOF) {
                    if (this.recoveryMode) return _s36;
                    throw new n.ParserEOFException("End of file inside dictionary.");
                  }
                  if ((0, i.isCmd)(this.buf2, "stream")) return this.allowStreams ? this.makeStream(_s36, e) : _s36;
                  this.shift();
                  return _s36;
                default:
                  return t;
              }
              if (Number.isInteger(t)) {
                if (Number.isInteger(this.buf1) && (0, i.isCmd)(this.buf2, "R")) {
                  var _e190 = i.Ref.get(t, this.buf1);
                  this.shift();
                  this.shift();
                  return _e190;
                }
                return t;
              }
              return "string" == typeof t && e ? e.decryptString(t) : t;
            }
          }, {
            key: "findDefaultInlineStreamEnd",
            value: function findDefaultInlineStreamEnd(e) {
              var t = this.lexer,
                a = e.pos;
              var s,
                o,
                c = 0;
              for (; -1 !== (s = e.getByte());) if (0 === c) c = 69 === s ? 1 : 0;else if (1 === c) c = 73 === s ? 2 : 0;else if (32 === s || 10 === s || 13 === s) {
                o = e.pos;
                var _a102 = e.peekBytes(10);
                for (var _e191 = 0, _t142 = _a102.length; _e191 < _t142; _e191++) {
                  s = _a102[_e191];
                  if ((0 !== s || 0 === _a102[_e191 + 1]) && 10 !== s && 13 !== s && (s < 32 || s > 127)) {
                    c = 0;
                    break;
                  }
                }
                if (2 !== c) continue;
                if (t.knownCommands) {
                  var _e192 = t.peekObj();
                  _e192 instanceof i.Cmd && !t.knownCommands[_e192.cmd] && (c = 0);
                } else (0, r.warn)("findDefaultInlineStreamEnd - `lexer.knownCommands` is undefined.");
                if (2 === c) break;
              } else c = 0;
              if (-1 === s) {
                (0, r.warn)("findDefaultInlineStreamEnd: Reached the end of the stream without finding a valid EI marker");
                if (o) {
                  (0, r.warn)('... trying to recover by using the last "EI" occurrence.');
                  e.skip(-(e.pos - o));
                }
              }
              var l = 4;
              e.skip(-l);
              s = e.peekByte();
              e.skip(l);
              (0, n.isWhiteSpace)(s) || l--;
              return e.pos - l - a;
            }
          }, {
            key: "findDCTDecodeInlineStreamEnd",
            value: function findDCTDecodeInlineStreamEnd(e) {
              var t = e.pos;
              var a,
                i,
                n = !1;
              for (; -1 !== (a = e.getByte());) if (255 === a) {
                switch (e.getByte()) {
                  case 0:
                    break;
                  case 255:
                    e.skip(-1);
                    break;
                  case 217:
                    n = !0;
                    break;
                  case 192:
                  case 193:
                  case 194:
                  case 195:
                  case 197:
                  case 198:
                  case 199:
                  case 201:
                  case 202:
                  case 203:
                  case 205:
                  case 206:
                  case 207:
                  case 196:
                  case 204:
                  case 218:
                  case 219:
                  case 220:
                  case 221:
                  case 222:
                  case 223:
                  case 224:
                  case 225:
                  case 226:
                  case 227:
                  case 228:
                  case 229:
                  case 230:
                  case 231:
                  case 232:
                  case 233:
                  case 234:
                  case 235:
                  case 236:
                  case 237:
                  case 238:
                  case 239:
                  case 254:
                    i = e.getUint16();
                    i > 2 ? e.skip(i - 2) : e.skip(-2);
                }
                if (n) break;
              }
              var s = e.pos - t;
              if (-1 === a) {
                (0, r.warn)("Inline DCTDecode image stream: EOI marker not found, searching for /EI/ instead.");
                e.skip(-s);
                return this.findDefaultInlineStreamEnd(e);
              }
              this.inlineStreamSkipEI(e);
              return s;
            }
          }, {
            key: "findASCII85DecodeInlineStreamEnd",
            value: function findASCII85DecodeInlineStreamEnd(e) {
              var t = e.pos;
              var a;
              for (; -1 !== (a = e.getByte());) if (126 === a) {
                var _t143 = e.pos;
                a = e.peekByte();
                for (; (0, n.isWhiteSpace)(a);) {
                  e.skip();
                  a = e.peekByte();
                }
                if (62 === a) {
                  e.skip();
                  break;
                }
                if (e.pos > _t143) {
                  var _t144 = e.peekBytes(2);
                  if (69 === _t144[0] && 73 === _t144[1]) break;
                }
              }
              var i = e.pos - t;
              if (-1 === a) {
                (0, r.warn)("Inline ASCII85Decode image stream: EOD marker not found, searching for /EI/ instead.");
                e.skip(-i);
                return this.findDefaultInlineStreamEnd(e);
              }
              this.inlineStreamSkipEI(e);
              return i;
            }
          }, {
            key: "findASCIIHexDecodeInlineStreamEnd",
            value: function findASCIIHexDecodeInlineStreamEnd(e) {
              var t = e.pos;
              var a;
              for (; -1 !== (a = e.getByte()) && 62 !== a;);
              var i = e.pos - t;
              if (-1 === a) {
                (0, r.warn)("Inline ASCIIHexDecode image stream: EOD marker not found, searching for /EI/ instead.");
                e.skip(-i);
                return this.findDefaultInlineStreamEnd(e);
              }
              this.inlineStreamSkipEI(e);
              return i;
            }
          }, {
            key: "inlineStreamSkipEI",
            value: function inlineStreamSkipEI(e) {
              var t,
                a = 0;
              for (; -1 !== (t = e.getByte());) if (0 === a) a = 69 === t ? 1 : 0;else if (1 === a) a = 73 === t ? 2 : 0;else if (2 === a) break;
            }
          }, {
            key: "makeInlineImage",
            value: function makeInlineImage(e) {
              var t = this.lexer,
                a = t.stream,
                n = Object.create(null);
              var s;
              for (; !(0, i.isCmd)(this.buf1, "ID") && this.buf1 !== i.EOF;) {
                if (!(this.buf1 instanceof i.Name)) throw new r.FormatError("Dictionary key must be a name object");
                var _t145 = this.buf1.name;
                this.shift();
                if (this.buf1 === i.EOF) break;
                n[_t145] = this.getObj(e);
              }
              -1 !== t.beginInlineImagePos && (s = a.pos - t.beginInlineImagePos);
              var o = this.xref.fetchIfRef(n.F || n.Filter);
              var c;
              if (o instanceof i.Name) c = o.name;else if (Array.isArray(o)) {
                var _e193 = this.xref.fetchIfRef(o[0]);
                _e193 instanceof i.Name && (c = _e193.name);
              }
              var l = a.pos;
              var h, u;
              switch (c) {
                case "DCT":
                case "DCTDecode":
                  h = this.findDCTDecodeInlineStreamEnd(a);
                  break;
                case "A85":
                case "ASCII85Decode":
                  h = this.findASCII85DecodeInlineStreamEnd(a);
                  break;
                case "AHx":
                case "ASCIIHexDecode":
                  h = this.findASCIIHexDecodeInlineStreamEnd(a);
                  break;
                default:
                  h = this.findDefaultInlineStreamEnd(a);
              }
              if (h < 1e3 && s > 0) {
                var _e194 = a.pos;
                a.pos = t.beginInlineImagePos;
                u = function getInlineImageCacheKey(e) {
                  var t = [],
                    a = e.length;
                  var r = 0;
                  for (; r < a - 1;) t.push(e[r++] << 8 | e[r++]);
                  r < a && t.push(e[r]);
                  return a + "_" + String.fromCharCode.apply(null, t);
                }(a.getBytes(s + h));
                a.pos = _e194;
                var _r82 = this.imageCache[u];
                if (void 0 !== _r82) {
                  this.buf2 = i.Cmd.get("EI");
                  this.shift();
                  _r82.reset();
                  return _r82;
                }
              }
              var d = new i.Dict(this.xref);
              for (var _e195 in n) d.set(_e195, n[_e195]);
              var f = a.makeSubStream(l, h, d);
              e && (f = e.createStream(f, h));
              f = this.filter(f, d, h);
              f.dict = d;
              if (void 0 !== u) {
                f.cacheKey = "inline_img_" + ++this._imageId;
                this.imageCache[u] = f;
              }
              this.buf2 = i.Cmd.get("EI");
              this.shift();
              return f;
            }
          }, {
            key: "_findStreamLength",
            value: function _findStreamLength(e, t) {
              var a = this.lexer.stream;
              a.pos = e;
              var r = t.length;
              for (; a.pos < a.end;) {
                var _i74 = a.peekBytes(2048),
                  _n44 = _i74.length - r;
                if (_n44 <= 0) break;
                var _s37 = 0;
                for (; _s37 < _n44;) {
                  var _n45 = 0;
                  for (; _n45 < r && _i74[_s37 + _n45] === t[_n45];) _n45++;
                  if (_n45 >= r) {
                    a.pos += _s37;
                    return a.pos - e;
                  }
                  _s37++;
                }
                a.pos += _n44;
              }
              return -1;
            }
          }, {
            key: "makeStream",
            value: function makeStream(e, t) {
              var a = this.lexer;
              var s = a.stream;
              a.skipToNextLine();
              var o = s.pos - 1;
              var c = e.get("Length");
              if (!Number.isInteger(c)) {
                (0, r.info)("Bad length \"".concat(c && c.toString(), "\" in stream."));
                c = 0;
              }
              s.pos = o + c;
              a.nextChar();
              if (this.tryShift() && (0, i.isCmd)(this.buf2, "endstream")) this.shift();else {
                var _e196 = new Uint8Array([101, 110, 100, 115, 116, 114, 101, 97, 109]);
                var _t146 = this._findStreamLength(o, _e196);
                if (_t146 < 0) {
                  var _a103 = 1;
                  for (var _i75 = 1; _i75 <= _a103; _i75++) {
                    var _a104 = _e196.length - _i75,
                      _c12 = _e196.slice(0, _a104),
                      _l8 = this._findStreamLength(o, _c12);
                    if (_l8 >= 0) {
                      var _e197 = s.peekBytes(_a104 + 1)[_a104];
                      if (!(0, n.isWhiteSpace)(_e197)) break;
                      (0, r.info)("Found \"".concat((0, r.bytesToString)(_c12), "\" when searching for endstream command."));
                      _t146 = _l8;
                      break;
                    }
                  }
                  if (_t146 < 0) throw new r.FormatError("Missing endstream command.");
                }
                c = _t146;
                a.nextChar();
                this.shift();
                this.shift();
              }
              this.shift();
              s = s.makeSubStream(o, c, e);
              t && (s = t.createStream(s, c));
              s = this.filter(s, e, c);
              s.dict = e;
              return s;
            }
          }, {
            key: "filter",
            value: function filter(e, t, a) {
              var n = t.get("F", "Filter"),
                s = t.get("DP", "DecodeParms");
              if (n instanceof i.Name) {
                Array.isArray(s) && (0, r.warn)("/DecodeParms should not be an Array, when /Filter is a Name.");
                return this.makeFilter(e, n.name, a, s);
              }
              var o = a;
              if (Array.isArray(n)) {
                var _t147 = n,
                  _a105 = s;
                for (var _c13 = 0, _l9 = _t147.length; _c13 < _l9; ++_c13) {
                  n = this.xref.fetchIfRef(_t147[_c13]);
                  if (!(n instanceof i.Name)) throw new r.FormatError("Bad filter name \"".concat(n, "\""));
                  s = null;
                  Array.isArray(_a105) && _c13 in _a105 && (s = this.xref.fetchIfRef(_a105[_c13]));
                  e = this.makeFilter(e, n.name, o, s);
                  o = null;
                }
              }
              return e;
            }
          }, {
            key: "makeFilter",
            value: function makeFilter(e, t, a, i) {
              if (0 === a) {
                (0, r.warn)("Empty \"".concat(t, "\" stream."));
                return new g.NullStream();
              }
              try {
                switch (t) {
                  case "Fl":
                  case "FlateDecode":
                    return i ? new p.PredictorStream(new l.FlateStream(e, a), a, i) : new l.FlateStream(e, a);
                  case "LZW":
                  case "LZWDecode":
                    var _t148 = 1;
                    if (i) {
                      i.has("EarlyChange") && (_t148 = i.get("EarlyChange"));
                      return new p.PredictorStream(new f.LZWStream(e, a, _t148), a, i);
                    }
                    return new f.LZWStream(e, a, _t148);
                  case "DCT":
                  case "DCTDecode":
                    return new u.JpegStream(e, a, i);
                  case "JPX":
                  case "JPXDecode":
                    return new d.JpxStream(e, a, i);
                  case "A85":
                  case "ASCII85Decode":
                    return new s.Ascii85Stream(e, a);
                  case "AHx":
                  case "ASCIIHexDecode":
                    return new o.AsciiHexStream(e, a);
                  case "CCF":
                  case "CCITTFaxDecode":
                    return new c.CCITTFaxStream(e, a, i);
                  case "RL":
                  case "RunLengthDecode":
                    return new m.RunLengthStream(e, a);
                  case "JBIG2Decode":
                    return new h.Jbig2Stream(e, a, i);
                }
                (0, r.warn)("Filter \"".concat(t, "\" is not supported."));
                return e;
              } catch (e) {
                if (e instanceof n.MissingDataException) throw e;
                (0, r.warn)("Invalid stream: \"".concat(e, "\""));
                return new g.NullStream();
              }
            }
          }]);
          return Parser;
        }();
        t.Parser = Parser;
        var b = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        function toHexDigit(e) {
          return e >= 48 && e <= 57 ? 15 & e : e >= 65 && e <= 70 || e >= 97 && e <= 102 ? 9 + (15 & e) : -1;
        }
        var Lexer = /*#__PURE__*/function () {
          function Lexer(e) {
            var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
            _classCallCheck(this, Lexer);
            this.stream = e;
            this.nextChar();
            this.strBuf = [];
            this.knownCommands = t;
            this._hexStringNumWarn = 0;
            this.beginInlineImagePos = -1;
          }
          _createClass(Lexer, [{
            key: "nextChar",
            value: function nextChar() {
              return this.currentChar = this.stream.getByte();
            }
          }, {
            key: "peekChar",
            value: function peekChar() {
              return this.stream.peekByte();
            }
          }, {
            key: "getNumber",
            value: function getNumber() {
              var e = this.currentChar,
                t = !1,
                a = 0,
                i = 0;
              if (45 === e) {
                i = -1;
                e = this.nextChar();
                45 === e && (e = this.nextChar());
              } else if (43 === e) {
                i = 1;
                e = this.nextChar();
              }
              if (10 === e || 13 === e) do {
                e = this.nextChar();
              } while (10 === e || 13 === e);
              if (46 === e) {
                a = 10;
                e = this.nextChar();
              }
              if (e < 48 || e > 57) {
                var _t149 = "Invalid number: ".concat(String.fromCharCode(e), " (charCode ").concat(e, ")");
                if ((0, n.isWhiteSpace)(e) || -1 === e) {
                  (0, r.info)("Lexer.getNumber - \"".concat(_t149, "\"."));
                  return 0;
                }
                throw new r.FormatError(_t149);
              }
              i || (i = 1);
              var s = e - 48,
                o = 0,
                c = 1;
              for (; (e = this.nextChar()) >= 0;) if (e >= 48 && e <= 57) {
                var _r83 = e - 48;
                if (t) o = 10 * o + _r83;else {
                  0 !== a && (a *= 10);
                  s = 10 * s + _r83;
                }
              } else if (46 === e) {
                if (0 !== a) break;
                a = 1;
              } else if (45 === e) (0, r.warn)("Badly formatted number: minus sign in the middle");else {
                if (69 !== e && 101 !== e) break;
                e = this.peekChar();
                if (43 === e || 45 === e) {
                  c = 45 === e ? -1 : 1;
                  this.nextChar();
                } else if (e < 48 || e > 57) break;
                t = !0;
              }
              0 !== a && (s /= a);
              t && (s *= Math.pow(10, c * o));
              return i * s;
            }
          }, {
            key: "getString",
            value: function getString() {
              var e = 1,
                t = !1;
              var a = this.strBuf;
              a.length = 0;
              var i = this.nextChar();
              for (;;) {
                var _n46 = !1;
                switch (0 | i) {
                  case -1:
                    (0, r.warn)("Unterminated string");
                    t = !0;
                    break;
                  case 40:
                    ++e;
                    a.push("(");
                    break;
                  case 41:
                    if (0 == --e) {
                      this.nextChar();
                      t = !0;
                    } else a.push(")");
                    break;
                  case 92:
                    i = this.nextChar();
                    switch (i) {
                      case -1:
                        (0, r.warn)("Unterminated string");
                        t = !0;
                        break;
                      case 110:
                        a.push("\n");
                        break;
                      case 114:
                        a.push("\r");
                        break;
                      case 116:
                        a.push("\t");
                        break;
                      case 98:
                        a.push("\b");
                        break;
                      case 102:
                        a.push("\f");
                        break;
                      case 92:
                      case 40:
                      case 41:
                        a.push(String.fromCharCode(i));
                        break;
                      case 48:
                      case 49:
                      case 50:
                      case 51:
                      case 52:
                      case 53:
                      case 54:
                      case 55:
                        var _e198 = 15 & i;
                        i = this.nextChar();
                        _n46 = !0;
                        if (i >= 48 && i <= 55) {
                          _e198 = (_e198 << 3) + (15 & i);
                          i = this.nextChar();
                          if (i >= 48 && i <= 55) {
                            _n46 = !1;
                            _e198 = (_e198 << 3) + (15 & i);
                          }
                        }
                        a.push(String.fromCharCode(_e198));
                        break;
                      case 13:
                        10 === this.peekChar() && this.nextChar();
                        break;
                      case 10:
                        break;
                      default:
                        a.push(String.fromCharCode(i));
                    }
                    break;
                  default:
                    a.push(String.fromCharCode(i));
                }
                if (t) break;
                _n46 || (i = this.nextChar());
              }
              return a.join("");
            }
          }, {
            key: "getName",
            value: function getName() {
              var e, t;
              var a = this.strBuf;
              a.length = 0;
              for (; (e = this.nextChar()) >= 0 && !b[e];) if (35 === e) {
                e = this.nextChar();
                if (b[e]) {
                  (0, r.warn)("Lexer_getName: NUMBER SIGN (#) should be followed by a hexadecimal number.");
                  a.push("#");
                  break;
                }
                var _i76 = toHexDigit(e);
                if (-1 !== _i76) {
                  t = e;
                  e = this.nextChar();
                  var _n47 = toHexDigit(e);
                  if (-1 === _n47) {
                    (0, r.warn)("Lexer_getName: Illegal digit (".concat(String.fromCharCode(e), ") in hexadecimal number."));
                    a.push("#", String.fromCharCode(t));
                    if (b[e]) break;
                    a.push(String.fromCharCode(e));
                    continue;
                  }
                  a.push(String.fromCharCode(_i76 << 4 | _n47));
                } else a.push("#", String.fromCharCode(e));
              } else a.push(String.fromCharCode(e));
              a.length > 127 && (0, r.warn)("Name token is longer than allowed by the spec: ".concat(a.length));
              return i.Name.get(a.join(""));
            }
          }, {
            key: "_hexStringWarn",
            value: function _hexStringWarn(e) {
              5 != this._hexStringNumWarn++ ? this._hexStringNumWarn > 5 || (0, r.warn)("getHexString - ignoring invalid character: ".concat(e)) : (0, r.warn)("getHexString - ignoring additional invalid characters.");
            }
          }, {
            key: "getHexString",
            value: function getHexString() {
              var e = this.strBuf;
              e.length = 0;
              var t,
                a,
                i = this.currentChar,
                n = !0;
              this._hexStringNumWarn = 0;
              for (;;) {
                if (i < 0) {
                  (0, r.warn)("Unterminated hex string");
                  break;
                }
                if (62 === i) {
                  this.nextChar();
                  break;
                }
                if (1 !== b[i]) {
                  if (n) {
                    t = toHexDigit(i);
                    if (-1 === t) {
                      this._hexStringWarn(i);
                      i = this.nextChar();
                      continue;
                    }
                  } else {
                    a = toHexDigit(i);
                    if (-1 === a) {
                      this._hexStringWarn(i);
                      i = this.nextChar();
                      continue;
                    }
                    e.push(String.fromCharCode(t << 4 | a));
                  }
                  n = !n;
                  i = this.nextChar();
                } else i = this.nextChar();
              }
              return e.join("");
            }
          }, {
            key: "getObj",
            value: function getObj() {
              var e = !1,
                t = this.currentChar;
              for (;;) {
                if (t < 0) return i.EOF;
                if (e) 10 !== t && 13 !== t || (e = !1);else if (37 === t) e = !0;else if (1 !== b[t]) break;
                t = this.nextChar();
              }
              switch (0 | t) {
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 43:
                case 45:
                case 46:
                  return this.getNumber();
                case 40:
                  return this.getString();
                case 47:
                  return this.getName();
                case 91:
                  this.nextChar();
                  return i.Cmd.get("[");
                case 93:
                  this.nextChar();
                  return i.Cmd.get("]");
                case 60:
                  t = this.nextChar();
                  if (60 === t) {
                    this.nextChar();
                    return i.Cmd.get("<<");
                  }
                  return this.getHexString();
                case 62:
                  t = this.nextChar();
                  if (62 === t) {
                    this.nextChar();
                    return i.Cmd.get(">>");
                  }
                  return i.Cmd.get(">");
                case 123:
                  this.nextChar();
                  return i.Cmd.get("{");
                case 125:
                  this.nextChar();
                  return i.Cmd.get("}");
                case 41:
                  this.nextChar();
                  throw new r.FormatError("Illegal character: ".concat(t));
              }
              var a = String.fromCharCode(t);
              if (t < 32 || t > 127) {
                var _e199 = this.peekChar();
                if (_e199 >= 32 && _e199 <= 127) {
                  this.nextChar();
                  return i.Cmd.get(a);
                }
              }
              var n = this.knownCommands;
              var s = n && void 0 !== n[a];
              for (; (t = this.nextChar()) >= 0 && !b[t];) {
                var _e200 = a + String.fromCharCode(t);
                if (s && void 0 === n[_e200]) break;
                if (128 === a.length) throw new r.FormatError("Command token too long: ".concat(a.length));
                a = _e200;
                s = n && void 0 !== n[a];
              }
              if ("true" === a) return !0;
              if ("false" === a) return !1;
              if ("null" === a) return null;
              "BI" === a && (this.beginInlineImagePos = this.stream.pos);
              return i.Cmd.get(a);
            }
          }, {
            key: "peekObj",
            value: function peekObj() {
              var e = this.stream.pos,
                t = this.currentChar,
                a = this.beginInlineImagePos;
              var i;
              try {
                i = this.getObj();
              } catch (e) {
                if (e instanceof n.MissingDataException) throw e;
                (0, r.warn)("peekObj: ".concat(e));
              }
              this.stream.pos = e;
              this.currentChar = t;
              this.beginInlineImagePos = a;
              return i;
            }
          }, {
            key: "skipToNextLine",
            value: function skipToNextLine() {
              var e = this.currentChar;
              for (; e >= 0;) {
                if (13 === e) {
                  e = this.nextChar();
                  10 === e && this.nextChar();
                  break;
                }
                if (10 === e) {
                  this.nextChar();
                  break;
                }
                e = this.nextChar();
              }
            }
          }]);
          return Lexer;
        }();
        t.Lexer = Lexer;
        t.Linearization = /*#__PURE__*/function () {
          function Linearization() {
            _classCallCheck(this, Linearization);
          }
          _createClass(Linearization, null, [{
            key: "create",
            value: function create(e) {
              function getInt(e, t) {
                var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
                var r = e.get(t);
                if (Number.isInteger(r) && (a ? r >= 0 : r > 0)) return r;
                throw new Error("The \"".concat(t, "\" parameter in the linearization dictionary is invalid."));
              }
              var t = new Parser({
                  lexer: new Lexer(e),
                  xref: null
                }),
                a = t.getObj(),
                r = t.getObj(),
                n = t.getObj(),
                s = t.getObj();
              var o, c;
              if (!(Number.isInteger(a) && Number.isInteger(r) && (0, i.isCmd)(n, "obj") && s instanceof i.Dict && "number" == typeof (o = s.get("Linearized")) && o > 0)) return null;
              if ((c = getInt(s, "L")) !== e.length) throw new Error('The "L" parameter in the linearization dictionary does not equal the stream length.');
              return {
                length: c,
                hints: function getHints(e) {
                  var t = e.get("H");
                  var a;
                  if (Array.isArray(t) && (2 === (a = t.length) || 4 === a)) {
                    for (var _e201 = 0; _e201 < a; _e201++) {
                      var _a106 = t[_e201];
                      if (!(Number.isInteger(_a106) && _a106 > 0)) throw new Error("Hint (".concat(_e201, ") in the linearization dictionary is invalid."));
                    }
                    return t;
                  }
                  throw new Error("Hint array in the linearization dictionary is invalid.");
                }(s),
                objectNumberFirst: getInt(s, "O"),
                endFirst: getInt(s, "E"),
                numPages: getInt(s, "N"),
                mainXRefEntriesOffset: getInt(s, "T"),
                pageFirst: s.has("P") ? getInt(s, "P", !0) : 0
              };
            }
          }]);
          return Linearization;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.Ascii85Stream = void 0;
        var r = a(18),
          i = a(3);
        var Ascii85Stream = /*#__PURE__*/function (_r$DecodeStream) {
          _inherits(Ascii85Stream, _r$DecodeStream);
          var _super53 = _createSuper(Ascii85Stream);
          function Ascii85Stream(e, t) {
            var _this64;
            _classCallCheck(this, Ascii85Stream);
            t && (t *= .8);
            _this64 = _super53.call(this, t);
            _this64.str = e;
            _this64.dict = e.dict;
            _this64.input = new Uint8Array(5);
            return _this64;
          }
          _createClass(Ascii85Stream, [{
            key: "readBlock",
            value: function readBlock() {
              var e = this.str;
              var t = e.getByte();
              for (; (0, i.isWhiteSpace)(t);) t = e.getByte();
              if (-1 === t || 126 === t) {
                this.eof = !0;
                return;
              }
              var a = this.bufferLength;
              var r, n;
              if (122 === t) {
                r = this.ensureBuffer(a + 4);
                for (n = 0; n < 4; ++n) r[a + n] = 0;
                this.bufferLength += 4;
              } else {
                var _s38 = this.input;
                _s38[0] = t;
                for (n = 1; n < 5; ++n) {
                  t = e.getByte();
                  for (; (0, i.isWhiteSpace)(t);) t = e.getByte();
                  _s38[n] = t;
                  if (-1 === t || 126 === t) break;
                }
                r = this.ensureBuffer(a + n - 1);
                this.bufferLength += n - 1;
                if (n < 5) {
                  for (; n < 5; ++n) _s38[n] = 117;
                  this.eof = !0;
                }
                var _o23 = 0;
                for (n = 0; n < 5; ++n) _o23 = 85 * _o23 + (_s38[n] - 33);
                for (n = 3; n >= 0; --n) {
                  r[a + n] = 255 & _o23;
                  _o23 >>= 8;
                }
              }
            }
          }]);
          return Ascii85Stream;
        }(r.DecodeStream);
        t.Ascii85Stream = Ascii85Stream;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.StreamsSequenceStream = t.DecodeStream = void 0;
        var r = a(5),
          i = a(8);
        var n = new Uint8Array(0);
        var DecodeStream = /*#__PURE__*/function (_r$BaseStream2) {
          _inherits(DecodeStream, _r$BaseStream2);
          var _super54 = _createSuper(DecodeStream);
          function DecodeStream(e) {
            var _this65;
            _classCallCheck(this, DecodeStream);
            _this65 = _super54.call(this);
            _this65._rawMinBufferLength = e || 0;
            _this65.pos = 0;
            _this65.bufferLength = 0;
            _this65.eof = !1;
            _this65.buffer = n;
            _this65.minBufferLength = 512;
            if (e) for (; _this65.minBufferLength < e;) _this65.minBufferLength *= 2;
            return _this65;
          }
          _createClass(DecodeStream, [{
            key: "isEmpty",
            get: function get() {
              for (; !this.eof && 0 === this.bufferLength;) this.readBlock();
              return 0 === this.bufferLength;
            }
          }, {
            key: "ensureBuffer",
            value: function ensureBuffer(e) {
              var t = this.buffer;
              if (e <= t.byteLength) return t;
              var a = this.minBufferLength;
              for (; a < e;) a *= 2;
              var r = new Uint8Array(a);
              r.set(t);
              return this.buffer = r;
            }
          }, {
            key: "getByte",
            value: function getByte() {
              var e = this.pos;
              for (; this.bufferLength <= e;) {
                if (this.eof) return -1;
                this.readBlock();
              }
              return this.buffer[this.pos++];
            }
          }, {
            key: "getBytes",
            value: function getBytes(e) {
              var t = this.pos;
              var a;
              if (e) {
                this.ensureBuffer(t + e);
                a = t + e;
                for (; !this.eof && this.bufferLength < a;) this.readBlock();
                var _r84 = this.bufferLength;
                a > _r84 && (a = _r84);
              } else {
                for (; !this.eof;) this.readBlock();
                a = this.bufferLength;
              }
              this.pos = a;
              return this.buffer.subarray(t, a);
            }
          }, {
            key: "reset",
            value: function reset() {
              this.pos = 0;
            }
          }, {
            key: "makeSubStream",
            value: function makeSubStream(e, t) {
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
              if (void 0 === t) for (; !this.eof;) this.readBlock();else {
                var _a107 = e + t;
                for (; this.bufferLength <= _a107 && !this.eof;) this.readBlock();
              }
              return new i.Stream(this.buffer, e, t, a);
            }
          }, {
            key: "getBaseStreams",
            value: function getBaseStreams() {
              return this.str ? this.str.getBaseStreams() : null;
            }
          }]);
          return DecodeStream;
        }(r.BaseStream);
        t.DecodeStream = DecodeStream;
        t.StreamsSequenceStream = /*#__PURE__*/function (_DecodeStream) {
          _inherits(StreamsSequenceStream, _DecodeStream);
          var _super55 = _createSuper(StreamsSequenceStream);
          function StreamsSequenceStream(e) {
            var _this66;
            var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
            _classCallCheck(this, StreamsSequenceStream);
            var a = 0;
            var _iterator81 = _createForOfIteratorHelper(e),
              _step81;
            try {
              for (_iterator81.s(); !(_step81 = _iterator81.n()).done;) {
                var _t150 = _step81.value;
                a += _t150 instanceof DecodeStream ? _t150._rawMinBufferLength : _t150.length;
              }
            } catch (err) {
              _iterator81.e(err);
            } finally {
              _iterator81.f();
            }
            _this66 = _super55.call(this, a);
            _this66.streams = e;
            _this66._onError = t;
            return _this66;
          }
          _createClass(StreamsSequenceStream, [{
            key: "readBlock",
            value: function readBlock() {
              var e = this.streams;
              if (0 === e.length) {
                this.eof = !0;
                return;
              }
              var t = e.shift();
              var a;
              try {
                a = t.getBytes();
              } catch (e) {
                if (this._onError) {
                  this._onError(e, t.dict && t.dict.objId);
                  return;
                }
                throw e;
              }
              var r = this.bufferLength,
                i = r + a.length;
              this.ensureBuffer(i).set(a, r);
              this.bufferLength = i;
            }
          }, {
            key: "getBaseStreams",
            value: function getBaseStreams() {
              var e = [];
              var _iterator82 = _createForOfIteratorHelper(this.streams),
                _step82;
              try {
                for (_iterator82.s(); !(_step82 = _iterator82.n()).done;) {
                  var _t151 = _step82.value;
                  var _a108 = _t151.getBaseStreams();
                  _a108 && e.push.apply(e, _toConsumableArray(_a108));
                }
              } catch (err) {
                _iterator82.e(err);
              } finally {
                _iterator82.f();
              }
              return e.length > 0 ? e : null;
            }
          }]);
          return StreamsSequenceStream;
        }(DecodeStream);
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.AsciiHexStream = void 0;
        var r = a(18);
        var AsciiHexStream = /*#__PURE__*/function (_r$DecodeStream2) {
          _inherits(AsciiHexStream, _r$DecodeStream2);
          var _super56 = _createSuper(AsciiHexStream);
          function AsciiHexStream(e, t) {
            var _this67;
            _classCallCheck(this, AsciiHexStream);
            t && (t *= .5);
            _this67 = _super56.call(this, t);
            _this67.str = e;
            _this67.dict = e.dict;
            _this67.firstDigit = -1;
            return _this67;
          }
          _createClass(AsciiHexStream, [{
            key: "readBlock",
            value: function readBlock() {
              var e = this.str.getBytes(8e3);
              if (!e.length) {
                this.eof = !0;
                return;
              }
              var t = e.length + 1 >> 1,
                a = this.ensureBuffer(this.bufferLength + t);
              var r = this.bufferLength,
                i = this.firstDigit;
              var _iterator83 = _createForOfIteratorHelper(e),
                _step83;
              try {
                for (_iterator83.s(); !(_step83 = _iterator83.n()).done;) {
                  var _t152 = _step83.value;
                  var _e202 = void 0;
                  if (_t152 >= 48 && _t152 <= 57) _e202 = 15 & _t152;else {
                    if (!(_t152 >= 65 && _t152 <= 70 || _t152 >= 97 && _t152 <= 102)) {
                      if (62 === _t152) {
                        this.eof = !0;
                        break;
                      }
                      continue;
                    }
                    _e202 = 9 + (15 & _t152);
                  }
                  if (i < 0) i = _e202;else {
                    a[r++] = i << 4 | _e202;
                    i = -1;
                  }
                }
              } catch (err) {
                _iterator83.e(err);
              } finally {
                _iterator83.f();
              }
              if (i >= 0 && this.eof) {
                a[r++] = i << 4;
                i = -1;
              }
              this.firstDigit = i;
              this.bufferLength = r;
            }
          }]);
          return AsciiHexStream;
        }(r.DecodeStream);
        t.AsciiHexStream = AsciiHexStream;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.CCITTFaxStream = void 0;
        var r = a(21),
          i = a(18),
          n = a(4);
        var CCITTFaxStream = /*#__PURE__*/function (_i$DecodeStream) {
          _inherits(CCITTFaxStream, _i$DecodeStream);
          var _super57 = _createSuper(CCITTFaxStream);
          function CCITTFaxStream(e, t, a) {
            var _this68;
            _classCallCheck(this, CCITTFaxStream);
            _this68 = _super57.call(this, t);
            _this68.str = e;
            _this68.dict = e.dict;
            a instanceof n.Dict || (a = n.Dict.empty);
            var i = {
              next: function next() {
                return e.getByte();
              }
            };
            _this68.ccittFaxDecoder = new r.CCITTFaxDecoder(i, {
              K: a.get("K"),
              EndOfLine: a.get("EndOfLine"),
              EncodedByteAlign: a.get("EncodedByteAlign"),
              Columns: a.get("Columns"),
              Rows: a.get("Rows"),
              EndOfBlock: a.get("EndOfBlock"),
              BlackIs1: a.get("BlackIs1")
            });
            return _this68;
          }
          _createClass(CCITTFaxStream, [{
            key: "readBlock",
            value: function readBlock() {
              for (; !this.eof;) {
                var _e203 = this.ccittFaxDecoder.readNextChar();
                if (-1 === _e203) {
                  this.eof = !0;
                  return;
                }
                this.ensureBuffer(this.bufferLength + 1);
                this.buffer[this.bufferLength++] = _e203;
              }
            }
          }]);
          return CCITTFaxStream;
        }(i.DecodeStream);
        t.CCITTFaxStream = CCITTFaxStream;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.CCITTFaxDecoder = void 0;
        var r = a(2);
        var i = -1,
          n = [[-1, -1], [-1, -1], [7, 8], [7, 7], [6, 6], [6, 6], [6, 5], [6, 5], [4, 0], [4, 0], [4, 0], [4, 0], [4, 0], [4, 0], [4, 0], [4, 0], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2]],
          s = [[-1, -1], [12, -2], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]],
          o = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]],
          c = [[-1, -1], [-1, -1], [12, -2], [12, -2], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]],
          l = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]],
          h = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];
        t.CCITTFaxDecoder = /*#__PURE__*/function () {
          function CCITTFaxDecoder(e) {
            var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            _classCallCheck(this, CCITTFaxDecoder);
            if (!e || "function" != typeof e.next) throw new Error('CCITTFaxDecoder - invalid "source" parameter.');
            this.source = e;
            this.eof = !1;
            this.encoding = t.K || 0;
            this.eoline = t.EndOfLine || !1;
            this.byteAlign = t.EncodedByteAlign || !1;
            this.columns = t.Columns || 1728;
            this.rows = t.Rows || 0;
            var a,
              r = t.EndOfBlock;
            null == r && (r = !0);
            this.eoblock = r;
            this.black = t.BlackIs1 || !1;
            this.codingLine = new Uint32Array(this.columns + 1);
            this.refLine = new Uint32Array(this.columns + 2);
            this.codingLine[0] = this.columns;
            this.codingPos = 0;
            this.row = 0;
            this.nextLine2D = this.encoding < 0;
            this.inputBits = 0;
            this.inputBuf = 0;
            this.outputBits = 0;
            this.rowsDone = !1;
            for (; 0 === (a = this._lookBits(12));) this._eatBits(1);
            1 === a && this._eatBits(12);
            if (this.encoding > 0) {
              this.nextLine2D = !this._lookBits(1);
              this._eatBits(1);
            }
          }
          _createClass(CCITTFaxDecoder, [{
            key: "readNextChar",
            value: function readNextChar() {
              if (this.eof) return -1;
              var e = this.refLine,
                t = this.codingLine,
                a = this.columns;
              var n, s, o, c, l;
              if (0 === this.outputBits) {
                this.rowsDone && (this.eof = !0);
                if (this.eof) return -1;
                this.err = !1;
                var _o24, _l10, _h10;
                if (this.nextLine2D) {
                  for (c = 0; t[c] < a; ++c) e[c] = t[c];
                  e[c++] = a;
                  e[c] = a;
                  t[0] = 0;
                  this.codingPos = 0;
                  n = 0;
                  s = 0;
                  for (; t[this.codingPos] < a;) {
                    _o24 = this._getTwoDimCode();
                    switch (_o24) {
                      case 0:
                        this._addPixels(e[n + 1], s);
                        e[n + 1] < a && (n += 2);
                        break;
                      case 1:
                        _o24 = _l10 = 0;
                        if (s) {
                          do {
                            _o24 += _h10 = this._getBlackCode();
                          } while (_h10 >= 64);
                          do {
                            _l10 += _h10 = this._getWhiteCode();
                          } while (_h10 >= 64);
                        } else {
                          do {
                            _o24 += _h10 = this._getWhiteCode();
                          } while (_h10 >= 64);
                          do {
                            _l10 += _h10 = this._getBlackCode();
                          } while (_h10 >= 64);
                        }
                        this._addPixels(t[this.codingPos] + _o24, s);
                        t[this.codingPos] < a && this._addPixels(t[this.codingPos] + _l10, 1 ^ s);
                        for (; e[n] <= t[this.codingPos] && e[n] < a;) n += 2;
                        break;
                      case 7:
                        this._addPixels(e[n] + 3, s);
                        s ^= 1;
                        if (t[this.codingPos] < a) {
                          ++n;
                          for (; e[n] <= t[this.codingPos] && e[n] < a;) n += 2;
                        }
                        break;
                      case 5:
                        this._addPixels(e[n] + 2, s);
                        s ^= 1;
                        if (t[this.codingPos] < a) {
                          ++n;
                          for (; e[n] <= t[this.codingPos] && e[n] < a;) n += 2;
                        }
                        break;
                      case 3:
                        this._addPixels(e[n] + 1, s);
                        s ^= 1;
                        if (t[this.codingPos] < a) {
                          ++n;
                          for (; e[n] <= t[this.codingPos] && e[n] < a;) n += 2;
                        }
                        break;
                      case 2:
                        this._addPixels(e[n], s);
                        s ^= 1;
                        if (t[this.codingPos] < a) {
                          ++n;
                          for (; e[n] <= t[this.codingPos] && e[n] < a;) n += 2;
                        }
                        break;
                      case 8:
                        this._addPixelsNeg(e[n] - 3, s);
                        s ^= 1;
                        if (t[this.codingPos] < a) {
                          n > 0 ? --n : ++n;
                          for (; e[n] <= t[this.codingPos] && e[n] < a;) n += 2;
                        }
                        break;
                      case 6:
                        this._addPixelsNeg(e[n] - 2, s);
                        s ^= 1;
                        if (t[this.codingPos] < a) {
                          n > 0 ? --n : ++n;
                          for (; e[n] <= t[this.codingPos] && e[n] < a;) n += 2;
                        }
                        break;
                      case 4:
                        this._addPixelsNeg(e[n] - 1, s);
                        s ^= 1;
                        if (t[this.codingPos] < a) {
                          n > 0 ? --n : ++n;
                          for (; e[n] <= t[this.codingPos] && e[n] < a;) n += 2;
                        }
                        break;
                      case i:
                        this._addPixels(a, 0);
                        this.eof = !0;
                        break;
                      default:
                        (0, r.info)("bad 2d code");
                        this._addPixels(a, 0);
                        this.err = !0;
                    }
                  }
                } else {
                  t[0] = 0;
                  this.codingPos = 0;
                  s = 0;
                  for (; t[this.codingPos] < a;) {
                    _o24 = 0;
                    if (s) do {
                      _o24 += _h10 = this._getBlackCode();
                    } while (_h10 >= 64);else do {
                      _o24 += _h10 = this._getWhiteCode();
                    } while (_h10 >= 64);
                    this._addPixels(t[this.codingPos] + _o24, s);
                    s ^= 1;
                  }
                }
                var u = !1;
                this.byteAlign && (this.inputBits &= -8);
                if (this.eoblock || this.row !== this.rows - 1) {
                  _o24 = this._lookBits(12);
                  if (this.eoline) for (; _o24 !== i && 1 !== _o24;) {
                    this._eatBits(1);
                    _o24 = this._lookBits(12);
                  } else for (; 0 === _o24;) {
                    this._eatBits(1);
                    _o24 = this._lookBits(12);
                  }
                  if (1 === _o24) {
                    this._eatBits(12);
                    u = !0;
                  } else _o24 === i && (this.eof = !0);
                } else this.rowsDone = !0;
                if (!this.eof && this.encoding > 0 && !this.rowsDone) {
                  this.nextLine2D = !this._lookBits(1);
                  this._eatBits(1);
                }
                if (this.eoblock && u && this.byteAlign) {
                  _o24 = this._lookBits(12);
                  if (1 === _o24) {
                    this._eatBits(12);
                    if (this.encoding > 0) {
                      this._lookBits(1);
                      this._eatBits(1);
                    }
                    if (this.encoding >= 0) for (c = 0; c < 4; ++c) {
                      _o24 = this._lookBits(12);
                      1 !== _o24 && (0, r.info)("bad rtc code: " + _o24);
                      this._eatBits(12);
                      if (this.encoding > 0) {
                        this._lookBits(1);
                        this._eatBits(1);
                      }
                    }
                    this.eof = !0;
                  }
                } else if (this.err && this.eoline) {
                  for (;;) {
                    _o24 = this._lookBits(13);
                    if (_o24 === i) {
                      this.eof = !0;
                      return -1;
                    }
                    if (_o24 >> 1 == 1) break;
                    this._eatBits(1);
                  }
                  this._eatBits(12);
                  if (this.encoding > 0) {
                    this._eatBits(1);
                    this.nextLine2D = !(1 & _o24);
                  }
                }
                t[0] > 0 ? this.outputBits = t[this.codingPos = 0] : this.outputBits = t[this.codingPos = 1];
                this.row++;
              }
              if (this.outputBits >= 8) {
                l = 1 & this.codingPos ? 0 : 255;
                this.outputBits -= 8;
                if (0 === this.outputBits && t[this.codingPos] < a) {
                  this.codingPos++;
                  this.outputBits = t[this.codingPos] - t[this.codingPos - 1];
                }
              } else {
                o = 8;
                l = 0;
                do {
                  if ("number" != typeof this.outputBits) throw new r.FormatError('Invalid /CCITTFaxDecode data, "outputBits" must be a number.');
                  if (this.outputBits > o) {
                    l <<= o;
                    1 & this.codingPos || (l |= 255 >> 8 - o);
                    this.outputBits -= o;
                    o = 0;
                  } else {
                    l <<= this.outputBits;
                    1 & this.codingPos || (l |= 255 >> 8 - this.outputBits);
                    o -= this.outputBits;
                    this.outputBits = 0;
                    if (t[this.codingPos] < a) {
                      this.codingPos++;
                      this.outputBits = t[this.codingPos] - t[this.codingPos - 1];
                    } else if (o > 0) {
                      l <<= o;
                      o = 0;
                    }
                  }
                } while (o);
              }
              this.black && (l ^= 255);
              return l;
            }
          }, {
            key: "_addPixels",
            value: function _addPixels(e, t) {
              var a = this.codingLine;
              var i = this.codingPos;
              if (e > a[i]) {
                if (e > this.columns) {
                  (0, r.info)("row is wrong length");
                  this.err = !0;
                  e = this.columns;
                }
                1 & i ^ t && ++i;
                a[i] = e;
              }
              this.codingPos = i;
            }
          }, {
            key: "_addPixelsNeg",
            value: function _addPixelsNeg(e, t) {
              var a = this.codingLine;
              var i = this.codingPos;
              if (e > a[i]) {
                if (e > this.columns) {
                  (0, r.info)("row is wrong length");
                  this.err = !0;
                  e = this.columns;
                }
                1 & i ^ t && ++i;
                a[i] = e;
              } else if (e < a[i]) {
                if (e < 0) {
                  (0, r.info)("invalid code");
                  this.err = !0;
                  e = 0;
                }
                for (; i > 0 && e < a[i - 1];) --i;
                a[i] = e;
              }
              this.codingPos = i;
            }
          }, {
            key: "_findTableCode",
            value: function _findTableCode(e, t, a, r) {
              var n = r || 0;
              for (var _r85 = e; _r85 <= t; ++_r85) {
                var _e204 = this._lookBits(_r85);
                if (_e204 === i) return [!0, 1, !1];
                _r85 < t && (_e204 <<= t - _r85);
                if (!n || _e204 >= n) {
                  var _t153 = a[_e204 - n];
                  if (_t153[0] === _r85) {
                    this._eatBits(_r85);
                    return [!0, _t153[1], !0];
                  }
                }
              }
              return [!1, 0, !1];
            }
          }, {
            key: "_getTwoDimCode",
            value: function _getTwoDimCode() {
              var e,
                t = 0;
              if (this.eoblock) {
                t = this._lookBits(7);
                e = n[t];
                if (e && e[0] > 0) {
                  this._eatBits(e[0]);
                  return e[1];
                }
              } else {
                var _e205 = this._findTableCode(1, 7, n);
                if (_e205[0] && _e205[2]) return _e205[1];
              }
              (0, r.info)("Bad two dim code");
              return i;
            }
          }, {
            key: "_getWhiteCode",
            value: function _getWhiteCode() {
              var e,
                t = 0;
              if (this.eoblock) {
                t = this._lookBits(12);
                if (t === i) return 1;
                e = t >> 5 == 0 ? s[t] : o[t >> 3];
                if (e[0] > 0) {
                  this._eatBits(e[0]);
                  return e[1];
                }
              } else {
                var _e206 = this._findTableCode(1, 9, o);
                if (_e206[0]) return _e206[1];
                _e206 = this._findTableCode(11, 12, s);
                if (_e206[0]) return _e206[1];
              }
              (0, r.info)("bad white code");
              this._eatBits(1);
              return 1;
            }
          }, {
            key: "_getBlackCode",
            value: function _getBlackCode() {
              var e, t;
              if (this.eoblock) {
                e = this._lookBits(13);
                if (e === i) return 1;
                t = e >> 7 == 0 ? c[e] : e >> 9 == 0 && e >> 7 != 0 ? l[(e >> 1) - 64] : h[e >> 7];
                if (t[0] > 0) {
                  this._eatBits(t[0]);
                  return t[1];
                }
              } else {
                var _e207 = this._findTableCode(2, 6, h);
                if (_e207[0]) return _e207[1];
                _e207 = this._findTableCode(7, 12, l, 64);
                if (_e207[0]) return _e207[1];
                _e207 = this._findTableCode(10, 13, c);
                if (_e207[0]) return _e207[1];
              }
              (0, r.info)("bad black code");
              this._eatBits(1);
              return 1;
            }
          }, {
            key: "_lookBits",
            value: function _lookBits(e) {
              var t;
              for (; this.inputBits < e;) {
                if (-1 === (t = this.source.next())) return 0 === this.inputBits ? i : this.inputBuf << e - this.inputBits & 65535 >> 16 - e;
                this.inputBuf = this.inputBuf << 8 | t;
                this.inputBits += 8;
              }
              return this.inputBuf >> this.inputBits - e & 65535 >> 16 - e;
            }
          }, {
            key: "_eatBits",
            value: function _eatBits(e) {
              (this.inputBits -= e) < 0 && (this.inputBits = 0);
            }
          }]);
          return CCITTFaxDecoder;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.FlateStream = void 0;
        var r = a(18),
          i = a(2);
        var n = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]),
          s = new Int32Array([3, 4, 5, 6, 7, 8, 9, 10, 65547, 65549, 65551, 65553, 131091, 131095, 131099, 131103, 196643, 196651, 196659, 196667, 262211, 262227, 262243, 262259, 327811, 327843, 327875, 327907, 258, 258, 258]),
          o = new Int32Array([1, 2, 3, 4, 65541, 65543, 131081, 131085, 196625, 196633, 262177, 262193, 327745, 327777, 393345, 393409, 459009, 459137, 524801, 525057, 590849, 591361, 657409, 658433, 724993, 727041, 794625, 798721, 868353, 876545]),
          c = [new Int32Array([459008, 524368, 524304, 524568, 459024, 524400, 524336, 590016, 459016, 524384, 524320, 589984, 524288, 524416, 524352, 590048, 459012, 524376, 524312, 589968, 459028, 524408, 524344, 590032, 459020, 524392, 524328, 59e4, 524296, 524424, 524360, 590064, 459010, 524372, 524308, 524572, 459026, 524404, 524340, 590024, 459018, 524388, 524324, 589992, 524292, 524420, 524356, 590056, 459014, 524380, 524316, 589976, 459030, 524412, 524348, 590040, 459022, 524396, 524332, 590008, 524300, 524428, 524364, 590072, 459009, 524370, 524306, 524570, 459025, 524402, 524338, 590020, 459017, 524386, 524322, 589988, 524290, 524418, 524354, 590052, 459013, 524378, 524314, 589972, 459029, 524410, 524346, 590036, 459021, 524394, 524330, 590004, 524298, 524426, 524362, 590068, 459011, 524374, 524310, 524574, 459027, 524406, 524342, 590028, 459019, 524390, 524326, 589996, 524294, 524422, 524358, 590060, 459015, 524382, 524318, 589980, 459031, 524414, 524350, 590044, 459023, 524398, 524334, 590012, 524302, 524430, 524366, 590076, 459008, 524369, 524305, 524569, 459024, 524401, 524337, 590018, 459016, 524385, 524321, 589986, 524289, 524417, 524353, 590050, 459012, 524377, 524313, 589970, 459028, 524409, 524345, 590034, 459020, 524393, 524329, 590002, 524297, 524425, 524361, 590066, 459010, 524373, 524309, 524573, 459026, 524405, 524341, 590026, 459018, 524389, 524325, 589994, 524293, 524421, 524357, 590058, 459014, 524381, 524317, 589978, 459030, 524413, 524349, 590042, 459022, 524397, 524333, 590010, 524301, 524429, 524365, 590074, 459009, 524371, 524307, 524571, 459025, 524403, 524339, 590022, 459017, 524387, 524323, 589990, 524291, 524419, 524355, 590054, 459013, 524379, 524315, 589974, 459029, 524411, 524347, 590038, 459021, 524395, 524331, 590006, 524299, 524427, 524363, 590070, 459011, 524375, 524311, 524575, 459027, 524407, 524343, 590030, 459019, 524391, 524327, 589998, 524295, 524423, 524359, 590062, 459015, 524383, 524319, 589982, 459031, 524415, 524351, 590046, 459023, 524399, 524335, 590014, 524303, 524431, 524367, 590078, 459008, 524368, 524304, 524568, 459024, 524400, 524336, 590017, 459016, 524384, 524320, 589985, 524288, 524416, 524352, 590049, 459012, 524376, 524312, 589969, 459028, 524408, 524344, 590033, 459020, 524392, 524328, 590001, 524296, 524424, 524360, 590065, 459010, 524372, 524308, 524572, 459026, 524404, 524340, 590025, 459018, 524388, 524324, 589993, 524292, 524420, 524356, 590057, 459014, 524380, 524316, 589977, 459030, 524412, 524348, 590041, 459022, 524396, 524332, 590009, 524300, 524428, 524364, 590073, 459009, 524370, 524306, 524570, 459025, 524402, 524338, 590021, 459017, 524386, 524322, 589989, 524290, 524418, 524354, 590053, 459013, 524378, 524314, 589973, 459029, 524410, 524346, 590037, 459021, 524394, 524330, 590005, 524298, 524426, 524362, 590069, 459011, 524374, 524310, 524574, 459027, 524406, 524342, 590029, 459019, 524390, 524326, 589997, 524294, 524422, 524358, 590061, 459015, 524382, 524318, 589981, 459031, 524414, 524350, 590045, 459023, 524398, 524334, 590013, 524302, 524430, 524366, 590077, 459008, 524369, 524305, 524569, 459024, 524401, 524337, 590019, 459016, 524385, 524321, 589987, 524289, 524417, 524353, 590051, 459012, 524377, 524313, 589971, 459028, 524409, 524345, 590035, 459020, 524393, 524329, 590003, 524297, 524425, 524361, 590067, 459010, 524373, 524309, 524573, 459026, 524405, 524341, 590027, 459018, 524389, 524325, 589995, 524293, 524421, 524357, 590059, 459014, 524381, 524317, 589979, 459030, 524413, 524349, 590043, 459022, 524397, 524333, 590011, 524301, 524429, 524365, 590075, 459009, 524371, 524307, 524571, 459025, 524403, 524339, 590023, 459017, 524387, 524323, 589991, 524291, 524419, 524355, 590055, 459013, 524379, 524315, 589975, 459029, 524411, 524347, 590039, 459021, 524395, 524331, 590007, 524299, 524427, 524363, 590071, 459011, 524375, 524311, 524575, 459027, 524407, 524343, 590031, 459019, 524391, 524327, 589999, 524295, 524423, 524359, 590063, 459015, 524383, 524319, 589983, 459031, 524415, 524351, 590047, 459023, 524399, 524335, 590015, 524303, 524431, 524367, 590079]), 9],
          l = [new Int32Array([327680, 327696, 327688, 327704, 327684, 327700, 327692, 327708, 327682, 327698, 327690, 327706, 327686, 327702, 327694, 0, 327681, 327697, 327689, 327705, 327685, 327701, 327693, 327709, 327683, 327699, 327691, 327707, 327687, 327703, 327695, 0]), 5];
        var FlateStream = /*#__PURE__*/function (_r$DecodeStream3) {
          _inherits(FlateStream, _r$DecodeStream3);
          var _super58 = _createSuper(FlateStream);
          function FlateStream(e, t) {
            var _this69;
            _classCallCheck(this, FlateStream);
            _this69 = _super58.call(this, t);
            _this69.str = e;
            _this69.dict = e.dict;
            var a = e.getByte(),
              r = e.getByte();
            if (-1 === a || -1 === r) throw new i.FormatError("Invalid header in flate stream: ".concat(a, ", ").concat(r));
            if (8 != (15 & a)) throw new i.FormatError("Unknown compression method in flate stream: ".concat(a, ", ").concat(r));
            if (((a << 8) + r) % 31 != 0) throw new i.FormatError("Bad FCHECK in flate stream: ".concat(a, ", ").concat(r));
            if (32 & r) throw new i.FormatError("FDICT bit set in flate stream: ".concat(a, ", ").concat(r));
            _this69.codeSize = 0;
            _this69.codeBuf = 0;
            return _this69;
          }
          _createClass(FlateStream, [{
            key: "getBits",
            value: function getBits(e) {
              var t = this.str;
              var a,
                r = this.codeSize,
                n = this.codeBuf;
              for (; r < e;) {
                if (-1 === (a = t.getByte())) throw new i.FormatError("Bad encoding in flate stream");
                n |= a << r;
                r += 8;
              }
              a = n & (1 << e) - 1;
              this.codeBuf = n >> e;
              this.codeSize = r -= e;
              return a;
            }
          }, {
            key: "getCode",
            value: function getCode(e) {
              var t = this.str,
                a = e[0],
                r = e[1];
              var n,
                s = this.codeSize,
                o = this.codeBuf;
              for (; s < r && -1 !== (n = t.getByte());) {
                o |= n << s;
                s += 8;
              }
              var c = a[o & (1 << r) - 1],
                l = c >> 16,
                h = 65535 & c;
              if (l < 1 || s < l) throw new i.FormatError("Bad encoding in flate stream");
              this.codeBuf = o >> l;
              this.codeSize = s - l;
              return h;
            }
          }, {
            key: "generateHuffmanTable",
            value: function generateHuffmanTable(e) {
              var t = e.length;
              var a,
                r = 0;
              for (a = 0; a < t; ++a) e[a] > r && (r = e[a]);
              var i = 1 << r,
                n = new Int32Array(i);
              for (var _s39 = 1, _o25 = 0, _c14 = 2; _s39 <= r; ++_s39, _o25 <<= 1, _c14 <<= 1) for (var _r86 = 0; _r86 < t; ++_r86) if (e[_r86] === _s39) {
                var _e208 = 0,
                  _t154 = _o25;
                for (a = 0; a < _s39; ++a) {
                  _e208 = _e208 << 1 | 1 & _t154;
                  _t154 >>= 1;
                }
                for (a = _e208; a < i; a += _c14) n[a] = _s39 << 16 | _r86;
                ++_o25;
              }
              return [n, r];
            }
          }, {
            key: "readBlock",
            value: function readBlock() {
              var e, t;
              var a = this.str;
              var r,
                h,
                u = this.getBits(3);
              1 & u && (this.eof = !0);
              u >>= 1;
              if (0 === u) {
                var _t155;
                if (-1 === (_t155 = a.getByte())) throw new i.FormatError("Bad block header in flate stream");
                var _r87 = _t155;
                if (-1 === (_t155 = a.getByte())) throw new i.FormatError("Bad block header in flate stream");
                _r87 |= _t155 << 8;
                if (-1 === (_t155 = a.getByte())) throw new i.FormatError("Bad block header in flate stream");
                var _n48 = _t155;
                if (-1 === (_t155 = a.getByte())) throw new i.FormatError("Bad block header in flate stream");
                _n48 |= _t155 << 8;
                if (_n48 !== (65535 & ~_r87) && (0 !== _r87 || 0 !== _n48)) throw new i.FormatError("Bad uncompressed block length in flate stream");
                this.codeBuf = 0;
                this.codeSize = 0;
                var _s40 = this.bufferLength,
                  _o26 = _s40 + _r87;
                e = this.ensureBuffer(_o26);
                this.bufferLength = _o26;
                if (0 === _r87) -1 === a.peekByte() && (this.eof = !0);else {
                  var _t156 = a.getBytes(_r87);
                  e.set(_t156, _s40);
                  _t156.length < _r87 && (this.eof = !0);
                }
                return;
              }
              if (1 === u) {
                r = c;
                h = l;
              } else {
                if (2 !== u) throw new i.FormatError("Unknown block type in flate stream");
                {
                  var _e209 = this.getBits(5) + 257,
                    _a109 = this.getBits(5) + 1,
                    _i77 = this.getBits(4) + 4,
                    _s41 = new Uint8Array(n.length);
                  var _o27;
                  for (_o27 = 0; _o27 < _i77; ++_o27) _s41[n[_o27]] = this.getBits(3);
                  var _c15 = this.generateHuffmanTable(_s41);
                  t = 0;
                  _o27 = 0;
                  var _l11 = _e209 + _a109,
                    _u7 = new Uint8Array(_l11);
                  var _d5, _f2, _g5;
                  for (; _o27 < _l11;) {
                    var _e210 = this.getCode(_c15);
                    if (16 === _e210) {
                      _d5 = 2;
                      _f2 = 3;
                      _g5 = t;
                    } else if (17 === _e210) {
                      _d5 = 3;
                      _f2 = 3;
                      _g5 = t = 0;
                    } else {
                      if (18 !== _e210) {
                        _u7[_o27++] = t = _e210;
                        continue;
                      }
                      _d5 = 7;
                      _f2 = 11;
                      _g5 = t = 0;
                    }
                    var _a110 = this.getBits(_d5) + _f2;
                    for (; _a110-- > 0;) _u7[_o27++] = _g5;
                  }
                  r = this.generateHuffmanTable(_u7.subarray(0, _e209));
                  h = this.generateHuffmanTable(_u7.subarray(_e209, _l11));
                }
              }
              e = this.buffer;
              var d = e ? e.length : 0,
                f = this.bufferLength;
              for (;;) {
                var _a111 = this.getCode(r);
                if (_a111 < 256) {
                  if (f + 1 >= d) {
                    e = this.ensureBuffer(f + 1);
                    d = e.length;
                  }
                  e[f++] = _a111;
                  continue;
                }
                if (256 === _a111) {
                  this.bufferLength = f;
                  return;
                }
                _a111 -= 257;
                _a111 = s[_a111];
                var _i78 = _a111 >> 16;
                _i78 > 0 && (_i78 = this.getBits(_i78));
                t = (65535 & _a111) + _i78;
                _a111 = this.getCode(h);
                _a111 = o[_a111];
                _i78 = _a111 >> 16;
                _i78 > 0 && (_i78 = this.getBits(_i78));
                var _n49 = (65535 & _a111) + _i78;
                if (f + t >= d) {
                  e = this.ensureBuffer(f + t);
                  d = e.length;
                }
                for (var _a112 = 0; _a112 < t; ++_a112, ++f) e[f] = e[f - _n49];
              }
            }
          }]);
          return FlateStream;
        }(r.DecodeStream);
        t.FlateStream = FlateStream;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.Jbig2Stream = void 0;
        var r = a(5),
          i = a(18),
          n = a(4),
          s = a(24),
          o = a(2);
        var Jbig2Stream = /*#__PURE__*/function (_i$DecodeStream2) {
          _inherits(Jbig2Stream, _i$DecodeStream2);
          var _super59 = _createSuper(Jbig2Stream);
          function Jbig2Stream(e, t, a) {
            var _this70;
            _classCallCheck(this, Jbig2Stream);
            _this70 = _super59.call(this, t);
            _this70.stream = e;
            _this70.dict = e.dict;
            _this70.maybeLength = t;
            _this70.params = a;
            return _this70;
          }
          _createClass(Jbig2Stream, [{
            key: "bytes",
            get: function get() {
              return (0, o.shadow)(this, "bytes", this.stream.getBytes(this.maybeLength));
            }
          }, {
            key: "ensureBuffer",
            value: function ensureBuffer(e) {}
          }, {
            key: "readBlock",
            value: function readBlock() {
              if (this.eof) return;
              var e = new s.Jbig2Image(),
                t = [];
              if (this.params instanceof n.Dict) {
                var _e211 = this.params.get("JBIG2Globals");
                if (_e211 instanceof r.BaseStream) {
                  var _a113 = _e211.getBytes();
                  t.push({
                    data: _a113,
                    start: 0,
                    end: _a113.length
                  });
                }
              }
              t.push({
                data: this.bytes,
                start: 0,
                end: this.bytes.length
              });
              var a = e.parseChunks(t),
                i = a.length;
              for (var _e212 = 0; _e212 < i; _e212++) a[_e212] ^= 255;
              this.buffer = a;
              this.bufferLength = i;
              this.eof = !0;
            }
          }]);
          return Jbig2Stream;
        }(i.DecodeStream);
        t.Jbig2Stream = Jbig2Stream;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.Jbig2Image = void 0;
        var r = a(2),
          i = a(3),
          n = a(25),
          s = a(21);
        var Jbig2Error = /*#__PURE__*/function (_r$BaseException5) {
          _inherits(Jbig2Error, _r$BaseException5);
          var _super60 = _createSuper(Jbig2Error);
          function Jbig2Error(e) {
            _classCallCheck(this, Jbig2Error);
            return _super60.call(this, "JBIG2 error: ".concat(e), "Jbig2Error");
          }
          return _createClass(Jbig2Error);
        }(r.BaseException);
        var ContextCache = /*#__PURE__*/function () {
          function ContextCache() {
            _classCallCheck(this, ContextCache);
          }
          _createClass(ContextCache, [{
            key: "getContexts",
            value: function getContexts(e) {
              return e in this ? this[e] : this[e] = new Int8Array(65536);
            }
          }]);
          return ContextCache;
        }();
        var DecodingContext = /*#__PURE__*/function () {
          function DecodingContext(e, t, a) {
            _classCallCheck(this, DecodingContext);
            this.data = e;
            this.start = t;
            this.end = a;
          }
          _createClass(DecodingContext, [{
            key: "decoder",
            get: function get() {
              var e = new n.ArithmeticDecoder(this.data, this.start, this.end);
              return (0, r.shadow)(this, "decoder", e);
            }
          }, {
            key: "contextCache",
            get: function get() {
              var e = new ContextCache();
              return (0, r.shadow)(this, "contextCache", e);
            }
          }]);
          return DecodingContext;
        }();
        var o = Math.pow(2, 31) - 1,
          c = -Math.pow(2, 31);
        function decodeInteger(e, t, a) {
          var r = e.getContexts(t);
          var i = 1;
          function readBits(e) {
            var t = 0;
            for (var _n50 = 0; _n50 < e; _n50++) {
              var _e213 = a.readBit(r, i);
              i = i < 256 ? i << 1 | _e213 : 511 & (i << 1 | _e213) | 256;
              t = t << 1 | _e213;
            }
            return t >>> 0;
          }
          var n = readBits(1),
            s = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);
          var l;
          0 === n ? l = s : s > 0 && (l = -s);
          return l >= c && l <= o ? l : null;
        }
        function decodeIAID(e, t, a) {
          var r = e.getContexts("IAID");
          var i = 1;
          for (var _e214 = 0; _e214 < a; _e214++) {
            i = i << 1 | t.readBit(r, i);
          }
          return a < 31 ? i & (1 << a) - 1 : 2147483647 & i;
        }
        var l = ["SymbolDictionary", null, null, null, "IntermediateTextRegion", null, "ImmediateTextRegion", "ImmediateLosslessTextRegion", null, null, null, null, null, null, null, null, "PatternDictionary", null, null, null, "IntermediateHalftoneRegion", null, "ImmediateHalftoneRegion", "ImmediateLosslessHalftoneRegion", null, null, null, null, null, null, null, null, null, null, null, null, "IntermediateGenericRegion", null, "ImmediateGenericRegion", "ImmediateLosslessGenericRegion", "IntermediateGenericRefinementRegion", null, "ImmediateGenericRefinementRegion", "ImmediateLosslessGenericRefinementRegion", null, null, null, null, "PageInformation", "EndOfPage", "EndOfStripe", "EndOfFile", "Profiles", "Tables", null, null, null, null, null, null, null, null, "Extension"],
          h = [[{
            x: -1,
            y: -2
          }, {
            x: 0,
            y: -2
          }, {
            x: 1,
            y: -2
          }, {
            x: -2,
            y: -1
          }, {
            x: -1,
            y: -1
          }, {
            x: 0,
            y: -1
          }, {
            x: 1,
            y: -1
          }, {
            x: 2,
            y: -1
          }, {
            x: -4,
            y: 0
          }, {
            x: -3,
            y: 0
          }, {
            x: -2,
            y: 0
          }, {
            x: -1,
            y: 0
          }], [{
            x: -1,
            y: -2
          }, {
            x: 0,
            y: -2
          }, {
            x: 1,
            y: -2
          }, {
            x: 2,
            y: -2
          }, {
            x: -2,
            y: -1
          }, {
            x: -1,
            y: -1
          }, {
            x: 0,
            y: -1
          }, {
            x: 1,
            y: -1
          }, {
            x: 2,
            y: -1
          }, {
            x: -3,
            y: 0
          }, {
            x: -2,
            y: 0
          }, {
            x: -1,
            y: 0
          }], [{
            x: -1,
            y: -2
          }, {
            x: 0,
            y: -2
          }, {
            x: 1,
            y: -2
          }, {
            x: -2,
            y: -1
          }, {
            x: -1,
            y: -1
          }, {
            x: 0,
            y: -1
          }, {
            x: 1,
            y: -1
          }, {
            x: -2,
            y: 0
          }, {
            x: -1,
            y: 0
          }], [{
            x: -3,
            y: -1
          }, {
            x: -2,
            y: -1
          }, {
            x: -1,
            y: -1
          }, {
            x: 0,
            y: -1
          }, {
            x: 1,
            y: -1
          }, {
            x: -4,
            y: 0
          }, {
            x: -3,
            y: 0
          }, {
            x: -2,
            y: 0
          }, {
            x: -1,
            y: 0
          }]],
          u = [{
            coding: [{
              x: 0,
              y: -1
            }, {
              x: 1,
              y: -1
            }, {
              x: -1,
              y: 0
            }],
            reference: [{
              x: 0,
              y: -1
            }, {
              x: 1,
              y: -1
            }, {
              x: -1,
              y: 0
            }, {
              x: 0,
              y: 0
            }, {
              x: 1,
              y: 0
            }, {
              x: -1,
              y: 1
            }, {
              x: 0,
              y: 1
            }, {
              x: 1,
              y: 1
            }]
          }, {
            coding: [{
              x: -1,
              y: -1
            }, {
              x: 0,
              y: -1
            }, {
              x: 1,
              y: -1
            }, {
              x: -1,
              y: 0
            }],
            reference: [{
              x: 0,
              y: -1
            }, {
              x: -1,
              y: 0
            }, {
              x: 0,
              y: 0
            }, {
              x: 1,
              y: 0
            }, {
              x: 0,
              y: 1
            }, {
              x: 1,
              y: 1
            }]
          }],
          d = [39717, 1941, 229, 405],
          f = [32, 8];
        function decodeBitmap(e, t, a, r, i, n, s, o) {
          if (e) {
            return decodeMMRBitmap(new Reader(o.data, o.start, o.end), t, a, !1);
          }
          if (0 === r && !n && !i && 4 === s.length && 3 === s[0].x && -1 === s[0].y && -3 === s[1].x && -1 === s[1].y && 2 === s[2].x && -2 === s[2].y && -2 === s[3].x && -2 === s[3].y) return function decodeBitmapTemplate0(e, t, a) {
            var r = a.decoder,
              i = a.contextCache.getContexts("GB"),
              n = [];
            var s, o, c, l, h, u, d;
            for (o = 0; o < t; o++) {
              h = n[o] = new Uint8Array(e);
              u = o < 1 ? h : n[o - 1];
              d = o < 2 ? h : n[o - 2];
              s = d[0] << 13 | d[1] << 12 | d[2] << 11 | u[0] << 7 | u[1] << 6 | u[2] << 5 | u[3] << 4;
              for (c = 0; c < e; c++) {
                h[c] = l = r.readBit(i, s);
                s = (31735 & s) << 1 | (c + 3 < e ? d[c + 3] << 11 : 0) | (c + 4 < e ? u[c + 4] << 4 : 0) | l;
              }
            }
            return n;
          }(t, a, o);
          var c = !!n,
            l = h[r].concat(s);
          l.sort(function (e, t) {
            return e.y - t.y || e.x - t.x;
          });
          var u = l.length,
            f = new Int8Array(u),
            g = new Int8Array(u),
            p = [];
          var m,
            b,
            y = 0,
            w = 0,
            S = 0,
            x = 0;
          for (b = 0; b < u; b++) {
            f[b] = l[b].x;
            g[b] = l[b].y;
            w = Math.min(w, l[b].x);
            S = Math.max(S, l[b].x);
            x = Math.min(x, l[b].y);
            b < u - 1 && l[b].y === l[b + 1].y && l[b].x === l[b + 1].x - 1 ? y |= 1 << u - 1 - b : p.push(b);
          }
          var C = p.length,
            k = new Int8Array(C),
            v = new Int8Array(C),
            F = new Uint16Array(C);
          for (m = 0; m < C; m++) {
            b = p[m];
            k[m] = l[b].x;
            v[m] = l[b].y;
            F[m] = 1 << u - 1 - b;
          }
          var O = -w,
            T = -x,
            M = t - S,
            E = d[r];
          var D = new Uint8Array(t);
          var N = [],
            R = o.decoder,
            L = o.contextCache.getContexts("GB");
          var _,
            $,
            j,
            U,
            X,
            H = 0,
            q = 0;
          for (var _e215 = 0; _e215 < a; _e215++) {
            if (i) {
              H ^= R.readBit(L, E);
              if (H) {
                N.push(D);
                continue;
              }
            }
            D = new Uint8Array(D);
            N.push(D);
            for (_ = 0; _ < t; _++) {
              if (c && n[_e215][_]) {
                D[_] = 0;
                continue;
              }
              if (_ >= O && _ < M && _e215 >= T) {
                q = q << 1 & y;
                for (b = 0; b < C; b++) {
                  $ = _e215 + v[b];
                  j = _ + k[b];
                  U = N[$][j];
                  if (U) {
                    U = F[b];
                    q |= U;
                  }
                }
              } else {
                q = 0;
                X = u - 1;
                for (b = 0; b < u; b++, X--) {
                  j = _ + f[b];
                  if (j >= 0 && j < t) {
                    $ = _e215 + g[b];
                    if ($ >= 0) {
                      U = N[$][j];
                      U && (q |= U << X);
                    }
                  }
                }
              }
              var _a114 = R.readBit(L, q);
              D[_] = _a114;
            }
          }
          return N;
        }
        function decodeRefinement(e, t, a, r, i, n, s, o, c) {
          var l = u[a].coding;
          0 === a && (l = l.concat([o[0]]));
          var h = l.length,
            d = new Int32Array(h),
            g = new Int32Array(h);
          var p;
          for (p = 0; p < h; p++) {
            d[p] = l[p].x;
            g[p] = l[p].y;
          }
          var m = u[a].reference;
          0 === a && (m = m.concat([o[1]]));
          var b = m.length,
            y = new Int32Array(b),
            w = new Int32Array(b);
          for (p = 0; p < b; p++) {
            y[p] = m[p].x;
            w[p] = m[p].y;
          }
          var S = r[0].length,
            x = r.length,
            C = f[a],
            k = [],
            v = c.decoder,
            F = c.contextCache.getContexts("GR");
          var O = 0;
          for (var _a115 = 0; _a115 < t; _a115++) {
            if (s) {
              O ^= v.readBit(F, C);
              if (O) throw new Jbig2Error("prediction is not supported");
            }
            var _t157 = new Uint8Array(e);
            k.push(_t157);
            for (var _s42 = 0; _s42 < e; _s42++) {
              var _o28 = void 0,
                _c16 = void 0,
                _l12 = 0;
              for (p = 0; p < h; p++) {
                _o28 = _a115 + g[p];
                _c16 = _s42 + d[p];
                _o28 < 0 || _c16 < 0 || _c16 >= e ? _l12 <<= 1 : _l12 = _l12 << 1 | k[_o28][_c16];
              }
              for (p = 0; p < b; p++) {
                _o28 = _a115 + w[p] - n;
                _c16 = _s42 + y[p] - i;
                _o28 < 0 || _o28 >= x || _c16 < 0 || _c16 >= S ? _l12 <<= 1 : _l12 = _l12 << 1 | r[_o28][_c16];
              }
              var _u8 = v.readBit(F, _l12);
              _t157[_s42] = _u8;
            }
          }
          return k;
        }
        function decodeTextRegion(e, t, a, r, i, n, s, o, c, l, h, u, d, f, g, p, m, b, y) {
          if (e && t) throw new Jbig2Error("refinement with Huffman is not supported");
          var w = [];
          var S, x;
          for (S = 0; S < r; S++) {
            x = new Uint8Array(a);
            if (i) for (var _e216 = 0; _e216 < a; _e216++) x[_e216] = i;
            w.push(x);
          }
          var C = m.decoder,
            k = m.contextCache;
          var v = e ? -f.tableDeltaT.decode(y) : -decodeInteger(k, "IADT", C),
            F = 0;
          S = 0;
          for (; S < n;) {
            v += e ? f.tableDeltaT.decode(y) : decodeInteger(k, "IADT", C);
            F += e ? f.tableFirstS.decode(y) : decodeInteger(k, "IAFS", C);
            var _r88 = F;
            for (;;) {
              var _i79 = 0;
              s > 1 && (_i79 = e ? y.readBits(b) : decodeInteger(k, "IAIT", C));
              var _n51 = s * v + _i79,
                _F = e ? f.symbolIDTable.decode(y) : decodeIAID(k, C, c),
                O = t && (e ? y.readBit() : decodeInteger(k, "IARI", C));
              var T = o[_F],
                M = T[0].length,
                E = T.length;
              if (O) {
                var _e217 = decodeInteger(k, "IARDW", C),
                  _t158 = decodeInteger(k, "IARDH", C);
                M += _e217;
                E += _t158;
                T = decodeRefinement(M, E, g, T, (_e217 >> 1) + decodeInteger(k, "IARDX", C), (_t158 >> 1) + decodeInteger(k, "IARDY", C), !1, p, m);
              }
              var D = _n51 - (1 & u ? 0 : E - 1),
                N = _r88 - (2 & u ? M - 1 : 0);
              var R = void 0,
                L = void 0,
                _ = void 0;
              if (l) {
                for (R = 0; R < E; R++) {
                  x = w[N + R];
                  if (!x) continue;
                  _ = T[R];
                  var _e218 = Math.min(a - D, M);
                  switch (d) {
                    case 0:
                      for (L = 0; L < _e218; L++) x[D + L] |= _[L];
                      break;
                    case 2:
                      for (L = 0; L < _e218; L++) x[D + L] ^= _[L];
                      break;
                    default:
                      throw new Jbig2Error("operator ".concat(d, " is not supported"));
                  }
                }
                _r88 += E - 1;
              } else {
                for (L = 0; L < E; L++) {
                  x = w[D + L];
                  if (x) {
                    _ = T[L];
                    switch (d) {
                      case 0:
                        for (R = 0; R < M; R++) x[N + R] |= _[R];
                        break;
                      case 2:
                        for (R = 0; R < M; R++) x[N + R] ^= _[R];
                        break;
                      default:
                        throw new Jbig2Error("operator ".concat(d, " is not supported"));
                    }
                  }
                }
                _r88 += M - 1;
              }
              S++;
              var $ = e ? f.tableDeltaS.decode(y) : decodeInteger(k, "IADS", C);
              if (null === $) break;
              _r88 += $ + h;
            }
          }
          return w;
        }
        function readSegmentHeader(e, t) {
          var a = {};
          a.number = (0, i.readUint32)(e, t);
          var r = e[t + 4],
            n = 63 & r;
          if (!l[n]) throw new Jbig2Error("invalid segment type: " + n);
          a.type = n;
          a.typeName = l[n];
          a.deferredNonRetain = !!(128 & r);
          var s = !!(64 & r),
            o = e[t + 5];
          var c = o >> 5 & 7;
          var h = [31 & o];
          var u = t + 6;
          if (7 === o) {
            c = 536870911 & (0, i.readUint32)(e, u - 1);
            u += 3;
            var _t159 = c + 7 >> 3;
            h[0] = e[u++];
            for (; --_t159 > 0;) h.push(e[u++]);
          } else if (5 === o || 6 === o) throw new Jbig2Error("invalid referred-to flags");
          a.retainBits = h;
          var d = 4;
          a.number <= 256 ? d = 1 : a.number <= 65536 && (d = 2);
          var f = [];
          var p, m;
          for (p = 0; p < c; p++) {
            var _t160 = void 0;
            _t160 = 1 === d ? e[u] : 2 === d ? (0, i.readUint16)(e, u) : (0, i.readUint32)(e, u);
            f.push(_t160);
            u += d;
          }
          a.referredTo = f;
          if (s) {
            a.pageAssociation = (0, i.readUint32)(e, u);
            u += 4;
          } else a.pageAssociation = e[u++];
          a.length = (0, i.readUint32)(e, u);
          u += 4;
          if (4294967295 === a.length) {
            if (38 !== n) throw new Jbig2Error("invalid unknown segment length");
            {
              var _t161 = readRegionSegmentInformation(e, u),
                _r89 = !!(1 & e[u + g]),
                _i80 = 6,
                _n52 = new Uint8Array(_i80);
              if (!_r89) {
                _n52[0] = 255;
                _n52[1] = 172;
              }
              _n52[2] = _t161.height >>> 24 & 255;
              _n52[3] = _t161.height >> 16 & 255;
              _n52[4] = _t161.height >> 8 & 255;
              _n52[5] = 255 & _t161.height;
              for (p = u, m = e.length; p < m; p++) {
                var _t162 = 0;
                for (; _t162 < _i80 && _n52[_t162] === e[p + _t162];) _t162++;
                if (_t162 === _i80) {
                  a.length = p + _i80;
                  break;
                }
              }
              if (4294967295 === a.length) throw new Jbig2Error("segment end was not found");
            }
          }
          a.headerEnd = u;
          return a;
        }
        function readSegments(e, t, a, r) {
          var i = [];
          var n = a;
          for (; n < r;) {
            var _a116 = readSegmentHeader(t, n);
            n = _a116.headerEnd;
            var _r90 = {
              header: _a116,
              data: t
            };
            if (!e.randomAccess) {
              _r90.start = n;
              n += _a116.length;
              _r90.end = n;
            }
            i.push(_r90);
            if (51 === _a116.type) break;
          }
          if (e.randomAccess) for (var _e219 = 0, _t163 = i.length; _e219 < _t163; _e219++) {
            i[_e219].start = n;
            n += i[_e219].header.length;
            i[_e219].end = n;
          }
          return i;
        }
        function readRegionSegmentInformation(e, t) {
          return {
            width: (0, i.readUint32)(e, t),
            height: (0, i.readUint32)(e, t + 4),
            x: (0, i.readUint32)(e, t + 8),
            y: (0, i.readUint32)(e, t + 12),
            combinationOperator: 7 & e[t + 16]
          };
        }
        var g = 17;
        function processSegment(e, t) {
          var a = e.header,
            r = e.data,
            n = e.end;
          var s,
            o,
            c,
            l,
            h = e.start;
          switch (a.type) {
            case 0:
              var _e220 = {},
                _t164 = (0, i.readUint16)(r, h);
              _e220.huffman = !!(1 & _t164);
              _e220.refinement = !!(2 & _t164);
              _e220.huffmanDHSelector = _t164 >> 2 & 3;
              _e220.huffmanDWSelector = _t164 >> 4 & 3;
              _e220.bitmapSizeSelector = _t164 >> 6 & 1;
              _e220.aggregationInstancesSelector = _t164 >> 7 & 1;
              _e220.bitmapCodingContextUsed = !!(256 & _t164);
              _e220.bitmapCodingContextRetained = !!(512 & _t164);
              _e220.template = _t164 >> 10 & 3;
              _e220.refinementTemplate = _t164 >> 12 & 1;
              h += 2;
              if (!_e220.huffman) {
                l = 0 === _e220.template ? 4 : 1;
                o = [];
                for (c = 0; c < l; c++) {
                  o.push({
                    x: (0, i.readInt8)(r, h),
                    y: (0, i.readInt8)(r, h + 1)
                  });
                  h += 2;
                }
                _e220.at = o;
              }
              if (_e220.refinement && !_e220.refinementTemplate) {
                o = [];
                for (c = 0; c < 2; c++) {
                  o.push({
                    x: (0, i.readInt8)(r, h),
                    y: (0, i.readInt8)(r, h + 1)
                  });
                  h += 2;
                }
                _e220.refinementAt = o;
              }
              _e220.numberOfExportedSymbols = (0, i.readUint32)(r, h);
              h += 4;
              _e220.numberOfNewSymbols = (0, i.readUint32)(r, h);
              h += 4;
              s = [_e220, a.number, a.referredTo, r, h, n];
              break;
            case 6:
            case 7:
              var _u9 = {};
              _u9.info = readRegionSegmentInformation(r, h);
              h += g;
              var _d6 = (0, i.readUint16)(r, h);
              h += 2;
              _u9.huffman = !!(1 & _d6);
              _u9.refinement = !!(2 & _d6);
              _u9.logStripSize = _d6 >> 2 & 3;
              _u9.stripSize = 1 << _u9.logStripSize;
              _u9.referenceCorner = _d6 >> 4 & 3;
              _u9.transposed = !!(64 & _d6);
              _u9.combinationOperator = _d6 >> 7 & 3;
              _u9.defaultPixelValue = _d6 >> 9 & 1;
              _u9.dsOffset = _d6 << 17 >> 27;
              _u9.refinementTemplate = _d6 >> 15 & 1;
              if (_u9.huffman) {
                var _e221 = (0, i.readUint16)(r, h);
                h += 2;
                _u9.huffmanFS = 3 & _e221;
                _u9.huffmanDS = _e221 >> 2 & 3;
                _u9.huffmanDT = _e221 >> 4 & 3;
                _u9.huffmanRefinementDW = _e221 >> 6 & 3;
                _u9.huffmanRefinementDH = _e221 >> 8 & 3;
                _u9.huffmanRefinementDX = _e221 >> 10 & 3;
                _u9.huffmanRefinementDY = _e221 >> 12 & 3;
                _u9.huffmanRefinementSizeSelector = !!(16384 & _e221);
              }
              if (_u9.refinement && !_u9.refinementTemplate) {
                o = [];
                for (c = 0; c < 2; c++) {
                  o.push({
                    x: (0, i.readInt8)(r, h),
                    y: (0, i.readInt8)(r, h + 1)
                  });
                  h += 2;
                }
                _u9.refinementAt = o;
              }
              _u9.numberOfSymbolInstances = (0, i.readUint32)(r, h);
              h += 4;
              s = [_u9, a.referredTo, r, h, n];
              break;
            case 16:
              var _f3 = {},
                _p4 = r[h++];
              _f3.mmr = !!(1 & _p4);
              _f3.template = _p4 >> 1 & 3;
              _f3.patternWidth = r[h++];
              _f3.patternHeight = r[h++];
              _f3.maxPatternIndex = (0, i.readUint32)(r, h);
              h += 4;
              s = [_f3, a.number, r, h, n];
              break;
            case 22:
            case 23:
              var m = {};
              m.info = readRegionSegmentInformation(r, h);
              h += g;
              var b = r[h++];
              m.mmr = !!(1 & b);
              m.template = b >> 1 & 3;
              m.enableSkip = !!(8 & b);
              m.combinationOperator = b >> 4 & 7;
              m.defaultPixelValue = b >> 7 & 1;
              m.gridWidth = (0, i.readUint32)(r, h);
              h += 4;
              m.gridHeight = (0, i.readUint32)(r, h);
              h += 4;
              m.gridOffsetX = 4294967295 & (0, i.readUint32)(r, h);
              h += 4;
              m.gridOffsetY = 4294967295 & (0, i.readUint32)(r, h);
              h += 4;
              m.gridVectorX = (0, i.readUint16)(r, h);
              h += 2;
              m.gridVectorY = (0, i.readUint16)(r, h);
              h += 2;
              s = [m, a.referredTo, r, h, n];
              break;
            case 38:
            case 39:
              var y = {};
              y.info = readRegionSegmentInformation(r, h);
              h += g;
              var w = r[h++];
              y.mmr = !!(1 & w);
              y.template = w >> 1 & 3;
              y.prediction = !!(8 & w);
              if (!y.mmr) {
                l = 0 === y.template ? 4 : 1;
                o = [];
                for (c = 0; c < l; c++) {
                  o.push({
                    x: (0, i.readInt8)(r, h),
                    y: (0, i.readInt8)(r, h + 1)
                  });
                  h += 2;
                }
                y.at = o;
              }
              s = [y, r, h, n];
              break;
            case 48:
              var S = {
                width: (0, i.readUint32)(r, h),
                height: (0, i.readUint32)(r, h + 4),
                resolutionX: (0, i.readUint32)(r, h + 8),
                resolutionY: (0, i.readUint32)(r, h + 12)
              };
              4294967295 === S.height && delete S.height;
              var x = r[h + 16];
              (0, i.readUint16)(r, h + 17);
              S.lossless = !!(1 & x);
              S.refinement = !!(2 & x);
              S.defaultPixelValue = x >> 2 & 1;
              S.combinationOperator = x >> 3 & 3;
              S.requiresBuffer = !!(32 & x);
              S.combinationOperatorOverride = !!(64 & x);
              s = [S];
              break;
            case 49:
            case 50:
            case 51:
            case 62:
              break;
            case 53:
              s = [a.number, r, h, n];
              break;
            default:
              throw new Jbig2Error("segment type ".concat(a.typeName, "(").concat(a.type, ") is not implemented"));
          }
          var u = "on" + a.typeName;
          u in t && t[u].apply(t, s);
        }
        function processSegments(e, t) {
          for (var _a117 = 0, _r91 = e.length; _a117 < _r91; _a117++) processSegment(e[_a117], t);
        }
        var SimpleSegmentVisitor = /*#__PURE__*/function () {
          function SimpleSegmentVisitor() {
            _classCallCheck(this, SimpleSegmentVisitor);
          }
          _createClass(SimpleSegmentVisitor, [{
            key: "onPageInformation",
            value: function onPageInformation(e) {
              this.currentPageInfo = e;
              var t = e.width + 7 >> 3,
                a = new Uint8ClampedArray(t * e.height);
              e.defaultPixelValue && a.fill(255);
              this.buffer = a;
            }
          }, {
            key: "drawBitmap",
            value: function drawBitmap(e, t) {
              var a = this.currentPageInfo,
                r = e.width,
                i = e.height,
                n = a.width + 7 >> 3,
                s = a.combinationOperatorOverride ? e.combinationOperator : a.combinationOperator,
                o = this.buffer,
                c = 128 >> (7 & e.x);
              var l,
                h,
                u,
                d,
                f = e.y * n + (e.x >> 3);
              switch (s) {
                case 0:
                  for (l = 0; l < i; l++) {
                    u = c;
                    d = f;
                    for (h = 0; h < r; h++) {
                      t[l][h] && (o[d] |= u);
                      u >>= 1;
                      if (!u) {
                        u = 128;
                        d++;
                      }
                    }
                    f += n;
                  }
                  break;
                case 2:
                  for (l = 0; l < i; l++) {
                    u = c;
                    d = f;
                    for (h = 0; h < r; h++) {
                      t[l][h] && (o[d] ^= u);
                      u >>= 1;
                      if (!u) {
                        u = 128;
                        d++;
                      }
                    }
                    f += n;
                  }
                  break;
                default:
                  throw new Jbig2Error("operator ".concat(s, " is not supported"));
              }
            }
          }, {
            key: "onImmediateGenericRegion",
            value: function onImmediateGenericRegion(e, t, a, r) {
              var i = e.info,
                n = new DecodingContext(t, a, r),
                s = decodeBitmap(e.mmr, i.width, i.height, e.template, e.prediction, null, e.at, n);
              this.drawBitmap(i, s);
            }
          }, {
            key: "onImmediateLosslessGenericRegion",
            value: function onImmediateLosslessGenericRegion() {
              this.onImmediateGenericRegion.apply(this, arguments);
            }
          }, {
            key: "onSymbolDictionary",
            value: function onSymbolDictionary(e, t, a, r, n, s) {
              var o, c;
              if (e.huffman) {
                o = function getSymbolDictionaryHuffmanTables(e, t, a) {
                  var r,
                    i,
                    n,
                    s,
                    o = 0;
                  switch (e.huffmanDHSelector) {
                    case 0:
                    case 1:
                      r = getStandardTable(e.huffmanDHSelector + 4);
                      break;
                    case 3:
                      r = getCustomHuffmanTable(o, t, a);
                      o++;
                      break;
                    default:
                      throw new Jbig2Error("invalid Huffman DH selector");
                  }
                  switch (e.huffmanDWSelector) {
                    case 0:
                    case 1:
                      i = getStandardTable(e.huffmanDWSelector + 2);
                      break;
                    case 3:
                      i = getCustomHuffmanTable(o, t, a);
                      o++;
                      break;
                    default:
                      throw new Jbig2Error("invalid Huffman DW selector");
                  }
                  if (e.bitmapSizeSelector) {
                    n = getCustomHuffmanTable(o, t, a);
                    o++;
                  } else n = getStandardTable(1);
                  s = e.aggregationInstancesSelector ? getCustomHuffmanTable(o, t, a) : getStandardTable(1);
                  return {
                    tableDeltaHeight: r,
                    tableDeltaWidth: i,
                    tableBitmapSize: n,
                    tableAggregateInstances: s
                  };
                }(e, a, this.customTables);
                c = new Reader(r, n, s);
              }
              var l = this.symbols;
              l || (this.symbols = l = {});
              var h = [];
              var _iterator84 = _createForOfIteratorHelper(a),
                _step84;
              try {
                for (_iterator84.s(); !(_step84 = _iterator84.n()).done;) {
                  var _e226 = _step84.value;
                  var _t168 = l[_e226];
                  _t168 && h.push.apply(h, _toConsumableArray(_t168));
                }
              } catch (err) {
                _iterator84.e(err);
              } finally {
                _iterator84.f();
              }
              var u = new DecodingContext(r, n, s);
              l[t] = function decodeSymbolDictionary(e, t, a, r, n, s, o, c, l, h, u, d) {
                if (e && t) throw new Jbig2Error("symbol refinement with Huffman is not supported");
                var f = [];
                var g = 0,
                  p = (0, i.log2)(a.length + r);
                var m = u.decoder,
                  b = u.contextCache;
                var y, w;
                if (e) {
                  y = getStandardTable(1);
                  w = [];
                  p = Math.max(p, 1);
                }
                for (; f.length < r;) {
                  g += e ? s.tableDeltaHeight.decode(d) : decodeInteger(b, "IADH", m);
                  var _r92 = 0,
                    _i81 = 0;
                  var _n53 = e ? w.length : 0;
                  for (;;) {
                    var _n54 = e ? s.tableDeltaWidth.decode(d) : decodeInteger(b, "IADW", m);
                    if (null === _n54) break;
                    _r92 += _n54;
                    _i81 += _r92;
                    var _y3 = void 0;
                    if (t) {
                      var _i82 = decodeInteger(b, "IAAI", m);
                      if (_i82 > 1) _y3 = decodeTextRegion(e, t, _r92, g, 0, _i82, 1, a.concat(f), p, 0, 0, 1, 0, s, l, h, u, 0, d);else {
                        var _e222 = decodeIAID(b, m, p),
                          _t165 = decodeInteger(b, "IARDX", m),
                          _i83 = decodeInteger(b, "IARDY", m);
                        _y3 = decodeRefinement(_r92, g, l, _e222 < a.length ? a[_e222] : f[_e222 - a.length], _t165, _i83, !1, h, u);
                      }
                      f.push(_y3);
                    } else if (e) w.push(_r92);else {
                      _y3 = decodeBitmap(!1, _r92, g, o, !1, null, c, u);
                      f.push(_y3);
                    }
                  }
                  if (e && !t) {
                    var _e223 = s.tableBitmapSize.decode(d);
                    d.byteAlign();
                    var _t166 = void 0;
                    if (0 === _e223) _t166 = readUncompressedBitmap(d, _i81, g);else {
                      var _a118 = d.end,
                        _r93 = d.position + _e223;
                      d.end = _r93;
                      _t166 = decodeMMRBitmap(d, _i81, g, !1);
                      d.end = _a118;
                      d.position = _r93;
                    }
                    var _a119 = w.length;
                    if (_n53 === _a119 - 1) f.push(_t166);else {
                      var _e224 = void 0,
                        _r94 = void 0,
                        _i84 = void 0,
                        _s43 = void 0,
                        _o29 = void 0,
                        _c17 = 0;
                      for (_e224 = _n53; _e224 < _a119; _e224++) {
                        _s43 = w[_e224];
                        _i84 = _c17 + _s43;
                        _o29 = [];
                        for (_r94 = 0; _r94 < g; _r94++) _o29.push(_t166[_r94].subarray(_c17, _i84));
                        f.push(_o29);
                        _c17 = _i84;
                      }
                    }
                  }
                }
                var S = [],
                  x = [];
                var C,
                  k,
                  v = !1;
                var F = a.length + r;
                for (; x.length < F;) {
                  var _t167 = e ? y.decode(d) : decodeInteger(b, "IAEX", m);
                  for (; _t167--;) x.push(v);
                  v = !v;
                }
                for (C = 0, k = a.length; C < k; C++) x[C] && S.push(a[C]);
                for (var _e225 = 0; _e225 < r; C++, _e225++) x[C] && S.push(f[_e225]);
                return S;
              }(e.huffman, e.refinement, h, e.numberOfNewSymbols, e.numberOfExportedSymbols, o, e.template, e.at, e.refinementTemplate, e.refinementAt, u, c);
            }
          }, {
            key: "onImmediateTextRegion",
            value: function onImmediateTextRegion(e, t, a, r, n) {
              var s = e.info;
              var o, c;
              var l = this.symbols,
                h = [];
              var _iterator85 = _createForOfIteratorHelper(t),
                _step85;
              try {
                for (_iterator85.s(); !(_step85 = _iterator85.n()).done;) {
                  var _e229 = _step85.value;
                  var _t171 = l[_e229];
                  _t171 && h.push.apply(h, _toConsumableArray(_t171));
                }
              } catch (err) {
                _iterator85.e(err);
              } finally {
                _iterator85.f();
              }
              var u = (0, i.log2)(h.length);
              if (e.huffman) {
                c = new Reader(a, r, n);
                o = function getTextRegionHuffmanTables(e, t, a, r, i) {
                  var n = [];
                  for (var _e227 = 0; _e227 <= 34; _e227++) {
                    var _t169 = i.readBits(4);
                    n.push(new HuffmanLine([_e227, _t169, 0, 0]));
                  }
                  var s = new HuffmanTable(n, !1);
                  n.length = 0;
                  for (var _e228 = 0; _e228 < r;) {
                    var _t170 = s.decode(i);
                    if (_t170 >= 32) {
                      var _a120 = void 0,
                        _r95 = void 0,
                        _s44 = void 0;
                      switch (_t170) {
                        case 32:
                          if (0 === _e228) throw new Jbig2Error("no previous value in symbol ID table");
                          _r95 = i.readBits(2) + 3;
                          _a120 = n[_e228 - 1].prefixLength;
                          break;
                        case 33:
                          _r95 = i.readBits(3) + 3;
                          _a120 = 0;
                          break;
                        case 34:
                          _r95 = i.readBits(7) + 11;
                          _a120 = 0;
                          break;
                        default:
                          throw new Jbig2Error("invalid code length in symbol ID table");
                      }
                      for (_s44 = 0; _s44 < _r95; _s44++) {
                        n.push(new HuffmanLine([_e228, _a120, 0, 0]));
                        _e228++;
                      }
                    } else {
                      n.push(new HuffmanLine([_e228, _t170, 0, 0]));
                      _e228++;
                    }
                  }
                  i.byteAlign();
                  var o = new HuffmanTable(n, !1);
                  var c,
                    l,
                    h,
                    u = 0;
                  switch (e.huffmanFS) {
                    case 0:
                    case 1:
                      c = getStandardTable(e.huffmanFS + 6);
                      break;
                    case 3:
                      c = getCustomHuffmanTable(u, t, a);
                      u++;
                      break;
                    default:
                      throw new Jbig2Error("invalid Huffman FS selector");
                  }
                  switch (e.huffmanDS) {
                    case 0:
                    case 1:
                    case 2:
                      l = getStandardTable(e.huffmanDS + 8);
                      break;
                    case 3:
                      l = getCustomHuffmanTable(u, t, a);
                      u++;
                      break;
                    default:
                      throw new Jbig2Error("invalid Huffman DS selector");
                  }
                  switch (e.huffmanDT) {
                    case 0:
                    case 1:
                    case 2:
                      h = getStandardTable(e.huffmanDT + 11);
                      break;
                    case 3:
                      h = getCustomHuffmanTable(u, t, a);
                      u++;
                      break;
                    default:
                      throw new Jbig2Error("invalid Huffman DT selector");
                  }
                  if (e.refinement) throw new Jbig2Error("refinement with Huffman is not supported");
                  return {
                    symbolIDTable: o,
                    tableFirstS: c,
                    tableDeltaS: l,
                    tableDeltaT: h
                  };
                }(e, t, this.customTables, h.length, c);
              }
              var d = new DecodingContext(a, r, n),
                f = decodeTextRegion(e.huffman, e.refinement, s.width, s.height, e.defaultPixelValue, e.numberOfSymbolInstances, e.stripSize, h, u, e.transposed, e.dsOffset, e.referenceCorner, e.combinationOperator, o, e.refinementTemplate, e.refinementAt, d, e.logStripSize, c);
              this.drawBitmap(s, f);
            }
          }, {
            key: "onImmediateLosslessTextRegion",
            value: function onImmediateLosslessTextRegion() {
              this.onImmediateTextRegion.apply(this, arguments);
            }
          }, {
            key: "onPatternDictionary",
            value: function onPatternDictionary(e, t, a, r, i) {
              var n = this.patterns;
              n || (this.patterns = n = {});
              var s = new DecodingContext(a, r, i);
              n[t] = function decodePatternDictionary(e, t, a, r, i, n) {
                var s = [];
                if (!e) {
                  s.push({
                    x: -t,
                    y: 0
                  });
                  0 === i && s.push({
                    x: -3,
                    y: -1
                  }, {
                    x: 2,
                    y: -2
                  }, {
                    x: -2,
                    y: -2
                  });
                }
                var o = decodeBitmap(e, (r + 1) * t, a, i, !1, null, s, n),
                  c = [];
                for (var _e230 = 0; _e230 <= r; _e230++) {
                  var _r96 = [],
                    _i85 = t * _e230,
                    _n55 = _i85 + t;
                  for (var _e231 = 0; _e231 < a; _e231++) _r96.push(o[_e231].subarray(_i85, _n55));
                  c.push(_r96);
                }
                return c;
              }(e.mmr, e.patternWidth, e.patternHeight, e.maxPatternIndex, e.template, s);
            }
          }, {
            key: "onImmediateHalftoneRegion",
            value: function onImmediateHalftoneRegion(e, t, a, r, n) {
              var s = this.patterns[t[0]],
                o = e.info,
                c = new DecodingContext(a, r, n),
                l = function decodeHalftoneRegion(e, t, a, r, n, s, o, c, l, h, u, d, f, g, p) {
                  if (o) throw new Jbig2Error("skip is not supported");
                  if (0 !== c) throw new Jbig2Error("operator \"".concat(c, "\" is not supported in halftone region"));
                  var m = [];
                  var b, y, w;
                  for (b = 0; b < n; b++) {
                    w = new Uint8Array(r);
                    if (s) for (y = 0; y < r; y++) w[y] = s;
                    m.push(w);
                  }
                  var S = t.length,
                    x = t[0],
                    C = x[0].length,
                    k = x.length,
                    v = (0, i.log2)(S),
                    F = [];
                  if (!e) {
                    F.push({
                      x: a <= 1 ? 3 : 2,
                      y: -1
                    });
                    0 === a && F.push({
                      x: -3,
                      y: -1
                    }, {
                      x: 2,
                      y: -2
                    }, {
                      x: -2,
                      y: -2
                    });
                  }
                  var O = [];
                  var T, M, E, D, N, R, L, _, $, j, U;
                  e && (T = new Reader(p.data, p.start, p.end));
                  for (b = v - 1; b >= 0; b--) {
                    M = e ? decodeMMRBitmap(T, l, h, !0) : decodeBitmap(!1, l, h, a, !1, null, F, p);
                    O[b] = M;
                  }
                  for (E = 0; E < h; E++) for (D = 0; D < l; D++) {
                    N = 0;
                    R = 0;
                    for (y = v - 1; y >= 0; y--) {
                      N ^= O[y][E][D];
                      R |= N << y;
                    }
                    L = t[R];
                    _ = u + E * g + D * f >> 8;
                    $ = d + E * f - D * g >> 8;
                    if (_ >= 0 && _ + C <= r && $ >= 0 && $ + k <= n) for (b = 0; b < k; b++) {
                      U = m[$ + b];
                      j = L[b];
                      for (y = 0; y < C; y++) U[_ + y] |= j[y];
                    } else {
                      var _e232 = void 0,
                        _t172 = void 0;
                      for (b = 0; b < k; b++) {
                        _t172 = $ + b;
                        if (!(_t172 < 0 || _t172 >= n)) {
                          U = m[_t172];
                          j = L[b];
                          for (y = 0; y < C; y++) {
                            _e232 = _ + y;
                            _e232 >= 0 && _e232 < r && (U[_e232] |= j[y]);
                          }
                        }
                      }
                    }
                  }
                  return m;
                }(e.mmr, s, e.template, o.width, o.height, e.defaultPixelValue, e.enableSkip, e.combinationOperator, e.gridWidth, e.gridHeight, e.gridOffsetX, e.gridOffsetY, e.gridVectorX, e.gridVectorY, c);
              this.drawBitmap(o, l);
            }
          }, {
            key: "onImmediateLosslessHalftoneRegion",
            value: function onImmediateLosslessHalftoneRegion() {
              this.onImmediateHalftoneRegion.apply(this, arguments);
            }
          }, {
            key: "onTables",
            value: function onTables(e, t, a, r) {
              var n = this.customTables;
              n || (this.customTables = n = {});
              n[e] = function decodeTablesSegment(e, t, a) {
                var r = e[t],
                  n = 4294967295 & (0, i.readUint32)(e, t + 1),
                  s = 4294967295 & (0, i.readUint32)(e, t + 5),
                  o = new Reader(e, t + 9, a),
                  c = 1 + (r >> 1 & 7),
                  l = 1 + (r >> 4 & 7),
                  h = [];
                var u,
                  d,
                  f = n;
                do {
                  u = o.readBits(c);
                  d = o.readBits(l);
                  h.push(new HuffmanLine([f, u, d, 0]));
                  f += 1 << d;
                } while (f < s);
                u = o.readBits(c);
                h.push(new HuffmanLine([n - 1, u, 32, 0, "lower"]));
                u = o.readBits(c);
                h.push(new HuffmanLine([s, u, 32, 0]));
                if (1 & r) {
                  u = o.readBits(c);
                  h.push(new HuffmanLine([u, 0]));
                }
                return new HuffmanTable(h, !1);
              }(t, a, r);
            }
          }]);
          return SimpleSegmentVisitor;
        }();
        var HuffmanLine = /*#__PURE__*/_createClass(function HuffmanLine(e) {
          _classCallCheck(this, HuffmanLine);
          if (2 === e.length) {
            this.isOOB = !0;
            this.rangeLow = 0;
            this.prefixLength = e[0];
            this.rangeLength = 0;
            this.prefixCode = e[1];
            this.isLowerRange = !1;
          } else {
            this.isOOB = !1;
            this.rangeLow = e[0];
            this.prefixLength = e[1];
            this.rangeLength = e[2];
            this.prefixCode = e[3];
            this.isLowerRange = "lower" === e[4];
          }
        });
        var HuffmanTreeNode = /*#__PURE__*/function () {
          function HuffmanTreeNode(e) {
            _classCallCheck(this, HuffmanTreeNode);
            this.children = [];
            if (e) {
              this.isLeaf = !0;
              this.rangeLength = e.rangeLength;
              this.rangeLow = e.rangeLow;
              this.isLowerRange = e.isLowerRange;
              this.isOOB = e.isOOB;
            } else this.isLeaf = !1;
          }
          _createClass(HuffmanTreeNode, [{
            key: "buildTree",
            value: function buildTree(e, t) {
              var a = e.prefixCode >> t & 1;
              if (t <= 0) this.children[a] = new HuffmanTreeNode(e);else {
                var _r97 = this.children[a];
                _r97 || (this.children[a] = _r97 = new HuffmanTreeNode(null));
                _r97.buildTree(e, t - 1);
              }
            }
          }, {
            key: "decodeNode",
            value: function decodeNode(e) {
              if (this.isLeaf) {
                if (this.isOOB) return null;
                var _t173 = e.readBits(this.rangeLength);
                return this.rangeLow + (this.isLowerRange ? -_t173 : _t173);
              }
              var t = this.children[e.readBit()];
              if (!t) throw new Jbig2Error("invalid Huffman data");
              return t.decodeNode(e);
            }
          }]);
          return HuffmanTreeNode;
        }();
        var HuffmanTable = /*#__PURE__*/function () {
          function HuffmanTable(e, t) {
            _classCallCheck(this, HuffmanTable);
            t || this.assignPrefixCodes(e);
            this.rootNode = new HuffmanTreeNode(null);
            for (var _t174 = 0, _a121 = e.length; _t174 < _a121; _t174++) {
              var _a122 = e[_t174];
              _a122.prefixLength > 0 && this.rootNode.buildTree(_a122, _a122.prefixLength - 1);
            }
          }
          _createClass(HuffmanTable, [{
            key: "decode",
            value: function decode(e) {
              return this.rootNode.decodeNode(e);
            }
          }, {
            key: "assignPrefixCodes",
            value: function assignPrefixCodes(e) {
              var t = e.length;
              var a = 0;
              for (var _r98 = 0; _r98 < t; _r98++) a = Math.max(a, e[_r98].prefixLength);
              var r = new Uint32Array(a + 1);
              for (var _a123 = 0; _a123 < t; _a123++) r[e[_a123].prefixLength]++;
              var i,
                n,
                s,
                o = 1,
                c = 0;
              r[0] = 0;
              for (; o <= a;) {
                c = c + r[o - 1] << 1;
                i = c;
                n = 0;
                for (; n < t;) {
                  s = e[n];
                  if (s.prefixLength === o) {
                    s.prefixCode = i;
                    i++;
                  }
                  n++;
                }
                o++;
              }
            }
          }]);
          return HuffmanTable;
        }();
        var p = {};
        function getStandardTable(e) {
          var t,
            a = p[e];
          if (a) return a;
          switch (e) {
            case 1:
              t = [[0, 1, 4, 0], [16, 2, 8, 2], [272, 3, 16, 6], [65808, 3, 32, 7]];
              break;
            case 2:
              t = [[0, 1, 0, 0], [1, 2, 0, 2], [2, 3, 0, 6], [3, 4, 3, 14], [11, 5, 6, 30], [75, 6, 32, 62], [6, 63]];
              break;
            case 3:
              t = [[-256, 8, 8, 254], [0, 1, 0, 0], [1, 2, 0, 2], [2, 3, 0, 6], [3, 4, 3, 14], [11, 5, 6, 30], [-257, 8, 32, 255, "lower"], [75, 7, 32, 126], [6, 62]];
              break;
            case 4:
              t = [[1, 1, 0, 0], [2, 2, 0, 2], [3, 3, 0, 6], [4, 4, 3, 14], [12, 5, 6, 30], [76, 5, 32, 31]];
              break;
            case 5:
              t = [[-255, 7, 8, 126], [1, 1, 0, 0], [2, 2, 0, 2], [3, 3, 0, 6], [4, 4, 3, 14], [12, 5, 6, 30], [-256, 7, 32, 127, "lower"], [76, 6, 32, 62]];
              break;
            case 6:
              t = [[-2048, 5, 10, 28], [-1024, 4, 9, 8], [-512, 4, 8, 9], [-256, 4, 7, 10], [-128, 5, 6, 29], [-64, 5, 5, 30], [-32, 4, 5, 11], [0, 2, 7, 0], [128, 3, 7, 2], [256, 3, 8, 3], [512, 4, 9, 12], [1024, 4, 10, 13], [-2049, 6, 32, 62, "lower"], [2048, 6, 32, 63]];
              break;
            case 7:
              t = [[-1024, 4, 9, 8], [-512, 3, 8, 0], [-256, 4, 7, 9], [-128, 5, 6, 26], [-64, 5, 5, 27], [-32, 4, 5, 10], [0, 4, 5, 11], [32, 5, 5, 28], [64, 5, 6, 29], [128, 4, 7, 12], [256, 3, 8, 1], [512, 3, 9, 2], [1024, 3, 10, 3], [-1025, 5, 32, 30, "lower"], [2048, 5, 32, 31]];
              break;
            case 8:
              t = [[-15, 8, 3, 252], [-7, 9, 1, 508], [-5, 8, 1, 253], [-3, 9, 0, 509], [-2, 7, 0, 124], [-1, 4, 0, 10], [0, 2, 1, 0], [2, 5, 0, 26], [3, 6, 0, 58], [4, 3, 4, 4], [20, 6, 1, 59], [22, 4, 4, 11], [38, 4, 5, 12], [70, 5, 6, 27], [134, 5, 7, 28], [262, 6, 7, 60], [390, 7, 8, 125], [646, 6, 10, 61], [-16, 9, 32, 510, "lower"], [1670, 9, 32, 511], [2, 1]];
              break;
            case 9:
              t = [[-31, 8, 4, 252], [-15, 9, 2, 508], [-11, 8, 2, 253], [-7, 9, 1, 509], [-5, 7, 1, 124], [-3, 4, 1, 10], [-1, 3, 1, 2], [1, 3, 1, 3], [3, 5, 1, 26], [5, 6, 1, 58], [7, 3, 5, 4], [39, 6, 2, 59], [43, 4, 5, 11], [75, 4, 6, 12], [139, 5, 7, 27], [267, 5, 8, 28], [523, 6, 8, 60], [779, 7, 9, 125], [1291, 6, 11, 61], [-32, 9, 32, 510, "lower"], [3339, 9, 32, 511], [2, 0]];
              break;
            case 10:
              t = [[-21, 7, 4, 122], [-5, 8, 0, 252], [-4, 7, 0, 123], [-3, 5, 0, 24], [-2, 2, 2, 0], [2, 5, 0, 25], [3, 6, 0, 54], [4, 7, 0, 124], [5, 8, 0, 253], [6, 2, 6, 1], [70, 5, 5, 26], [102, 6, 5, 55], [134, 6, 6, 56], [198, 6, 7, 57], [326, 6, 8, 58], [582, 6, 9, 59], [1094, 6, 10, 60], [2118, 7, 11, 125], [-22, 8, 32, 254, "lower"], [4166, 8, 32, 255], [2, 2]];
              break;
            case 11:
              t = [[1, 1, 0, 0], [2, 2, 1, 2], [4, 4, 0, 12], [5, 4, 1, 13], [7, 5, 1, 28], [9, 5, 2, 29], [13, 6, 2, 60], [17, 7, 2, 122], [21, 7, 3, 123], [29, 7, 4, 124], [45, 7, 5, 125], [77, 7, 6, 126], [141, 7, 32, 127]];
              break;
            case 12:
              t = [[1, 1, 0, 0], [2, 2, 0, 2], [3, 3, 1, 6], [5, 5, 0, 28], [6, 5, 1, 29], [8, 6, 1, 60], [10, 7, 0, 122], [11, 7, 1, 123], [13, 7, 2, 124], [17, 7, 3, 125], [25, 7, 4, 126], [41, 8, 5, 254], [73, 8, 32, 255]];
              break;
            case 13:
              t = [[1, 1, 0, 0], [2, 3, 0, 4], [3, 4, 0, 12], [4, 5, 0, 28], [5, 4, 1, 13], [7, 3, 3, 5], [15, 6, 1, 58], [17, 6, 2, 59], [21, 6, 3, 60], [29, 6, 4, 61], [45, 6, 5, 62], [77, 7, 6, 126], [141, 7, 32, 127]];
              break;
            case 14:
              t = [[-2, 3, 0, 4], [-1, 3, 0, 5], [0, 1, 0, 0], [1, 3, 0, 6], [2, 3, 0, 7]];
              break;
            case 15:
              t = [[-24, 7, 4, 124], [-8, 6, 2, 60], [-4, 5, 1, 28], [-2, 4, 0, 12], [-1, 3, 0, 4], [0, 1, 0, 0], [1, 3, 0, 5], [2, 4, 0, 13], [3, 5, 1, 29], [5, 6, 2, 61], [9, 7, 4, 125], [-25, 7, 32, 126, "lower"], [25, 7, 32, 127]];
              break;
            default:
              throw new Jbig2Error("standard table B.".concat(e, " does not exist"));
          }
          for (var _e233 = 0, _a124 = t.length; _e233 < _a124; _e233++) t[_e233] = new HuffmanLine(t[_e233]);
          a = new HuffmanTable(t, !0);
          p[e] = a;
          return a;
        }
        var Reader = /*#__PURE__*/function () {
          function Reader(e, t, a) {
            _classCallCheck(this, Reader);
            this.data = e;
            this.start = t;
            this.end = a;
            this.position = t;
            this.shift = -1;
            this.currentByte = 0;
          }
          _createClass(Reader, [{
            key: "readBit",
            value: function readBit() {
              if (this.shift < 0) {
                if (this.position >= this.end) throw new Jbig2Error("end of data while reading bit");
                this.currentByte = this.data[this.position++];
                this.shift = 7;
              }
              var e = this.currentByte >> this.shift & 1;
              this.shift--;
              return e;
            }
          }, {
            key: "readBits",
            value: function readBits(e) {
              var t,
                a = 0;
              for (t = e - 1; t >= 0; t--) a |= this.readBit() << t;
              return a;
            }
          }, {
            key: "byteAlign",
            value: function byteAlign() {
              this.shift = -1;
            }
          }, {
            key: "next",
            value: function next() {
              return this.position >= this.end ? -1 : this.data[this.position++];
            }
          }]);
          return Reader;
        }();
        function getCustomHuffmanTable(e, t, a) {
          var r = 0;
          for (var _i86 = 0, _n56 = t.length; _i86 < _n56; _i86++) {
            var _n57 = a[t[_i86]];
            if (_n57) {
              if (e === r) return _n57;
              r++;
            }
          }
          throw new Jbig2Error("can't find custom Huffman table");
        }
        function readUncompressedBitmap(e, t, a) {
          var r = [];
          for (var _i87 = 0; _i87 < a; _i87++) {
            var _a125 = new Uint8Array(t);
            r.push(_a125);
            for (var _r99 = 0; _r99 < t; _r99++) _a125[_r99] = e.readBit();
            e.byteAlign();
          }
          return r;
        }
        function decodeMMRBitmap(e, t, a, r) {
          var i = {
              K: -1,
              Columns: t,
              Rows: a,
              BlackIs1: !0,
              EndOfBlock: r
            },
            n = new s.CCITTFaxDecoder(e, i),
            o = [];
          var c,
            l = !1;
          for (var _e234 = 0; _e234 < a; _e234++) {
            var _e235 = new Uint8Array(t);
            o.push(_e235);
            var _a126 = -1;
            for (var _r100 = 0; _r100 < t; _r100++) {
              if (_a126 < 0) {
                c = n.readNextChar();
                if (-1 === c) {
                  c = 0;
                  l = !0;
                }
                _a126 = 7;
              }
              _e235[_r100] = c >> _a126 & 1;
              _a126--;
            }
          }
          if (r && !l) {
            var _e236 = 5;
            for (var _t175 = 0; _t175 < _e236 && -1 !== n.readNextChar(); _t175++);
          }
          return o;
        }
        t.Jbig2Image = /*#__PURE__*/function () {
          function Jbig2Image() {
            _classCallCheck(this, Jbig2Image);
          }
          _createClass(Jbig2Image, [{
            key: "parseChunks",
            value: function parseChunks(e) {
              return function parseJbig2Chunks(e) {
                var t = new SimpleSegmentVisitor();
                for (var _a127 = 0, _r101 = e.length; _a127 < _r101; _a127++) {
                  var _r102 = e[_a127];
                  processSegments(readSegments({}, _r102.data, _r102.start, _r102.end), t);
                }
                return t.buffer;
              }(e);
            }
          }, {
            key: "parse",
            value: function parse(e) {
              throw new Error("Not implemented: Jbig2Image.parse");
            }
          }]);
          return Jbig2Image;
        }();
      }, function (e, t) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.ArithmeticDecoder = void 0;
        var a = [{
          qe: 22017,
          nmps: 1,
          nlps: 1,
          switchFlag: 1
        }, {
          qe: 13313,
          nmps: 2,
          nlps: 6,
          switchFlag: 0
        }, {
          qe: 6145,
          nmps: 3,
          nlps: 9,
          switchFlag: 0
        }, {
          qe: 2753,
          nmps: 4,
          nlps: 12,
          switchFlag: 0
        }, {
          qe: 1313,
          nmps: 5,
          nlps: 29,
          switchFlag: 0
        }, {
          qe: 545,
          nmps: 38,
          nlps: 33,
          switchFlag: 0
        }, {
          qe: 22017,
          nmps: 7,
          nlps: 6,
          switchFlag: 1
        }, {
          qe: 21505,
          nmps: 8,
          nlps: 14,
          switchFlag: 0
        }, {
          qe: 18433,
          nmps: 9,
          nlps: 14,
          switchFlag: 0
        }, {
          qe: 14337,
          nmps: 10,
          nlps: 14,
          switchFlag: 0
        }, {
          qe: 12289,
          nmps: 11,
          nlps: 17,
          switchFlag: 0
        }, {
          qe: 9217,
          nmps: 12,
          nlps: 18,
          switchFlag: 0
        }, {
          qe: 7169,
          nmps: 13,
          nlps: 20,
          switchFlag: 0
        }, {
          qe: 5633,
          nmps: 29,
          nlps: 21,
          switchFlag: 0
        }, {
          qe: 22017,
          nmps: 15,
          nlps: 14,
          switchFlag: 1
        }, {
          qe: 21505,
          nmps: 16,
          nlps: 14,
          switchFlag: 0
        }, {
          qe: 20737,
          nmps: 17,
          nlps: 15,
          switchFlag: 0
        }, {
          qe: 18433,
          nmps: 18,
          nlps: 16,
          switchFlag: 0
        }, {
          qe: 14337,
          nmps: 19,
          nlps: 17,
          switchFlag: 0
        }, {
          qe: 13313,
          nmps: 20,
          nlps: 18,
          switchFlag: 0
        }, {
          qe: 12289,
          nmps: 21,
          nlps: 19,
          switchFlag: 0
        }, {
          qe: 10241,
          nmps: 22,
          nlps: 19,
          switchFlag: 0
        }, {
          qe: 9217,
          nmps: 23,
          nlps: 20,
          switchFlag: 0
        }, {
          qe: 8705,
          nmps: 24,
          nlps: 21,
          switchFlag: 0
        }, {
          qe: 7169,
          nmps: 25,
          nlps: 22,
          switchFlag: 0
        }, {
          qe: 6145,
          nmps: 26,
          nlps: 23,
          switchFlag: 0
        }, {
          qe: 5633,
          nmps: 27,
          nlps: 24,
          switchFlag: 0
        }, {
          qe: 5121,
          nmps: 28,
          nlps: 25,
          switchFlag: 0
        }, {
          qe: 4609,
          nmps: 29,
          nlps: 26,
          switchFlag: 0
        }, {
          qe: 4353,
          nmps: 30,
          nlps: 27,
          switchFlag: 0
        }, {
          qe: 2753,
          nmps: 31,
          nlps: 28,
          switchFlag: 0
        }, {
          qe: 2497,
          nmps: 32,
          nlps: 29,
          switchFlag: 0
        }, {
          qe: 2209,
          nmps: 33,
          nlps: 30,
          switchFlag: 0
        }, {
          qe: 1313,
          nmps: 34,
          nlps: 31,
          switchFlag: 0
        }, {
          qe: 1089,
          nmps: 35,
          nlps: 32,
          switchFlag: 0
        }, {
          qe: 673,
          nmps: 36,
          nlps: 33,
          switchFlag: 0
        }, {
          qe: 545,
          nmps: 37,
          nlps: 34,
          switchFlag: 0
        }, {
          qe: 321,
          nmps: 38,
          nlps: 35,
          switchFlag: 0
        }, {
          qe: 273,
          nmps: 39,
          nlps: 36,
          switchFlag: 0
        }, {
          qe: 133,
          nmps: 40,
          nlps: 37,
          switchFlag: 0
        }, {
          qe: 73,
          nmps: 41,
          nlps: 38,
          switchFlag: 0
        }, {
          qe: 37,
          nmps: 42,
          nlps: 39,
          switchFlag: 0
        }, {
          qe: 21,
          nmps: 43,
          nlps: 40,
          switchFlag: 0
        }, {
          qe: 9,
          nmps: 44,
          nlps: 41,
          switchFlag: 0
        }, {
          qe: 5,
          nmps: 45,
          nlps: 42,
          switchFlag: 0
        }, {
          qe: 1,
          nmps: 45,
          nlps: 43,
          switchFlag: 0
        }, {
          qe: 22017,
          nmps: 46,
          nlps: 46,
          switchFlag: 0
        }];
        t.ArithmeticDecoder = /*#__PURE__*/function () {
          function ArithmeticDecoder(e, t, a) {
            _classCallCheck(this, ArithmeticDecoder);
            this.data = e;
            this.bp = t;
            this.dataEnd = a;
            this.chigh = e[t];
            this.clow = 0;
            this.byteIn();
            this.chigh = this.chigh << 7 & 65535 | this.clow >> 9 & 127;
            this.clow = this.clow << 7 & 65535;
            this.ct -= 7;
            this.a = 32768;
          }
          _createClass(ArithmeticDecoder, [{
            key: "byteIn",
            value: function byteIn() {
              var e = this.data;
              var t = this.bp;
              if (255 === e[t]) {
                if (e[t + 1] > 143) {
                  this.clow += 65280;
                  this.ct = 8;
                } else {
                  t++;
                  this.clow += e[t] << 9;
                  this.ct = 7;
                  this.bp = t;
                }
              } else {
                t++;
                this.clow += t < this.dataEnd ? e[t] << 8 : 65280;
                this.ct = 8;
                this.bp = t;
              }
              if (this.clow > 65535) {
                this.chigh += this.clow >> 16;
                this.clow &= 65535;
              }
            }
          }, {
            key: "readBit",
            value: function readBit(e, t) {
              var r = e[t] >> 1,
                i = 1 & e[t];
              var n = a[r],
                s = n.qe;
              var o,
                c = this.a - s;
              if (this.chigh < s) {
                if (c < s) {
                  c = s;
                  o = i;
                  r = n.nmps;
                } else {
                  c = s;
                  o = 1 ^ i;
                  1 === n.switchFlag && (i = o);
                  r = n.nlps;
                }
              } else {
                this.chigh -= s;
                if (0 != (32768 & c)) {
                  this.a = c;
                  return i;
                }
                if (c < s) {
                  o = 1 ^ i;
                  1 === n.switchFlag && (i = o);
                  r = n.nlps;
                } else {
                  o = i;
                  r = n.nmps;
                }
              }
              do {
                0 === this.ct && this.byteIn();
                c <<= 1;
                this.chigh = this.chigh << 1 & 65535 | this.clow >> 15 & 1;
                this.clow = this.clow << 1 & 65535;
                this.ct--;
              } while (0 == (32768 & c));
              this.a = c;
              e[t] = r << 1 | i;
              return o;
            }
          }]);
          return ArithmeticDecoder;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.JpegStream = void 0;
        var r = a(18),
          i = a(4),
          n = a(27),
          s = a(2);
        var JpegStream = /*#__PURE__*/function (_r$DecodeStream4) {
          _inherits(JpegStream, _r$DecodeStream4);
          var _super61 = _createSuper(JpegStream);
          function JpegStream(e, t, a) {
            var _this71;
            _classCallCheck(this, JpegStream);
            var r;
            for (; -1 !== (r = e.getByte());) if (255 === r) {
              e.skip(-1);
              break;
            }
            _this71 = _super61.call(this, t);
            _this71.stream = e;
            _this71.dict = e.dict;
            _this71.maybeLength = t;
            _this71.params = a;
            return _this71;
          }
          _createClass(JpegStream, [{
            key: "bytes",
            get: function get() {
              return (0, s.shadow)(this, "bytes", this.stream.getBytes(this.maybeLength));
            }
          }, {
            key: "ensureBuffer",
            value: function ensureBuffer(e) {}
          }, {
            key: "readBlock",
            value: function readBlock() {
              if (this.eof) return;
              var e = {
                  decodeTransform: void 0,
                  colorTransform: void 0
                },
                t = this.dict.getArray("D", "Decode");
              if ((this.forceRGBA || this.forceRGB) && Array.isArray(t)) {
                var _a128 = this.dict.get("BPC", "BitsPerComponent") || 8,
                  _r103 = t.length,
                  _i88 = new Int32Array(_r103);
                var _n58 = !1;
                var _s45 = (1 << _a128) - 1;
                for (var _e237 = 0; _e237 < _r103; _e237 += 2) {
                  _i88[_e237] = 256 * (t[_e237 + 1] - t[_e237]) | 0;
                  _i88[_e237 + 1] = t[_e237] * _s45 | 0;
                  256 === _i88[_e237] && 0 === _i88[_e237 + 1] || (_n58 = !0);
                }
                _n58 && (e.decodeTransform = _i88);
              }
              if (this.params instanceof i.Dict) {
                var _t176 = this.params.get("ColorTransform");
                Number.isInteger(_t176) && (e.colorTransform = _t176);
              }
              var a = new n.JpegImage(e);
              a.parse(this.bytes);
              var r = a.getData({
                width: this.drawWidth,
                height: this.drawHeight,
                forceRGBA: this.forceRGBA,
                forceRGB: this.forceRGB,
                isSourcePDF: !0
              });
              this.buffer = r;
              this.bufferLength = r.length;
              this.eof = !0;
            }
          }]);
          return JpegStream;
        }(r.DecodeStream);
        t.JpegStream = JpegStream;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.JpegImage = void 0;
        var r = a(2),
          i = a(28),
          n = a(3);
        var JpegError = /*#__PURE__*/function (_r$BaseException6) {
          _inherits(JpegError, _r$BaseException6);
          var _super62 = _createSuper(JpegError);
          function JpegError(e) {
            _classCallCheck(this, JpegError);
            return _super62.call(this, "JPEG error: ".concat(e), "JpegError");
          }
          return _createClass(JpegError);
        }(r.BaseException);
        var DNLMarkerError = /*#__PURE__*/function (_r$BaseException7) {
          _inherits(DNLMarkerError, _r$BaseException7);
          var _super63 = _createSuper(DNLMarkerError);
          function DNLMarkerError(e, t) {
            var _this72;
            _classCallCheck(this, DNLMarkerError);
            _this72 = _super63.call(this, e, "DNLMarkerError");
            _this72.scanLines = t;
            return _this72;
          }
          return _createClass(DNLMarkerError);
        }(r.BaseException);
        var EOIMarkerError = /*#__PURE__*/function (_r$BaseException8) {
          _inherits(EOIMarkerError, _r$BaseException8);
          var _super64 = _createSuper(EOIMarkerError);
          function EOIMarkerError(e) {
            _classCallCheck(this, EOIMarkerError);
            return _super64.call(this, e, "EOIMarkerError");
          }
          return _createClass(EOIMarkerError);
        }(r.BaseException);
        var s = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]),
          o = 4017,
          c = 799,
          l = 3406,
          h = 2276,
          u = 1567,
          d = 3784,
          f = 5793,
          g = 2896;
        function buildHuffmanTable(e, t) {
          var a,
            r,
            i = 0,
            n = 16;
          for (; n > 0 && !e[n - 1];) n--;
          var s = [{
            children: [],
            index: 0
          }];
          var o,
            c = s[0];
          for (a = 0; a < n; a++) {
            for (r = 0; r < e[a]; r++) {
              c = s.pop();
              c.children[c.index] = t[i];
              for (; c.index > 0;) c = s.pop();
              c.index++;
              s.push(c);
              for (; s.length <= a;) {
                s.push(o = {
                  children: [],
                  index: 0
                });
                c.children[c.index] = o.children;
                c = o;
              }
              i++;
            }
            if (a + 1 < n) {
              s.push(o = {
                children: [],
                index: 0
              });
              c.children[c.index] = o.children;
              c = o;
            }
          }
          return s[0].children;
        }
        function getBlockBufferOffset(e, t, a) {
          return 64 * ((e.blocksPerLine + 1) * t + a);
        }
        function decodeScan(e, t, a, i, o, c, l, h, u) {
          var d = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : !1;
          var f = a.mcusPerLine,
            g = a.progressive,
            p = t;
          var m = 0,
            b = 0;
          function readBit() {
            if (b > 0) {
              b--;
              return m >> b & 1;
            }
            m = e[t++];
            if (255 === m) {
              var _r104 = e[t++];
              if (_r104) {
                if (220 === _r104 && d) {
                  t += 2;
                  var _r105 = (0, n.readUint16)(e, t);
                  t += 2;
                  if (_r105 > 0 && _r105 !== a.scanLines) throw new DNLMarkerError("Found DNL marker (0xFFDC) while parsing scan data", _r105);
                } else if (217 === _r104) {
                  if (d) {
                    var _e238 = x * (8 === a.precision ? 8 : 0);
                    if (_e238 > 0 && Math.round(a.scanLines / _e238) >= 5) throw new DNLMarkerError("Found EOI marker (0xFFD9) while parsing scan data, possibly caused by incorrect `scanLines` parameter", _e238);
                  }
                  throw new EOIMarkerError("Found EOI marker (0xFFD9) while parsing scan data");
                }
                throw new JpegError("unexpected marker ".concat((m << 8 | _r104).toString(16)));
              }
            }
            b = 7;
            return m >>> 7;
          }
          function decodeHuffman(e) {
            var t = e;
            for (;;) {
              t = t[readBit()];
              switch (typeof t) {
                case "number":
                  return t;
                case "object":
                  continue;
              }
              throw new JpegError("invalid huffman sequence");
            }
          }
          function receive(e) {
            var t = 0;
            for (; e > 0;) {
              t = t << 1 | readBit();
              e--;
            }
            return t;
          }
          function receiveAndExtend(e) {
            if (1 === e) return 1 === readBit() ? 1 : -1;
            var t = receive(e);
            return t >= 1 << e - 1 ? t : t + (-1 << e) + 1;
          }
          var y = 0;
          var w,
            S = 0;
          var x = 0;
          function decodeMcu(e, t, a, r, i) {
            var n = a % f;
            x = (a / f | 0) * e.v + r;
            var s = n * e.h + i;
            t(e, getBlockBufferOffset(e, x, s));
          }
          function decodeBlock(e, t, a) {
            x = a / e.blocksPerLine | 0;
            var r = a % e.blocksPerLine;
            t(e, getBlockBufferOffset(e, x, r));
          }
          var C = i.length;
          var k, v, F, O, T, M;
          M = g ? 0 === c ? 0 === h ? function decodeDCFirst(e, t) {
            var a = decodeHuffman(e.huffmanTableDC),
              r = 0 === a ? 0 : receiveAndExtend(a) << u;
            e.blockData[t] = e.pred += r;
          } : function decodeDCSuccessive(e, t) {
            e.blockData[t] |= readBit() << u;
          } : 0 === h ? function decodeACFirst(e, t) {
            if (y > 0) {
              y--;
              return;
            }
            var a = c;
            var r = l;
            for (; a <= r;) {
              var _r106 = decodeHuffman(e.huffmanTableAC),
                _i89 = 15 & _r106,
                _n59 = _r106 >> 4;
              if (0 === _i89) {
                if (_n59 < 15) {
                  y = receive(_n59) + (1 << _n59) - 1;
                  break;
                }
                a += 16;
                continue;
              }
              a += _n59;
              var _o30 = s[a];
              e.blockData[t + _o30] = receiveAndExtend(_i89) * (1 << u);
              a++;
            }
          } : function decodeACSuccessive(e, t) {
            var a = c;
            var r = l;
            var i,
              n,
              o = 0;
            for (; a <= r;) {
              var _r107 = t + s[a],
                _c18 = e.blockData[_r107] < 0 ? -1 : 1;
              switch (S) {
                case 0:
                  n = decodeHuffman(e.huffmanTableAC);
                  i = 15 & n;
                  o = n >> 4;
                  if (0 === i) {
                    if (o < 15) {
                      y = receive(o) + (1 << o);
                      S = 4;
                    } else {
                      o = 16;
                      S = 1;
                    }
                  } else {
                    if (1 !== i) throw new JpegError("invalid ACn encoding");
                    w = receiveAndExtend(i);
                    S = o ? 2 : 3;
                  }
                  continue;
                case 1:
                case 2:
                  if (e.blockData[_r107]) e.blockData[_r107] += _c18 * (readBit() << u);else {
                    o--;
                    0 === o && (S = 2 === S ? 3 : 0);
                  }
                  break;
                case 3:
                  if (e.blockData[_r107]) e.blockData[_r107] += _c18 * (readBit() << u);else {
                    e.blockData[_r107] = w << u;
                    S = 0;
                  }
                  break;
                case 4:
                  e.blockData[_r107] && (e.blockData[_r107] += _c18 * (readBit() << u));
              }
              a++;
            }
            if (4 === S) {
              y--;
              0 === y && (S = 0);
            }
          } : function decodeBaseline(e, t) {
            var a = decodeHuffman(e.huffmanTableDC),
              r = 0 === a ? 0 : receiveAndExtend(a);
            e.blockData[t] = e.pred += r;
            var i = 1;
            for (; i < 64;) {
              var _a129 = decodeHuffman(e.huffmanTableAC),
                _r108 = 15 & _a129,
                _n60 = _a129 >> 4;
              if (0 === _r108) {
                if (_n60 < 15) break;
                i += 16;
                continue;
              }
              i += _n60;
              var _o31 = s[i];
              e.blockData[t + _o31] = receiveAndExtend(_r108);
              i++;
            }
          };
          var E,
            D,
            N,
            R,
            L = 0;
          D = 1 === C ? i[0].blocksPerLine * i[0].blocksPerColumn : f * a.mcusPerColumn;
          for (; L <= D;) {
            var _a130 = o ? Math.min(D - L, o) : D;
            if (_a130 > 0) {
              for (v = 0; v < C; v++) i[v].pred = 0;
              y = 0;
              if (1 === C) {
                k = i[0];
                for (T = 0; T < _a130; T++) {
                  decodeBlock(k, M, L);
                  L++;
                }
              } else for (T = 0; T < _a130; T++) {
                for (v = 0; v < C; v++) {
                  k = i[v];
                  N = k.h;
                  R = k.v;
                  for (F = 0; F < R; F++) for (O = 0; O < N; O++) decodeMcu(k, M, L, F, O);
                }
                L++;
              }
            }
            b = 0;
            E = findNextFileMarker(e, t);
            if (!E) break;
            if (E.invalid) {
              var _e239 = _a130 > 0 ? "unexpected" : "excessive";
              (0, r.warn)("decodeScan - ".concat(_e239, " MCU data, current marker is: ").concat(E.invalid));
              t = E.offset;
            }
            if (!(E.marker >= 65488 && E.marker <= 65495)) break;
            t += 2;
          }
          return t - p;
        }
        function quantizeAndInverse(e, t, a) {
          var r = e.quantizationTable,
            i = e.blockData;
          var n, s, p, m, b, y, w, S, x, C, k, v, F, O, T, M, E;
          if (!r) throw new JpegError("missing required Quantization Table.");
          for (var _e240 = 0; _e240 < 64; _e240 += 8) {
            x = i[t + _e240];
            C = i[t + _e240 + 1];
            k = i[t + _e240 + 2];
            v = i[t + _e240 + 3];
            F = i[t + _e240 + 4];
            O = i[t + _e240 + 5];
            T = i[t + _e240 + 6];
            M = i[t + _e240 + 7];
            x *= r[_e240];
            if (0 != (C | k | v | F | O | T | M)) {
              C *= r[_e240 + 1];
              k *= r[_e240 + 2];
              v *= r[_e240 + 3];
              F *= r[_e240 + 4];
              O *= r[_e240 + 5];
              T *= r[_e240 + 6];
              M *= r[_e240 + 7];
              n = f * x + 128 >> 8;
              s = f * F + 128 >> 8;
              p = k;
              m = T;
              b = g * (C - M) + 128 >> 8;
              S = g * (C + M) + 128 >> 8;
              y = v << 4;
              w = O << 4;
              n = n + s + 1 >> 1;
              s = n - s;
              E = p * d + m * u + 128 >> 8;
              p = p * u - m * d + 128 >> 8;
              m = E;
              b = b + w + 1 >> 1;
              w = b - w;
              S = S + y + 1 >> 1;
              y = S - y;
              n = n + m + 1 >> 1;
              m = n - m;
              s = s + p + 1 >> 1;
              p = s - p;
              E = b * h + S * l + 2048 >> 12;
              b = b * l - S * h + 2048 >> 12;
              S = E;
              E = y * c + w * o + 2048 >> 12;
              y = y * o - w * c + 2048 >> 12;
              w = E;
              a[_e240] = n + S;
              a[_e240 + 7] = n - S;
              a[_e240 + 1] = s + w;
              a[_e240 + 6] = s - w;
              a[_e240 + 2] = p + y;
              a[_e240 + 5] = p - y;
              a[_e240 + 3] = m + b;
              a[_e240 + 4] = m - b;
            } else {
              E = f * x + 512 >> 10;
              a[_e240] = E;
              a[_e240 + 1] = E;
              a[_e240 + 2] = E;
              a[_e240 + 3] = E;
              a[_e240 + 4] = E;
              a[_e240 + 5] = E;
              a[_e240 + 6] = E;
              a[_e240 + 7] = E;
            }
          }
          for (var _e241 = 0; _e241 < 8; ++_e241) {
            x = a[_e241];
            C = a[_e241 + 8];
            k = a[_e241 + 16];
            v = a[_e241 + 24];
            F = a[_e241 + 32];
            O = a[_e241 + 40];
            T = a[_e241 + 48];
            M = a[_e241 + 56];
            if (0 != (C | k | v | F | O | T | M)) {
              n = f * x + 2048 >> 12;
              s = f * F + 2048 >> 12;
              p = k;
              m = T;
              b = g * (C - M) + 2048 >> 12;
              S = g * (C + M) + 2048 >> 12;
              y = v;
              w = O;
              n = 4112 + (n + s + 1 >> 1);
              s = n - s;
              E = p * d + m * u + 2048 >> 12;
              p = p * u - m * d + 2048 >> 12;
              m = E;
              b = b + w + 1 >> 1;
              w = b - w;
              S = S + y + 1 >> 1;
              y = S - y;
              n = n + m + 1 >> 1;
              m = n - m;
              s = s + p + 1 >> 1;
              p = s - p;
              E = b * h + S * l + 2048 >> 12;
              b = b * l - S * h + 2048 >> 12;
              S = E;
              E = y * c + w * o + 2048 >> 12;
              y = y * o - w * c + 2048 >> 12;
              w = E;
              x = n + S;
              M = n - S;
              C = s + w;
              T = s - w;
              k = p + y;
              O = p - y;
              v = m + b;
              F = m - b;
              x < 16 ? x = 0 : x >= 4080 ? x = 255 : x >>= 4;
              C < 16 ? C = 0 : C >= 4080 ? C = 255 : C >>= 4;
              k < 16 ? k = 0 : k >= 4080 ? k = 255 : k >>= 4;
              v < 16 ? v = 0 : v >= 4080 ? v = 255 : v >>= 4;
              F < 16 ? F = 0 : F >= 4080 ? F = 255 : F >>= 4;
              O < 16 ? O = 0 : O >= 4080 ? O = 255 : O >>= 4;
              T < 16 ? T = 0 : T >= 4080 ? T = 255 : T >>= 4;
              M < 16 ? M = 0 : M >= 4080 ? M = 255 : M >>= 4;
              i[t + _e241] = x;
              i[t + _e241 + 8] = C;
              i[t + _e241 + 16] = k;
              i[t + _e241 + 24] = v;
              i[t + _e241 + 32] = F;
              i[t + _e241 + 40] = O;
              i[t + _e241 + 48] = T;
              i[t + _e241 + 56] = M;
            } else {
              E = f * x + 8192 >> 14;
              E = E < -2040 ? 0 : E >= 2024 ? 255 : E + 2056 >> 4;
              i[t + _e241] = E;
              i[t + _e241 + 8] = E;
              i[t + _e241 + 16] = E;
              i[t + _e241 + 24] = E;
              i[t + _e241 + 32] = E;
              i[t + _e241 + 40] = E;
              i[t + _e241 + 48] = E;
              i[t + _e241 + 56] = E;
            }
          }
        }
        function buildComponentData(e, t) {
          var a = t.blocksPerLine,
            r = t.blocksPerColumn,
            i = new Int16Array(64);
          for (var _e242 = 0; _e242 < r; _e242++) for (var _r109 = 0; _r109 < a; _r109++) {
            quantizeAndInverse(t, getBlockBufferOffset(t, _e242, _r109), i);
          }
          return t.blockData;
        }
        function findNextFileMarker(e, t) {
          var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : t;
          var r = e.length - 1;
          var i = a < t ? a : t;
          if (t >= r) return null;
          var s = (0, n.readUint16)(e, t);
          if (s >= 65472 && s <= 65534) return {
            invalid: null,
            marker: s,
            offset: t
          };
          var o = (0, n.readUint16)(e, i);
          for (; !(o >= 65472 && o <= 65534);) {
            if (++i >= r) return null;
            o = (0, n.readUint16)(e, i);
          }
          return {
            invalid: s.toString(16),
            marker: o,
            offset: i
          };
        }
        t.JpegImage = /*#__PURE__*/function () {
          function JpegImage() {
            var _ref59 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
              _ref59$decodeTransfor = _ref59.decodeTransform,
              e = _ref59$decodeTransfor === void 0 ? null : _ref59$decodeTransfor,
              _ref59$colorTransform = _ref59.colorTransform,
              t = _ref59$colorTransform === void 0 ? -1 : _ref59$colorTransform;
            _classCallCheck(this, JpegImage);
            this._decodeTransform = e;
            this._colorTransform = t;
          }
          _createClass(JpegImage, [{
            key: "parse",
            value: function parse(e) {
              var _ref60 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                _ref60$dnlScanLines = _ref60.dnlScanLines,
                t = _ref60$dnlScanLines === void 0 ? null : _ref60$dnlScanLines;
              function readDataBlock() {
                var t = (0, n.readUint16)(e, o);
                o += 2;
                var a = o + t - 2;
                var i = findNextFileMarker(e, a, o);
                if (i && i.invalid) {
                  (0, r.warn)("readDataBlock - incorrect length, current marker is: " + i.invalid);
                  a = i.offset;
                }
                var s = e.subarray(o, a);
                o += s.length;
                return s;
              }
              function prepareComponents(e) {
                var t = Math.ceil(e.samplesPerLine / 8 / e.maxH),
                  a = Math.ceil(e.scanLines / 8 / e.maxV);
                var _iterator86 = _createForOfIteratorHelper(e.components),
                  _step86;
                try {
                  for (_iterator86.s(); !(_step86 = _iterator86.n()).done;) {
                    var _r110 = _step86.value;
                    var _i90 = Math.ceil(Math.ceil(e.samplesPerLine / 8) * _r110.h / e.maxH),
                      _n61 = Math.ceil(Math.ceil(e.scanLines / 8) * _r110.v / e.maxV),
                      _s46 = t * _r110.h,
                      _o32 = 64 * (a * _r110.v) * (_s46 + 1);
                    _r110.blockData = new Int16Array(_o32);
                    _r110.blocksPerLine = _i90;
                    _r110.blocksPerColumn = _n61;
                  }
                } catch (err) {
                  _iterator86.e(err);
                } finally {
                  _iterator86.f();
                }
                e.mcusPerLine = t;
                e.mcusPerColumn = a;
              }
              var a,
                i,
                o = 0,
                c = null,
                l = null,
                h = 0;
              var u = [],
                d = [],
                f = [];
              var g = (0, n.readUint16)(e, o);
              o += 2;
              if (65496 !== g) throw new JpegError("SOI not found");
              g = (0, n.readUint16)(e, o);
              o += 2;
              e: for (; 65497 !== g;) {
                var _p5 = void 0,
                  m = void 0,
                  b = void 0;
                switch (g) {
                  case 65504:
                  case 65505:
                  case 65506:
                  case 65507:
                  case 65508:
                  case 65509:
                  case 65510:
                  case 65511:
                  case 65512:
                  case 65513:
                  case 65514:
                  case 65515:
                  case 65516:
                  case 65517:
                  case 65518:
                  case 65519:
                  case 65534:
                    var y = readDataBlock();
                    65504 === g && 74 === y[0] && 70 === y[1] && 73 === y[2] && 70 === y[3] && 0 === y[4] && (c = {
                      version: {
                        major: y[5],
                        minor: y[6]
                      },
                      densityUnits: y[7],
                      xDensity: y[8] << 8 | y[9],
                      yDensity: y[10] << 8 | y[11],
                      thumbWidth: y[12],
                      thumbHeight: y[13],
                      thumbData: y.subarray(14, 14 + 3 * y[12] * y[13])
                    });
                    65518 === g && 65 === y[0] && 100 === y[1] && 111 === y[2] && 98 === y[3] && 101 === y[4] && (l = {
                      version: y[5] << 8 | y[6],
                      flags0: y[7] << 8 | y[8],
                      flags1: y[9] << 8 | y[10],
                      transformCode: y[11]
                    });
                    break;
                  case 65499:
                    var w = (0, n.readUint16)(e, o);
                    o += 2;
                    var S = w + o - 2;
                    var x = void 0;
                    for (; o < S;) {
                      var _t177 = e[o++],
                        _a131 = new Uint16Array(64);
                      if (_t177 >> 4 == 0) for (m = 0; m < 64; m++) {
                        x = s[m];
                        _a131[x] = e[o++];
                      } else {
                        if (_t177 >> 4 != 1) throw new JpegError("DQT - invalid table spec");
                        for (m = 0; m < 64; m++) {
                          x = s[m];
                          _a131[x] = (0, n.readUint16)(e, o);
                          o += 2;
                        }
                      }
                      u[15 & _t177] = _a131;
                    }
                    break;
                  case 65472:
                  case 65473:
                  case 65474:
                    if (a) throw new JpegError("Only single frame JPEGs supported");
                    o += 2;
                    a = {};
                    a.extended = 65473 === g;
                    a.progressive = 65474 === g;
                    a.precision = e[o++];
                    var C = (0, n.readUint16)(e, o);
                    o += 2;
                    a.scanLines = t || C;
                    a.samplesPerLine = (0, n.readUint16)(e, o);
                    o += 2;
                    a.components = [];
                    a.componentIds = {};
                    var k = e[o++];
                    var v = 0,
                      F = 0;
                    for (_p5 = 0; _p5 < k; _p5++) {
                      var _t178 = e[o],
                        _r111 = e[o + 1] >> 4,
                        _i91 = 15 & e[o + 1];
                      v < _r111 && (v = _r111);
                      F < _i91 && (F = _i91);
                      var _n62 = e[o + 2];
                      b = a.components.push({
                        h: _r111,
                        v: _i91,
                        quantizationId: _n62,
                        quantizationTable: null
                      });
                      a.componentIds[_t178] = b - 1;
                      o += 3;
                    }
                    a.maxH = v;
                    a.maxV = F;
                    prepareComponents(a);
                    break;
                  case 65476:
                    var O = (0, n.readUint16)(e, o);
                    o += 2;
                    for (_p5 = 2; _p5 < O;) {
                      var _t179 = e[o++],
                        _a132 = new Uint8Array(16);
                      var _r112 = 0;
                      for (m = 0; m < 16; m++, o++) _r112 += _a132[m] = e[o];
                      var _i92 = new Uint8Array(_r112);
                      for (m = 0; m < _r112; m++, o++) _i92[m] = e[o];
                      _p5 += 17 + _r112;
                      (_t179 >> 4 == 0 ? f : d)[15 & _t179] = buildHuffmanTable(_a132, _i92);
                    }
                    break;
                  case 65501:
                    o += 2;
                    i = (0, n.readUint16)(e, o);
                    o += 2;
                    break;
                  case 65498:
                    var T = 1 == ++h && !t;
                    o += 2;
                    var M = e[o++],
                      E = [];
                    for (_p5 = 0; _p5 < M; _p5++) {
                      var _t180 = e[o++],
                        _r113 = a.componentIds[_t180],
                        _i93 = a.components[_r113];
                      _i93.index = _t180;
                      var _n63 = e[o++];
                      _i93.huffmanTableDC = f[_n63 >> 4];
                      _i93.huffmanTableAC = d[15 & _n63];
                      E.push(_i93);
                    }
                    var D = e[o++],
                      N = e[o++],
                      R = e[o++];
                    try {
                      var _t181 = decodeScan(e, o, a, E, i, D, N, R >> 4, 15 & R, T);
                      o += _t181;
                    } catch (t) {
                      if (t instanceof DNLMarkerError) {
                        (0, r.warn)("".concat(t.message, " -- attempting to re-parse the JPEG image."));
                        return this.parse(e, {
                          dnlScanLines: t.scanLines
                        });
                      }
                      if (t instanceof EOIMarkerError) {
                        (0, r.warn)("".concat(t.message, " -- ignoring the rest of the image data."));
                        break e;
                      }
                      throw t;
                    }
                    break;
                  case 65500:
                    o += 4;
                    break;
                  case 65535:
                    255 !== e[o] && o--;
                    break;
                  default:
                    var L = findNextFileMarker(e, o - 2, o - 3);
                    if (L && L.invalid) {
                      (0, r.warn)("JpegImage.parse - unexpected data, current marker is: " + L.invalid);
                      o = L.offset;
                      break;
                    }
                    if (!L || o >= e.length - 1) {
                      (0, r.warn)("JpegImage.parse - reached the end of the image data without finding an EOI marker (0xFFD9).");
                      break e;
                    }
                    throw new JpegError("JpegImage.parse - unknown marker: " + g.toString(16));
                }
                g = (0, n.readUint16)(e, o);
                o += 2;
              }
              this.width = a.samplesPerLine;
              this.height = a.scanLines;
              this.jfif = c;
              this.adobe = l;
              this.components = [];
              var _iterator87 = _createForOfIteratorHelper(a.components),
                _step87;
              try {
                for (_iterator87.s(); !(_step87 = _iterator87.n()).done;) {
                  var _e243 = _step87.value;
                  var _t182 = u[_e243.quantizationId];
                  _t182 && (_e243.quantizationTable = _t182);
                  this.components.push({
                    index: _e243.index,
                    output: buildComponentData(0, _e243),
                    scaleX: _e243.h / a.maxH,
                    scaleY: _e243.v / a.maxV,
                    blocksPerLine: _e243.blocksPerLine,
                    blocksPerColumn: _e243.blocksPerColumn
                  });
                }
              } catch (err) {
                _iterator87.e(err);
              } finally {
                _iterator87.f();
              }
              this.numComponents = this.components.length;
            }
          }, {
            key: "_getLinearizedBlockData",
            value: function _getLinearizedBlockData(e, t) {
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
              var r = this.width / e,
                i = this.height / t;
              var n,
                s,
                o,
                c,
                l,
                h,
                u,
                d,
                f,
                g,
                p,
                m = 0;
              var b = this.components.length,
                y = e * t * b,
                w = new Uint8ClampedArray(y),
                S = new Uint32Array(e),
                x = 4294967288;
              var C;
              for (u = 0; u < b; u++) {
                n = this.components[u];
                s = n.scaleX * r;
                o = n.scaleY * i;
                m = u;
                p = n.output;
                c = n.blocksPerLine + 1 << 3;
                if (s !== C) {
                  for (l = 0; l < e; l++) {
                    d = 0 | l * s;
                    S[l] = (d & x) << 3 | 7 & d;
                  }
                  C = s;
                }
                for (h = 0; h < t; h++) {
                  d = 0 | h * o;
                  g = c * (d & x) | (7 & d) << 3;
                  for (l = 0; l < e; l++) {
                    w[m] = p[g + S[l]];
                    m += b;
                  }
                }
              }
              var k = this._decodeTransform;
              a || 4 !== b || k || (k = new Int32Array([-256, 255, -256, 255, -256, 255, -256, 255]));
              if (k) for (u = 0; u < y;) for (d = 0, f = 0; d < b; d++, u++, f += 2) w[u] = (w[u] * k[f] >> 8) + k[f + 1];
              return w;
            }
          }, {
            key: "_isColorConversionNeeded",
            get: function get() {
              return this.adobe ? !!this.adobe.transformCode : 3 === this.numComponents ? 0 !== this._colorTransform && (82 !== this.components[0].index || 71 !== this.components[1].index || 66 !== this.components[2].index) : 1 === this._colorTransform;
            }
          }, {
            key: "_convertYccToRgb",
            value: function _convertYccToRgb(e) {
              var t, a, r;
              for (var _i94 = 0, _n64 = e.length; _i94 < _n64; _i94 += 3) {
                t = e[_i94];
                a = e[_i94 + 1];
                r = e[_i94 + 2];
                e[_i94] = t - 179.456 + 1.402 * r;
                e[_i94 + 1] = t + 135.459 - .344 * a - .714 * r;
                e[_i94 + 2] = t - 226.816 + 1.772 * a;
              }
              return e;
            }
          }, {
            key: "_convertYccToRgba",
            value: function _convertYccToRgba(e, t) {
              for (var _a133 = 0, _r114 = 0, _i95 = e.length; _a133 < _i95; _a133 += 3, _r114 += 4) {
                var _i96 = e[_a133],
                  _n65 = e[_a133 + 1],
                  _s47 = e[_a133 + 2];
                t[_r114] = _i96 - 179.456 + 1.402 * _s47;
                t[_r114 + 1] = _i96 + 135.459 - .344 * _n65 - .714 * _s47;
                t[_r114 + 2] = _i96 - 226.816 + 1.772 * _n65;
                t[_r114 + 3] = 255;
              }
              return t;
            }
          }, {
            key: "_convertYcckToRgb",
            value: function _convertYcckToRgb(e) {
              var t,
                a,
                r,
                i,
                n = 0;
              for (var _s48 = 0, _o33 = e.length; _s48 < _o33; _s48 += 4) {
                t = e[_s48];
                a = e[_s48 + 1];
                r = e[_s48 + 2];
                i = e[_s48 + 3];
                e[n++] = a * (-660635669420364e-19 * a + .000437130475926232 * r - 54080610064599e-18 * t + .00048449797120281 * i - .154362151871126) - 122.67195406894 + r * (-.000957964378445773 * r + .000817076911346625 * t - .00477271405408747 * i + 1.53380253221734) + t * (.000961250184130688 * t - .00266257332283933 * i + .48357088451265) + i * (-.000336197177618394 * i + .484791561490776);
                e[n++] = 107.268039397724 + a * (219927104525741e-19 * a - .000640992018297945 * r + .000659397001245577 * t + .000426105652938837 * i - .176491792462875) + r * (-.000778269941513683 * r + .00130872261408275 * t + .000770482631801132 * i - .151051492775562) + t * (.00126935368114843 * t - .00265090189010898 * i + .25802910206845) + i * (-.000318913117588328 * i - .213742400323665);
                e[n++] = a * (-.000570115196973677 * a - 263409051004589e-19 * r + .0020741088115012 * t - .00288260236853442 * i + .814272968359295) - 20.810012546947 + r * (-153496057440975e-19 * r - .000132689043961446 * t + .000560833691242812 * i - .195152027534049) + t * (.00174418132927582 * t - .00255243321439347 * i + .116935020465145) + i * (-.000343531996510555 * i + .24165260232407);
              }
              return e.subarray(0, n);
            }
          }, {
            key: "_convertYcckToRgba",
            value: function _convertYcckToRgba(e) {
              for (var _t183 = 0, _a134 = e.length; _t183 < _a134; _t183 += 4) {
                var _a135 = e[_t183],
                  _r115 = e[_t183 + 1],
                  _i97 = e[_t183 + 2],
                  _n66 = e[_t183 + 3];
                e[_t183] = _r115 * (-660635669420364e-19 * _r115 + .000437130475926232 * _i97 - 54080610064599e-18 * _a135 + .00048449797120281 * _n66 - .154362151871126) - 122.67195406894 + _i97 * (-.000957964378445773 * _i97 + .000817076911346625 * _a135 - .00477271405408747 * _n66 + 1.53380253221734) + _a135 * (.000961250184130688 * _a135 - .00266257332283933 * _n66 + .48357088451265) + _n66 * (-.000336197177618394 * _n66 + .484791561490776);
                e[_t183 + 1] = 107.268039397724 + _r115 * (219927104525741e-19 * _r115 - .000640992018297945 * _i97 + .000659397001245577 * _a135 + .000426105652938837 * _n66 - .176491792462875) + _i97 * (-.000778269941513683 * _i97 + .00130872261408275 * _a135 + .000770482631801132 * _n66 - .151051492775562) + _a135 * (.00126935368114843 * _a135 - .00265090189010898 * _n66 + .25802910206845) + _n66 * (-.000318913117588328 * _n66 - .213742400323665);
                e[_t183 + 2] = _r115 * (-.000570115196973677 * _r115 - 263409051004589e-19 * _i97 + .0020741088115012 * _a135 - .00288260236853442 * _n66 + .814272968359295) - 20.810012546947 + _i97 * (-153496057440975e-19 * _i97 - .000132689043961446 * _a135 + .000560833691242812 * _n66 - .195152027534049) + _a135 * (.00174418132927582 * _a135 - .00255243321439347 * _n66 + .116935020465145) + _n66 * (-.000343531996510555 * _n66 + .24165260232407);
                e[_t183 + 3] = 255;
              }
              return e;
            }
          }, {
            key: "_convertYcckToCmyk",
            value: function _convertYcckToCmyk(e) {
              var t, a, r;
              for (var _i98 = 0, _n67 = e.length; _i98 < _n67; _i98 += 4) {
                t = e[_i98];
                a = e[_i98 + 1];
                r = e[_i98 + 2];
                e[_i98] = 434.456 - t - 1.402 * r;
                e[_i98 + 1] = 119.541 - t + .344 * a + .714 * r;
                e[_i98 + 2] = 481.816 - t - 1.772 * a;
              }
              return e;
            }
          }, {
            key: "_convertCmykToRgb",
            value: function _convertCmykToRgb(e) {
              var t,
                a,
                r,
                i,
                n = 0;
              for (var _s49 = 0, _o34 = e.length; _s49 < _o34; _s49 += 4) {
                t = e[_s49];
                a = e[_s49 + 1];
                r = e[_s49 + 2];
                i = e[_s49 + 3];
                e[n++] = 255 + t * (-6747147073602441e-20 * t + .0008379262121013727 * a + .0002894718188643294 * r + .003264231057537806 * i - 1.1185611867203937) + a * (26374107616089405e-21 * a - 8626949158638572e-20 * r - .0002748769067499491 * i - .02155688794978967) + r * (-3878099212869363e-20 * r - .0003267808279485286 * i + .0686742238595345) - i * (.0003361971776183937 * i + .7430659151342254);
                e[n++] = 255 + t * (.00013596372813588848 * t + .000924537132573585 * a + .00010567359618683593 * r + .0004791864687436512 * i - .3109689587515875) + a * (-.00023545346108370344 * a + .0002702845253534714 * r + .0020200308977307156 * i - .7488052167015494) + r * (6834815998235662e-20 * r + .00015168452363460973 * i - .09751927774728933) - i * (.0003189131175883281 * i + .7364883807733168);
                e[n++] = 255 + t * (13598650411385307e-21 * t + .00012423956175490851 * a + .0004751985097583589 * r - 36729317476630422e-22 * i - .05562186980264034) + a * (.00016141380598724676 * a + .0009692239130725186 * r + .0007782692450036253 * i - .44015232367526463) + r * (5.068882914068769e-7 * r + .0017778369011375071 * i - .7591454649749609) - i * (.0003435319965105553 * i + .7063770186160144);
              }
              return e.subarray(0, n);
            }
          }, {
            key: "_convertCmykToRgba",
            value: function _convertCmykToRgba(e) {
              for (var _t184 = 0, _a136 = e.length; _t184 < _a136; _t184 += 4) {
                var _a137 = e[_t184],
                  _r116 = e[_t184 + 1],
                  _i99 = e[_t184 + 2],
                  _n68 = e[_t184 + 3];
                e[_t184] = 255 + _a137 * (-6747147073602441e-20 * _a137 + .0008379262121013727 * _r116 + .0002894718188643294 * _i99 + .003264231057537806 * _n68 - 1.1185611867203937) + _r116 * (26374107616089405e-21 * _r116 - 8626949158638572e-20 * _i99 - .0002748769067499491 * _n68 - .02155688794978967) + _i99 * (-3878099212869363e-20 * _i99 - .0003267808279485286 * _n68 + .0686742238595345) - _n68 * (.0003361971776183937 * _n68 + .7430659151342254);
                e[_t184 + 1] = 255 + _a137 * (.00013596372813588848 * _a137 + .000924537132573585 * _r116 + .00010567359618683593 * _i99 + .0004791864687436512 * _n68 - .3109689587515875) + _r116 * (-.00023545346108370344 * _r116 + .0002702845253534714 * _i99 + .0020200308977307156 * _n68 - .7488052167015494) + _i99 * (6834815998235662e-20 * _i99 + .00015168452363460973 * _n68 - .09751927774728933) - _n68 * (.0003189131175883281 * _n68 + .7364883807733168);
                e[_t184 + 2] = 255 + _a137 * (13598650411385307e-21 * _a137 + .00012423956175490851 * _r116 + .0004751985097583589 * _i99 - 36729317476630422e-22 * _n68 - .05562186980264034) + _r116 * (.00016141380598724676 * _r116 + .0009692239130725186 * _i99 + .0007782692450036253 * _n68 - .44015232367526463) + _i99 * (5.068882914068769e-7 * _i99 + .0017778369011375071 * _n68 - .7591454649749609) - _n68 * (.0003435319965105553 * _n68 + .7063770186160144);
                e[_t184 + 3] = 255;
              }
              return e;
            }
          }, {
            key: "getData",
            value: function getData(_ref61) {
              var e = _ref61.width,
                t = _ref61.height,
                _ref61$forceRGBA = _ref61.forceRGBA,
                a = _ref61$forceRGBA === void 0 ? !1 : _ref61$forceRGBA,
                _ref61$forceRGB = _ref61.forceRGB,
                r = _ref61$forceRGB === void 0 ? !1 : _ref61$forceRGB,
                _ref61$isSourcePDF = _ref61.isSourcePDF,
                n = _ref61$isSourcePDF === void 0 ? !1 : _ref61$isSourcePDF;
              if (this.numComponents > 4) throw new JpegError("Unsupported color mode");
              var s = this._getLinearizedBlockData(e, t, n);
              if (1 === this.numComponents && (a || r)) {
                var _e244 = s.length * (a ? 4 : 3),
                  _t185 = new Uint8ClampedArray(_e244);
                var _r117 = 0;
                if (a) (0, i.grayToRGBA)(s, new Uint32Array(_t185.buffer));else {
                  var _iterator88 = _createForOfIteratorHelper(s),
                    _step88;
                  try {
                    for (_iterator88.s(); !(_step88 = _iterator88.n()).done;) {
                      var _e245 = _step88.value;
                      _t185[_r117++] = _e245;
                      _t185[_r117++] = _e245;
                      _t185[_r117++] = _e245;
                    }
                  } catch (err) {
                    _iterator88.e(err);
                  } finally {
                    _iterator88.f();
                  }
                }
                return _t185;
              }
              if (3 === this.numComponents && this._isColorConversionNeeded) {
                if (a) {
                  var _e246 = new Uint8ClampedArray(s.length / 3 * 4);
                  return this._convertYccToRgba(s, _e246);
                }
                return this._convertYccToRgb(s);
              }
              if (4 === this.numComponents) {
                if (this._isColorConversionNeeded) return a ? this._convertYcckToRgba(s) : r ? this._convertYcckToRgb(s) : this._convertYcckToCmyk(s);
                if (a) return this._convertCmykToRgba(s);
                if (r) return this._convertCmykToRgb(s);
              }
              return s;
            }
          }]);
          return JpegImage;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.convertBlackAndWhiteToRGBA = convertBlackAndWhiteToRGBA;
        t.convertToRGBA = function convertToRGBA(e) {
          switch (e.kind) {
            case r.ImageKind.GRAYSCALE_1BPP:
              return convertBlackAndWhiteToRGBA(e);
            case r.ImageKind.RGB_24BPP:
              return function convertRGBToRGBA(_ref62) {
                var e = _ref62.src,
                  _ref62$srcPos = _ref62.srcPos,
                  t = _ref62$srcPos === void 0 ? 0 : _ref62$srcPos,
                  a = _ref62.dest,
                  _ref62$destPos = _ref62.destPos,
                  i = _ref62$destPos === void 0 ? 0 : _ref62$destPos,
                  n = _ref62.width,
                  s = _ref62.height;
                var o = 0;
                var c = e.length >> 2,
                  l = new Uint32Array(e.buffer, t, c);
                if (r.FeatureTest.isLittleEndian) {
                  for (; o < c - 2; o += 3, i += 4) {
                    var _e247 = l[o],
                      _t186 = l[o + 1],
                      _r118 = l[o + 2];
                    a[i] = 4278190080 | _e247;
                    a[i + 1] = _e247 >>> 24 | _t186 << 8 | 4278190080;
                    a[i + 2] = _t186 >>> 16 | _r118 << 16 | 4278190080;
                    a[i + 3] = _r118 >>> 8 | 4278190080;
                  }
                  for (var _t187 = 4 * o, _r119 = e.length; _t187 < _r119; _t187 += 3) a[i++] = e[_t187] | e[_t187 + 1] << 8 | e[_t187 + 2] << 16 | 4278190080;
                } else {
                  for (; o < c - 2; o += 3, i += 4) {
                    var _e248 = l[o],
                      _t188 = l[o + 1],
                      _r120 = l[o + 2];
                    a[i] = 255 | _e248;
                    a[i + 1] = _e248 << 24 | _t188 >>> 8 | 255;
                    a[i + 2] = _t188 << 16 | _r120 >>> 16 | 255;
                    a[i + 3] = _r120 << 8 | 255;
                  }
                  for (var _t189 = 4 * o, _r121 = e.length; _t189 < _r121; _t189 += 3) a[i++] = e[_t189] << 24 | e[_t189 + 1] << 16 | e[_t189 + 2] << 8 | 255;
                }
                return {
                  srcPos: t,
                  destPos: i
                };
              }(e);
          }
          return null;
        };
        t.grayToRGBA = function grayToRGBA(e, t) {
          if (r.FeatureTest.isLittleEndian) for (var _a138 = 0, _r122 = e.length; _a138 < _r122; _a138++) t[_a138] = 65793 * e[_a138] | 4278190080;else for (var _a139 = 0, _r123 = e.length; _a139 < _r123; _a139++) t[_a139] = 16843008 * e[_a139] | 255;
        };
        var r = a(2);
        function convertBlackAndWhiteToRGBA(_ref63) {
          var e = _ref63.src,
            _ref63$srcPos = _ref63.srcPos,
            t = _ref63$srcPos === void 0 ? 0 : _ref63$srcPos,
            a = _ref63.dest,
            i = _ref63.width,
            n = _ref63.height,
            _ref63$nonBlackColor = _ref63.nonBlackColor,
            s = _ref63$nonBlackColor === void 0 ? 4294967295 : _ref63$nonBlackColor,
            _ref63$inverseDecode = _ref63.inverseDecode,
            o = _ref63$inverseDecode === void 0 ? !1 : _ref63$inverseDecode;
          var c = r.FeatureTest.isLittleEndian ? 4278190080 : 255,
            _ref64 = o ? [s, c] : [c, s],
            _ref65 = _slicedToArray(_ref64, 2),
            l = _ref65[0],
            h = _ref65[1],
            u = i >> 3,
            d = 7 & i,
            f = e.length;
          a = new Uint32Array(a.buffer);
          var g = 0;
          for (var _r124 = 0; _r124 < n; _r124++) {
            for (var _r125 = t + u; t < _r125; t++) {
              var _r126 = t < f ? e[t] : 255;
              a[g++] = 128 & _r126 ? h : l;
              a[g++] = 64 & _r126 ? h : l;
              a[g++] = 32 & _r126 ? h : l;
              a[g++] = 16 & _r126 ? h : l;
              a[g++] = 8 & _r126 ? h : l;
              a[g++] = 4 & _r126 ? h : l;
              a[g++] = 2 & _r126 ? h : l;
              a[g++] = 1 & _r126 ? h : l;
            }
            if (0 === d) continue;
            var _r127 = t < f ? e[t++] : 255;
            for (var _e249 = 0; _e249 < d; _e249++) a[g++] = _r127 & 1 << 7 - _e249 ? h : l;
          }
          return {
            srcPos: t,
            destPos: g
          };
        }
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.JpxStream = void 0;
        var r = a(18),
          i = a(30),
          n = a(2);
        var JpxStream = /*#__PURE__*/function (_r$DecodeStream5) {
          _inherits(JpxStream, _r$DecodeStream5);
          var _super65 = _createSuper(JpxStream);
          function JpxStream(e, t, a) {
            var _this73;
            _classCallCheck(this, JpxStream);
            _this73 = _super65.call(this, t);
            _this73.stream = e;
            _this73.dict = e.dict;
            _this73.maybeLength = t;
            _this73.params = a;
            return _this73;
          }
          _createClass(JpxStream, [{
            key: "bytes",
            get: function get() {
              return (0, n.shadow)(this, "bytes", this.stream.getBytes(this.maybeLength));
            }
          }, {
            key: "ensureBuffer",
            value: function ensureBuffer(e) {}
          }, {
            key: "readBlock",
            value: function readBlock() {
              if (this.eof) return;
              var e = new i.JpxImage();
              e.parse(this.bytes);
              var t = e.width,
                a = e.height,
                r = e.componentsCount,
                n = e.tiles.length;
              if (1 === n) this.buffer = e.tiles[0].items;else {
                var _i100 = new Uint8ClampedArray(t * a * r);
                for (var _a140 = 0; _a140 < n; _a140++) {
                  var _n69 = e.tiles[_a140],
                    _s50 = _n69.width,
                    _o35 = _n69.height,
                    _c19 = _n69.left,
                    l = _n69.top,
                    _h11 = _n69.items;
                  var u = 0,
                    d = (t * l + _c19) * r;
                  var _f4 = t * r,
                    _g6 = _s50 * r;
                  for (var _e250 = 0; _e250 < _o35; _e250++) {
                    var _e251 = _h11.subarray(u, u + _g6);
                    _i100.set(_e251, d);
                    u += _g6;
                    d += _f4;
                  }
                }
                this.buffer = _i100;
              }
              this.bufferLength = this.buffer.length;
              this.eof = !0;
            }
          }]);
          return JpxStream;
        }(r.DecodeStream);
        t.JpxStream = JpxStream;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.JpxImage = void 0;
        var r = a(2),
          i = a(3),
          n = a(25);
        var JpxError = /*#__PURE__*/function (_r$BaseException9) {
          _inherits(JpxError, _r$BaseException9);
          var _super66 = _createSuper(JpxError);
          function JpxError(e) {
            _classCallCheck(this, JpxError);
            return _super66.call(this, "JPX error: ".concat(e), "JpxError");
          }
          return _createClass(JpxError);
        }(r.BaseException);
        var s = {
          LL: 0,
          LH: 1,
          HL: 1,
          HH: 2
        };
        t.JpxImage = /*#__PURE__*/function () {
          function JpxImage() {
            _classCallCheck(this, JpxImage);
            this.failOnCorruptedImage = !1;
          }
          _createClass(JpxImage, [{
            key: "parse",
            value: function parse(e) {
              if (65359 === (0, i.readUint16)(e, 0)) {
                this.parseCodestream(e, 0, e.length);
                return;
              }
              var t = e.length;
              var a = 0;
              for (; a < t;) {
                var _n70 = 8,
                  _s51 = (0, i.readUint32)(e, a);
                var _o36 = (0, i.readUint32)(e, a + 4);
                a += _n70;
                if (1 === _s51) {
                  _s51 = 4294967296 * (0, i.readUint32)(e, a) + (0, i.readUint32)(e, a + 4);
                  a += 8;
                  _n70 += 8;
                }
                0 === _s51 && (_s51 = t - a + _n70);
                if (_s51 < _n70) throw new JpxError("Invalid box field size");
                var _c20 = _s51 - _n70;
                var l = !0;
                switch (_o36) {
                  case 1785737832:
                    l = !1;
                    break;
                  case 1668246642:
                    var _t190 = e[a];
                    if (1 === _t190) {
                      var _t191 = (0, i.readUint32)(e, a + 3);
                      switch (_t191) {
                        case 16:
                        case 17:
                        case 18:
                          break;
                        default:
                          (0, r.warn)("Unknown colorspace " + _t191);
                      }
                    } else 2 === _t190 && (0, r.info)("ICC profile not supported");
                    break;
                  case 1785737827:
                    this.parseCodestream(e, a, a + _c20);
                    break;
                  case 1783636e3:
                    218793738 !== (0, i.readUint32)(e, a) && (0, r.warn)("Invalid JP2 signature");
                    break;
                  case 1783634458:
                  case 1718909296:
                  case 1920099697:
                  case 1919251232:
                  case 1768449138:
                    break;
                  default:
                    var _n71 = String.fromCharCode(_o36 >> 24 & 255, _o36 >> 16 & 255, _o36 >> 8 & 255, 255 & _o36);
                    (0, r.warn)("Unsupported header type ".concat(_o36, " (").concat(_n71, ")."));
                }
                l && (a += _c20);
              }
            }
          }, {
            key: "parseImageProperties",
            value: function parseImageProperties(e) {
              var t = e.getByte();
              for (; t >= 0;) {
                var _a141 = t;
                t = e.getByte();
                if (65361 === (_a141 << 8 | t)) {
                  e.skip(4);
                  var _t192 = e.getInt32() >>> 0,
                    _a142 = e.getInt32() >>> 0,
                    _r128 = e.getInt32() >>> 0,
                    _i101 = e.getInt32() >>> 0;
                  e.skip(16);
                  var _n72 = e.getUint16();
                  this.width = _t192 - _r128;
                  this.height = _a142 - _i101;
                  this.componentsCount = _n72;
                  this.bitsPerComponent = 8;
                  return;
                }
              }
              throw new JpxError("No size marker found in JPX stream");
            }
          }, {
            key: "parseCodestream",
            value: function parseCodestream(e, t, a) {
              var n = {};
              var s = !1;
              try {
                var _o37 = t;
                for (; _o37 + 1 < a;) {
                  var _t193 = (0, i.readUint16)(e, _o37);
                  _o37 += 2;
                  var _a143 = void 0,
                    _c21 = void 0,
                    l = void 0,
                    _h12 = void 0,
                    u = void 0,
                    d = void 0,
                    _f5 = 0;
                  switch (_t193) {
                    case 65359:
                      n.mainHeader = !0;
                      break;
                    case 65497:
                      break;
                    case 65361:
                      _f5 = (0, i.readUint16)(e, _o37);
                      var _g7 = {};
                      _g7.Xsiz = (0, i.readUint32)(e, _o37 + 4);
                      _g7.Ysiz = (0, i.readUint32)(e, _o37 + 8);
                      _g7.XOsiz = (0, i.readUint32)(e, _o37 + 12);
                      _g7.YOsiz = (0, i.readUint32)(e, _o37 + 16);
                      _g7.XTsiz = (0, i.readUint32)(e, _o37 + 20);
                      _g7.YTsiz = (0, i.readUint32)(e, _o37 + 24);
                      _g7.XTOsiz = (0, i.readUint32)(e, _o37 + 28);
                      _g7.YTOsiz = (0, i.readUint32)(e, _o37 + 32);
                      var _p6 = (0, i.readUint16)(e, _o37 + 36);
                      _g7.Csiz = _p6;
                      var m = [];
                      _a143 = _o37 + 38;
                      for (var _t194 = 0; _t194 < _p6; _t194++) {
                        var _t195 = {
                          precision: 1 + (127 & e[_a143]),
                          isSigned: !!(128 & e[_a143]),
                          XRsiz: e[_a143 + 1],
                          YRsiz: e[_a143 + 2]
                        };
                        _a143 += 3;
                        calculateComponentDimensions(_t195, _g7);
                        m.push(_t195);
                      }
                      n.SIZ = _g7;
                      n.components = m;
                      calculateTileGrids(n, m);
                      n.QCC = [];
                      n.COC = [];
                      break;
                    case 65372:
                      _f5 = (0, i.readUint16)(e, _o37);
                      var b = {};
                      _a143 = _o37 + 2;
                      _c21 = e[_a143++];
                      switch (31 & _c21) {
                        case 0:
                          _h12 = 8;
                          u = !0;
                          break;
                        case 1:
                          _h12 = 16;
                          u = !1;
                          break;
                        case 2:
                          _h12 = 16;
                          u = !0;
                          break;
                        default:
                          throw new Error("Invalid SQcd value " + _c21);
                      }
                      b.noQuantization = 8 === _h12;
                      b.scalarExpounded = u;
                      b.guardBits = _c21 >> 5;
                      l = [];
                      for (; _a143 < _f5 + _o37;) {
                        var _t196 = {};
                        if (8 === _h12) {
                          _t196.epsilon = e[_a143++] >> 3;
                          _t196.mu = 0;
                        } else {
                          _t196.epsilon = e[_a143] >> 3;
                          _t196.mu = (7 & e[_a143]) << 8 | e[_a143 + 1];
                          _a143 += 2;
                        }
                        l.push(_t196);
                      }
                      b.SPqcds = l;
                      if (n.mainHeader) n.QCD = b;else {
                        n.currentTile.QCD = b;
                        n.currentTile.QCC = [];
                      }
                      break;
                    case 65373:
                      _f5 = (0, i.readUint16)(e, _o37);
                      var y = {};
                      _a143 = _o37 + 2;
                      var w = void 0;
                      if (n.SIZ.Csiz < 257) w = e[_a143++];else {
                        w = (0, i.readUint16)(e, _a143);
                        _a143 += 2;
                      }
                      _c21 = e[_a143++];
                      switch (31 & _c21) {
                        case 0:
                          _h12 = 8;
                          u = !0;
                          break;
                        case 1:
                          _h12 = 16;
                          u = !1;
                          break;
                        case 2:
                          _h12 = 16;
                          u = !0;
                          break;
                        default:
                          throw new Error("Invalid SQcd value " + _c21);
                      }
                      y.noQuantization = 8 === _h12;
                      y.scalarExpounded = u;
                      y.guardBits = _c21 >> 5;
                      l = [];
                      for (; _a143 < _f5 + _o37;) {
                        var _t197 = {};
                        if (8 === _h12) {
                          _t197.epsilon = e[_a143++] >> 3;
                          _t197.mu = 0;
                        } else {
                          _t197.epsilon = e[_a143] >> 3;
                          _t197.mu = (7 & e[_a143]) << 8 | e[_a143 + 1];
                          _a143 += 2;
                        }
                        l.push(_t197);
                      }
                      y.SPqcds = l;
                      n.mainHeader ? n.QCC[w] = y : n.currentTile.QCC[w] = y;
                      break;
                    case 65362:
                      _f5 = (0, i.readUint16)(e, _o37);
                      var S = {};
                      _a143 = _o37 + 2;
                      var x = e[_a143++];
                      S.entropyCoderWithCustomPrecincts = !!(1 & x);
                      S.sopMarkerUsed = !!(2 & x);
                      S.ephMarkerUsed = !!(4 & x);
                      S.progressionOrder = e[_a143++];
                      S.layersCount = (0, i.readUint16)(e, _a143);
                      _a143 += 2;
                      S.multipleComponentTransform = e[_a143++];
                      S.decompositionLevelsCount = e[_a143++];
                      S.xcb = 2 + (15 & e[_a143++]);
                      S.ycb = 2 + (15 & e[_a143++]);
                      var C = e[_a143++];
                      S.selectiveArithmeticCodingBypass = !!(1 & C);
                      S.resetContextProbabilities = !!(2 & C);
                      S.terminationOnEachCodingPass = !!(4 & C);
                      S.verticallyStripe = !!(8 & C);
                      S.predictableTermination = !!(16 & C);
                      S.segmentationSymbolUsed = !!(32 & C);
                      S.reversibleTransformation = e[_a143++];
                      if (S.entropyCoderWithCustomPrecincts) {
                        var _t198 = [];
                        for (; _a143 < _f5 + _o37;) {
                          var _r129 = e[_a143++];
                          _t198.push({
                            PPx: 15 & _r129,
                            PPy: _r129 >> 4
                          });
                        }
                        S.precinctsSizes = _t198;
                      }
                      var k = [];
                      S.selectiveArithmeticCodingBypass && k.push("selectiveArithmeticCodingBypass");
                      S.terminationOnEachCodingPass && k.push("terminationOnEachCodingPass");
                      S.verticallyStripe && k.push("verticallyStripe");
                      S.predictableTermination && k.push("predictableTermination");
                      if (k.length > 0) {
                        s = !0;
                        (0, r.warn)("JPX: Unsupported COD options (".concat(k.join(", "), ")."));
                      }
                      if (n.mainHeader) n.COD = S;else {
                        n.currentTile.COD = S;
                        n.currentTile.COC = [];
                      }
                      break;
                    case 65424:
                      _f5 = (0, i.readUint16)(e, _o37);
                      d = {};
                      d.index = (0, i.readUint16)(e, _o37 + 2);
                      d.length = (0, i.readUint32)(e, _o37 + 4);
                      d.dataEnd = d.length + _o37 - 2;
                      d.partIndex = e[_o37 + 8];
                      d.partsCount = e[_o37 + 9];
                      n.mainHeader = !1;
                      if (0 === d.partIndex) {
                        d.COD = n.COD;
                        d.COC = n.COC.slice(0);
                        d.QCD = n.QCD;
                        d.QCC = n.QCC.slice(0);
                      }
                      n.currentTile = d;
                      break;
                    case 65427:
                      d = n.currentTile;
                      if (0 === d.partIndex) {
                        initializeTile(n, d.index);
                        buildPackets(n);
                      }
                      _f5 = d.dataEnd - _o37;
                      parseTilePackets(n, e, _o37, _f5);
                      break;
                    case 65363:
                      (0, r.warn)("JPX: Codestream code 0xFF53 (COC) is not implemented.");
                    case 65365:
                    case 65367:
                    case 65368:
                    case 65380:
                      _f5 = (0, i.readUint16)(e, _o37);
                      break;
                    default:
                      throw new Error("Unknown codestream code: " + _t193.toString(16));
                  }
                  _o37 += _f5;
                }
              } catch (e) {
                if (s || this.failOnCorruptedImage) throw new JpxError(e.message);
                (0, r.warn)("JPX: Trying to recover from: \"".concat(e.message, "\"."));
              }
              this.tiles = function transformComponents(e) {
                var t = e.SIZ,
                  a = e.components,
                  r = t.Csiz,
                  i = [];
                for (var _t199 = 0, _n73 = e.tiles.length; _t199 < _n73; _t199++) {
                  var _n74 = e.tiles[_t199],
                    _s52 = [];
                  for (var _t200 = 0; _t200 < r; _t200++) _s52[_t200] = transformTile(e, _n74, _t200);
                  var _o38 = _s52[0],
                    _c22 = new Uint8ClampedArray(_o38.items.length * r),
                    _l13 = {
                      left: _o38.left,
                      top: _o38.top,
                      width: _o38.width,
                      height: _o38.height,
                      items: _c22
                    };
                  var _h13 = void 0,
                    _u10 = void 0,
                    _d7 = void 0,
                    _f6 = void 0,
                    _g8 = void 0,
                    _p7 = void 0,
                    _m2 = void 0,
                    _b2 = 0;
                  if (_n74.codingStyleDefaultParameters.multipleComponentTransform) {
                    var _e252 = 4 === r,
                      _t201 = _s52[0].items,
                      _i102 = _s52[1].items,
                      _o39 = _s52[2].items,
                      _l14 = _e252 ? _s52[3].items : null;
                    _h13 = a[0].precision - 8;
                    _u10 = .5 + (128 << _h13);
                    var _y4 = _n74.components[0],
                      _w = r - 3;
                    _f6 = _t201.length;
                    if (_y4.codingStyleParameters.reversibleTransformation) for (_d7 = 0; _d7 < _f6; _d7++, _b2 += _w) {
                      _g8 = _t201[_d7] + _u10;
                      _p7 = _i102[_d7];
                      _m2 = _o39[_d7];
                      var _e253 = _g8 - (_m2 + _p7 >> 2);
                      _c22[_b2++] = _e253 + _m2 >> _h13;
                      _c22[_b2++] = _e253 >> _h13;
                      _c22[_b2++] = _e253 + _p7 >> _h13;
                    } else for (_d7 = 0; _d7 < _f6; _d7++, _b2 += _w) {
                      _g8 = _t201[_d7] + _u10;
                      _p7 = _i102[_d7];
                      _m2 = _o39[_d7];
                      _c22[_b2++] = _g8 + 1.402 * _m2 >> _h13;
                      _c22[_b2++] = _g8 - .34413 * _p7 - .71414 * _m2 >> _h13;
                      _c22[_b2++] = _g8 + 1.772 * _p7 >> _h13;
                    }
                    if (_e252) for (_d7 = 0, _b2 = 3; _d7 < _f6; _d7++, _b2 += 4) _c22[_b2] = _l14[_d7] + _u10 >> _h13;
                  } else for (var _e254 = 0; _e254 < r; _e254++) {
                    var _t202 = _s52[_e254].items;
                    _h13 = a[_e254].precision - 8;
                    _u10 = .5 + (128 << _h13);
                    for (_b2 = _e254, _d7 = 0, _f6 = _t202.length; _d7 < _f6; _d7++) {
                      _c22[_b2] = _t202[_d7] + _u10 >> _h13;
                      _b2 += r;
                    }
                  }
                  i.push(_l13);
                }
                return i;
              }(n);
              this.width = n.SIZ.Xsiz - n.SIZ.XOsiz;
              this.height = n.SIZ.Ysiz - n.SIZ.YOsiz;
              this.componentsCount = n.SIZ.Csiz;
            }
          }]);
          return JpxImage;
        }();
        function calculateComponentDimensions(e, t) {
          e.x0 = Math.ceil(t.XOsiz / e.XRsiz);
          e.x1 = Math.ceil(t.Xsiz / e.XRsiz);
          e.y0 = Math.ceil(t.YOsiz / e.YRsiz);
          e.y1 = Math.ceil(t.Ysiz / e.YRsiz);
          e.width = e.x1 - e.x0;
          e.height = e.y1 - e.y0;
        }
        function calculateTileGrids(e, t) {
          var a = e.SIZ,
            r = [];
          var i;
          var n = Math.ceil((a.Xsiz - a.XTOsiz) / a.XTsiz),
            s = Math.ceil((a.Ysiz - a.YTOsiz) / a.YTsiz);
          for (var _e255 = 0; _e255 < s; _e255++) for (var _t203 = 0; _t203 < n; _t203++) {
            i = {};
            i.tx0 = Math.max(a.XTOsiz + _t203 * a.XTsiz, a.XOsiz);
            i.ty0 = Math.max(a.YTOsiz + _e255 * a.YTsiz, a.YOsiz);
            i.tx1 = Math.min(a.XTOsiz + (_t203 + 1) * a.XTsiz, a.Xsiz);
            i.ty1 = Math.min(a.YTOsiz + (_e255 + 1) * a.YTsiz, a.Ysiz);
            i.width = i.tx1 - i.tx0;
            i.height = i.ty1 - i.ty0;
            i.components = [];
            r.push(i);
          }
          e.tiles = r;
          for (var _e256 = 0, _n75 = a.Csiz; _e256 < _n75; _e256++) {
            var _a144 = t[_e256];
            for (var _t204 = 0, _n76 = r.length; _t204 < _n76; _t204++) {
              var _n77 = {};
              i = r[_t204];
              _n77.tcx0 = Math.ceil(i.tx0 / _a144.XRsiz);
              _n77.tcy0 = Math.ceil(i.ty0 / _a144.YRsiz);
              _n77.tcx1 = Math.ceil(i.tx1 / _a144.XRsiz);
              _n77.tcy1 = Math.ceil(i.ty1 / _a144.YRsiz);
              _n77.width = _n77.tcx1 - _n77.tcx0;
              _n77.height = _n77.tcy1 - _n77.tcy0;
              i.components[_e256] = _n77;
            }
          }
        }
        function getBlocksDimensions(e, t, a) {
          var r = t.codingStyleParameters,
            i = {};
          if (r.entropyCoderWithCustomPrecincts) {
            i.PPx = r.precinctsSizes[a].PPx;
            i.PPy = r.precinctsSizes[a].PPy;
          } else {
            i.PPx = 15;
            i.PPy = 15;
          }
          i.xcb_ = a > 0 ? Math.min(r.xcb, i.PPx - 1) : Math.min(r.xcb, i.PPx);
          i.ycb_ = a > 0 ? Math.min(r.ycb, i.PPy - 1) : Math.min(r.ycb, i.PPy);
          return i;
        }
        function buildPrecincts(e, t, a) {
          var r = 1 << a.PPx,
            i = 1 << a.PPy,
            n = 0 === t.resLevel,
            s = 1 << a.PPx + (n ? 0 : -1),
            o = 1 << a.PPy + (n ? 0 : -1),
            c = t.trx1 > t.trx0 ? Math.ceil(t.trx1 / r) - Math.floor(t.trx0 / r) : 0,
            l = t.try1 > t.try0 ? Math.ceil(t.try1 / i) - Math.floor(t.try0 / i) : 0,
            h = c * l;
          t.precinctParameters = {
            precinctWidth: r,
            precinctHeight: i,
            numprecinctswide: c,
            numprecinctshigh: l,
            numprecincts: h,
            precinctWidthInSubband: s,
            precinctHeightInSubband: o
          };
        }
        function buildCodeblocks(e, t, a) {
          var r = a.xcb_,
            i = a.ycb_,
            n = 1 << r,
            s = 1 << i,
            o = t.tbx0 >> r,
            c = t.tby0 >> i,
            l = t.tbx1 + n - 1 >> r,
            h = t.tby1 + s - 1 >> i,
            u = t.resolution.precinctParameters,
            d = [],
            f = [];
          var g, p, m, b;
          for (p = c; p < h; p++) for (g = o; g < l; g++) {
            m = {
              cbx: g,
              cby: p,
              tbx0: n * g,
              tby0: s * p,
              tbx1: n * (g + 1),
              tby1: s * (p + 1)
            };
            m.tbx0_ = Math.max(t.tbx0, m.tbx0);
            m.tby0_ = Math.max(t.tby0, m.tby0);
            m.tbx1_ = Math.min(t.tbx1, m.tbx1);
            m.tby1_ = Math.min(t.tby1, m.tby1);
            b = Math.floor((m.tbx0_ - t.tbx0) / u.precinctWidthInSubband) + Math.floor((m.tby0_ - t.tby0) / u.precinctHeightInSubband) * u.numprecinctswide;
            m.precinctNumber = b;
            m.subbandType = t.type;
            m.Lblock = 3;
            if (m.tbx1_ <= m.tbx0_ || m.tby1_ <= m.tby0_) continue;
            d.push(m);
            var _e257 = f[b];
            if (void 0 !== _e257) {
              g < _e257.cbxMin ? _e257.cbxMin = g : g > _e257.cbxMax && (_e257.cbxMax = g);
              p < _e257.cbyMin ? _e257.cbxMin = p : p > _e257.cbyMax && (_e257.cbyMax = p);
            } else f[b] = _e257 = {
              cbxMin: g,
              cbyMin: p,
              cbxMax: g,
              cbyMax: p
            };
            m.precinct = _e257;
          }
          t.codeblockParameters = {
            codeblockWidth: r,
            codeblockHeight: i,
            numcodeblockwide: l - o + 1,
            numcodeblockhigh: h - c + 1
          };
          t.codeblocks = d;
          t.precincts = f;
        }
        function createPacket(e, t, a) {
          var r = [],
            i = e.subbands;
          for (var _e258 = 0, _a145 = i.length; _e258 < _a145; _e258++) {
            var _a146 = i[_e258].codeblocks;
            for (var _e259 = 0, _i103 = _a146.length; _e259 < _i103; _e259++) {
              var _i104 = _a146[_e259];
              _i104.precinctNumber === t && r.push(_i104);
            }
          }
          return {
            layerNumber: a,
            codeblocks: r
          };
        }
        function LayerResolutionComponentPositionIterator(e) {
          var t = e.SIZ,
            a = e.currentTile.index,
            r = e.tiles[a],
            i = r.codingStyleDefaultParameters.layersCount,
            n = t.Csiz;
          var s = 0;
          for (var _e260 = 0; _e260 < n; _e260++) s = Math.max(s, r.components[_e260].codingStyleParameters.decompositionLevelsCount);
          var o = 0,
            c = 0,
            l = 0,
            h = 0;
          this.nextPacket = function JpxImage_nextPacket() {
            for (; o < i; o++) {
              for (; c <= s; c++) {
                for (; l < n; l++) {
                  var _e261 = r.components[l];
                  if (c > _e261.codingStyleParameters.decompositionLevelsCount) continue;
                  var _t205 = _e261.resolutions[c],
                    _a147 = _t205.precinctParameters.numprecincts;
                  for (; h < _a147;) {
                    var _e262 = createPacket(_t205, h, o);
                    h++;
                    return _e262;
                  }
                  h = 0;
                }
                l = 0;
              }
              c = 0;
            }
            throw new JpxError("Out of packets");
          };
        }
        function ResolutionLayerComponentPositionIterator(e) {
          var t = e.SIZ,
            a = e.currentTile.index,
            r = e.tiles[a],
            i = r.codingStyleDefaultParameters.layersCount,
            n = t.Csiz;
          var s = 0;
          for (var _e263 = 0; _e263 < n; _e263++) s = Math.max(s, r.components[_e263].codingStyleParameters.decompositionLevelsCount);
          var o = 0,
            c = 0,
            l = 0,
            h = 0;
          this.nextPacket = function JpxImage_nextPacket() {
            for (; o <= s; o++) {
              for (; c < i; c++) {
                for (; l < n; l++) {
                  var _e264 = r.components[l];
                  if (o > _e264.codingStyleParameters.decompositionLevelsCount) continue;
                  var _t206 = _e264.resolutions[o],
                    _a148 = _t206.precinctParameters.numprecincts;
                  for (; h < _a148;) {
                    var _e265 = createPacket(_t206, h, c);
                    h++;
                    return _e265;
                  }
                  h = 0;
                }
                l = 0;
              }
              c = 0;
            }
            throw new JpxError("Out of packets");
          };
        }
        function ResolutionPositionComponentLayerIterator(e) {
          var t = e.SIZ,
            a = e.currentTile.index,
            r = e.tiles[a],
            i = r.codingStyleDefaultParameters.layersCount,
            n = t.Csiz;
          var s,
            o,
            c,
            l,
            h = 0;
          for (c = 0; c < n; c++) {
            var _e266 = r.components[c];
            h = Math.max(h, _e266.codingStyleParameters.decompositionLevelsCount);
          }
          var u = new Int32Array(h + 1);
          for (o = 0; o <= h; ++o) {
            var _e267 = 0;
            for (c = 0; c < n; ++c) {
              var _t207 = r.components[c].resolutions;
              o < _t207.length && (_e267 = Math.max(_e267, _t207[o].precinctParameters.numprecincts));
            }
            u[o] = _e267;
          }
          s = 0;
          o = 0;
          c = 0;
          l = 0;
          this.nextPacket = function JpxImage_nextPacket() {
            for (; o <= h; o++) {
              for (; l < u[o]; l++) {
                for (; c < n; c++) {
                  var _e268 = r.components[c];
                  if (o > _e268.codingStyleParameters.decompositionLevelsCount) continue;
                  var _t208 = _e268.resolutions[o],
                    _a149 = _t208.precinctParameters.numprecincts;
                  if (!(l >= _a149)) {
                    for (; s < i;) {
                      var _e269 = createPacket(_t208, l, s);
                      s++;
                      return _e269;
                    }
                    s = 0;
                  }
                }
                c = 0;
              }
              l = 0;
            }
            throw new JpxError("Out of packets");
          };
        }
        function PositionComponentResolutionLayerIterator(e) {
          var t = e.SIZ,
            a = e.currentTile.index,
            r = e.tiles[a],
            i = r.codingStyleDefaultParameters.layersCount,
            n = t.Csiz,
            s = getPrecinctSizesInImageScale(r),
            o = s;
          var c = 0,
            l = 0,
            h = 0,
            u = 0,
            d = 0;
          this.nextPacket = function JpxImage_nextPacket() {
            for (; d < o.maxNumHigh; d++) {
              for (; u < o.maxNumWide; u++) {
                for (; h < n; h++) {
                  var _e270 = r.components[h],
                    _t209 = _e270.codingStyleParameters.decompositionLevelsCount;
                  for (; l <= _t209; l++) {
                    var _t210 = _e270.resolutions[l],
                      _a150 = s.components[h].resolutions[l],
                      _r130 = getPrecinctIndexIfExist(u, d, _a150, o, _t210);
                    if (null !== _r130) {
                      for (; c < i;) {
                        var _e271 = createPacket(_t210, _r130, c);
                        c++;
                        return _e271;
                      }
                      c = 0;
                    }
                  }
                  l = 0;
                }
                h = 0;
              }
              u = 0;
            }
            throw new JpxError("Out of packets");
          };
        }
        function ComponentPositionResolutionLayerIterator(e) {
          var t = e.SIZ,
            a = e.currentTile.index,
            r = e.tiles[a],
            i = r.codingStyleDefaultParameters.layersCount,
            n = t.Csiz,
            s = getPrecinctSizesInImageScale(r);
          var o = 0,
            c = 0,
            l = 0,
            h = 0,
            u = 0;
          this.nextPacket = function JpxImage_nextPacket() {
            for (; l < n; ++l) {
              var _e272 = r.components[l],
                _t211 = s.components[l],
                _a151 = _e272.codingStyleParameters.decompositionLevelsCount;
              for (; u < _t211.maxNumHigh; u++) {
                for (; h < _t211.maxNumWide; h++) {
                  for (; c <= _a151; c++) {
                    var _a152 = _e272.resolutions[c],
                      _r131 = _t211.resolutions[c],
                      _n78 = getPrecinctIndexIfExist(h, u, _r131, _t211, _a152);
                    if (null !== _n78) {
                      for (; o < i;) {
                        var _e273 = createPacket(_a152, _n78, o);
                        o++;
                        return _e273;
                      }
                      o = 0;
                    }
                  }
                  c = 0;
                }
                h = 0;
              }
              u = 0;
            }
            throw new JpxError("Out of packets");
          };
        }
        function getPrecinctIndexIfExist(e, t, a, r, i) {
          var n = e * r.minWidth,
            s = t * r.minHeight;
          if (n % a.width != 0 || s % a.height != 0) return null;
          var o = s / a.width * i.precinctParameters.numprecinctswide;
          return n / a.height + o;
        }
        function getPrecinctSizesInImageScale(e) {
          var t = e.components.length;
          var a = Number.MAX_VALUE,
            r = Number.MAX_VALUE,
            i = 0,
            n = 0;
          var s = new Array(t);
          for (var _o40 = 0; _o40 < t; _o40++) {
            var _t212 = e.components[_o40],
              _c23 = _t212.codingStyleParameters.decompositionLevelsCount,
              l = new Array(_c23 + 1);
            var _h14 = Number.MAX_VALUE,
              u = Number.MAX_VALUE,
              d = 0,
              _f7 = 0,
              _g9 = 1;
            for (var _e274 = _c23; _e274 >= 0; --_e274) {
              var _a153 = _t212.resolutions[_e274],
                _r132 = _g9 * _a153.precinctParameters.precinctWidth,
                _i105 = _g9 * _a153.precinctParameters.precinctHeight;
              _h14 = Math.min(_h14, _r132);
              u = Math.min(u, _i105);
              d = Math.max(d, _a153.precinctParameters.numprecinctswide);
              _f7 = Math.max(_f7, _a153.precinctParameters.numprecinctshigh);
              l[_e274] = {
                width: _r132,
                height: _i105
              };
              _g9 <<= 1;
            }
            a = Math.min(a, _h14);
            r = Math.min(r, u);
            i = Math.max(i, d);
            n = Math.max(n, _f7);
            s[_o40] = {
              resolutions: l,
              minWidth: _h14,
              minHeight: u,
              maxNumWide: d,
              maxNumHigh: _f7
            };
          }
          return {
            components: s,
            minWidth: a,
            minHeight: r,
            maxNumWide: i,
            maxNumHigh: n
          };
        }
        function buildPackets(e) {
          var t = e.SIZ,
            a = e.currentTile.index,
            r = e.tiles[a],
            i = t.Csiz;
          for (var _e275 = 0; _e275 < i; _e275++) {
            var _t213 = r.components[_e275],
              _a154 = _t213.codingStyleParameters.decompositionLevelsCount,
              _i106 = [],
              _n79 = [];
            for (var _e276 = 0; _e276 <= _a154; _e276++) {
              var _r133 = getBlocksDimensions(0, _t213, _e276),
                _s53 = {},
                _o41 = 1 << _a154 - _e276;
              _s53.trx0 = Math.ceil(_t213.tcx0 / _o41);
              _s53.try0 = Math.ceil(_t213.tcy0 / _o41);
              _s53.trx1 = Math.ceil(_t213.tcx1 / _o41);
              _s53.try1 = Math.ceil(_t213.tcy1 / _o41);
              _s53.resLevel = _e276;
              buildPrecincts(0, _s53, _r133);
              _i106.push(_s53);
              var _c24 = void 0;
              if (0 === _e276) {
                _c24 = {};
                _c24.type = "LL";
                _c24.tbx0 = Math.ceil(_t213.tcx0 / _o41);
                _c24.tby0 = Math.ceil(_t213.tcy0 / _o41);
                _c24.tbx1 = Math.ceil(_t213.tcx1 / _o41);
                _c24.tby1 = Math.ceil(_t213.tcy1 / _o41);
                _c24.resolution = _s53;
                buildCodeblocks(0, _c24, _r133);
                _n79.push(_c24);
                _s53.subbands = [_c24];
              } else {
                var _i107 = 1 << _a154 - _e276 + 1,
                  _o42 = [];
                _c24 = {};
                _c24.type = "HL";
                _c24.tbx0 = Math.ceil(_t213.tcx0 / _i107 - .5);
                _c24.tby0 = Math.ceil(_t213.tcy0 / _i107);
                _c24.tbx1 = Math.ceil(_t213.tcx1 / _i107 - .5);
                _c24.tby1 = Math.ceil(_t213.tcy1 / _i107);
                _c24.resolution = _s53;
                buildCodeblocks(0, _c24, _r133);
                _n79.push(_c24);
                _o42.push(_c24);
                _c24 = {};
                _c24.type = "LH";
                _c24.tbx0 = Math.ceil(_t213.tcx0 / _i107);
                _c24.tby0 = Math.ceil(_t213.tcy0 / _i107 - .5);
                _c24.tbx1 = Math.ceil(_t213.tcx1 / _i107);
                _c24.tby1 = Math.ceil(_t213.tcy1 / _i107 - .5);
                _c24.resolution = _s53;
                buildCodeblocks(0, _c24, _r133);
                _n79.push(_c24);
                _o42.push(_c24);
                _c24 = {};
                _c24.type = "HH";
                _c24.tbx0 = Math.ceil(_t213.tcx0 / _i107 - .5);
                _c24.tby0 = Math.ceil(_t213.tcy0 / _i107 - .5);
                _c24.tbx1 = Math.ceil(_t213.tcx1 / _i107 - .5);
                _c24.tby1 = Math.ceil(_t213.tcy1 / _i107 - .5);
                _c24.resolution = _s53;
                buildCodeblocks(0, _c24, _r133);
                _n79.push(_c24);
                _o42.push(_c24);
                _s53.subbands = _o42;
              }
            }
            _t213.resolutions = _i106;
            _t213.subbands = _n79;
          }
          var n = r.codingStyleDefaultParameters.progressionOrder;
          switch (n) {
            case 0:
              r.packetsIterator = new LayerResolutionComponentPositionIterator(e);
              break;
            case 1:
              r.packetsIterator = new ResolutionLayerComponentPositionIterator(e);
              break;
            case 2:
              r.packetsIterator = new ResolutionPositionComponentLayerIterator(e);
              break;
            case 3:
              r.packetsIterator = new PositionComponentResolutionLayerIterator(e);
              break;
            case 4:
              r.packetsIterator = new ComponentPositionResolutionLayerIterator(e);
              break;
            default:
              throw new JpxError("Unsupported progression order ".concat(n));
          }
        }
        function parseTilePackets(e, t, a, r) {
          var n,
            s = 0,
            o = 0,
            c = !1;
          function readBits(e) {
            for (; o < e;) {
              var _e277 = t[a + s];
              s++;
              if (c) {
                n = n << 7 | _e277;
                o += 7;
                c = !1;
              } else {
                n = n << 8 | _e277;
                o += 8;
              }
              255 === _e277 && (c = !0);
            }
            o -= e;
            return n >>> o & (1 << e) - 1;
          }
          function skipMarkerIfEqual(e) {
            if (255 === t[a + s - 1] && t[a + s] === e) {
              skipBytes(1);
              return !0;
            }
            if (255 === t[a + s] && t[a + s + 1] === e) {
              skipBytes(2);
              return !0;
            }
            return !1;
          }
          function skipBytes(e) {
            s += e;
          }
          function alignToByte() {
            o = 0;
            if (c) {
              s++;
              c = !1;
            }
          }
          function readCodingpasses() {
            if (0 === readBits(1)) return 1;
            if (0 === readBits(1)) return 2;
            var e = readBits(2);
            if (e < 3) return e + 3;
            e = readBits(5);
            if (e < 31) return e + 6;
            e = readBits(7);
            return e + 37;
          }
          var l = e.currentTile.index,
            h = e.tiles[l],
            u = e.COD.sopMarkerUsed,
            d = e.COD.ephMarkerUsed,
            f = h.packetsIterator;
          for (; s < r;) {
            alignToByte();
            u && skipMarkerIfEqual(145) && skipBytes(4);
            var _e278 = f.nextPacket();
            if (!readBits(1)) continue;
            var _r134 = _e278.layerNumber,
              _n80 = [];
            var _o43 = void 0;
            for (var _t214 = 0, _a155 = _e278.codeblocks.length; _t214 < _a155; _t214++) {
              _o43 = _e278.codeblocks[_t214];
              var _a156 = _o43.precinct;
              var _s54 = _o43.cbx - _a156.cbxMin,
                _c25 = _o43.cby - _a156.cbyMin;
              var _l15 = void 0,
                _h15 = void 0,
                _u11 = !1,
                _d8 = !1;
              if (void 0 !== _o43.included) _u11 = !!readBits(1);else {
                _a156 = _o43.precinct;
                var _e279 = void 0;
                if (void 0 !== _a156.inclusionTree) _e279 = _a156.inclusionTree;else {
                  var _t215 = _a156.cbxMax - _a156.cbxMin + 1,
                    _i108 = _a156.cbyMax - _a156.cbyMin + 1;
                  _e279 = new InclusionTree(_t215, _i108, _r134);
                  _h15 = new TagTree(_t215, _i108);
                  _a156.inclusionTree = _e279;
                  _a156.zeroBitPlanesTree = _h15;
                  for (var _e280 = 0; _e280 < _r134; _e280++) if (0 !== readBits(1)) throw new JpxError("Invalid tag tree");
                }
                if (_e279.reset(_s54, _c25, _r134)) for (;;) {
                  if (!readBits(1)) {
                    _e279.incrementValue(_r134);
                    break;
                  }
                  _l15 = !_e279.nextLevel();
                  if (_l15) {
                    _o43.included = !0;
                    _u11 = _d8 = !0;
                    break;
                  }
                }
              }
              if (!_u11) continue;
              if (_d8) {
                _h15 = _a156.zeroBitPlanesTree;
                _h15.reset(_s54, _c25);
                for (;;) if (readBits(1)) {
                  _l15 = !_h15.nextLevel();
                  if (_l15) break;
                } else _h15.incrementValue();
                _o43.zeroBitPlanes = _h15.value;
              }
              var _f8 = readCodingpasses();
              for (; readBits(1);) _o43.Lblock++;
              var _g10 = (0, i.log2)(_f8),
                _p8 = readBits((_f8 < 1 << _g10 ? _g10 - 1 : _g10) + _o43.Lblock);
              _n80.push({
                codeblock: _o43,
                codingpasses: _f8,
                dataLength: _p8
              });
            }
            alignToByte();
            d && skipMarkerIfEqual(146);
            for (; _n80.length > 0;) {
              var _e281 = _n80.shift();
              _o43 = _e281.codeblock;
              void 0 === _o43.data && (_o43.data = []);
              _o43.data.push({
                data: t,
                start: a + s,
                end: a + s + _e281.dataLength,
                codingpasses: _e281.codingpasses
              });
              s += _e281.dataLength;
            }
          }
          return s;
        }
        function copyCoefficients(e, t, a, r, i, s, o, c, l) {
          var h = r.tbx0,
            u = r.tby0,
            d = r.tbx1 - r.tbx0,
            f = r.codeblocks,
            g = "H" === r.type.charAt(0) ? 1 : 0,
            p = "H" === r.type.charAt(1) ? t : 0;
          for (var _a157 = 0, m = f.length; _a157 < m; ++_a157) {
            var _m3 = f[_a157],
              b = _m3.tbx1_ - _m3.tbx0_,
              y = _m3.tby1_ - _m3.tby0_;
            if (0 === b || 0 === y) continue;
            if (void 0 === _m3.data) continue;
            var w = new BitModel(b, y, _m3.subbandType, _m3.zeroBitPlanes, s);
            var S = 2;
            var x = _m3.data;
            var C = void 0,
              k = void 0,
              v = void 0,
              F = 0,
              O = 0;
            for (C = 0, k = x.length; C < k; C++) {
              v = x[C];
              F += v.end - v.start;
              O += v.codingpasses;
            }
            var T = new Uint8Array(F);
            var M = 0;
            for (C = 0, k = x.length; C < k; C++) {
              v = x[C];
              var _e282 = v.data.subarray(v.start, v.end);
              T.set(_e282, M);
              M += _e282.length;
            }
            var E = new n.ArithmeticDecoder(T, 0, F);
            w.setDecoder(E);
            for (C = 0; C < O; C++) {
              switch (S) {
                case 0:
                  w.runSignificancePropagationPass();
                  break;
                case 1:
                  w.runMagnitudeRefinementPass();
                  break;
                case 2:
                  w.runCleanupPass();
                  c && w.checkSegmentationSymbol();
              }
              l && w.reset();
              S = (S + 1) % 3;
            }
            var D = _m3.tbx0_ - h + (_m3.tby0_ - u) * d;
            var N = w.coefficentsSign,
              R = w.coefficentsMagnitude,
              L = w.bitsDecoded,
              _ = o ? 0 : .5;
            var $ = void 0,
              j = void 0,
              U = void 0;
            M = 0;
            var X = "LL" !== r.type;
            for (C = 0; C < y; C++) {
              var _a158 = 2 * (D / d | 0) * (t - d) + g + p;
              for ($ = 0; $ < b; $++) {
                j = R[M];
                if (0 !== j) {
                  j = (j + _) * i;
                  0 !== N[M] && (j = -j);
                  U = L[M];
                  var _t216 = X ? _a158 + (D << 1) : D;
                  e[_t216] = o && U >= s ? j : j * (1 << s - U);
                }
                D++;
                M++;
              }
              D += d - b;
            }
          }
        }
        function transformTile(e, t, a) {
          var r = t.components[a],
            i = r.codingStyleParameters,
            n = r.quantizationParameters,
            o = i.decompositionLevelsCount,
            c = n.SPqcds,
            l = n.scalarExpounded,
            h = n.guardBits,
            u = i.segmentationSymbolUsed,
            d = i.resetContextProbabilities,
            f = e.components[a].precision,
            g = i.reversibleTransformation,
            p = g ? new ReversibleTransform() : new IrreversibleTransform(),
            m = [];
          var b = 0;
          for (var _e283 = 0; _e283 <= o; _e283++) {
            var _t217 = r.resolutions[_e283],
              _a159 = _t217.trx1 - _t217.trx0,
              _i109 = _t217.try1 - _t217.try0,
              _n81 = new Float32Array(_a159 * _i109);
            for (var _r135 = 0, _i110 = _t217.subbands.length; _r135 < _i110; _r135++) {
              var _i111 = void 0,
                _o44 = void 0;
              if (l) {
                _i111 = c[b].mu;
                _o44 = c[b].epsilon;
                b++;
              } else {
                _i111 = c[0].mu;
                _o44 = c[0].epsilon + (_e283 > 0 ? 1 - _e283 : 0);
              }
              var _p9 = _t217.subbands[_r135],
                _m4 = s[_p9.type];
              copyCoefficients(_n81, _a159, 0, _p9, g ? 1 : Math.pow(2, f + _m4 - _o44) * (1 + _i111 / 2048), h + _o44 - 1, g, u, d);
            }
            m.push({
              width: _a159,
              height: _i109,
              items: _n81
            });
          }
          var y = p.calculate(m, r.tcx0, r.tcy0);
          return {
            left: r.tcx0,
            top: r.tcy0,
            width: y.width,
            height: y.height,
            items: y.items
          };
        }
        function initializeTile(e, t) {
          var a = e.SIZ.Csiz,
            r = e.tiles[t];
          for (var _t218 = 0; _t218 < a; _t218++) {
            var _a160 = r.components[_t218],
              _i112 = void 0 !== e.currentTile.QCC[_t218] ? e.currentTile.QCC[_t218] : e.currentTile.QCD;
            _a160.quantizationParameters = _i112;
            var _n82 = void 0 !== e.currentTile.COC[_t218] ? e.currentTile.COC[_t218] : e.currentTile.COD;
            _a160.codingStyleParameters = _n82;
          }
          r.codingStyleDefaultParameters = e.currentTile.COD;
        }
        var TagTree = /*#__PURE__*/function () {
          function TagTree(e, t) {
            _classCallCheck(this, TagTree);
            var a = (0, i.log2)(Math.max(e, t)) + 1;
            this.levels = [];
            for (var _r136 = 0; _r136 < a; _r136++) {
              var _a161 = {
                width: e,
                height: t,
                items: []
              };
              this.levels.push(_a161);
              e = Math.ceil(e / 2);
              t = Math.ceil(t / 2);
            }
          }
          _createClass(TagTree, [{
            key: "reset",
            value: function reset(e, t) {
              var a,
                r = 0,
                i = 0;
              for (; r < this.levels.length;) {
                a = this.levels[r];
                var _n83 = e + t * a.width;
                if (void 0 !== a.items[_n83]) {
                  i = a.items[_n83];
                  break;
                }
                a.index = _n83;
                e >>= 1;
                t >>= 1;
                r++;
              }
              r--;
              a = this.levels[r];
              a.items[a.index] = i;
              this.currentLevel = r;
              delete this.value;
            }
          }, {
            key: "incrementValue",
            value: function incrementValue() {
              var e = this.levels[this.currentLevel];
              e.items[e.index]++;
            }
          }, {
            key: "nextLevel",
            value: function nextLevel() {
              var e = this.currentLevel,
                t = this.levels[e];
              var a = t.items[t.index];
              e--;
              if (e < 0) {
                this.value = a;
                return !1;
              }
              this.currentLevel = e;
              t = this.levels[e];
              t.items[t.index] = a;
              return !0;
            }
          }]);
          return TagTree;
        }();
        var InclusionTree = /*#__PURE__*/function () {
          function InclusionTree(e, t, a) {
            _classCallCheck(this, InclusionTree);
            var r = (0, i.log2)(Math.max(e, t)) + 1;
            this.levels = [];
            for (var _i113 = 0; _i113 < r; _i113++) {
              var _r137 = new Uint8Array(e * t);
              for (var _e284 = 0, _t219 = _r137.length; _e284 < _t219; _e284++) _r137[_e284] = a;
              var _i114 = {
                width: e,
                height: t,
                items: _r137
              };
              this.levels.push(_i114);
              e = Math.ceil(e / 2);
              t = Math.ceil(t / 2);
            }
          }
          _createClass(InclusionTree, [{
            key: "reset",
            value: function reset(e, t, a) {
              var r = 0;
              for (; r < this.levels.length;) {
                var _i115 = this.levels[r],
                  _n84 = e + t * _i115.width;
                _i115.index = _n84;
                var _s55 = _i115.items[_n84];
                if (255 === _s55) break;
                if (_s55 > a) {
                  this.currentLevel = r;
                  this.propagateValues();
                  return !1;
                }
                e >>= 1;
                t >>= 1;
                r++;
              }
              this.currentLevel = r - 1;
              return !0;
            }
          }, {
            key: "incrementValue",
            value: function incrementValue(e) {
              var t = this.levels[this.currentLevel];
              t.items[t.index] = e + 1;
              this.propagateValues();
            }
          }, {
            key: "propagateValues",
            value: function propagateValues() {
              var e = this.currentLevel,
                t = this.levels[e];
              var a = t.items[t.index];
              for (; --e >= 0;) {
                t = this.levels[e];
                t.items[t.index] = a;
              }
            }
          }, {
            key: "nextLevel",
            value: function nextLevel() {
              var e = this.currentLevel,
                t = this.levels[e];
              var a = t.items[t.index];
              t.items[t.index] = 255;
              e--;
              if (e < 0) return !1;
              this.currentLevel = e;
              t = this.levels[e];
              t.items[t.index] = a;
              return !0;
            }
          }]);
          return InclusionTree;
        }();
        var BitModel = /*#__PURE__*/function () {
          function BitModel(e, t, a, r, i) {
            _classCallCheck(this, BitModel);
            this.width = e;
            this.height = t;
            var n;
            n = "HH" === a ? BitModel.HHContextLabel : "HL" === a ? BitModel.HLContextLabel : BitModel.LLAndLHContextsLabel;
            this.contextLabelTable = n;
            var s = e * t;
            this.neighborsSignificance = new Uint8Array(s);
            this.coefficentsSign = new Uint8Array(s);
            var o;
            o = i > 14 ? new Uint32Array(s) : i > 6 ? new Uint16Array(s) : new Uint8Array(s);
            this.coefficentsMagnitude = o;
            this.processingFlags = new Uint8Array(s);
            var c = new Uint8Array(s);
            if (0 !== r) for (var _e285 = 0; _e285 < s; _e285++) c[_e285] = r;
            this.bitsDecoded = c;
            this.reset();
          }
          _createClass(BitModel, [{
            key: "setDecoder",
            value: function setDecoder(e) {
              this.decoder = e;
            }
          }, {
            key: "reset",
            value: function reset() {
              this.contexts = new Int8Array(19);
              this.contexts[0] = 8;
              this.contexts[BitModel.UNIFORM_CONTEXT] = 92;
              this.contexts[BitModel.RUNLENGTH_CONTEXT] = 6;
            }
          }, {
            key: "setNeighborsSignificance",
            value: function setNeighborsSignificance(e, t, a) {
              var r = this.neighborsSignificance,
                i = this.width,
                n = this.height,
                s = t > 0,
                o = t + 1 < i;
              var c;
              if (e > 0) {
                c = a - i;
                s && (r[c - 1] += 16);
                o && (r[c + 1] += 16);
                r[c] += 4;
              }
              if (e + 1 < n) {
                c = a + i;
                s && (r[c - 1] += 16);
                o && (r[c + 1] += 16);
                r[c] += 4;
              }
              s && (r[a - 1] += 1);
              o && (r[a + 1] += 1);
              r[a] |= 128;
            }
          }, {
            key: "runSignificancePropagationPass",
            value: function runSignificancePropagationPass() {
              var e = this.decoder,
                t = this.width,
                a = this.height,
                r = this.coefficentsMagnitude,
                i = this.coefficentsSign,
                n = this.neighborsSignificance,
                s = this.processingFlags,
                o = this.contexts,
                c = this.contextLabelTable,
                l = this.bitsDecoded;
              for (var _h16 = 0; _h16 < a; _h16 += 4) for (var u = 0; u < t; u++) {
                var d = _h16 * t + u;
                for (var _f9 = 0; _f9 < 4; _f9++, d += t) {
                  var _t220 = _h16 + _f9;
                  if (_t220 >= a) break;
                  s[d] &= -2;
                  if (r[d] || !n[d]) continue;
                  var _g11 = c[n[d]];
                  if (e.readBit(o, _g11)) {
                    var _e286 = this.decodeSignBit(_t220, u, d);
                    i[d] = _e286;
                    r[d] = 1;
                    this.setNeighborsSignificance(_t220, u, d);
                    s[d] |= 2;
                  }
                  l[d]++;
                  s[d] |= 1;
                }
              }
            }
          }, {
            key: "decodeSignBit",
            value: function decodeSignBit(e, t, a) {
              var r = this.width,
                i = this.height,
                n = this.coefficentsMagnitude,
                s = this.coefficentsSign;
              var o, c, l, h, u, d;
              h = t > 0 && 0 !== n[a - 1];
              if (t + 1 < r && 0 !== n[a + 1]) {
                l = s[a + 1];
                if (h) {
                  c = s[a - 1];
                  o = 1 - l - c;
                } else o = 1 - l - l;
              } else if (h) {
                c = s[a - 1];
                o = 1 - c - c;
              } else o = 0;
              var f = 3 * o;
              h = e > 0 && 0 !== n[a - r];
              if (e + 1 < i && 0 !== n[a + r]) {
                l = s[a + r];
                if (h) {
                  c = s[a - r];
                  o = 1 - l - c + f;
                } else o = 1 - l - l + f;
              } else if (h) {
                c = s[a - r];
                o = 1 - c - c + f;
              } else o = f;
              if (o >= 0) {
                u = 9 + o;
                d = this.decoder.readBit(this.contexts, u);
              } else {
                u = 9 - o;
                d = 1 ^ this.decoder.readBit(this.contexts, u);
              }
              return d;
            }
          }, {
            key: "runMagnitudeRefinementPass",
            value: function runMagnitudeRefinementPass() {
              var e = this.decoder,
                t = this.width,
                a = this.height,
                r = this.coefficentsMagnitude,
                i = this.neighborsSignificance,
                n = this.contexts,
                s = this.bitsDecoded,
                o = this.processingFlags,
                c = t * a,
                l = 4 * t;
              for (var _a162, _h17 = 0; _h17 < c; _h17 = _a162) {
                _a162 = Math.min(c, _h17 + l);
                for (var _c26 = 0; _c26 < t; _c26++) for (var _l16 = _h17 + _c26; _l16 < _a162; _l16 += t) {
                  if (!r[_l16] || 0 != (1 & o[_l16])) continue;
                  var _t221 = 16;
                  if (0 != (2 & o[_l16])) {
                    o[_l16] ^= 2;
                    _t221 = 0 === (127 & i[_l16]) ? 15 : 14;
                  }
                  var _a163 = e.readBit(n, _t221);
                  r[_l16] = r[_l16] << 1 | _a163;
                  s[_l16]++;
                  o[_l16] |= 1;
                }
              }
            }
          }, {
            key: "runCleanupPass",
            value: function runCleanupPass() {
              var e = this.decoder,
                t = this.width,
                a = this.height,
                r = this.neighborsSignificance,
                i = this.coefficentsMagnitude,
                n = this.coefficentsSign,
                s = this.contexts,
                o = this.contextLabelTable,
                c = this.bitsDecoded,
                l = this.processingFlags,
                h = t,
                u = 2 * t,
                d = 3 * t;
              var f;
              for (var _g12 = 0; _g12 < a; _g12 = f) {
                f = Math.min(_g12 + 4, a);
                var _p10 = _g12 * t,
                  m = _g12 + 3 < a;
                for (var _a164 = 0; _a164 < t; _a164++) {
                  var b = _p10 + _a164;
                  var y = void 0,
                    w = 0,
                    S = b,
                    x = _g12;
                  if (m && 0 === l[b] && 0 === l[b + h] && 0 === l[b + u] && 0 === l[b + d] && 0 === r[b] && 0 === r[b + h] && 0 === r[b + u] && 0 === r[b + d]) {
                    if (!e.readBit(s, BitModel.RUNLENGTH_CONTEXT)) {
                      c[b]++;
                      c[b + h]++;
                      c[b + u]++;
                      c[b + d]++;
                      continue;
                    }
                    w = e.readBit(s, BitModel.UNIFORM_CONTEXT) << 1 | e.readBit(s, BitModel.UNIFORM_CONTEXT);
                    if (0 !== w) {
                      x = _g12 + w;
                      S += w * t;
                    }
                    y = this.decodeSignBit(x, _a164, S);
                    n[S] = y;
                    i[S] = 1;
                    this.setNeighborsSignificance(x, _a164, S);
                    l[S] |= 2;
                    S = b;
                    for (var _e287 = _g12; _e287 <= x; _e287++, S += t) c[S]++;
                    w++;
                  }
                  for (x = _g12 + w; x < f; x++, S += t) {
                    if (i[S] || 0 != (1 & l[S])) continue;
                    var _t222 = o[r[S]];
                    if (1 === e.readBit(s, _t222)) {
                      y = this.decodeSignBit(x, _a164, S);
                      n[S] = y;
                      i[S] = 1;
                      this.setNeighborsSignificance(x, _a164, S);
                      l[S] |= 2;
                    }
                    c[S]++;
                  }
                }
              }
            }
          }, {
            key: "checkSegmentationSymbol",
            value: function checkSegmentationSymbol() {
              var e = this.decoder,
                t = this.contexts;
              if (10 !== (e.readBit(t, BitModel.UNIFORM_CONTEXT) << 3 | e.readBit(t, BitModel.UNIFORM_CONTEXT) << 2 | e.readBit(t, BitModel.UNIFORM_CONTEXT) << 1 | e.readBit(t, BitModel.UNIFORM_CONTEXT))) throw new JpxError("Invalid segmentation symbol");
            }
          }]);
          return BitModel;
        }();
        _defineProperty(BitModel, "UNIFORM_CONTEXT", 17);
        _defineProperty(BitModel, "RUNLENGTH_CONTEXT", 18);
        _defineProperty(BitModel, "LLAndLHContextsLabel", new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]));
        _defineProperty(BitModel, "HLContextLabel", new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]));
        _defineProperty(BitModel, "HHContextLabel", new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]));
        var Transform = /*#__PURE__*/function () {
          function Transform() {
            _classCallCheck(this, Transform);
            this.constructor === Transform && (0, r.unreachable)("Cannot initialize Transform.");
          }
          _createClass(Transform, [{
            key: "calculate",
            value: function calculate(e, t, a) {
              var r = e[0];
              for (var _i116 = 1, _n85 = e.length; _i116 < _n85; _i116++) r = this.iterate(r, e[_i116], t, a);
              return r;
            }
          }, {
            key: "extend",
            value: function extend(e, t, a) {
              var r = t - 1,
                i = t + 1,
                n = t + a - 2,
                s = t + a;
              e[r--] = e[i++];
              e[s++] = e[n--];
              e[r--] = e[i++];
              e[s++] = e[n--];
              e[r--] = e[i++];
              e[s++] = e[n--];
              e[r] = e[i];
              e[s] = e[n];
            }
          }, {
            key: "filter",
            value: function filter(e, t, a) {
              (0, r.unreachable)("Abstract method `filter` called");
            }
          }, {
            key: "iterate",
            value: function iterate(e, t, a, r) {
              var i = e.width,
                n = e.height;
              var s = e.items;
              var o = t.width,
                c = t.height,
                l = t.items;
              var h, u, d, f, g, p;
              for (d = 0, h = 0; h < n; h++) {
                f = 2 * h * o;
                for (u = 0; u < i; u++, d++, f += 2) l[f] = s[d];
              }
              s = e.items = null;
              var m = new Float32Array(o + 8);
              if (1 === o) {
                if (0 != (1 & a)) for (p = 0, d = 0; p < c; p++, d += o) l[d] *= .5;
              } else for (p = 0, d = 0; p < c; p++, d += o) {
                m.set(l.subarray(d, d + o), 4);
                this.extend(m, 4, o);
                this.filter(m, 4, o);
                l.set(m.subarray(4, 4 + o), d);
              }
              var b = 16;
              var y = [];
              for (h = 0; h < b; h++) y.push(new Float32Array(c + 8));
              var w,
                S = 0;
              e = 4 + c;
              if (1 === c) {
                if (0 != (1 & r)) for (g = 0; g < o; g++) l[g] *= .5;
              } else for (g = 0; g < o; g++) {
                if (0 === S) {
                  b = Math.min(o - g, b);
                  for (d = g, f = 4; f < e; d += o, f++) for (w = 0; w < b; w++) y[w][f] = l[d + w];
                  S = b;
                }
                S--;
                var _t223 = y[S];
                this.extend(_t223, 4, c);
                this.filter(_t223, 4, c);
                if (0 === S) {
                  d = g - b + 1;
                  for (f = 4; f < e; d += o, f++) for (w = 0; w < b; w++) l[d + w] = y[w][f];
                }
              }
              return {
                width: o,
                height: c,
                items: l
              };
            }
          }]);
          return Transform;
        }();
        var IrreversibleTransform = /*#__PURE__*/function (_Transform) {
          _inherits(IrreversibleTransform, _Transform);
          var _super67 = _createSuper(IrreversibleTransform);
          function IrreversibleTransform() {
            _classCallCheck(this, IrreversibleTransform);
            return _super67.apply(this, arguments);
          }
          _createClass(IrreversibleTransform, [{
            key: "filter",
            value: function filter(e, t, a) {
              var r = a >> 1;
              var i, n, s, o;
              var c = -1.586134342059924,
                l = -.052980118572961,
                h = .882911075530934,
                u = .443506852043971,
                d = 1.230174104914001;
              i = (t |= 0) - 3;
              for (n = r + 4; n--; i += 2) e[i] *= .8128930661159609;
              i = t - 2;
              s = u * e[i - 1];
              for (n = r + 3; n--; i += 2) {
                o = u * e[i + 1];
                e[i] = d * e[i] - s - o;
                if (!n--) break;
                i += 2;
                s = u * e[i + 1];
                e[i] = d * e[i] - s - o;
              }
              i = t - 1;
              s = h * e[i - 1];
              for (n = r + 2; n--; i += 2) {
                o = h * e[i + 1];
                e[i] -= s + o;
                if (!n--) break;
                i += 2;
                s = h * e[i + 1];
                e[i] -= s + o;
              }
              i = t;
              s = l * e[i - 1];
              for (n = r + 1; n--; i += 2) {
                o = l * e[i + 1];
                e[i] -= s + o;
                if (!n--) break;
                i += 2;
                s = l * e[i + 1];
                e[i] -= s + o;
              }
              if (0 !== r) {
                i = t + 1;
                s = c * e[i - 1];
                for (n = r; n--; i += 2) {
                  o = c * e[i + 1];
                  e[i] -= s + o;
                  if (!n--) break;
                  i += 2;
                  s = c * e[i + 1];
                  e[i] -= s + o;
                }
              }
            }
          }]);
          return IrreversibleTransform;
        }(Transform);
        var ReversibleTransform = /*#__PURE__*/function (_Transform2) {
          _inherits(ReversibleTransform, _Transform2);
          var _super68 = _createSuper(ReversibleTransform);
          function ReversibleTransform() {
            _classCallCheck(this, ReversibleTransform);
            return _super68.apply(this, arguments);
          }
          _createClass(ReversibleTransform, [{
            key: "filter",
            value: function filter(e, t, a) {
              var r = a >> 1;
              var i, n;
              for (i = t |= 0, n = r + 1; n--; i += 2) e[i] -= e[i - 1] + e[i + 1] + 2 >> 2;
              for (i = t + 1, n = r; n--; i += 2) e[i] += e[i - 1] + e[i + 1] >> 1;
            }
          }]);
          return ReversibleTransform;
        }(Transform);
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.LZWStream = void 0;
        var r = a(18);
        var LZWStream = /*#__PURE__*/function (_r$DecodeStream6) {
          _inherits(LZWStream, _r$DecodeStream6);
          var _super69 = _createSuper(LZWStream);
          function LZWStream(e, t, a) {
            var _this74;
            _classCallCheck(this, LZWStream);
            _this74 = _super69.call(this, t);
            _this74.str = e;
            _this74.dict = e.dict;
            _this74.cachedData = 0;
            _this74.bitsCached = 0;
            var r = 4096,
              i = {
                earlyChange: a,
                codeLength: 9,
                nextCode: 258,
                dictionaryValues: new Uint8Array(r),
                dictionaryLengths: new Uint16Array(r),
                dictionaryPrevCodes: new Uint16Array(r),
                currentSequence: new Uint8Array(r),
                currentSequenceLength: 0
              };
            for (var _e288 = 0; _e288 < 256; ++_e288) {
              i.dictionaryValues[_e288] = _e288;
              i.dictionaryLengths[_e288] = 1;
            }
            _this74.lzwState = i;
            return _this74;
          }
          _createClass(LZWStream, [{
            key: "readBits",
            value: function readBits(e) {
              var t = this.bitsCached,
                a = this.cachedData;
              for (; t < e;) {
                var _e289 = this.str.getByte();
                if (-1 === _e289) {
                  this.eof = !0;
                  return null;
                }
                a = a << 8 | _e289;
                t += 8;
              }
              this.bitsCached = t -= e;
              this.cachedData = a;
              this.lastCode = null;
              return a >>> t & (1 << e) - 1;
            }
          }, {
            key: "readBlock",
            value: function readBlock() {
              var e,
                t,
                a,
                r = 1024;
              var i = this.lzwState;
              if (!i) return;
              var n = i.earlyChange;
              var s = i.nextCode;
              var o = i.dictionaryValues,
                c = i.dictionaryLengths,
                l = i.dictionaryPrevCodes;
              var h = i.codeLength,
                u = i.prevCode;
              var d = i.currentSequence;
              var f = i.currentSequenceLength,
                g = 0,
                p = this.bufferLength,
                m = this.ensureBuffer(this.bufferLength + r);
              for (e = 0; e < 512; e++) {
                var _e290 = this.readBits(h),
                  _i117 = f > 0;
                if (_e290 < 256) {
                  d[0] = _e290;
                  f = 1;
                } else {
                  if (!(_e290 >= 258)) {
                    if (256 === _e290) {
                      h = 9;
                      s = 258;
                      f = 0;
                      continue;
                    }
                    this.eof = !0;
                    delete this.lzwState;
                    break;
                  }
                  if (_e290 < s) {
                    f = c[_e290];
                    for (t = f - 1, a = _e290; t >= 0; t--) {
                      d[t] = o[a];
                      a = l[a];
                    }
                  } else d[f++] = d[0];
                }
                if (_i117) {
                  l[s] = u;
                  c[s] = c[u] + 1;
                  o[s] = d[0];
                  s++;
                  h = s + n & s + n - 1 ? h : 0 | Math.min(Math.log(s + n) / .6931471805599453 + 1, 12);
                }
                u = _e290;
                g += f;
                if (r < g) {
                  do {
                    r += 512;
                  } while (r < g);
                  m = this.ensureBuffer(this.bufferLength + r);
                }
                for (t = 0; t < f; t++) m[p++] = d[t];
              }
              i.nextCode = s;
              i.codeLength = h;
              i.prevCode = u;
              i.currentSequenceLength = f;
              this.bufferLength = p;
            }
          }]);
          return LZWStream;
        }(r.DecodeStream);
        t.LZWStream = LZWStream;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.PredictorStream = void 0;
        var r = a(18),
          i = a(4),
          n = a(2);
        var PredictorStream = /*#__PURE__*/function (_r$DecodeStream7) {
          _inherits(PredictorStream, _r$DecodeStream7);
          var _super70 = _createSuper(PredictorStream);
          function PredictorStream(e, t, a) {
            var _this75;
            _classCallCheck(this, PredictorStream);
            _this75 = _super70.call(this, t);
            if (!(a instanceof i.Dict)) return _possibleConstructorReturn(_this75, e);
            var r = _this75.predictor = a.get("Predictor") || 1;
            if (r <= 1) return _possibleConstructorReturn(_this75, e);
            if (2 !== r && (r < 10 || r > 15)) throw new n.FormatError("Unsupported predictor: ".concat(r));
            _this75.readBlock = 2 === r ? _this75.readBlockTiff : _this75.readBlockPng;
            _this75.str = e;
            _this75.dict = e.dict;
            var s = _this75.colors = a.get("Colors") || 1,
              o = _this75.bits = a.get("BPC", "BitsPerComponent") || 8,
              c = _this75.columns = a.get("Columns") || 1;
            _this75.pixBytes = s * o + 7 >> 3;
            _this75.rowBytes = c * s * o + 7 >> 3;
            return _possibleConstructorReturn(_this75, _assertThisInitialized(_this75));
          }
          _createClass(PredictorStream, [{
            key: "readBlockTiff",
            value: function readBlockTiff() {
              var e = this.rowBytes,
                t = this.bufferLength,
                a = this.ensureBuffer(t + e),
                r = this.bits,
                i = this.colors,
                n = this.str.getBytes(e);
              this.eof = !n.length;
              if (this.eof) return;
              var s,
                o = 0,
                c = 0,
                l = 0,
                h = 0,
                u = t;
              if (1 === r && 1 === i) for (s = 0; s < e; ++s) {
                var _e291 = n[s] ^ o;
                _e291 ^= _e291 >> 1;
                _e291 ^= _e291 >> 2;
                _e291 ^= _e291 >> 4;
                o = (1 & _e291) << 7;
                a[u++] = _e291;
              } else if (8 === r) {
                for (s = 0; s < i; ++s) a[u++] = n[s];
                for (; s < e; ++s) {
                  a[u] = a[u - i] + n[s];
                  u++;
                }
              } else if (16 === r) {
                var _t224 = 2 * i;
                for (s = 0; s < _t224; ++s) a[u++] = n[s];
                for (; s < e; s += 2) {
                  var _e292 = ((255 & n[s]) << 8) + (255 & n[s + 1]) + ((255 & a[u - _t224]) << 8) + (255 & a[u - _t224 + 1]);
                  a[u++] = _e292 >> 8 & 255;
                  a[u++] = 255 & _e292;
                }
              } else {
                var _e293 = new Uint8Array(i + 1),
                  _u12 = (1 << r) - 1;
                var d = 0,
                  _f10 = t;
                var _g13 = this.columns;
                for (s = 0; s < _g13; ++s) for (var _t225 = 0; _t225 < i; ++_t225) {
                  if (l < r) {
                    o = o << 8 | 255 & n[d++];
                    l += 8;
                  }
                  _e293[_t225] = _e293[_t225] + (o >> l - r) & _u12;
                  l -= r;
                  c = c << r | _e293[_t225];
                  h += r;
                  if (h >= 8) {
                    a[_f10++] = c >> h - 8 & 255;
                    h -= 8;
                  }
                }
                h > 0 && (a[_f10++] = (c << 8 - h) + (o & (1 << 8 - h) - 1));
              }
              this.bufferLength += e;
            }
          }, {
            key: "readBlockPng",
            value: function readBlockPng() {
              var e = this.rowBytes,
                t = this.pixBytes,
                a = this.str.getByte(),
                r = this.str.getBytes(e);
              this.eof = !r.length;
              if (this.eof) return;
              var i = this.bufferLength,
                s = this.ensureBuffer(i + e);
              var o = s.subarray(i - e, i);
              0 === o.length && (o = new Uint8Array(e));
              var c,
                l,
                h,
                u = i;
              switch (a) {
                case 0:
                  for (c = 0; c < e; ++c) s[u++] = r[c];
                  break;
                case 1:
                  for (c = 0; c < t; ++c) s[u++] = r[c];
                  for (; c < e; ++c) {
                    s[u] = s[u - t] + r[c] & 255;
                    u++;
                  }
                  break;
                case 2:
                  for (c = 0; c < e; ++c) s[u++] = o[c] + r[c] & 255;
                  break;
                case 3:
                  for (c = 0; c < t; ++c) s[u++] = (o[c] >> 1) + r[c];
                  for (; c < e; ++c) {
                    s[u] = (o[c] + s[u - t] >> 1) + r[c] & 255;
                    u++;
                  }
                  break;
                case 4:
                  for (c = 0; c < t; ++c) {
                    l = o[c];
                    h = r[c];
                    s[u++] = l + h;
                  }
                  for (; c < e; ++c) {
                    l = o[c];
                    var _e294 = o[c - t],
                      _a165 = s[u - t],
                      _i118 = _a165 + l - _e294;
                    var _n86 = _i118 - _a165;
                    _n86 < 0 && (_n86 = -_n86);
                    var d = _i118 - l;
                    d < 0 && (d = -d);
                    var _f11 = _i118 - _e294;
                    _f11 < 0 && (_f11 = -_f11);
                    h = r[c];
                    s[u++] = _n86 <= d && _n86 <= _f11 ? _a165 + h : d <= _f11 ? l + h : _e294 + h;
                  }
                  break;
                default:
                  throw new n.FormatError("Unsupported predictor: ".concat(a));
              }
              this.bufferLength += e;
            }
          }]);
          return PredictorStream;
        }(r.DecodeStream);
        t.PredictorStream = PredictorStream;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.RunLengthStream = void 0;
        var r = a(18);
        var RunLengthStream = /*#__PURE__*/function (_r$DecodeStream8) {
          _inherits(RunLengthStream, _r$DecodeStream8);
          var _super71 = _createSuper(RunLengthStream);
          function RunLengthStream(e, t) {
            var _this76;
            _classCallCheck(this, RunLengthStream);
            _this76 = _super71.call(this, t);
            _this76.str = e;
            _this76.dict = e.dict;
            return _this76;
          }
          _createClass(RunLengthStream, [{
            key: "readBlock",
            value: function readBlock() {
              var e = this.str.getBytes(2);
              if (!e || e.length < 2 || 128 === e[0]) {
                this.eof = !0;
                return;
              }
              var t,
                a = this.bufferLength,
                r = e[0];
              if (r < 128) {
                t = this.ensureBuffer(a + r + 1);
                t[a++] = e[1];
                if (r > 0) {
                  var _e295 = this.str.getBytes(r);
                  t.set(_e295, a);
                  a += r;
                }
              } else {
                r = 257 - r;
                var _i119 = e[1];
                t = this.ensureBuffer(a + r + 1);
                for (var _e296 = 0; _e296 < r; _e296++) t[a++] = _i119;
              }
              this.bufferLength = a;
            }
          }]);
          return RunLengthStream;
        }(r.DecodeStream);
        t.RunLengthStream = RunLengthStream;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.Font = t.ErrorFont = void 0;
        var r = a(2),
          i = a(35),
          n = a(38),
          s = a(40),
          o = a(39),
          c = a(37),
          l = a(41),
          h = a(42),
          u = a(43),
          d = a(44),
          f = a(45),
          g = a(46),
          p = a(14),
          m = a(47),
          b = a(3),
          y = a(8),
          w = a(48);
        var S = [[57344, 63743], [1048576, 1114109]],
          x = 1e3,
          C = ["ascent", "bbox", "black", "bold", "charProcOperatorList", "composite", "cssFontInfo", "data", "defaultVMetrics", "defaultWidth", "descent", "fallbackName", "fontMatrix", "isInvalidPDFjsFont", "isType3Font", "italic", "loadedName", "mimetype", "missingFile", "name", "remeasure", "subtype", "type", "vertical"],
          k = ["cMap", "defaultEncoding", "differences", "isMonospace", "isSerifFont", "isSymbolicFont", "seacMap", "toFontChar", "toUnicode", "vmetrics", "widths"];
        function adjustWidths(e) {
          if (!e.fontMatrix) return;
          if (e.fontMatrix[0] === r.FONT_IDENTITY_MATRIX[0]) return;
          var t = .001 / e.fontMatrix[0],
            a = e.widths;
          for (var _e297 in a) a[_e297] *= t;
          e.defaultWidth *= t;
        }
        function amendFallbackToUnicode(e) {
          if (!e.fallbackToUnicode) return;
          if (e.toUnicode instanceof h.IdentityToUnicodeMap) return;
          var t = [];
          for (var _a166 in e.fallbackToUnicode) e.toUnicode.has(_a166) || (t[_a166] = e.fallbackToUnicode[_a166]);
          t.length > 0 && e.toUnicode.amend(t);
        }
        var Glyph = /*#__PURE__*/function () {
          function Glyph(e, t, a, r, i, n, s, o, c) {
            _classCallCheck(this, Glyph);
            this.originalCharCode = e;
            this.fontChar = t;
            this.unicode = a;
            this.accent = r;
            this.width = i;
            this.vmetric = n;
            this.operatorListId = s;
            this.isSpace = o;
            this.isInFont = c;
          }
          _createClass(Glyph, [{
            key: "category",
            get: function get() {
              return (0, r.shadow)(this, "category", (0, s.getCharUnicodeCategory)(this.unicode), !0);
            }
          }]);
          return Glyph;
        }();
        function int16(e, t) {
          return (e << 8) + t;
        }
        function writeSignedInt16(e, t, a) {
          e[t + 1] = a;
          e[t] = a >>> 8;
        }
        function signedInt16(e, t) {
          var a = (e << 8) + t;
          return 32768 & a ? a - 65536 : a;
        }
        function string16(e) {
          return String.fromCharCode(e >> 8 & 255, 255 & e);
        }
        function safeString16(e) {
          e > 32767 ? e = 32767 : e < -32768 && (e = -32768);
          return String.fromCharCode(e >> 8 & 255, 255 & e);
        }
        function isTrueTypeCollectionFile(e) {
          var t = e.peekBytes(4);
          return "ttcf" === (0, r.bytesToString)(t);
        }
        function getFontFileType(e, _ref66) {
          var t = _ref66.type,
            a = _ref66.subtype,
            i = _ref66.composite;
          var n, s;
          if (function isTrueTypeFile(e) {
            var t = e.peekBytes(4);
            return 65536 === (0, b.readUint32)(t, 0) || "true" === (0, r.bytesToString)(t);
          }(e) || isTrueTypeCollectionFile(e)) n = i ? "CIDFontType2" : "TrueType";else if (function isOpenTypeFile(e) {
            var t = e.peekBytes(4);
            return "OTTO" === (0, r.bytesToString)(t);
          }(e)) n = i ? "CIDFontType2" : "OpenType";else if (function isType1File(e) {
            var t = e.peekBytes(2);
            return 37 === t[0] && 33 === t[1] || 128 === t[0] && 1 === t[1];
          }(e)) n = i ? "CIDFontType0" : "MMType1" === t ? "MMType1" : "Type1";else if (function isCFFFile(e) {
            var t = e.peekBytes(4);
            return t[0] >= 1 && t[3] >= 1 && t[3] <= 4;
          }(e)) {
            if (i) {
              n = "CIDFontType0";
              s = "CIDFontType0C";
            } else {
              n = "MMType1" === t ? "MMType1" : "Type1";
              s = "Type1C";
            }
          } else {
            (0, r.warn)("getFontFileType: Unable to detect correct font file Type/Subtype.");
            n = t;
            s = a;
          }
          return [n, s];
        }
        function applyStandardFontGlyphMap(e, t) {
          for (var _a167 in t) e[+_a167] = t[_a167];
        }
        function buildToFontChar(e, t, a) {
          var r = [];
          var i;
          for (var _a168 = 0, _n87 = e.length; _a168 < _n87; _a168++) {
            i = (0, s.getUnicodeForGlyph)(e[_a168], t);
            -1 !== i && (r[_a168] = i);
          }
          for (var _e298 in a) {
            i = (0, s.getUnicodeForGlyph)(a[_e298], t);
            -1 !== i && (r[+_e298] = i);
          }
          return r;
        }
        function isMacNameRecord(e) {
          return 1 === e.platform && 0 === e.encoding && 0 === e.language;
        }
        function isWinNameRecord(e) {
          return 3 === e.platform && 1 === e.encoding && 1033 === e.language;
        }
        function convertCidString(e, t) {
          var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
          switch (t.length) {
            case 1:
              return t.charCodeAt(0);
            case 2:
              return t.charCodeAt(0) << 8 | t.charCodeAt(1);
          }
          var i = "Unsupported CID string (charCode ".concat(e, "): \"").concat(t, "\".");
          if (a) throw new r.FormatError(i);
          (0, r.warn)(i);
          return t;
        }
        function adjustMapping(e, t, a, i) {
          var n = Object.create(null),
            s = new Map(),
            o = [],
            c = new Set();
          var l = 0;
          var h = S[l][0],
            u = S[l][1];
          for (var _f12 in e) {
            _f12 |= 0;
            var _g14 = e[_f12];
            if (!t(_g14)) continue;
            if (h > u) {
              l++;
              if (l >= S.length) {
                (0, r.warn)("Ran out of space in font private use area.");
                break;
              }
              h = S[l][0];
              u = S[l][1];
            }
            var _p11 = h++;
            0 === _g14 && (_g14 = a);
            var _m5 = i.get(_f12);
            "string" == typeof _m5 && (_m5 = _m5.codePointAt(0));
            if (_m5 && !(d = _m5, S[0][0] <= d && d <= S[0][1] || S[1][0] <= d && d <= S[1][1]) && !c.has(_g14)) {
              s.set(_m5, _g14);
              c.add(_g14);
            }
            n[_p11] = _g14;
            o[_f12] = _p11;
          }
          var d;
          return {
            toFontChar: o,
            charCodeToGlyphId: n,
            toUnicodeExtraMap: s,
            nextAvailableFontCharCode: h
          };
        }
        function createCmapTable(e, t, a) {
          var i = function getRanges(e, t, a) {
              var r = [];
              for (var _t226 in e) e[_t226] >= a || r.push({
                fontCharCode: 0 | _t226,
                glyphId: e[_t226]
              });
              if (t) {
                var _iterator89 = _createForOfIteratorHelper(t),
                  _step89;
                try {
                  for (_iterator89.s(); !(_step89 = _iterator89.n()).done;) {
                    var _step89$value = _slicedToArray(_step89.value, 2),
                      _e299 = _step89$value[0],
                      _i120 = _step89$value[1];
                    _i120 >= a || r.push({
                      fontCharCode: _e299,
                      glyphId: _i120
                    });
                  }
                } catch (err) {
                  _iterator89.e(err);
                } finally {
                  _iterator89.f();
                }
              }
              0 === r.length && r.push({
                fontCharCode: 0,
                glyphId: 0
              });
              r.sort(function fontGetRangesSort(e, t) {
                return e.fontCharCode - t.fontCharCode;
              });
              var i = [],
                n = r.length;
              for (var _e300 = 0; _e300 < n;) {
                var _t227 = r[_e300].fontCharCode,
                  _a169 = [r[_e300].glyphId];
                ++_e300;
                var _s56 = _t227;
                for (; _e300 < n && _s56 + 1 === r[_e300].fontCharCode;) {
                  _a169.push(r[_e300].glyphId);
                  ++_s56;
                  ++_e300;
                  if (65535 === _s56) break;
                }
                i.push([_t227, _s56, _a169]);
              }
              return i;
            }(e, t, a),
            n = i.at(-1)[1] > 65535 ? 2 : 1;
          var s,
            o,
            c,
            l,
            h = "\0\0" + string16(n) + "\0\0" + (0, r.string32)(4 + 8 * n);
          for (s = i.length - 1; s >= 0 && !(i[s][0] <= 65535); --s);
          var u = s + 1;
          i[s][0] < 65535 && 65535 === i[s][1] && (i[s][1] = 65534);
          var d = i[s][1] < 65535 ? 1 : 0,
            f = u + d,
            g = m.OpenTypeFileBuilder.getSearchParams(f, 2);
          var p,
            b,
            y,
            w,
            S = "",
            x = "",
            C = "",
            k = "",
            v = "",
            F = 0;
          for (s = 0, o = u; s < o; s++) {
            p = i[s];
            b = p[0];
            y = p[1];
            S += string16(b);
            x += string16(y);
            w = p[2];
            var _e301 = !0;
            for (c = 1, l = w.length; c < l; ++c) if (w[c] !== w[c - 1] + 1) {
              _e301 = !1;
              break;
            }
            if (_e301) {
              C += string16(w[0] - b & 65535);
              k += string16(0);
            } else {
              var _e302 = 2 * (f - s) + 2 * F;
              F += y - b + 1;
              C += string16(0);
              k += string16(_e302);
              for (c = 0, l = w.length; c < l; ++c) v += string16(w[c]);
            }
          }
          if (d > 0) {
            x += "ÿÿ";
            S += "ÿÿ";
            C += "\0";
            k += "\0\0";
          }
          var O = "\0\0" + string16(2 * f) + string16(g.range) + string16(g.entry) + string16(g.rangeShift) + x + "\0\0" + S + C + k + v;
          var T = "",
            M = "";
          if (n > 1) {
            h += "\0\0\n" + (0, r.string32)(4 + 8 * n + 4 + O.length);
            T = "";
            for (s = 0, o = i.length; s < o; s++) {
              p = i[s];
              b = p[0];
              w = p[2];
              var _e303 = w[0];
              for (c = 1, l = w.length; c < l; ++c) if (w[c] !== w[c - 1] + 1) {
                y = p[0] + c - 1;
                T += (0, r.string32)(b) + (0, r.string32)(y) + (0, r.string32)(_e303);
                b = y + 1;
                _e303 = w[c];
              }
              T += (0, r.string32)(b) + (0, r.string32)(p[1]) + (0, r.string32)(_e303);
            }
            M = "\0\f\0\0" + (0, r.string32)(T.length + 16) + "\0\0\0\0" + (0, r.string32)(T.length / 12);
          }
          return h + "\0" + string16(O.length + 4) + O + M + T;
        }
        function createOS2Table(e, t, a) {
          a || (a = {
            unitsPerEm: 0,
            yMax: 0,
            yMin: 0,
            ascent: 0,
            descent: 0
          });
          var i = 0,
            n = 0,
            o = 0,
            c = 0,
            l = null,
            h = 0,
            u = -1;
          if (t) {
            for (var _e304 in t) {
              _e304 |= 0;
              (l > _e304 || !l) && (l = _e304);
              h < _e304 && (h = _e304);
              u = (0, s.getUnicodeRangeFor)(_e304, u);
              if (u < 32) i |= 1 << u;else if (u < 64) n |= 1 << u - 32;else if (u < 96) o |= 1 << u - 64;else {
                if (!(u < 123)) throw new r.FormatError("Unicode ranges Bits > 123 are reserved for internal usage");
                c |= 1 << u - 96;
              }
            }
            h > 65535 && (h = 65535);
          } else {
            l = 0;
            h = 255;
          }
          var d = e.bbox || [0, 0, 0, 0],
            f = a.unitsPerEm || 1 / (e.fontMatrix || r.FONT_IDENTITY_MATRIX)[0],
            g = e.ascentScaled ? 1 : f / x,
            p = a.ascent || Math.round(g * (e.ascent || d[3]));
          var m = a.descent || Math.round(g * (e.descent || d[1]));
          m > 0 && e.descent > 0 && d[1] < 0 && (m = -m);
          var b = a.yMax || p,
            y = -a.yMin || -m;
          return "\0$ô\0\0\0»\0\0\0»\0\0ß\x001\0\0\0\0" + String.fromCharCode(e.fixedPitch ? 9 : 0) + "\0\0\0\0\0\0" + (0, r.string32)(i) + (0, r.string32)(n) + (0, r.string32)(o) + (0, r.string32)(c) + "*21*" + string16(e.italicAngle ? 1 : 0) + string16(l || e.firstChar) + string16(h || e.lastChar) + string16(p) + string16(m) + "\0d" + string16(b) + string16(y) + "\0\0\0\0\0\0\0\0" + string16(e.xHeight) + string16(e.capHeight) + string16(0) + string16(l || e.firstChar) + "\0";
        }
        function createPostTable(e) {
          var t = Math.floor(65536 * e.italicAngle);
          return "\0\0\0" + (0, r.string32)(t) + "\0\0\0\0" + (0, r.string32)(e.fixedPitch ? 1 : 0) + "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
        }
        function createPostscriptName(e) {
          return e.replaceAll(/[^\x21-\x7E]|[[\](){}<>/%]/g, "").slice(0, 63);
        }
        function createNameTable(e, t) {
          t || (t = [[], []]);
          var a = [t[0][0] || "Original licence", t[0][1] || e, t[0][2] || "Unknown", t[0][3] || "uniqueID", t[0][4] || e, t[0][5] || "Version 0.11", t[0][6] || createPostscriptName(e), t[0][7] || "Unknown", t[0][8] || "Unknown", t[0][9] || "Unknown"],
            r = [];
          var i, n, s, o, c;
          for (i = 0, n = a.length; i < n; i++) {
            c = t[1][i] || a[i];
            var _e305 = [];
            for (s = 0, o = c.length; s < o; s++) _e305.push(string16(c.charCodeAt(s)));
            r.push(_e305.join(""));
          }
          var l = [a, r],
            h = ["\0", "\0"],
            u = ["\0\0", "\0"],
            d = ["\0\0", "\t"],
            f = a.length * h.length;
          var g = "\0\0" + string16(f) + string16(12 * f + 6),
            p = 0;
          for (i = 0, n = h.length; i < n; i++) {
            var _e306 = l[i];
            for (s = 0, o = _e306.length; s < o; s++) {
              c = _e306[s];
              g += h[i] + u[i] + d[i] + string16(s) + string16(c.length) + string16(p);
              p += c.length;
            }
          }
          g += a.join("") + r.join("");
          return g;
        }
        t.Font = /*#__PURE__*/function () {
          function Font(e, t, a) {
            _classCallCheck(this, Font);
            this.name = e;
            this.psName = null;
            this.mimetype = null;
            this.disableFontFace = !1;
            this.loadedName = a.loadedName;
            this.isType3Font = a.isType3Font;
            this.missingFile = !1;
            this.cssFontInfo = a.cssFontInfo;
            this._charsCache = Object.create(null);
            this._glyphCache = Object.create(null);
            var i = !!(a.flags & n.FontFlags.Serif);
            if (!i && !a.isSimulatedFlags) {
              var _t228 = e.replaceAll(/[,_]/g, "-").split("-")[0],
                _a170 = (0, l.getSerifFonts)();
              var _iterator90 = _createForOfIteratorHelper(_t228.split("+")),
                _step90;
              try {
                for (_iterator90.s(); !(_step90 = _iterator90.n()).done;) {
                  var _e307 = _step90.value;
                  if (_a170[_e307]) {
                    i = !0;
                    break;
                  }
                }
              } catch (err) {
                _iterator90.e(err);
              } finally {
                _iterator90.f();
              }
            }
            this.isSerifFont = i;
            this.isSymbolicFont = !!(a.flags & n.FontFlags.Symbolic);
            this.isMonospace = !!(a.flags & n.FontFlags.FixedPitch);
            var s = a.type,
              o = a.subtype;
            this.type = s;
            this.subtype = o;
            var c = e.match(/^InvalidPDFjsFont_(.*)_\d+$/);
            this.isInvalidPDFjsFont = !!c;
            this.isInvalidPDFjsFont ? this.fallbackName = c[1] : this.isMonospace ? this.fallbackName = "monospace" : this.isSerifFont ? this.fallbackName = "serif" : this.fallbackName = "sans-serif";
            this.differences = a.differences;
            this.widths = a.widths;
            this.defaultWidth = a.defaultWidth;
            this.composite = a.composite;
            this.cMap = a.cMap;
            this.capHeight = a.capHeight / x;
            this.ascent = a.ascent / x;
            this.descent = a.descent / x;
            this.lineHeight = this.ascent - this.descent;
            this.fontMatrix = a.fontMatrix;
            this.bbox = a.bbox;
            this.defaultEncoding = a.defaultEncoding;
            this.toUnicode = a.toUnicode;
            this.toFontChar = [];
            if ("Type3" === a.type) {
              for (var _e308 = 0; _e308 < 256; _e308++) this.toFontChar[_e308] = this.differences[_e308] || a.defaultEncoding[_e308];
              return;
            }
            this.cidEncoding = a.cidEncoding || "";
            this.vertical = !!a.vertical;
            if (this.vertical) {
              this.vmetrics = a.vmetrics;
              this.defaultVMetrics = a.defaultVMetrics;
            }
            if (!t || t.isEmpty) {
              t && (0, r.warn)('Font file is empty in "' + e + '" (' + this.loadedName + ")");
              this.fallbackToSystemFont(a);
              return;
            }
            var _getFontFileType = getFontFileType(t, a);
            var _getFontFileType2 = _slicedToArray(_getFontFileType, 2);
            s = _getFontFileType2[0];
            o = _getFontFileType2[1];
            s === this.type && o === this.subtype || (0, r.info)("Inconsistent font file Type/SubType, expected: ".concat(this.type, "/").concat(this.subtype, " but found: ").concat(s, "/").concat(o, "."));
            var h;
            try {
              switch (s) {
                case "MMType1":
                  (0, r.info)("MMType1 font (" + e + "), falling back to Type1.");
                case "Type1":
                case "CIDFontType0":
                  this.mimetype = "font/opentype";
                  var _i121 = "Type1C" === o || "CIDFontType0C" === o ? new u.CFFFont(t, a) : new w.Type1Font(e, t, a);
                  adjustWidths(a);
                  h = this.convert(e, _i121, a);
                  break;
                case "OpenType":
                case "TrueType":
                case "CIDFontType2":
                  this.mimetype = "font/opentype";
                  h = this.checkAndRepair(e, t, a);
                  if (this.isOpenType) {
                    adjustWidths(a);
                    s = "OpenType";
                  }
                  break;
                default:
                  throw new r.FormatError("Font ".concat(s, " is not supported"));
              }
            } catch (e) {
              (0, r.warn)(e);
              this.fallbackToSystemFont(a);
              return;
            }
            amendFallbackToUnicode(a);
            this.data = h;
            this.type = s;
            this.subtype = o;
            this.fontMatrix = a.fontMatrix;
            this.widths = a.widths;
            this.defaultWidth = a.defaultWidth;
            this.toUnicode = a.toUnicode;
            this.seacMap = a.seacMap;
          }
          _createClass(Font, [{
            key: "renderer",
            get: function get() {
              var e = d.FontRendererFactory.create(this, n.SEAC_ANALYSIS_ENABLED);
              return (0, r.shadow)(this, "renderer", e);
            }
          }, {
            key: "exportData",
            value: function exportData() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              var t = e ? [].concat(C, k) : C,
                a = Object.create(null);
              var r, i;
              var _iterator91 = _createForOfIteratorHelper(t),
                _step91;
              try {
                for (_iterator91.s(); !(_step91 = _iterator91.n()).done;) {
                  r = _step91.value;
                  i = this[r];
                  void 0 !== i && (a[r] = i);
                }
              } catch (err) {
                _iterator91.e(err);
              } finally {
                _iterator91.f();
              }
              return a;
            }
          }, {
            key: "fallbackToSystemFont",
            value: function fallbackToSystemFont(e) {
              var _this77 = this;
              this.missingFile = !0;
              var t = this.name,
                a = this.type;
              var i = (0, n.normalizeFontName)(t);
              var u = (0, l.getStdFontMap)(),
                d = (0, l.getNonStdFontMap)(),
                g = !!u[i],
                p = !(!d[i] || !u[d[i]]);
              i = u[i] || d[i] || i;
              var m = (0, f.getFontBasicMetrics)()[i];
              if (m) {
                isNaN(this.ascent) && (this.ascent = m.ascent / x);
                isNaN(this.descent) && (this.descent = m.descent / x);
                isNaN(this.capHeight) && (this.capHeight = m.capHeight / x);
              }
              this.bold = /bold/gi.test(i);
              this.italic = /oblique|italic/gi.test(i);
              this.black = /Black/g.test(t);
              var b = /Narrow/g.test(t);
              this.remeasure = (!g || b) && Object.keys(this.widths).length > 0;
              if ((g || p) && "CIDFontType2" === a && this.cidEncoding.startsWith("Identity-")) {
                var _a171 = e.cidToGidMap,
                  _r138 = [];
                applyStandardFontGlyphMap(_r138, (0, l.getGlyphMapForStandardFonts)());
                /Arial-?Black/i.test(t) ? applyStandardFontGlyphMap(_r138, (0, l.getSupplementalGlyphMapForArialBlack)()) : /Calibri/i.test(t) && applyStandardFontGlyphMap(_r138, (0, l.getSupplementalGlyphMapForCalibri)());
                if (_a171) {
                  for (var _e309 in _r138) {
                    var _t229 = _r138[_e309];
                    void 0 !== _a171[_t229] && (_r138[+_e309] = _a171[_t229]);
                  }
                  _a171.length !== this.toUnicode.length && e.hasIncludedToUnicodeMap && this.toUnicode instanceof h.IdentityToUnicodeMap && this.toUnicode.forEach(function (e, t) {
                    var i = _r138[e];
                    void 0 === _a171[i] && (_r138[+e] = t);
                  });
                }
                this.toUnicode instanceof h.IdentityToUnicodeMap || this.toUnicode.forEach(function (e, t) {
                  _r138[+e] = t;
                });
                this.toFontChar = _r138;
                this.toUnicode = new h.ToUnicodeMap(_r138);
              } else if (/Symbol/i.test(i)) this.toFontChar = buildToFontChar(c.SymbolSetEncoding, (0, o.getGlyphsUnicode)(), this.differences);else if (/Dingbats/i.test(i)) {
                /Wingdings/i.test(t) && (0, r.warn)("Non-embedded Wingdings font, falling back to ZapfDingbats.");
                this.toFontChar = buildToFontChar(c.ZapfDingbatsEncoding, (0, o.getDingbatsGlyphsUnicode)(), this.differences);
              } else if (g) {
                var _e310 = buildToFontChar(this.defaultEncoding, (0, o.getGlyphsUnicode)(), this.differences);
                "CIDFontType2" !== a || this.cidEncoding.startsWith("Identity-") || this.toUnicode instanceof h.IdentityToUnicodeMap || this.toUnicode.forEach(function (t, a) {
                  _e310[+t] = a;
                });
                this.toFontChar = _e310;
              } else {
                var _e311 = (0, o.getGlyphsUnicode)(),
                  _a172 = [];
                this.toUnicode.forEach(function (t, r) {
                  if (!_this77.composite) {
                    var _a173 = _this77.differences[t] || _this77.defaultEncoding[t],
                      _i122 = (0, s.getUnicodeForGlyph)(_a173, _e311);
                    -1 !== _i122 && (r = _i122);
                  }
                  _a172[+t] = r;
                });
                this.composite && this.toUnicode instanceof h.IdentityToUnicodeMap && /Tahoma|Verdana/i.test(t) && applyStandardFontGlyphMap(_a172, (0, l.getGlyphMapForStandardFonts)());
                this.toFontChar = _a172;
              }
              amendFallbackToUnicode(e);
              this.loadedName = i.split("-")[0];
            }
          }, {
            key: "checkAndRepair",
            value: function checkAndRepair(e, t, a) {
              var s = ["OS/2", "cmap", "head", "hhea", "hmtx", "maxp", "name", "post", "loca", "glyf", "fpgm", "prep", "cvt ", "CFF "];
              function readTables(e, t) {
                var a = Object.create(null);
                a["OS/2"] = null;
                a.cmap = null;
                a.head = null;
                a.hhea = null;
                a.hmtx = null;
                a.maxp = null;
                a.name = null;
                a.post = null;
                for (var _r139 = 0; _r139 < t; _r139++) {
                  var _t230 = readTableEntry(e);
                  s.includes(_t230.tag) && 0 !== _t230.length && (a[_t230.tag] = _t230);
                }
                return a;
              }
              function readTableEntry(e) {
                var t = e.getString(4),
                  a = e.getInt32() >>> 0,
                  r = e.getInt32() >>> 0,
                  i = e.getInt32() >>> 0,
                  n = e.pos;
                e.pos = e.start || 0;
                e.skip(r);
                var s = e.getBytes(i);
                e.pos = n;
                if ("head" === t) {
                  s[8] = s[9] = s[10] = s[11] = 0;
                  s[17] |= 32;
                }
                return {
                  tag: t,
                  checksum: a,
                  length: i,
                  offset: r,
                  data: s
                };
              }
              function readOpenTypeHeader(e) {
                return {
                  version: e.getString(4),
                  numTables: e.getUint16(),
                  searchRange: e.getUint16(),
                  entrySelector: e.getUint16(),
                  rangeShift: e.getUint16()
                };
              }
              function sanitizeGlyph(e, t, a, r, i, n) {
                var s = {
                  length: 0,
                  sizeOfInstructions: 0
                };
                if (a - t <= 12) return s;
                var o = e.subarray(t, a);
                var c = signedInt16(o[0], o[1]);
                if (c < 0) {
                  c = -1;
                  writeSignedInt16(o, 0, c);
                  r.set(o, i);
                  s.length = o.length;
                  return s;
                }
                var l,
                  h = 10,
                  u = 0;
                for (l = 0; l < c; l++) {
                  u = (o[h] << 8 | o[h + 1]) + 1;
                  h += 2;
                }
                var d = h,
                  f = o[h] << 8 | o[h + 1];
                s.sizeOfInstructions = f;
                h += 2 + f;
                var g = h;
                var p = 0;
                for (l = 0; l < u; l++) {
                  var _e312 = o[h++];
                  192 & _e312 && (o[h - 1] = 63 & _e312);
                  var _t231 = 2;
                  2 & _e312 ? _t231 = 1 : 16 & _e312 && (_t231 = 0);
                  var _a174 = 2;
                  4 & _e312 ? _a174 = 1 : 32 & _e312 && (_a174 = 0);
                  var _r140 = _t231 + _a174;
                  p += _r140;
                  if (8 & _e312) {
                    var _e313 = o[h++];
                    l += _e313;
                    p += _e313 * _r140;
                  }
                }
                if (0 === p) return s;
                var m = h + p;
                if (m > o.length) return s;
                if (!n && f > 0) {
                  r.set(o.subarray(0, d), i);
                  r.set([0, 0], i + d);
                  r.set(o.subarray(g, m), i + d + 2);
                  m -= f;
                  o.length - m > 3 && (m = m + 3 & -4);
                  s.length = m;
                  return s;
                }
                if (o.length - m > 3) {
                  m = m + 3 & -4;
                  r.set(o.subarray(0, m), i);
                  s.length = m;
                  return s;
                }
                r.set(o, i);
                s.length = o.length;
                return s;
              }
              function readNameTable(e) {
                var a = (t.start || 0) + e.offset;
                t.pos = a;
                var r = [[], []],
                  i = [],
                  n = e.length,
                  s = a + n;
                if (0 !== t.getUint16() || n < 6) return [r, i];
                var o = t.getUint16(),
                  c = t.getUint16();
                var l, h;
                for (l = 0; l < o && t.pos + 12 <= s; l++) {
                  var _e314 = {
                    platform: t.getUint16(),
                    encoding: t.getUint16(),
                    language: t.getUint16(),
                    name: t.getUint16(),
                    length: t.getUint16(),
                    offset: t.getUint16()
                  };
                  (isMacNameRecord(_e314) || isWinNameRecord(_e314)) && i.push(_e314);
                }
                for (l = 0, h = i.length; l < h; l++) {
                  var _e315 = i[l];
                  if (_e315.length <= 0) continue;
                  var _n88 = a + c + _e315.offset;
                  if (_n88 + _e315.length > s) continue;
                  t.pos = _n88;
                  var _o45 = _e315.name;
                  if (_e315.encoding) {
                    var _a175 = "";
                    for (var _r141 = 0, _i123 = _e315.length; _r141 < _i123; _r141 += 2) _a175 += String.fromCharCode(t.getUint16());
                    r[1][_o45] = _a175;
                  } else r[0][_o45] = t.getString(_e315.length);
                }
                return [r, i];
              }
              var l = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];
              function sanitizeTTProgram(e, t) {
                var a,
                  i,
                  n,
                  s,
                  o,
                  c = e.data,
                  h = 0,
                  u = 0,
                  d = 0;
                var f = [],
                  g = [],
                  p = [];
                var m = t.tooComplexToFollowFunctions,
                  b = !1,
                  y = 0,
                  w = 0;
                for (var _e316 = c.length; h < _e316;) {
                  var _e317 = c[h++];
                  if (64 === _e317) {
                    i = c[h++];
                    if (b || w) h += i;else for (a = 0; a < i; a++) f.push(c[h++]);
                  } else if (65 === _e317) {
                    i = c[h++];
                    if (b || w) h += 2 * i;else for (a = 0; a < i; a++) {
                      n = c[h++];
                      f.push(n << 8 | c[h++]);
                    }
                  } else if (176 == (248 & _e317)) {
                    i = _e317 - 176 + 1;
                    if (b || w) h += i;else for (a = 0; a < i; a++) f.push(c[h++]);
                  } else if (184 == (248 & _e317)) {
                    i = _e317 - 184 + 1;
                    if (b || w) h += 2 * i;else for (a = 0; a < i; a++) {
                      n = c[h++];
                      f.push(n << 8 | c[h++]);
                    }
                  } else if (43 !== _e317 || m) {
                    if (44 !== _e317 || m) {
                      if (45 === _e317) {
                        if (b) {
                          b = !1;
                          u = h;
                        } else {
                          o = g.pop();
                          if (!o) {
                            (0, r.warn)("TT: ENDF bad stack");
                            t.hintsValid = !1;
                            return;
                          }
                          s = p.pop();
                          c = o.data;
                          h = o.i;
                          t.functionsStackDeltas[s] = f.length - o.stackTop;
                        }
                      } else if (137 === _e317) {
                        if (b || w) {
                          (0, r.warn)("TT: nested IDEFs not allowed");
                          m = !0;
                        }
                        b = !0;
                        d = h;
                      } else if (88 === _e317) ++y;else if (27 === _e317) w = y;else if (89 === _e317) {
                        w === y && (w = 0);
                        --y;
                      } else if (28 === _e317 && !b && !w) {
                        var _e318 = f.at(-1);
                        _e318 > 0 && (h += _e318 - 1);
                      }
                    } else {
                      if (b || w) {
                        (0, r.warn)("TT: nested FDEFs not allowed");
                        m = !0;
                      }
                      b = !0;
                      d = h;
                      s = f.pop();
                      t.functionsDefined[s] = {
                        data: c,
                        i: h
                      };
                    }
                  } else if (!b && !w) {
                    s = f.at(-1);
                    if (isNaN(s)) (0, r.info)("TT: CALL empty stack (or invalid entry).");else {
                      t.functionsUsed[s] = !0;
                      if (s in t.functionsStackDeltas) {
                        var _e319 = f.length + t.functionsStackDeltas[s];
                        if (_e319 < 0) {
                          (0, r.warn)("TT: CALL invalid functions stack delta.");
                          t.hintsValid = !1;
                          return;
                        }
                        f.length = _e319;
                      } else if (s in t.functionsDefined && !p.includes(s)) {
                        g.push({
                          data: c,
                          i: h,
                          stackTop: f.length - 1
                        });
                        p.push(s);
                        o = t.functionsDefined[s];
                        if (!o) {
                          (0, r.warn)("TT: CALL non-existent function");
                          t.hintsValid = !1;
                          return;
                        }
                        c = o.data;
                        h = o.i;
                      }
                    }
                  }
                  if (!b && !w) {
                    var _t232 = 0;
                    _e317 <= 142 ? _t232 = l[_e317] : _e317 >= 192 && _e317 <= 223 ? _t232 = -1 : _e317 >= 224 && (_t232 = -2);
                    if (_e317 >= 113 && _e317 <= 117) {
                      i = f.pop();
                      isNaN(i) || (_t232 = 2 * -i);
                    }
                    for (; _t232 < 0 && f.length > 0;) {
                      f.pop();
                      _t232++;
                    }
                    for (; _t232 > 0;) {
                      f.push(NaN);
                      _t232--;
                    }
                  }
                }
                t.tooComplexToFollowFunctions = m;
                var S = [c];
                h > c.length && S.push(new Uint8Array(h - c.length));
                if (d > u) {
                  (0, r.warn)("TT: complementing a missing function tail");
                  S.push(new Uint8Array([34, 45]));
                }
                !function foldTTTable(e, t) {
                  if (t.length > 1) {
                    var _a176,
                      _r142,
                      _i124 = 0;
                    for (_a176 = 0, _r142 = t.length; _a176 < _r142; _a176++) _i124 += t[_a176].length;
                    _i124 = _i124 + 3 & -4;
                    var _n89 = new Uint8Array(_i124);
                    var _s57 = 0;
                    for (_a176 = 0, _r142 = t.length; _a176 < _r142; _a176++) {
                      _n89.set(t[_a176], _s57);
                      _s57 += t[_a176].length;
                    }
                    e.data = _n89;
                    e.length = _i124;
                  }
                }(e, S);
              }
              var d, f, b, w;
              if (isTrueTypeCollectionFile(t = new y.Stream(new Uint8Array(t.getBytes())))) {
                var _e320 = function readTrueTypeCollectionData(e, t) {
                  var _readTrueTypeCollecti = function readTrueTypeCollectionHeader(e) {
                      var t = e.getString(4);
                      (0, r.assert)("ttcf" === t, "Must be a TrueType Collection font.");
                      var a = e.getUint16(),
                        i = e.getUint16(),
                        n = e.getInt32() >>> 0,
                        s = [];
                      for (var _t233 = 0; _t233 < n; _t233++) s.push(e.getInt32() >>> 0);
                      var o = {
                        ttcTag: t,
                        majorVersion: a,
                        minorVersion: i,
                        numFonts: n,
                        offsetTable: s
                      };
                      switch (a) {
                        case 1:
                          return o;
                        case 2:
                          o.dsigTag = e.getInt32() >>> 0;
                          o.dsigLength = e.getInt32() >>> 0;
                          o.dsigOffset = e.getInt32() >>> 0;
                          return o;
                      }
                      throw new r.FormatError("Invalid TrueType Collection majorVersion: ".concat(a, "."));
                    }(e),
                    a = _readTrueTypeCollecti.numFonts,
                    i = _readTrueTypeCollecti.offsetTable,
                    n = t.split("+");
                  var s;
                  for (var _o46 = 0; _o46 < a; _o46++) {
                    e.pos = (e.start || 0) + i[_o46];
                    var _a177 = readOpenTypeHeader(e),
                      _c27 = readTables(e, _a177.numTables);
                    if (!_c27.name) throw new r.FormatError('TrueType Collection font must contain a "name" table.');
                    var _readNameTable = readNameTable(_c27.name),
                      _readNameTable2 = _slicedToArray(_readNameTable, 1),
                      _l17 = _readNameTable2[0];
                    for (var _e321 = 0, _r143 = _l17.length; _e321 < _r143; _e321++) for (var _r144 = 0, _i125 = _l17[_e321].length; _r144 < _i125; _r144++) {
                      var _i126 = _l17[_e321][_r144] && _l17[_e321][_r144].replaceAll(/\s/g, "");
                      if (_i126) {
                        if (_i126 === t) return {
                          header: _a177,
                          tables: _c27
                        };
                        if (!(n.length < 2)) {
                          var _iterator92 = _createForOfIteratorHelper(n),
                            _step92;
                          try {
                            for (_iterator92.s(); !(_step92 = _iterator92.n()).done;) {
                              var _e322 = _step92.value;
                              _i126 === _e322 && (s = {
                                name: _e322,
                                header: _a177,
                                tables: _c27
                              });
                            }
                          } catch (err) {
                            _iterator92.e(err);
                          } finally {
                            _iterator92.f();
                          }
                        }
                      }
                    }
                  }
                  if (s) {
                    (0, r.warn)("TrueType Collection does not contain \"".concat(t, "\" font, falling back to \"").concat(s.name, "\" font instead."));
                    return {
                      header: s.header,
                      tables: s.tables
                    };
                  }
                  throw new r.FormatError("TrueType Collection does not contain \"".concat(t, "\" font."));
                }(t, this.name);
                d = _e320.header;
                f = _e320.tables;
              } else {
                d = readOpenTypeHeader(t);
                f = readTables(t, d.numTables);
              }
              var S = !f["CFF "];
              if (S) {
                if (!f.loca) throw new r.FormatError('Required "loca" table is not found');
                if (!f.glyf) {
                  (0, r.warn)('Required "glyf" table is not found -- trying to recover.');
                  f.glyf = {
                    tag: "glyf",
                    data: new Uint8Array(0)
                  };
                }
                this.isOpenType = !1;
              } else {
                var _t234 = a.composite && ((a.cidToGidMap || []).length > 0 || !(a.cMap instanceof p.IdentityCMap));
                if ("OTTO" === d.version && !_t234 || !f.head || !f.hhea || !f.maxp || !f.post) {
                  w = new y.Stream(f["CFF "].data);
                  b = new u.CFFFont(w, a);
                  adjustWidths(a);
                  return this.convert(e, b, a);
                }
                delete f.glyf;
                delete f.loca;
                delete f.fpgm;
                delete f.prep;
                delete f["cvt "];
                this.isOpenType = !0;
              }
              if (!f.maxp) throw new r.FormatError('Required "maxp" table is not found');
              t.pos = (t.start || 0) + f.maxp.offset;
              var x = t.getInt32(),
                C = t.getUint16();
              if (a.scaleFactors && a.scaleFactors.length === C && S) {
                var _e323 = a.scaleFactors,
                  _t235 = int16(f.head.data[50], f.head.data[51]),
                  _r145 = new g.GlyfTable({
                    glyfTable: f.glyf.data,
                    isGlyphLocationsLong: _t235,
                    locaTable: f.loca.data,
                    numGlyphs: C
                  });
                _r145.scale(_e323);
                var _r145$write = _r145.write(),
                  _i127 = _r145$write.glyf,
                  _n90 = _r145$write.loca,
                  _s58 = _r145$write.isLocationLong;
                f.glyf.data = _i127;
                f.loca.data = _n90;
                if (_s58 !== !!_t235) {
                  f.head.data[50] = 0;
                  f.head.data[51] = _s58 ? 1 : 0;
                }
                var _o47 = f.hmtx.data;
                for (var _t236 = 0; _t236 < C; _t236++) {
                  var _a178 = 4 * _t236,
                    _r146 = Math.round(_e323[_t236] * int16(_o47[_a178], _o47[_a178 + 1]));
                  _o47[_a178] = _r146 >> 8 & 255;
                  _o47[_a178 + 1] = 255 & _r146;
                  writeSignedInt16(_o47, _a178 + 2, Math.round(_e323[_t236] * signedInt16(_o47[_a178 + 2], _o47[_a178 + 3])));
                }
              }
              var k = C + 1,
                v = !0;
              if (k > 65535) {
                v = !1;
                k = C;
                (0, r.warn)("Not enough space in glyfs to duplicate first glyph.");
              }
              var F = 0,
                O = 0;
              if (x >= 65536 && f.maxp.length >= 22) {
                t.pos += 8;
                if (t.getUint16() > 2) {
                  f.maxp.data[14] = 0;
                  f.maxp.data[15] = 2;
                }
                t.pos += 4;
                F = t.getUint16();
                t.pos += 4;
                O = t.getUint16();
              }
              f.maxp.data[4] = k >> 8;
              f.maxp.data[5] = 255 & k;
              var T = function sanitizeTTPrograms(e, t, a, i) {
                var n = {
                  functionsDefined: [],
                  functionsUsed: [],
                  functionsStackDeltas: [],
                  tooComplexToFollowFunctions: !1,
                  hintsValid: !0
                };
                e && sanitizeTTProgram(e, n);
                t && sanitizeTTProgram(t, n);
                e && function checkInvalidFunctions(e, t) {
                  if (!e.tooComplexToFollowFunctions) if (e.functionsDefined.length > t) {
                    (0, r.warn)("TT: more functions defined than expected");
                    e.hintsValid = !1;
                  } else for (var _a179 = 0, _i128 = e.functionsUsed.length; _a179 < _i128; _a179++) {
                    if (_a179 > t) {
                      (0, r.warn)("TT: invalid function id: " + _a179);
                      e.hintsValid = !1;
                      return;
                    }
                    if (e.functionsUsed[_a179] && !e.functionsDefined[_a179]) {
                      (0, r.warn)("TT: undefined function: " + _a179);
                      e.hintsValid = !1;
                      return;
                    }
                  }
                }(n, i);
                if (a && 1 & a.length) {
                  var _e324 = new Uint8Array(a.length + 1);
                  _e324.set(a.data);
                  a.data = _e324;
                }
                return n.hintsValid;
              }(f.fpgm, f.prep, f["cvt "], F);
              if (!T) {
                delete f.fpgm;
                delete f.prep;
                delete f["cvt "];
              }
              !function sanitizeMetrics(e, t, a, i, n, s) {
                if (!t) {
                  a && (a.data = null);
                  return;
                }
                e.pos = (e.start || 0) + t.offset;
                e.pos += 4;
                e.pos += 2;
                e.pos += 2;
                e.pos += 2;
                e.pos += 2;
                e.pos += 2;
                e.pos += 2;
                e.pos += 2;
                e.pos += 2;
                e.pos += 2;
                var o = e.getUint16();
                e.pos += 8;
                e.pos += 2;
                var c = e.getUint16();
                if (0 !== o) {
                  if (!(2 & int16(i.data[44], i.data[45]))) {
                    t.data[22] = 0;
                    t.data[23] = 0;
                  }
                }
                if (c > n) {
                  (0, r.info)("The numOfMetrics (".concat(c, ") should not be greater than the numGlyphs (").concat(n, ")."));
                  c = n;
                  t.data[34] = (65280 & c) >> 8;
                  t.data[35] = 255 & c;
                }
                var l = n - c - (a.length - 4 * c >> 1);
                if (l > 0) {
                  var _e325 = new Uint8Array(a.length + 2 * l);
                  _e325.set(a.data);
                  if (s) {
                    _e325[a.length] = a.data[2];
                    _e325[a.length + 1] = a.data[3];
                  }
                  a.data = _e325;
                }
              }(t, f.hhea, f.hmtx, f.head, k, v);
              if (!f.head) throw new r.FormatError('Required "head" table is not found');
              !function sanitizeHead(e, t, a) {
                var i = e.data,
                  n = function int32(e, t, a, r) {
                    return (e << 24) + (t << 16) + (a << 8) + r;
                  }(i[0], i[1], i[2], i[3]);
                if (n >> 16 != 1) {
                  (0, r.info)("Attempting to fix invalid version in head table: " + n);
                  i[0] = 0;
                  i[1] = 1;
                  i[2] = 0;
                  i[3] = 0;
                }
                var s = int16(i[50], i[51]);
                if (s < 0 || s > 1) {
                  (0, r.info)("Attempting to fix invalid indexToLocFormat in head table: " + s);
                  var _e326 = t + 1;
                  if (a === _e326 << 1) {
                    i[50] = 0;
                    i[51] = 0;
                  } else {
                    if (a !== _e326 << 2) throw new r.FormatError("Could not fix indexToLocFormat: " + s);
                    i[50] = 0;
                    i[51] = 1;
                  }
                }
              }(f.head, C, S ? f.loca.length : 0);
              var M = Object.create(null);
              if (S) {
                var _e327 = int16(f.head.data[50], f.head.data[51]),
                  _t237 = function sanitizeGlyphLocations(e, t, a, r, i, n, s) {
                    var o, c, l;
                    if (r) {
                      o = 4;
                      c = function fontItemDecodeLong(e, t) {
                        return e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3];
                      };
                      l = function fontItemEncodeLong(e, t, a) {
                        e[t] = a >>> 24 & 255;
                        e[t + 1] = a >> 16 & 255;
                        e[t + 2] = a >> 8 & 255;
                        e[t + 3] = 255 & a;
                      };
                    } else {
                      o = 2;
                      c = function fontItemDecode(e, t) {
                        return e[t] << 9 | e[t + 1] << 1;
                      };
                      l = function fontItemEncode(e, t, a) {
                        e[t] = a >> 9 & 255;
                        e[t + 1] = a >> 1 & 255;
                      };
                    }
                    var h = n ? a + 1 : a,
                      u = o * (1 + h),
                      d = new Uint8Array(u);
                    d.set(e.data.subarray(0, u));
                    e.data = d;
                    var f = t.data,
                      g = f.length,
                      p = new Uint8Array(g);
                    var m, b;
                    var y = [];
                    for (m = 0, b = 0; m < a + 1; m++, b += o) {
                      var _e328 = c(d, b);
                      _e328 > g && (_e328 = g);
                      y.push({
                        index: m,
                        offset: _e328,
                        endOffset: 0
                      });
                    }
                    y.sort(function (e, t) {
                      return e.offset - t.offset;
                    });
                    for (m = 0; m < a; m++) y[m].endOffset = y[m + 1].offset;
                    y.sort(function (e, t) {
                      return e.index - t.index;
                    });
                    for (m = 0; m < a; m++) {
                      var _y$m = y[m],
                        _e329 = _y$m.offset,
                        _t238 = _y$m.endOffset;
                      if (0 !== _e329 || 0 !== _t238) break;
                      var _a180 = y[m + 1].offset;
                      if (0 !== _a180) {
                        y[m].endOffset = _a180;
                        break;
                      }
                    }
                    var w = Object.create(null);
                    var S = 0;
                    l(d, 0, S);
                    for (m = 0, b = o; m < a; m++, b += o) {
                      var _e330 = sanitizeGlyph(f, y[m].offset, y[m].endOffset, p, S, i),
                        _t239 = _e330.length;
                      0 === _t239 && (w[m] = !0);
                      _e330.sizeOfInstructions > s && (s = _e330.sizeOfInstructions);
                      S += _t239;
                      l(d, b, S);
                    }
                    if (0 === S) {
                      var _e331 = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);
                      for (m = 0, b = o; m < h; m++, b += o) l(d, b, _e331.length);
                      t.data = _e331;
                    } else if (n) {
                      var _a181 = c(d, o);
                      if (p.length > _a181 + S) t.data = p.subarray(0, _a181 + S);else {
                        t.data = new Uint8Array(_a181 + S);
                        t.data.set(p.subarray(0, S));
                      }
                      t.data.set(p.subarray(0, _a181), S);
                      l(e.data, d.length - o, S + _a181);
                    } else t.data = p.subarray(0, S);
                    return {
                      missingGlyphs: w,
                      maxSizeOfInstructions: s
                    };
                  }(f.loca, f.glyf, C, _e327, T, v, O);
                M = _t237.missingGlyphs;
                if (x >= 65536 && f.maxp.length >= 22) {
                  f.maxp.data[26] = _t237.maxSizeOfInstructions >> 8;
                  f.maxp.data[27] = 255 & _t237.maxSizeOfInstructions;
                }
              }
              if (!f.hhea) throw new r.FormatError('Required "hhea" table is not found');
              if (0 === f.hhea.data[10] && 0 === f.hhea.data[11]) {
                f.hhea.data[10] = 255;
                f.hhea.data[11] = 255;
              }
              var E = {
                unitsPerEm: int16(f.head.data[18], f.head.data[19]),
                yMax: int16(f.head.data[42], f.head.data[43]),
                yMin: signedInt16(f.head.data[38], f.head.data[39]),
                ascent: signedInt16(f.hhea.data[4], f.hhea.data[5]),
                descent: signedInt16(f.hhea.data[6], f.hhea.data[7]),
                lineGap: signedInt16(f.hhea.data[8], f.hhea.data[9])
              };
              this.ascent = E.ascent / E.unitsPerEm;
              this.descent = E.descent / E.unitsPerEm;
              this.lineGap = E.lineGap / E.unitsPerEm;
              if (this.cssFontInfo && this.cssFontInfo.lineHeight) {
                this.lineHeight = this.cssFontInfo.metrics.lineHeight;
                this.lineGap = this.cssFontInfo.metrics.lineGap;
              } else this.lineHeight = this.ascent - this.descent + this.lineGap;
              f.post && function readPostScriptTable(e, a, i) {
                var s = (t.start || 0) + e.offset;
                t.pos = s;
                var o = s + e.length,
                  c = t.getInt32();
                t.skip(28);
                var l,
                  h,
                  u = !0;
                switch (c) {
                  case 65536:
                    l = n.MacStandardGlyphOrdering;
                    break;
                  case 131072:
                    var _e332 = t.getUint16();
                    if (_e332 !== i) {
                      u = !1;
                      break;
                    }
                    var _s59 = [];
                    for (h = 0; h < _e332; ++h) {
                      var _e333 = t.getUint16();
                      if (_e333 >= 32768) {
                        u = !1;
                        break;
                      }
                      _s59.push(_e333);
                    }
                    if (!u) break;
                    var _d9 = [],
                      _f13 = [];
                    for (; t.pos < o;) {
                      var _e334 = t.getByte();
                      _f13.length = _e334;
                      for (h = 0; h < _e334; ++h) _f13[h] = String.fromCharCode(t.getByte());
                      _d9.push(_f13.join(""));
                    }
                    l = [];
                    for (h = 0; h < _e332; ++h) {
                      var _e335 = _s59[h];
                      _e335 < 258 ? l.push(n.MacStandardGlyphOrdering[_e335]) : l.push(_d9[_e335 - 258]);
                    }
                    break;
                  case 196608:
                    break;
                  default:
                    (0, r.warn)("Unknown/unsupported post table version " + c);
                    u = !1;
                    a.defaultEncoding && (l = a.defaultEncoding);
                }
                a.glyphNames = l;
                return u;
              }(f.post, a, C);
              f.post = {
                tag: "post",
                data: createPostTable(a)
              };
              var D = [];
              function hasGlyph(e) {
                return !M[e];
              }
              if (a.composite) {
                var _e336 = a.cidToGidMap || [],
                  _t240 = 0 === _e336.length;
                a.cMap.forEach(function (a, i) {
                  "string" == typeof i && (i = convertCidString(a, i, !0));
                  if (i > 65535) throw new r.FormatError("Max size of CID is 65,535");
                  var n = -1;
                  _t240 ? n = i : void 0 !== _e336[i] && (n = _e336[i]);
                  n >= 0 && n < C && hasGlyph(n) && (D[a] = n);
                });
              } else {
                var _e337 = function readCmapTable(e, t, a, i) {
                    if (!e) {
                      (0, r.warn)("No cmap table available.");
                      return {
                        platformId: -1,
                        encodingId: -1,
                        mappings: [],
                        hasShortCmap: !1
                      };
                    }
                    var n,
                      s = (t.start || 0) + e.offset;
                    t.pos = s;
                    t.skip(2);
                    var o = t.getUint16();
                    var c,
                      l = !1;
                    for (var _e338 = 0; _e338 < o; _e338++) {
                      var _r147 = t.getUint16(),
                        _n91 = t.getUint16(),
                        _s61 = t.getInt32() >>> 0;
                      var _h18 = !1;
                      if (!c || c.platformId !== _r147 || c.encodingId !== _n91) {
                        if (0 !== _r147 || 0 !== _n91 && 1 !== _n91 && 3 !== _n91) {
                          if (1 === _r147 && 0 === _n91) _h18 = !0;else if (3 !== _r147 || 1 !== _n91 || !i && c) {
                            if (a && 3 === _r147 && 0 === _n91) {
                              _h18 = !0;
                              var _a182 = !0;
                              if (_e338 < o - 1) {
                                var _e339 = t.peekBytes(2);
                                int16(_e339[0], _e339[1]) < _r147 && (_a182 = !1);
                              }
                              _a182 && (l = !0);
                            }
                          } else {
                            _h18 = !0;
                            a || (l = !0);
                          }
                        } else _h18 = !0;
                        _h18 && (c = {
                          platformId: _r147,
                          encodingId: _n91,
                          offset: _s61
                        });
                        if (l) break;
                      }
                    }
                    c && (t.pos = s + c.offset);
                    if (!c || -1 === t.peekByte()) {
                      (0, r.warn)("Could not find a preferred cmap table.");
                      return {
                        platformId: -1,
                        encodingId: -1,
                        mappings: [],
                        hasShortCmap: !1
                      };
                    }
                    var h = t.getUint16();
                    var u = !1;
                    var d = [];
                    var f, g;
                    if (0 === h) {
                      t.skip(4);
                      for (f = 0; f < 256; f++) {
                        var _e340 = t.getByte();
                        _e340 && d.push({
                          charCode: f,
                          glyphId: _e340
                        });
                      }
                      u = !0;
                    } else if (2 === h) {
                      t.skip(4);
                      var _e341 = [];
                      var _a183 = 0;
                      for (var _r148 = 0; _r148 < 256; _r148++) {
                        var _r149 = t.getUint16() >> 3;
                        _e341.push(_r149);
                        _a183 = Math.max(_r149, _a183);
                      }
                      var _r150 = [];
                      for (var _e342 = 0; _e342 <= _a183; _e342++) _r150.push({
                        firstCode: t.getUint16(),
                        entryCount: t.getUint16(),
                        idDelta: signedInt16(t.getByte(), t.getByte()),
                        idRangePos: t.pos + t.getUint16()
                      });
                      for (var _a184 = 0; _a184 < 256; _a184++) if (0 === _e341[_a184]) {
                        t.pos = _r150[0].idRangePos + 2 * _a184;
                        g = t.getUint16();
                        d.push({
                          charCode: _a184,
                          glyphId: g
                        });
                      } else {
                        var _i130 = _r150[_e341[_a184]];
                        for (f = 0; f < _i130.entryCount; f++) {
                          var _e343 = (_a184 << 8) + f + _i130.firstCode;
                          t.pos = _i130.idRangePos + 2 * f;
                          g = t.getUint16();
                          0 !== g && (g = (g + _i130.idDelta) % 65536);
                          d.push({
                            charCode: _e343,
                            glyphId: g
                          });
                        }
                      }
                    } else if (4 === h) {
                      t.skip(4);
                      var _e344 = t.getUint16() >> 1;
                      t.skip(6);
                      var _a185 = [];
                      var _r151;
                      for (_r151 = 0; _r151 < _e344; _r151++) _a185.push({
                        end: t.getUint16()
                      });
                      t.skip(2);
                      for (_r151 = 0; _r151 < _e344; _r151++) _a185[_r151].start = t.getUint16();
                      for (_r151 = 0; _r151 < _e344; _r151++) _a185[_r151].delta = t.getUint16();
                      var _i131,
                        _o48 = 0;
                      for (_r151 = 0; _r151 < _e344; _r151++) {
                        n = _a185[_r151];
                        var _s62 = t.getUint16();
                        if (_s62) {
                          _i131 = (_s62 >> 1) - (_e344 - _r151);
                          n.offsetIndex = _i131;
                          _o48 = Math.max(_o48, _i131 + n.end - n.start + 1);
                        } else n.offsetIndex = -1;
                      }
                      var _c28 = [];
                      for (f = 0; f < _o48; f++) _c28.push(t.getUint16());
                      for (_r151 = 0; _r151 < _e344; _r151++) {
                        n = _a185[_r151];
                        s = n.start;
                        var _e345 = n.end,
                          _t241 = n.delta;
                        _i131 = n.offsetIndex;
                        for (f = s; f <= _e345; f++) if (65535 !== f) {
                          g = _i131 < 0 ? f : _c28[_i131 + f - s];
                          g = g + _t241 & 65535;
                          d.push({
                            charCode: f,
                            glyphId: g
                          });
                        }
                      }
                    } else if (6 === h) {
                      t.skip(4);
                      var _e346 = t.getUint16(),
                        _a186 = t.getUint16();
                      for (f = 0; f < _a186; f++) {
                        g = t.getUint16();
                        var _a187 = _e346 + f;
                        d.push({
                          charCode: _a187,
                          glyphId: g
                        });
                      }
                    } else {
                      if (12 !== h) {
                        (0, r.warn)("cmap table has unsupported format: " + h);
                        return {
                          platformId: -1,
                          encodingId: -1,
                          mappings: [],
                          hasShortCmap: !1
                        };
                      }
                      {
                        t.skip(10);
                        var _e347 = t.getInt32() >>> 0;
                        for (f = 0; f < _e347; f++) {
                          var _e348 = t.getInt32() >>> 0,
                            _a188 = t.getInt32() >>> 0;
                          var _r152 = t.getInt32() >>> 0;
                          for (var _t242 = _e348; _t242 <= _a188; _t242++) d.push({
                            charCode: _t242,
                            glyphId: _r152++
                          });
                        }
                      }
                    }
                    d.sort(function (e, t) {
                      return e.charCode - t.charCode;
                    });
                    for (var _e349 = 1; _e349 < d.length; _e349++) if (d[_e349 - 1].charCode === d[_e349].charCode) {
                      d.splice(_e349, 1);
                      _e349--;
                    }
                    return {
                      platformId: c.platformId,
                      encodingId: c.encodingId,
                      mappings: d,
                      hasShortCmap: u
                    };
                  }(f.cmap, t, this.isSymbolicFont, a.hasEncoding),
                  _i129 = _e337.platformId,
                  _s60 = _e337.encodingId,
                  _l18 = _e337.mappings;
                var _u13 = [],
                  _d10 = !1;
                !a.hasEncoding || "MacRomanEncoding" !== a.baseEncodingName && "WinAnsiEncoding" !== a.baseEncodingName || (_u13 = (0, c.getEncoding)(a.baseEncodingName));
                if (a.hasEncoding && !this.isSymbolicFont && (3 === _i129 && 1 === _s60 || 1 === _i129 && 0 === _s60)) {
                  var _e350 = (0, o.getGlyphsUnicode)();
                  for (var _t243 = 0; _t243 < 256; _t243++) {
                    var _r153 = void 0;
                    _r153 = void 0 !== this.differences[_t243] ? this.differences[_t243] : _u13.length && "" !== _u13[_t243] ? _u13[_t243] : c.StandardEncoding[_t243];
                    if (!_r153) continue;
                    var _o49 = (0, n.recoverGlyphName)(_r153, _e350);
                    var _d11 = void 0;
                    3 === _i129 && 1 === _s60 ? _d11 = _e350[_o49] : 1 === _i129 && 0 === _s60 && (_d11 = c.MacRomanEncoding.indexOf(_o49));
                    if (void 0 === _d11) {
                      if (!a.glyphNames && a.hasIncludedToUnicodeMap && !(this.toUnicode instanceof h.IdentityToUnicodeMap)) {
                        var _e351 = this.toUnicode.get(_t243);
                        _e351 && (_d11 = _e351.codePointAt(0));
                      }
                      if (void 0 === _d11) continue;
                    }
                    var _iterator93 = _createForOfIteratorHelper(_l18),
                      _step93;
                    try {
                      for (_iterator93.s(); !(_step93 = _iterator93.n()).done;) {
                        var _e352 = _step93.value;
                        if (_e352.charCode === _d11) {
                          D[_t243] = _e352.glyphId;
                          break;
                        }
                      }
                    } catch (err) {
                      _iterator93.e(err);
                    } finally {
                      _iterator93.f();
                    }
                  }
                } else if (0 === _i129) {
                  var _iterator94 = _createForOfIteratorHelper(_l18),
                    _step94;
                  try {
                    for (_iterator94.s(); !(_step94 = _iterator94.n()).done;) {
                      var _e353 = _step94.value;
                      D[_e353.charCode] = _e353.glyphId;
                    }
                  } catch (err) {
                    _iterator94.e(err);
                  } finally {
                    _iterator94.f();
                  }
                  _d10 = !0;
                } else {
                  var _iterator95 = _createForOfIteratorHelper(_l18),
                    _step95;
                  try {
                    for (_iterator95.s(); !(_step95 = _iterator95.n()).done;) {
                      var _e354 = _step95.value;
                      var _t244 = _e354.charCode;
                      3 === _i129 && _t244 >= 61440 && _t244 <= 61695 && (_t244 &= 255);
                      D[_t244] = _e354.glyphId;
                    }
                  } catch (err) {
                    _iterator95.e(err);
                  } finally {
                    _iterator95.f();
                  }
                }
                if (a.glyphNames && (_u13.length || this.differences.length)) for (var _e355 = 0; _e355 < 256; ++_e355) {
                  if (!_d10 && void 0 !== D[_e355]) continue;
                  var _t245 = this.differences[_e355] || _u13[_e355];
                  if (!_t245) continue;
                  var _r154 = a.glyphNames.indexOf(_t245);
                  _r154 > 0 && hasGlyph(_r154) && (D[_e355] = _r154);
                }
              }
              0 === D.length && (D[0] = 0);
              var N = k - 1;
              v || (N = 0);
              if (!a.cssFontInfo) {
                var _e356 = adjustMapping(D, hasGlyph, N, this.toUnicode);
                this.toFontChar = _e356.toFontChar;
                f.cmap = {
                  tag: "cmap",
                  data: createCmapTable(_e356.charCodeToGlyphId, _e356.toUnicodeExtraMap, k)
                };
                f["OS/2"] && function validateOS2Table(e, t) {
                  t.pos = (t.start || 0) + e.offset;
                  var a = t.getUint16();
                  t.skip(60);
                  var r = t.getUint16();
                  if (a < 4 && 768 & r) return !1;
                  if (t.getUint16() > t.getUint16()) return !1;
                  t.skip(6);
                  if (0 === t.getUint16()) return !1;
                  e.data[8] = e.data[9] = 0;
                  return !0;
                }(f["OS/2"], t) || (f["OS/2"] = {
                  tag: "OS/2",
                  data: createOS2Table(a, _e356.charCodeToGlyphId, E)
                });
              }
              if (!S) try {
                w = new y.Stream(f["CFF "].data);
                b = new i.CFFParser(w, a, n.SEAC_ANALYSIS_ENABLED).parse();
                b.duplicateFirstGlyph();
                var _e357 = new i.CFFCompiler(b);
                f["CFF "].data = _e357.compile();
              } catch (e) {
                (0, r.warn)("Failed to compile font " + a.loadedName);
              }
              if (f.name) {
                var _readNameTable3 = readNameTable(f.name),
                  _readNameTable4 = _slicedToArray(_readNameTable3, 2),
                  _t246 = _readNameTable4[0],
                  _r155 = _readNameTable4[1];
                f.name.data = createNameTable(e, _t246);
                this.psName = _t246[0][6] || null;
                a.composite || function adjustTrueTypeToUnicode(e, t, a) {
                  if (e.isInternalFont) return;
                  if (e.hasIncludedToUnicodeMap) return;
                  if (e.hasEncoding) return;
                  if (e.toUnicode instanceof h.IdentityToUnicodeMap) return;
                  if (!t) return;
                  if (0 === a.length) return;
                  if (e.defaultEncoding === c.WinAnsiEncoding) return;
                  var _iterator96 = _createForOfIteratorHelper(a),
                    _step96;
                  try {
                    for (_iterator96.s(); !(_step96 = _iterator96.n()).done;) {
                      var _e359 = _step96.value;
                      if (!isWinNameRecord(_e359)) return;
                    }
                  } catch (err) {
                    _iterator96.e(err);
                  } finally {
                    _iterator96.f();
                  }
                  var r = c.WinAnsiEncoding,
                    i = [],
                    n = (0, o.getGlyphsUnicode)();
                  for (var _e358 in r) {
                    var _t247 = r[_e358];
                    if ("" === _t247) continue;
                    var _a189 = n[_t247];
                    void 0 !== _a189 && (i[_e358] = String.fromCharCode(_a189));
                  }
                  i.length > 0 && e.toUnicode.amend(i);
                }(a, this.isSymbolicFont, _r155);
              } else f.name = {
                tag: "name",
                data: createNameTable(this.name)
              };
              var R = new m.OpenTypeFileBuilder(d.version);
              for (var _e360 in f) R.addTable(_e360, f[_e360].data);
              return R.toArray();
            }
          }, {
            key: "convert",
            value: function convert(e, t, a) {
              a.fixedPitch = !1;
              a.builtInEncoding && function adjustType1ToUnicode(e, t) {
                if (e.isInternalFont) return;
                if (e.hasIncludedToUnicodeMap) return;
                if (t === e.defaultEncoding) return;
                if (e.toUnicode instanceof h.IdentityToUnicodeMap) return;
                var a = [],
                  r = (0, o.getGlyphsUnicode)();
                for (var _i132 in t) {
                  if (e.hasEncoding && (e.baseEncodingName || void 0 !== e.differences[_i132])) continue;
                  var _n92 = t[_i132],
                    _o50 = (0, s.getUnicodeForGlyph)(_n92, r);
                  -1 !== _o50 && (a[_i132] = String.fromCharCode(_o50));
                }
                a.length > 0 && e.toUnicode.amend(a);
              }(a, a.builtInEncoding);
              var i = 1;
              t instanceof u.CFFFont && (i = t.numGlyphs - 1);
              var l = t.getGlyphMapping(a);
              var d = null,
                f = l,
                g = null;
              if (!a.cssFontInfo) {
                d = adjustMapping(l, t.hasGlyphId.bind(t), i, this.toUnicode);
                this.toFontChar = d.toFontChar;
                f = d.charCodeToGlyphId;
                g = d.toUnicodeExtraMap;
              }
              var p = t.numGlyphs;
              function getCharCodes(e, t) {
                var a = null;
                for (var _r156 in e) t === e[_r156] && (a || (a = [])).push(0 | _r156);
                return a;
              }
              function createCharCode(e, t) {
                for (var _a190 in e) if (t === e[_a190]) return 0 | _a190;
                d.charCodeToGlyphId[d.nextAvailableFontCharCode] = t;
                return d.nextAvailableFontCharCode++;
              }
              var b = t.seacs;
              if (d && n.SEAC_ANALYSIS_ENABLED && b && b.length) {
                var _e361 = a.fontMatrix || r.FONT_IDENTITY_MATRIX,
                  _i133 = t.getCharset(),
                  _n93 = Object.create(null);
                for (var _t248 in b) {
                  _t248 |= 0;
                  var _a191 = b[_t248],
                    _r157 = c.StandardEncoding[_a191[2]],
                    _s63 = c.StandardEncoding[_a191[3]],
                    _o51 = _i133.indexOf(_r157),
                    _h19 = _i133.indexOf(_s63);
                  if (_o51 < 0 || _h19 < 0) continue;
                  var _u14 = {
                      x: _a191[0] * _e361[0] + _a191[1] * _e361[2] + _e361[4],
                      y: _a191[0] * _e361[1] + _a191[1] * _e361[3] + _e361[5]
                    },
                    _f14 = getCharCodes(l, _t248);
                  if (_f14) {
                    var _iterator97 = _createForOfIteratorHelper(_f14),
                      _step97;
                    try {
                      for (_iterator97.s(); !(_step97 = _iterator97.n()).done;) {
                        var _e362 = _step97.value;
                        var _t249 = d.charCodeToGlyphId,
                          _a192 = createCharCode(_t249, _o51),
                          _r158 = createCharCode(_t249, _h19);
                        _n93[_e362] = {
                          baseFontCharCode: _a192,
                          accentFontCharCode: _r158,
                          accentOffset: _u14
                        };
                      }
                    } catch (err) {
                      _iterator97.e(err);
                    } finally {
                      _iterator97.f();
                    }
                  }
                }
                a.seacMap = _n93;
              }
              var y = 1 / (a.fontMatrix || r.FONT_IDENTITY_MATRIX)[0],
                w = new m.OpenTypeFileBuilder("OTTO");
              w.addTable("CFF ", t.data);
              w.addTable("OS/2", createOS2Table(a, f));
              w.addTable("cmap", createCmapTable(f, g, p));
              w.addTable("head", "\0\0\0\0\0\0\0\0\0\0_<õ\0\0" + safeString16(y) + "\0\0\0\0\v~'\0\0\0\0\v~'\0\0" + safeString16(a.descent) + "ÿ" + safeString16(a.ascent) + string16(a.italicAngle ? 2 : 0) + "\0\0\0\0\0\0\0");
              w.addTable("hhea", "\0\0\0" + safeString16(a.ascent) + safeString16(a.descent) + "\0\0ÿÿ\0\0\0\0\0\0" + safeString16(a.capHeight) + safeString16(Math.tan(a.italicAngle) * a.xHeight) + "\0\0\0\0\0\0\0\0\0\0\0\0" + string16(p));
              w.addTable("hmtx", function fontFieldsHmtx() {
                var e = t.charstrings,
                  a = t.cff ? t.cff.widths : null;
                var r = "\0\0\0\0";
                for (var _t250 = 1, _i134 = p; _t250 < _i134; _t250++) {
                  var _i135 = 0;
                  if (e) {
                    var _a193 = e[_t250 - 1];
                    _i135 = "width" in _a193 ? _a193.width : 0;
                  } else a && (_i135 = Math.ceil(a[_t250] || 0));
                  r += string16(_i135) + string16(0);
                }
                return r;
              }());
              w.addTable("maxp", "\0\0P\0" + string16(p));
              w.addTable("name", createNameTable(e));
              w.addTable("post", createPostTable(a));
              return w.toArray();
            }
          }, {
            key: "spaceWidth",
            get: function get() {
              var e = ["space", "minus", "one", "i", "I"];
              var t;
              for (var _i136 = 0, _e363 = e; _i136 < _e363.length; _i136++) {
                var _a194 = _e363[_i136];
                if (_a194 in this.widths) {
                  t = this.widths[_a194];
                  break;
                }
                var _e364 = (0, o.getGlyphsUnicode)()[_a194];
                var _r159 = 0;
                if (this.composite && this.cMap.contains(_e364)) {
                  _r159 = this.cMap.lookup(_e364);
                  "string" == typeof _r159 && (_r159 = convertCidString(_e364, _r159));
                }
                !_r159 && this.toUnicode && (_r159 = this.toUnicode.charCodeOf(_e364));
                _r159 <= 0 && (_r159 = _e364);
                t = this.widths[_r159];
                if (t) break;
              }
              return (0, r.shadow)(this, "spaceWidth", t || this.defaultWidth);
            }
          }, {
            key: "_charToGlyph",
            value: function _charToGlyph(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
              var a,
                i,
                n,
                o = this._glyphCache[e];
              if (o && o.isSpace === t) return o;
              var c = e;
              if (this.cMap && this.cMap.contains(e)) {
                c = this.cMap.lookup(e);
                "string" == typeof c && (c = convertCidString(e, c));
              }
              i = this.widths[c];
              "number" != typeof i && (i = this.defaultWidth);
              var l = this.vmetrics && this.vmetrics[c];
              var h = this.toUnicode.get(e) || e;
              "number" == typeof h && (h = String.fromCharCode(h));
              var u = void 0 !== this.toFontChar[e];
              a = this.toFontChar[e] || e;
              if (this.missingFile) {
                var _t251 = this.differences[e] || this.defaultEncoding[e];
                ".notdef" !== _t251 && "" !== _t251 || "Type1" !== this.type || (a = 32);
                a = (0, s.mapSpecialUnicodeValues)(a);
              }
              this.isType3Font && (n = a);
              var d = null;
              if (this.seacMap && this.seacMap[e]) {
                u = !0;
                var _t252 = this.seacMap[e];
                a = _t252.baseFontCharCode;
                d = {
                  fontChar: String.fromCodePoint(_t252.accentFontCharCode),
                  offset: _t252.accentOffset
                };
              }
              var f = "";
              "number" == typeof a && (a <= 1114111 ? f = String.fromCodePoint(a) : (0, r.warn)("charToGlyph - invalid fontCharCode: ".concat(a)));
              o = new Glyph(e, f, h, d, i, l, n, t, u);
              return this._glyphCache[e] = o;
            }
          }, {
            key: "charsToGlyphs",
            value: function charsToGlyphs(e) {
              var t = this._charsCache[e];
              if (t) return t;
              t = [];
              if (this.cMap) {
                var _a195 = Object.create(null),
                  _r160 = e.length;
                var _i137 = 0;
                for (; _i137 < _r160;) {
                  this.cMap.readCharCode(e, _i137, _a195);
                  var _r161 = _a195.charcode,
                    _n94 = _a195.length;
                  _i137 += _n94;
                  var _s64 = this._charToGlyph(_r161, 1 === _n94 && 32 === e.charCodeAt(_i137 - 1));
                  t.push(_s64);
                }
              } else for (var _a196 = 0, _r162 = e.length; _a196 < _r162; ++_a196) {
                var _r163 = e.charCodeAt(_a196),
                  _i138 = this._charToGlyph(_r163, 32 === _r163);
                t.push(_i138);
              }
              return this._charsCache[e] = t;
            }
          }, {
            key: "getCharPositions",
            value: function getCharPositions(e) {
              var t = [];
              if (this.cMap) {
                var _a197 = Object.create(null);
                var _r164 = 0;
                for (; _r164 < e.length;) {
                  this.cMap.readCharCode(e, _r164, _a197);
                  var _i139 = _a197.length;
                  t.push([_r164, _r164 + _i139]);
                  _r164 += _i139;
                }
              } else for (var _a198 = 0, _r165 = e.length; _a198 < _r165; ++_a198) t.push([_a198, _a198 + 1]);
              return t;
            }
          }, {
            key: "glyphCacheValues",
            get: function get() {
              return Object.values(this._glyphCache);
            }
          }, {
            key: "encodeString",
            value: function encodeString(e) {
              var _this78 = this;
              var t = [],
                a = [],
                hasCurrentBufErrors = function hasCurrentBufErrors() {
                  return t.length % 2 == 1;
                },
                r = this.toUnicode instanceof h.IdentityToUnicodeMap ? function (e) {
                  return _this78.toUnicode.charCodeOf(e);
                } : function (e) {
                  return _this78.toUnicode.charCodeOf(String.fromCodePoint(e));
                };
              for (var _i140 = 0, _n95 = e.length; _i140 < _n95; _i140++) {
                var _n96 = e.codePointAt(_i140);
                _n96 > 55295 && (_n96 < 57344 || _n96 > 65533) && _i140++;
                if (this.toUnicode) {
                  var _e365 = r(_n96);
                  if (-1 !== _e365) {
                    if (hasCurrentBufErrors()) {
                      t.push(a.join(""));
                      a.length = 0;
                    }
                    for (var _t253 = (this.cMap ? this.cMap.getCharCodeLength(_e365) : 1) - 1; _t253 >= 0; _t253--) a.push(String.fromCharCode(_e365 >> 8 * _t253 & 255));
                    continue;
                  }
                }
                if (!hasCurrentBufErrors()) {
                  t.push(a.join(""));
                  a.length = 0;
                }
                a.push(String.fromCodePoint(_n96));
              }
              t.push(a.join(""));
              return t;
            }
          }]);
          return Font;
        }();
        t.ErrorFont = /*#__PURE__*/function () {
          function ErrorFont(e) {
            _classCallCheck(this, ErrorFont);
            this.error = e;
            this.loadedName = "g_font_error";
            this.missingFile = !0;
          }
          _createClass(ErrorFont, [{
            key: "charsToGlyphs",
            value: function charsToGlyphs() {
              return [];
            }
          }, {
            key: "encodeString",
            value: function encodeString(e) {
              return [e];
            }
          }, {
            key: "exportData",
            value: function exportData() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              return {
                error: this.error
              };
            }
          }]);
          return ErrorFont;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.CFFTopDict = t.CFFStrings = t.CFFStandardStrings = t.CFFPrivateDict = t.CFFParser = t.CFFIndex = t.CFFHeader = t.CFFFDSelect = t.CFFCompiler = t.CFFCharset = t.CFF = void 0;
        var r = a(2),
          i = a(36),
          n = a(37);
        var s = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"];
        t.CFFStandardStrings = s;
        var o = 391,
          c = [null, {
            id: "hstem",
            min: 2,
            stackClearing: !0,
            stem: !0
          }, null, {
            id: "vstem",
            min: 2,
            stackClearing: !0,
            stem: !0
          }, {
            id: "vmoveto",
            min: 1,
            stackClearing: !0
          }, {
            id: "rlineto",
            min: 2,
            resetStack: !0
          }, {
            id: "hlineto",
            min: 1,
            resetStack: !0
          }, {
            id: "vlineto",
            min: 1,
            resetStack: !0
          }, {
            id: "rrcurveto",
            min: 6,
            resetStack: !0
          }, null, {
            id: "callsubr",
            min: 1,
            undefStack: !0
          }, {
            id: "return",
            min: 0,
            undefStack: !0
          }, null, null, {
            id: "endchar",
            min: 0,
            stackClearing: !0
          }, null, null, null, {
            id: "hstemhm",
            min: 2,
            stackClearing: !0,
            stem: !0
          }, {
            id: "hintmask",
            min: 0,
            stackClearing: !0
          }, {
            id: "cntrmask",
            min: 0,
            stackClearing: !0
          }, {
            id: "rmoveto",
            min: 2,
            stackClearing: !0
          }, {
            id: "hmoveto",
            min: 1,
            stackClearing: !0
          }, {
            id: "vstemhm",
            min: 2,
            stackClearing: !0,
            stem: !0
          }, {
            id: "rcurveline",
            min: 8,
            resetStack: !0
          }, {
            id: "rlinecurve",
            min: 8,
            resetStack: !0
          }, {
            id: "vvcurveto",
            min: 4,
            resetStack: !0
          }, {
            id: "hhcurveto",
            min: 4,
            resetStack: !0
          }, null, {
            id: "callgsubr",
            min: 1,
            undefStack: !0
          }, {
            id: "vhcurveto",
            min: 4,
            resetStack: !0
          }, {
            id: "hvcurveto",
            min: 4,
            resetStack: !0
          }],
          l = [null, null, null, {
            id: "and",
            min: 2,
            stackDelta: -1
          }, {
            id: "or",
            min: 2,
            stackDelta: -1
          }, {
            id: "not",
            min: 1,
            stackDelta: 0
          }, null, null, null, {
            id: "abs",
            min: 1,
            stackDelta: 0
          }, {
            id: "add",
            min: 2,
            stackDelta: -1,
            stackFn: function stackFn(e, t) {
              e[t - 2] = e[t - 2] + e[t - 1];
            }
          }, {
            id: "sub",
            min: 2,
            stackDelta: -1,
            stackFn: function stackFn(e, t) {
              e[t - 2] = e[t - 2] - e[t - 1];
            }
          }, {
            id: "div",
            min: 2,
            stackDelta: -1,
            stackFn: function stackFn(e, t) {
              e[t - 2] = e[t - 2] / e[t - 1];
            }
          }, null, {
            id: "neg",
            min: 1,
            stackDelta: 0,
            stackFn: function stackFn(e, t) {
              e[t - 1] = -e[t - 1];
            }
          }, {
            id: "eq",
            min: 2,
            stackDelta: -1
          }, null, null, {
            id: "drop",
            min: 1,
            stackDelta: -1
          }, null, {
            id: "put",
            min: 2,
            stackDelta: -2
          }, {
            id: "get",
            min: 1,
            stackDelta: 0
          }, {
            id: "ifelse",
            min: 4,
            stackDelta: -3
          }, {
            id: "random",
            min: 0,
            stackDelta: 1
          }, {
            id: "mul",
            min: 2,
            stackDelta: -1,
            stackFn: function stackFn(e, t) {
              e[t - 2] = e[t - 2] * e[t - 1];
            }
          }, null, {
            id: "sqrt",
            min: 1,
            stackDelta: 0
          }, {
            id: "dup",
            min: 1,
            stackDelta: 1
          }, {
            id: "exch",
            min: 2,
            stackDelta: 0
          }, {
            id: "index",
            min: 2,
            stackDelta: 0
          }, {
            id: "roll",
            min: 3,
            stackDelta: -2
          }, null, null, null, {
            id: "hflex",
            min: 7,
            resetStack: !0
          }, {
            id: "flex",
            min: 13,
            resetStack: !0
          }, {
            id: "hflex1",
            min: 9,
            resetStack: !0
          }, {
            id: "flex1",
            min: 11,
            resetStack: !0
          }];
        t.CFFParser = /*#__PURE__*/function () {
          function CFFParser(e, t, a) {
            _classCallCheck(this, CFFParser);
            this.bytes = e.getBytes();
            this.properties = t;
            this.seacAnalysisEnabled = !!a;
          }
          _createClass(CFFParser, [{
            key: "parse",
            value: function parse() {
              var e = this.properties,
                t = new CFF();
              this.cff = t;
              var a = this.parseHeader(),
                r = this.parseIndex(a.endPos),
                i = this.parseIndex(r.endPos),
                n = this.parseIndex(i.endPos),
                s = this.parseIndex(n.endPos),
                o = this.parseDict(i.obj.get(0)),
                c = this.createDict(CFFTopDict, o, t.strings);
              t.header = a.obj;
              t.names = this.parseNameIndex(r.obj);
              t.strings = this.parseStringIndex(n.obj);
              t.topDict = c;
              t.globalSubrIndex = s.obj;
              this.parsePrivateDict(t.topDict);
              t.isCIDFont = c.hasName("ROS");
              var l = c.getByName("CharStrings"),
                h = this.parseIndex(l).obj,
                u = c.getByName("FontMatrix");
              u && (e.fontMatrix = u);
              var d = c.getByName("FontBBox");
              if (d) {
                e.ascent = Math.max(d[3], d[1]);
                e.descent = Math.min(d[1], d[3]);
                e.ascentScaled = !0;
              }
              var f, g;
              if (t.isCIDFont) {
                var _e366 = this.parseIndex(c.getByName("FDArray")).obj;
                for (var _a199 = 0, _r166 = _e366.count; _a199 < _r166; ++_a199) {
                  var _r167 = _e366.get(_a199),
                    _i141 = this.createDict(CFFTopDict, this.parseDict(_r167), t.strings);
                  this.parsePrivateDict(_i141);
                  t.fdArray.push(_i141);
                }
                g = null;
                f = this.parseCharsets(c.getByName("charset"), h.count, t.strings, !0);
                t.fdSelect = this.parseFDSelect(c.getByName("FDSelect"), h.count);
              } else {
                f = this.parseCharsets(c.getByName("charset"), h.count, t.strings, !1);
                g = this.parseEncoding(c.getByName("Encoding"), e, t.strings, f.charset);
              }
              t.charset = f;
              t.encoding = g;
              var p = this.parseCharStrings({
                charStrings: h,
                localSubrIndex: c.privateDict.subrsIndex,
                globalSubrIndex: s.obj,
                fdSelect: t.fdSelect,
                fdArray: t.fdArray,
                privateDict: c.privateDict
              });
              t.charStrings = p.charStrings;
              t.seacs = p.seacs;
              t.widths = p.widths;
              return t;
            }
          }, {
            key: "parseHeader",
            value: function parseHeader() {
              var e = this.bytes;
              var t = e.length;
              var a = 0;
              for (; a < t && 1 !== e[a];) ++a;
              if (a >= t) throw new r.FormatError("Invalid CFF header");
              if (0 !== a) {
                (0, r.info)("cff data is shifted");
                e = e.subarray(a);
                this.bytes = e;
              }
              var i = e[0],
                n = e[1],
                s = e[2],
                o = e[3];
              return {
                obj: new CFFHeader(i, n, s, o),
                endPos: s
              };
            }
          }, {
            key: "parseDict",
            value: function parseDict(e) {
              var t = 0;
              function parseOperand() {
                var a = e[t++];
                if (30 === a) return function parseFloatOperand() {
                  var a = "";
                  var r = 15,
                    i = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"],
                    n = e.length;
                  for (; t < n;) {
                    var _n97 = e[t++],
                      _s65 = _n97 >> 4,
                      _o52 = 15 & _n97;
                    if (_s65 === r) break;
                    a += i[_s65];
                    if (_o52 === r) break;
                    a += i[_o52];
                  }
                  return parseFloat(a);
                }();
                if (28 === a) {
                  a = e[t++];
                  a = (a << 24 | e[t++] << 16) >> 16;
                  return a;
                }
                if (29 === a) {
                  a = e[t++];
                  a = a << 8 | e[t++];
                  a = a << 8 | e[t++];
                  a = a << 8 | e[t++];
                  return a;
                }
                if (a >= 32 && a <= 246) return a - 139;
                if (a >= 247 && a <= 250) return 256 * (a - 247) + e[t++] + 108;
                if (a >= 251 && a <= 254) return -256 * (a - 251) - e[t++] - 108;
                (0, r.warn)('CFFParser_parseDict: "' + a + '" is a reserved command.');
                return NaN;
              }
              var a = [];
              var i = [];
              t = 0;
              var n = e.length;
              for (; t < n;) {
                var _r168 = e[t];
                if (_r168 <= 21) {
                  12 === _r168 && (_r168 = _r168 << 8 | e[++t]);
                  i.push([_r168, a]);
                  a = [];
                  ++t;
                } else a.push(parseOperand());
              }
              return i;
            }
          }, {
            key: "parseIndex",
            value: function parseIndex(e) {
              var t = new CFFIndex(),
                a = this.bytes,
                r = a[e++] << 8 | a[e++],
                i = [];
              var n,
                s,
                o = e;
              if (0 !== r) {
                var _t254 = a[e++],
                  _c29 = e + (r + 1) * _t254 - 1;
                for (n = 0, s = r + 1; n < s; ++n) {
                  var _r169 = 0;
                  for (var _i142 = 0; _i142 < _t254; ++_i142) {
                    _r169 <<= 8;
                    _r169 += a[e++];
                  }
                  i.push(_c29 + _r169);
                }
                o = i[r];
              }
              for (n = 0, s = i.length - 1; n < s; ++n) {
                var _e367 = i[n],
                  _r170 = i[n + 1];
                t.add(a.subarray(_e367, _r170));
              }
              return {
                obj: t,
                endPos: o
              };
            }
          }, {
            key: "parseNameIndex",
            value: function parseNameIndex(e) {
              var t = [];
              for (var _a200 = 0, _i143 = e.count; _a200 < _i143; ++_a200) {
                var _i144 = e.get(_a200);
                t.push((0, r.bytesToString)(_i144));
              }
              return t;
            }
          }, {
            key: "parseStringIndex",
            value: function parseStringIndex(e) {
              var t = new CFFStrings();
              for (var _a201 = 0, _i145 = e.count; _a201 < _i145; ++_a201) {
                var _i146 = e.get(_a201);
                t.add((0, r.bytesToString)(_i146));
              }
              return t;
            }
          }, {
            key: "createDict",
            value: function createDict(e, t, a) {
              var r = new e(a);
              var _iterator98 = _createForOfIteratorHelper(t),
                _step98;
              try {
                for (_iterator98.s(); !(_step98 = _iterator98.n()).done;) {
                  var _step98$value = _slicedToArray(_step98.value, 2),
                    _e368 = _step98$value[0],
                    _a202 = _step98$value[1];
                  r.setByKey(_e368, _a202);
                }
              } catch (err) {
                _iterator98.e(err);
              } finally {
                _iterator98.f();
              }
              return r;
            }
          }, {
            key: "parseCharString",
            value: function parseCharString(e, t, a, i) {
              if (!t || e.callDepth > 10) return !1;
              var n = e.stackSize;
              var s = e.stack;
              var o = t.length;
              for (var _h20 = 0; _h20 < o;) {
                var _u15 = t[_h20++];
                var _d12 = null;
                if (12 === _u15) {
                  var _e369 = t[_h20++];
                  if (0 === _e369) {
                    t[_h20 - 2] = 139;
                    t[_h20 - 1] = 22;
                    n = 0;
                  } else _d12 = l[_e369];
                } else if (28 === _u15) {
                  s[n] = (t[_h20] << 24 | t[_h20 + 1] << 16) >> 16;
                  _h20 += 2;
                  n++;
                } else if (14 === _u15) {
                  if (n >= 4) {
                    n -= 4;
                    if (this.seacAnalysisEnabled) {
                      e.seac = s.slice(n, n + 4);
                      return !1;
                    }
                  }
                  _d12 = c[_u15];
                } else if (_u15 >= 32 && _u15 <= 246) {
                  s[n] = _u15 - 139;
                  n++;
                } else if (_u15 >= 247 && _u15 <= 254) {
                  s[n] = _u15 < 251 ? (_u15 - 247 << 8) + t[_h20] + 108 : -(_u15 - 251 << 8) - t[_h20] - 108;
                  _h20++;
                  n++;
                } else if (255 === _u15) {
                  s[n] = (t[_h20] << 24 | t[_h20 + 1] << 16 | t[_h20 + 2] << 8 | t[_h20 + 3]) / 65536;
                  _h20 += 4;
                  n++;
                } else if (19 === _u15 || 20 === _u15) {
                  e.hints += n >> 1;
                  _h20 += e.hints + 7 >> 3;
                  n %= 2;
                  _d12 = c[_u15];
                } else {
                  if (10 === _u15 || 29 === _u15) {
                    var _t255 = void 0;
                    _t255 = 10 === _u15 ? a : i;
                    if (!_t255) {
                      _d12 = c[_u15];
                      (0, r.warn)("Missing subrsIndex for " + _d12.id);
                      return !1;
                    }
                    var _o53 = 32768;
                    _t255.count < 1240 ? _o53 = 107 : _t255.count < 33900 && (_o53 = 1131);
                    var _l19 = s[--n] + _o53;
                    if (_l19 < 0 || _l19 >= _t255.count || isNaN(_l19)) {
                      _d12 = c[_u15];
                      (0, r.warn)("Out of bounds subrIndex for " + _d12.id);
                      return !1;
                    }
                    e.stackSize = n;
                    e.callDepth++;
                    if (!this.parseCharString(e, _t255.get(_l19), a, i)) return !1;
                    e.callDepth--;
                    n = e.stackSize;
                    continue;
                  }
                  if (11 === _u15) {
                    e.stackSize = n;
                    return !0;
                  }
                  if (0 === _u15 && _h20 === t.length) {
                    t[_h20 - 1] = 14;
                    _d12 = c[14];
                  } else {
                    if (9 === _u15) {
                      t.copyWithin(_h20 - 1, _h20, -1);
                      _h20 -= 1;
                      o -= 1;
                      continue;
                    }
                    _d12 = c[_u15];
                  }
                }
                if (_d12) {
                  if (_d12.stem) {
                    e.hints += n >> 1;
                    if (3 === _u15 || 23 === _u15) e.hasVStems = !0;else if (e.hasVStems && (1 === _u15 || 18 === _u15)) {
                      (0, r.warn)("CFF stem hints are in wrong order");
                      t[_h20 - 1] = 1 === _u15 ? 3 : 23;
                    }
                  }
                  if ("min" in _d12 && !e.undefStack && n < _d12.min) {
                    (0, r.warn)("Not enough parameters for " + _d12.id + "; actual: " + n + ", expected: " + _d12.min);
                    if (0 === n) {
                      t[_h20 - 1] = 14;
                      return !0;
                    }
                    return !1;
                  }
                  if (e.firstStackClearing && _d12.stackClearing) {
                    e.firstStackClearing = !1;
                    n -= _d12.min;
                    n >= 2 && _d12.stem ? n %= 2 : n > 1 && (0, r.warn)("Found too many parameters for stack-clearing command");
                    n > 0 && (e.width = s[n - 1]);
                  }
                  if ("stackDelta" in _d12) {
                    "stackFn" in _d12 && _d12.stackFn(s, n);
                    n += _d12.stackDelta;
                  } else if (_d12.stackClearing) n = 0;else if (_d12.resetStack) {
                    n = 0;
                    e.undefStack = !1;
                  } else if (_d12.undefStack) {
                    n = 0;
                    e.undefStack = !0;
                    e.firstStackClearing = !1;
                  }
                }
              }
              o < t.length && t.fill(14, o);
              e.stackSize = n;
              return !0;
            }
          }, {
            key: "parseCharStrings",
            value: function parseCharStrings(_ref67) {
              var e = _ref67.charStrings,
                t = _ref67.localSubrIndex,
                a = _ref67.globalSubrIndex,
                i = _ref67.fdSelect,
                n = _ref67.fdArray,
                s = _ref67.privateDict;
              var o = [],
                c = [],
                l = e.count;
              for (var _h21 = 0; _h21 < l; _h21++) {
                var _l20 = e.get(_h21),
                  _u16 = {
                    callDepth: 0,
                    stackSize: 0,
                    stack: [],
                    undefStack: !0,
                    hints: 0,
                    firstStackClearing: !0,
                    seac: null,
                    width: null,
                    hasVStems: !1
                  };
                var _d13 = !0,
                  _f15 = null,
                  _g15 = s;
                if (i && n.length) {
                  var _e370 = i.getFDIndex(_h21);
                  if (-1 === _e370) {
                    (0, r.warn)("Glyph index is not in fd select.");
                    _d13 = !1;
                  }
                  if (_e370 >= n.length) {
                    (0, r.warn)("Invalid fd index for glyph index.");
                    _d13 = !1;
                  }
                  if (_d13) {
                    _g15 = n[_e370].privateDict;
                    _f15 = _g15.subrsIndex;
                  }
                } else t && (_f15 = t);
                _d13 && (_d13 = this.parseCharString(_u16, _l20, _f15, a));
                if (null !== _u16.width) {
                  var _e371 = _g15.getByName("nominalWidthX");
                  c[_h21] = _e371 + _u16.width;
                } else {
                  var _e372 = _g15.getByName("defaultWidthX");
                  c[_h21] = _e372;
                }
                null !== _u16.seac && (o[_h21] = _u16.seac);
                _d13 || e.set(_h21, new Uint8Array([14]));
              }
              return {
                charStrings: e,
                seacs: o,
                widths: c
              };
            }
          }, {
            key: "emptyPrivateDictionary",
            value: function emptyPrivateDictionary(e) {
              var t = this.createDict(CFFPrivateDict, [], e.strings);
              e.setByKey(18, [0, 0]);
              e.privateDict = t;
            }
          }, {
            key: "parsePrivateDict",
            value: function parsePrivateDict(e) {
              if (!e.hasName("Private")) {
                this.emptyPrivateDictionary(e);
                return;
              }
              var t = e.getByName("Private");
              if (!Array.isArray(t) || 2 !== t.length) {
                e.removeByName("Private");
                return;
              }
              var a = t[0],
                r = t[1];
              if (0 === a || r >= this.bytes.length) {
                this.emptyPrivateDictionary(e);
                return;
              }
              var i = r + a,
                n = this.bytes.subarray(r, i),
                s = this.parseDict(n),
                o = this.createDict(CFFPrivateDict, s, e.strings);
              e.privateDict = o;
              0 === o.getByName("ExpansionFactor") && o.setByName("ExpansionFactor", .06);
              if (!o.getByName("Subrs")) return;
              var c = o.getByName("Subrs"),
                l = r + c;
              if (0 === c || l >= this.bytes.length) {
                this.emptyPrivateDictionary(e);
                return;
              }
              var h = this.parseIndex(l);
              o.subrsIndex = h.obj;
            }
          }, {
            key: "parseCharsets",
            value: function parseCharsets(e, t, a, n) {
              if (0 === e) return new CFFCharset(!0, d.ISO_ADOBE, i.ISOAdobeCharset);
              if (1 === e) return new CFFCharset(!0, d.EXPERT, i.ExpertCharset);
              if (2 === e) return new CFFCharset(!0, d.EXPERT_SUBSET, i.ExpertSubsetCharset);
              var s = this.bytes,
                o = e,
                c = s[e++],
                l = [n ? 0 : ".notdef"];
              var h, u, f;
              t -= 1;
              switch (c) {
                case 0:
                  for (f = 0; f < t; f++) {
                    h = s[e++] << 8 | s[e++];
                    l.push(n ? h : a.get(h));
                  }
                  break;
                case 1:
                  for (; l.length <= t;) {
                    h = s[e++] << 8 | s[e++];
                    u = s[e++];
                    for (f = 0; f <= u; f++) l.push(n ? h++ : a.get(h++));
                  }
                  break;
                case 2:
                  for (; l.length <= t;) {
                    h = s[e++] << 8 | s[e++];
                    u = s[e++] << 8 | s[e++];
                    for (f = 0; f <= u; f++) l.push(n ? h++ : a.get(h++));
                  }
                  break;
                default:
                  throw new r.FormatError("Unknown charset format");
              }
              var g = e,
                p = s.subarray(o, g);
              return new CFFCharset(!1, c, l, p);
            }
          }, {
            key: "parseEncoding",
            value: function parseEncoding(e, t, a, i) {
              var s = Object.create(null),
                o = this.bytes;
              var c,
                l,
                h,
                u = !1,
                d = null;
              if (0 === e || 1 === e) {
                u = !0;
                c = e;
                var _t256 = e ? n.ExpertEncoding : n.StandardEncoding;
                for (l = 0, h = i.length; l < h; l++) {
                  var _e373 = _t256.indexOf(i[l]);
                  -1 !== _e373 && (s[_e373] = l);
                }
              } else {
                var _t257 = e;
                c = o[e++];
                switch (127 & c) {
                  case 0:
                    var _t258 = o[e++];
                    for (l = 1; l <= _t258; l++) s[o[e++]] = l;
                    break;
                  case 1:
                    var _a203 = o[e++];
                    var _i147 = 1;
                    for (l = 0; l < _a203; l++) {
                      var _t259 = o[e++],
                        _a204 = o[e++];
                      for (var _e374 = _t259; _e374 <= _t259 + _a204; _e374++) s[_e374] = _i147++;
                    }
                    break;
                  default:
                    throw new r.FormatError("Unknown encoding format: ".concat(c, " in CFF"));
                }
                var _n98 = e;
                if (128 & c) {
                  o[_t257] &= 127;
                  !function readSupplement() {
                    var t = o[e++];
                    for (l = 0; l < t; l++) {
                      var _t260 = o[e++],
                        _r171 = (o[e++] << 8) + (255 & o[e++]);
                      s[_t260] = i.indexOf(a.get(_r171));
                    }
                  }();
                }
                d = o.subarray(_t257, _n98);
              }
              c &= 127;
              return new CFFEncoding(u, c, s, d);
            }
          }, {
            key: "parseFDSelect",
            value: function parseFDSelect(e, t) {
              var a = this.bytes,
                i = a[e++],
                n = [];
              var s;
              switch (i) {
                case 0:
                  for (s = 0; s < t; ++s) {
                    var _t261 = a[e++];
                    n.push(_t261);
                  }
                  break;
                case 3:
                  var _o54 = a[e++] << 8 | a[e++];
                  for (s = 0; s < _o54; ++s) {
                    var _t262 = a[e++] << 8 | a[e++];
                    if (0 === s && 0 !== _t262) {
                      (0, r.warn)("parseFDSelect: The first range must have a first GID of 0 -- trying to recover.");
                      _t262 = 0;
                    }
                    var _i148 = a[e++],
                      _o55 = a[e] << 8 | a[e + 1];
                    for (var _e375 = _t262; _e375 < _o55; ++_e375) n.push(_i148);
                  }
                  e += 2;
                  break;
                default:
                  throw new r.FormatError("parseFDSelect: Unknown format \"".concat(i, "\"."));
              }
              if (n.length !== t) throw new r.FormatError("parseFDSelect: Invalid font data.");
              return new CFFFDSelect(i, n);
            }
          }]);
          return CFFParser;
        }();
        var CFF = /*#__PURE__*/function () {
          function CFF() {
            _classCallCheck(this, CFF);
            this.header = null;
            this.names = [];
            this.topDict = null;
            this.strings = new CFFStrings();
            this.globalSubrIndex = null;
            this.encoding = null;
            this.charset = null;
            this.charStrings = null;
            this.fdArray = [];
            this.fdSelect = null;
            this.isCIDFont = !1;
          }
          _createClass(CFF, [{
            key: "duplicateFirstGlyph",
            value: function duplicateFirstGlyph() {
              if (this.charStrings.count >= 65535) {
                (0, r.warn)("Not enough space in charstrings to duplicate first glyph.");
                return;
              }
              var e = this.charStrings.get(0);
              this.charStrings.add(e);
              this.isCIDFont && this.fdSelect.fdSelect.push(this.fdSelect.fdSelect[0]);
            }
          }, {
            key: "hasGlyphId",
            value: function hasGlyphId(e) {
              if (e < 0 || e >= this.charStrings.count) return !1;
              return this.charStrings.get(e).length > 0;
            }
          }]);
          return CFF;
        }();
        t.CFF = CFF;
        var CFFHeader = /*#__PURE__*/_createClass(function CFFHeader(e, t, a, r) {
          _classCallCheck(this, CFFHeader);
          this.major = e;
          this.minor = t;
          this.hdrSize = a;
          this.offSize = r;
        });
        t.CFFHeader = CFFHeader;
        var CFFStrings = /*#__PURE__*/function () {
          function CFFStrings() {
            _classCallCheck(this, CFFStrings);
            this.strings = [];
          }
          _createClass(CFFStrings, [{
            key: "get",
            value: function get(e) {
              return e >= 0 && e <= 390 ? s[e] : e - o <= this.strings.length ? this.strings[e - o] : s[0];
            }
          }, {
            key: "getSID",
            value: function getSID(e) {
              var t = s.indexOf(e);
              if (-1 !== t) return t;
              t = this.strings.indexOf(e);
              return -1 !== t ? t + o : -1;
            }
          }, {
            key: "add",
            value: function add(e) {
              this.strings.push(e);
            }
          }, {
            key: "count",
            get: function get() {
              return this.strings.length;
            }
          }]);
          return CFFStrings;
        }();
        t.CFFStrings = CFFStrings;
        var CFFIndex = /*#__PURE__*/function () {
          function CFFIndex() {
            _classCallCheck(this, CFFIndex);
            this.objects = [];
            this.length = 0;
          }
          _createClass(CFFIndex, [{
            key: "add",
            value: function add(e) {
              this.length += e.length;
              this.objects.push(e);
            }
          }, {
            key: "set",
            value: function set(e, t) {
              this.length += t.length - this.objects[e].length;
              this.objects[e] = t;
            }
          }, {
            key: "get",
            value: function get(e) {
              return this.objects[e];
            }
          }, {
            key: "count",
            get: function get() {
              return this.objects.length;
            }
          }]);
          return CFFIndex;
        }();
        t.CFFIndex = CFFIndex;
        var CFFDict = /*#__PURE__*/function () {
          function CFFDict(e, t) {
            _classCallCheck(this, CFFDict);
            this.keyToNameMap = e.keyToNameMap;
            this.nameToKeyMap = e.nameToKeyMap;
            this.defaults = e.defaults;
            this.types = e.types;
            this.opcodes = e.opcodes;
            this.order = e.order;
            this.strings = t;
            this.values = Object.create(null);
          }
          _createClass(CFFDict, [{
            key: "setByKey",
            value: function setByKey(e, t) {
              if (!(e in this.keyToNameMap)) return !1;
              if (0 === t.length) return !0;
              var _iterator99 = _createForOfIteratorHelper(t),
                _step99;
              try {
                for (_iterator99.s(); !(_step99 = _iterator99.n()).done;) {
                  var _a205 = _step99.value;
                  if (isNaN(_a205)) {
                    (0, r.warn)("Invalid CFFDict value: \"".concat(t, "\" for key \"").concat(e, "\"."));
                    return !0;
                  }
                }
              } catch (err) {
                _iterator99.e(err);
              } finally {
                _iterator99.f();
              }
              var a = this.types[e];
              "num" !== a && "sid" !== a && "offset" !== a || (t = t[0]);
              this.values[e] = t;
              return !0;
            }
          }, {
            key: "setByName",
            value: function setByName(e, t) {
              if (!(e in this.nameToKeyMap)) throw new r.FormatError("Invalid dictionary name \"".concat(e, "\""));
              this.values[this.nameToKeyMap[e]] = t;
            }
          }, {
            key: "hasName",
            value: function hasName(e) {
              return this.nameToKeyMap[e] in this.values;
            }
          }, {
            key: "getByName",
            value: function getByName(e) {
              if (!(e in this.nameToKeyMap)) throw new r.FormatError("Invalid dictionary name ".concat(e, "\""));
              var t = this.nameToKeyMap[e];
              return t in this.values ? this.values[t] : this.defaults[t];
            }
          }, {
            key: "removeByName",
            value: function removeByName(e) {
              delete this.values[this.nameToKeyMap[e]];
            }
          }], [{
            key: "createTables",
            value: function createTables(e) {
              var t = {
                keyToNameMap: {},
                nameToKeyMap: {},
                defaults: {},
                types: {},
                opcodes: {},
                order: []
              };
              var _iterator100 = _createForOfIteratorHelper(e),
                _step100;
              try {
                for (_iterator100.s(); !(_step100 = _iterator100.n()).done;) {
                  var _a206 = _step100.value;
                  var _e376 = Array.isArray(_a206[0]) ? (_a206[0][0] << 8) + _a206[0][1] : _a206[0];
                  t.keyToNameMap[_e376] = _a206[1];
                  t.nameToKeyMap[_a206[1]] = _e376;
                  t.types[_e376] = _a206[2];
                  t.defaults[_e376] = _a206[3];
                  t.opcodes[_e376] = Array.isArray(_a206[0]) ? _a206[0] : [_a206[0]];
                  t.order.push(_e376);
                }
              } catch (err) {
                _iterator100.e(err);
              } finally {
                _iterator100.f();
              }
              return t;
            }
          }]);
          return CFFDict;
        }();
        var h = [[[12, 30], "ROS", ["sid", "sid", "num"], null], [[12, 20], "SyntheticBase", "num", null], [0, "version", "sid", null], [1, "Notice", "sid", null], [[12, 0], "Copyright", "sid", null], [2, "FullName", "sid", null], [3, "FamilyName", "sid", null], [4, "Weight", "sid", null], [[12, 1], "isFixedPitch", "num", 0], [[12, 2], "ItalicAngle", "num", 0], [[12, 3], "UnderlinePosition", "num", -100], [[12, 4], "UnderlineThickness", "num", 50], [[12, 5], "PaintType", "num", 0], [[12, 6], "CharstringType", "num", 2], [[12, 7], "FontMatrix", ["num", "num", "num", "num", "num", "num"], [.001, 0, 0, .001, 0, 0]], [13, "UniqueID", "num", null], [5, "FontBBox", ["num", "num", "num", "num"], [0, 0, 0, 0]], [[12, 8], "StrokeWidth", "num", 0], [14, "XUID", "array", null], [15, "charset", "offset", 0], [16, "Encoding", "offset", 0], [17, "CharStrings", "offset", 0], [18, "Private", ["offset", "offset"], null], [[12, 21], "PostScript", "sid", null], [[12, 22], "BaseFontName", "sid", null], [[12, 23], "BaseFontBlend", "delta", null], [[12, 31], "CIDFontVersion", "num", 0], [[12, 32], "CIDFontRevision", "num", 0], [[12, 33], "CIDFontType", "num", 0], [[12, 34], "CIDCount", "num", 8720], [[12, 35], "UIDBase", "num", null], [[12, 37], "FDSelect", "offset", null], [[12, 36], "FDArray", "offset", null], [[12, 38], "FontName", "sid", null]];
        var CFFTopDict = /*#__PURE__*/function (_CFFDict) {
          _inherits(CFFTopDict, _CFFDict);
          var _super72 = _createSuper(CFFTopDict);
          function CFFTopDict(e) {
            var _this79;
            _classCallCheck(this, CFFTopDict);
            _this79 = _super72.call(this, CFFTopDict.tables, e);
            _this79.privateDict = null;
            return _this79;
          }
          _createClass(CFFTopDict, null, [{
            key: "tables",
            get: function get() {
              return (0, r.shadow)(this, "tables", this.createTables(h));
            }
          }]);
          return CFFTopDict;
        }(CFFDict);
        t.CFFTopDict = CFFTopDict;
        var u = [[6, "BlueValues", "delta", null], [7, "OtherBlues", "delta", null], [8, "FamilyBlues", "delta", null], [9, "FamilyOtherBlues", "delta", null], [[12, 9], "BlueScale", "num", .039625], [[12, 10], "BlueShift", "num", 7], [[12, 11], "BlueFuzz", "num", 1], [10, "StdHW", "num", null], [11, "StdVW", "num", null], [[12, 12], "StemSnapH", "delta", null], [[12, 13], "StemSnapV", "delta", null], [[12, 14], "ForceBold", "num", 0], [[12, 17], "LanguageGroup", "num", 0], [[12, 18], "ExpansionFactor", "num", .06], [[12, 19], "initialRandomSeed", "num", 0], [20, "defaultWidthX", "num", 0], [21, "nominalWidthX", "num", 0], [19, "Subrs", "offset", null]];
        var CFFPrivateDict = /*#__PURE__*/function (_CFFDict2) {
          _inherits(CFFPrivateDict, _CFFDict2);
          var _super73 = _createSuper(CFFPrivateDict);
          function CFFPrivateDict(e) {
            var _this80;
            _classCallCheck(this, CFFPrivateDict);
            _this80 = _super73.call(this, CFFPrivateDict.tables, e);
            _this80.subrsIndex = null;
            return _this80;
          }
          _createClass(CFFPrivateDict, null, [{
            key: "tables",
            get: function get() {
              return (0, r.shadow)(this, "tables", this.createTables(u));
            }
          }]);
          return CFFPrivateDict;
        }(CFFDict);
        t.CFFPrivateDict = CFFPrivateDict;
        var d = {
          ISO_ADOBE: 0,
          EXPERT: 1,
          EXPERT_SUBSET: 2
        };
        var CFFCharset = /*#__PURE__*/_createClass(function CFFCharset(e, t, a, r) {
          _classCallCheck(this, CFFCharset);
          this.predefined = e;
          this.format = t;
          this.charset = a;
          this.raw = r;
        });
        t.CFFCharset = CFFCharset;
        var CFFEncoding = /*#__PURE__*/_createClass(function CFFEncoding(e, t, a, r) {
          _classCallCheck(this, CFFEncoding);
          this.predefined = e;
          this.format = t;
          this.encoding = a;
          this.raw = r;
        });
        var CFFFDSelect = /*#__PURE__*/function () {
          function CFFFDSelect(e, t) {
            _classCallCheck(this, CFFFDSelect);
            this.format = e;
            this.fdSelect = t;
          }
          _createClass(CFFFDSelect, [{
            key: "getFDIndex",
            value: function getFDIndex(e) {
              return e < 0 || e >= this.fdSelect.length ? -1 : this.fdSelect[e];
            }
          }]);
          return CFFFDSelect;
        }();
        t.CFFFDSelect = CFFFDSelect;
        var CFFOffsetTracker = /*#__PURE__*/function () {
          function CFFOffsetTracker() {
            _classCallCheck(this, CFFOffsetTracker);
            this.offsets = Object.create(null);
          }
          _createClass(CFFOffsetTracker, [{
            key: "isTracking",
            value: function isTracking(e) {
              return e in this.offsets;
            }
          }, {
            key: "track",
            value: function track(e, t) {
              if (e in this.offsets) throw new r.FormatError("Already tracking location of ".concat(e));
              this.offsets[e] = t;
            }
          }, {
            key: "offset",
            value: function offset(e) {
              for (var _t263 in this.offsets) this.offsets[_t263] += e;
            }
          }, {
            key: "setEntryLocation",
            value: function setEntryLocation(e, t, a) {
              if (!(e in this.offsets)) throw new r.FormatError("Not tracking location of ".concat(e));
              var i = a.data,
                n = this.offsets[e];
              for (var _e377 = 0, _a207 = t.length; _e377 < _a207; ++_e377) {
                var _a208 = 5 * _e377 + n,
                  _s66 = _a208 + 1,
                  _o56 = _a208 + 2,
                  _c30 = _a208 + 3,
                  _l21 = _a208 + 4;
                if (29 !== i[_a208] || 0 !== i[_s66] || 0 !== i[_o56] || 0 !== i[_c30] || 0 !== i[_l21]) throw new r.FormatError("writing to an offset that is not empty");
                var _h22 = t[_e377];
                i[_a208] = 29;
                i[_s66] = _h22 >> 24 & 255;
                i[_o56] = _h22 >> 16 & 255;
                i[_c30] = _h22 >> 8 & 255;
                i[_l21] = 255 & _h22;
              }
            }
          }]);
          return CFFOffsetTracker;
        }();
        var CFFCompiler = /*#__PURE__*/function () {
          function CFFCompiler(e) {
            _classCallCheck(this, CFFCompiler);
            this.cff = e;
          }
          _createClass(CFFCompiler, [{
            key: "compile",
            value: function compile() {
              var e = this.cff,
                t = {
                  data: [],
                  length: 0,
                  add: function add(e) {
                    var _this$data;
                    e.length <= 65536 ? (_this$data = this.data).push.apply(_this$data, _toConsumableArray(e)) : this.data = this.data.concat(e);
                    this.length = this.data.length;
                  }
                },
                a = this.compileHeader(e.header);
              t.add(a);
              var i = this.compileNameIndex(e.names);
              t.add(i);
              if (e.isCIDFont && e.topDict.hasName("FontMatrix")) {
                var _t264 = e.topDict.getByName("FontMatrix");
                e.topDict.removeByName("FontMatrix");
                var _iterator101 = _createForOfIteratorHelper(e.fdArray),
                  _step101;
                try {
                  for (_iterator101.s(); !(_step101 = _iterator101.n()).done;) {
                    var _a209 = _step101.value;
                    var _e378 = _t264.slice(0);
                    _a209.hasName("FontMatrix") && (_e378 = r.Util.transform(_e378, _a209.getByName("FontMatrix")));
                    _a209.setByName("FontMatrix", _e378);
                  }
                } catch (err) {
                  _iterator101.e(err);
                } finally {
                  _iterator101.f();
                }
              }
              var n = e.topDict.getByName("XUID");
              n && n.length > 16 && e.topDict.removeByName("XUID");
              e.topDict.setByName("charset", 0);
              var s = this.compileTopDicts([e.topDict], t.length, e.isCIDFont);
              t.add(s.output);
              var o = s.trackers[0],
                c = this.compileStringIndex(e.strings.strings);
              t.add(c);
              var l = this.compileIndex(e.globalSubrIndex);
              t.add(l);
              if (e.encoding && e.topDict.hasName("Encoding")) if (e.encoding.predefined) o.setEntryLocation("Encoding", [e.encoding.format], t);else {
                var _a210 = this.compileEncoding(e.encoding);
                o.setEntryLocation("Encoding", [t.length], t);
                t.add(_a210);
              }
              var h = this.compileCharset(e.charset, e.charStrings.count, e.strings, e.isCIDFont);
              o.setEntryLocation("charset", [t.length], t);
              t.add(h);
              var u = this.compileCharStrings(e.charStrings);
              o.setEntryLocation("CharStrings", [t.length], t);
              t.add(u);
              if (e.isCIDFont) {
                o.setEntryLocation("FDSelect", [t.length], t);
                var _a211 = this.compileFDSelect(e.fdSelect);
                t.add(_a211);
                s = this.compileTopDicts(e.fdArray, t.length, !0);
                o.setEntryLocation("FDArray", [t.length], t);
                t.add(s.output);
                var _r172 = s.trackers;
                this.compilePrivateDicts(e.fdArray, _r172, t);
              }
              this.compilePrivateDicts([e.topDict], [o], t);
              t.add([0]);
              return t.data;
            }
          }, {
            key: "encodeNumber",
            value: function encodeNumber(e) {
              return Number.isInteger(e) ? this.encodeInteger(e) : this.encodeFloat(e);
            }
          }, {
            key: "encodeFloat",
            value: function encodeFloat(e) {
              var t = e.toString();
              var a = CFFCompiler.EncodeFloatRegExp.exec(t);
              if (a) {
                var _r173 = parseFloat("1e" + ((a[2] ? +a[2] : 0) + a[1].length));
                t = (Math.round(e * _r173) / _r173).toString();
              }
              var r,
                i,
                n = "";
              for (r = 0, i = t.length; r < i; ++r) {
                var _e379 = t[r];
                n += "e" === _e379 ? "-" === t[++r] ? "c" : "b" : "." === _e379 ? "a" : "-" === _e379 ? "e" : _e379;
              }
              n += 1 & n.length ? "f" : "ff";
              var s = [30];
              for (r = 0, i = n.length; r < i; r += 2) s.push(parseInt(n.substring(r, r + 2), 16));
              return s;
            }
          }, {
            key: "encodeInteger",
            value: function encodeInteger(e) {
              var t;
              t = e >= -107 && e <= 107 ? [e + 139] : e >= 108 && e <= 1131 ? [247 + ((e -= 108) >> 8), 255 & e] : e >= -1131 && e <= -108 ? [251 + ((e = -e - 108) >> 8), 255 & e] : e >= -32768 && e <= 32767 ? [28, e >> 8 & 255, 255 & e] : [29, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e];
              return t;
            }
          }, {
            key: "compileHeader",
            value: function compileHeader(e) {
              return [e.major, e.minor, 4, e.offSize];
            }
          }, {
            key: "compileNameIndex",
            value: function compileNameIndex(e) {
              var t = new CFFIndex();
              var _iterator102 = _createForOfIteratorHelper(e),
                _step102;
              try {
                for (_iterator102.s(); !(_step102 = _iterator102.n()).done;) {
                  var _a212 = _step102.value;
                  var _e380 = Math.min(_a212.length, 127);
                  var _i149 = new Array(_e380);
                  for (var _t265 = 0; _t265 < _e380; _t265++) {
                    var _e381 = _a212[_t265];
                    (_e381 < "!" || _e381 > "~" || "[" === _e381 || "]" === _e381 || "(" === _e381 || ")" === _e381 || "{" === _e381 || "}" === _e381 || "<" === _e381 || ">" === _e381 || "/" === _e381 || "%" === _e381) && (_e381 = "_");
                    _i149[_t265] = _e381;
                  }
                  _i149 = _i149.join("");
                  "" === _i149 && (_i149 = "Bad_Font_Name");
                  t.add((0, r.stringToBytes)(_i149));
                }
              } catch (err) {
                _iterator102.e(err);
              } finally {
                _iterator102.f();
              }
              return this.compileIndex(t);
            }
          }, {
            key: "compileTopDicts",
            value: function compileTopDicts(e, t, a) {
              var r = [];
              var i = new CFFIndex();
              var _iterator103 = _createForOfIteratorHelper(e),
                _step103;
              try {
                for (_iterator103.s(); !(_step103 = _iterator103.n()).done;) {
                  var _n99 = _step103.value;
                  if (a) {
                    _n99.removeByName("CIDFontVersion");
                    _n99.removeByName("CIDFontRevision");
                    _n99.removeByName("CIDFontType");
                    _n99.removeByName("CIDCount");
                    _n99.removeByName("UIDBase");
                  }
                  var _e382 = new CFFOffsetTracker(),
                    _s67 = this.compileDict(_n99, _e382);
                  r.push(_e382);
                  i.add(_s67);
                  _e382.offset(t);
                }
              } catch (err) {
                _iterator103.e(err);
              } finally {
                _iterator103.f();
              }
              i = this.compileIndex(i, r);
              return {
                trackers: r,
                output: i
              };
            }
          }, {
            key: "compilePrivateDicts",
            value: function compilePrivateDicts(e, t, a) {
              for (var _i150 = 0, _n100 = e.length; _i150 < _n100; ++_i150) {
                var _n101 = e[_i150],
                  _s68 = _n101.privateDict;
                if (!_s68 || !_n101.hasName("Private")) throw new r.FormatError("There must be a private dictionary.");
                var _o57 = new CFFOffsetTracker(),
                  _c31 = this.compileDict(_s68, _o57);
                var _l22 = a.length;
                _o57.offset(_l22);
                _c31.length || (_l22 = 0);
                t[_i150].setEntryLocation("Private", [_c31.length, _l22], a);
                a.add(_c31);
                if (_s68.subrsIndex && _s68.hasName("Subrs")) {
                  var _e383 = this.compileIndex(_s68.subrsIndex);
                  _o57.setEntryLocation("Subrs", [_c31.length], a);
                  a.add(_e383);
                }
              }
            }
          }, {
            key: "compileDict",
            value: function compileDict(e, t) {
              var a = [];
              var _iterator104 = _createForOfIteratorHelper(e.order),
                _step104;
              try {
                for (_iterator104.s(); !(_step104 = _iterator104.n()).done;) {
                  var _i151 = _step104.value;
                  if (!(_i151 in e.values)) continue;
                  var _n102 = e.values[_i151],
                    _s69 = e.types[_i151];
                  Array.isArray(_s69) || (_s69 = [_s69]);
                  Array.isArray(_n102) || (_n102 = [_n102]);
                  if (0 !== _n102.length) {
                    for (var _o58 = 0, _c32 = _s69.length; _o58 < _c32; ++_o58) {
                      var _c33 = _s69[_o58],
                        _l23 = _n102[_o58];
                      switch (_c33) {
                        case "num":
                        case "sid":
                          a.push.apply(a, _toConsumableArray(this.encodeNumber(_l23)));
                          break;
                        case "offset":
                          var _s70 = e.keyToNameMap[_i151];
                          t.isTracking(_s70) || t.track(_s70, a.length);
                          a.push(29, 0, 0, 0, 0);
                          break;
                        case "array":
                        case "delta":
                          a.push.apply(a, _toConsumableArray(this.encodeNumber(_l23)));
                          for (var _e384 = 1, _t266 = _n102.length; _e384 < _t266; ++_e384) a.push.apply(a, _toConsumableArray(this.encodeNumber(_n102[_e384])));
                          break;
                        default:
                          throw new r.FormatError("Unknown data type of ".concat(_c33));
                      }
                    }
                    a.push.apply(a, _toConsumableArray(e.opcodes[_i151]));
                  }
                }
              } catch (err) {
                _iterator104.e(err);
              } finally {
                _iterator104.f();
              }
              return a;
            }
          }, {
            key: "compileStringIndex",
            value: function compileStringIndex(e) {
              var t = new CFFIndex();
              var _iterator105 = _createForOfIteratorHelper(e),
                _step105;
              try {
                for (_iterator105.s(); !(_step105 = _iterator105.n()).done;) {
                  var _a213 = _step105.value;
                  t.add((0, r.stringToBytes)(_a213));
                }
              } catch (err) {
                _iterator105.e(err);
              } finally {
                _iterator105.f();
              }
              return this.compileIndex(t);
            }
          }, {
            key: "compileCharStrings",
            value: function compileCharStrings(e) {
              var t = new CFFIndex();
              for (var _a214 = 0; _a214 < e.count; _a214++) {
                var _r174 = e.get(_a214);
                0 !== _r174.length ? t.add(_r174) : t.add(new Uint8Array([139, 14]));
              }
              return this.compileIndex(t);
            }
          }, {
            key: "compileCharset",
            value: function compileCharset(e, t, a, i) {
              var n;
              var s = t - 1;
              if (i) n = new Uint8Array([2, 0, 0, s >> 8 & 255, 255 & s]);else {
                n = new Uint8Array(1 + 2 * s);
                n[0] = 0;
                var _t267 = 0;
                var _i152 = e.charset.length;
                var _o59 = !1;
                for (var _s71 = 1; _s71 < n.length; _s71 += 2) {
                  var _c34 = 0;
                  if (_t267 < _i152) {
                    var _i153 = e.charset[_t267++];
                    _c34 = a.getSID(_i153);
                    if (-1 === _c34) {
                      _c34 = 0;
                      if (!_o59) {
                        _o59 = !0;
                        (0, r.warn)("Couldn't find ".concat(_i153, " in CFF strings"));
                      }
                    }
                  }
                  n[_s71] = _c34 >> 8 & 255;
                  n[_s71 + 1] = 255 & _c34;
                }
              }
              return this.compileTypedArray(n);
            }
          }, {
            key: "compileEncoding",
            value: function compileEncoding(e) {
              return this.compileTypedArray(e.raw);
            }
          }, {
            key: "compileFDSelect",
            value: function compileFDSelect(e) {
              var t = e.format;
              var a, r;
              switch (t) {
                case 0:
                  a = new Uint8Array(1 + e.fdSelect.length);
                  a[0] = t;
                  for (r = 0; r < e.fdSelect.length; r++) a[r + 1] = e.fdSelect[r];
                  break;
                case 3:
                  var _i154 = 0;
                  var _n103 = e.fdSelect[0];
                  var _s72 = [t, 0, 0, _i154 >> 8 & 255, 255 & _i154, _n103];
                  for (r = 1; r < e.fdSelect.length; r++) {
                    var _t268 = e.fdSelect[r];
                    if (_t268 !== _n103) {
                      _s72.push(r >> 8 & 255, 255 & r, _t268);
                      _n103 = _t268;
                    }
                  }
                  var _o60 = (_s72.length - 3) / 3;
                  _s72[1] = _o60 >> 8 & 255;
                  _s72[2] = 255 & _o60;
                  _s72.push(r >> 8 & 255, 255 & r);
                  a = new Uint8Array(_s72);
              }
              return this.compileTypedArray(a);
            }
          }, {
            key: "compileTypedArray",
            value: function compileTypedArray(e) {
              return Array.from(e);
            }
          }, {
            key: "compileIndex",
            value: function compileIndex(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
              var a = e.objects,
                r = a.length;
              if (0 === r) return [0, 0];
              var i = [r >> 8 & 255, 255 & r];
              var n,
                s,
                o = 1;
              for (n = 0; n < r; ++n) o += a[n].length;
              s = o < 256 ? 1 : o < 65536 ? 2 : o < 16777216 ? 3 : 4;
              i.push(s);
              var c = 1;
              for (n = 0; n < r + 1; n++) {
                1 === s ? i.push(255 & c) : 2 === s ? i.push(c >> 8 & 255, 255 & c) : 3 === s ? i.push(c >> 16 & 255, c >> 8 & 255, 255 & c) : i.push(c >>> 24 & 255, c >> 16 & 255, c >> 8 & 255, 255 & c);
                a[n] && (c += a[n].length);
              }
              for (n = 0; n < r; n++) {
                t[n] && t[n].offset(i.length);
                i.push.apply(i, _toConsumableArray(a[n]));
              }
              return i;
            }
          }], [{
            key: "EncodeFloatRegExp",
            get: function get() {
              return (0, r.shadow)(this, "EncodeFloatRegExp", /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/);
            }
          }]);
          return CFFCompiler;
        }();
        t.CFFCompiler = CFFCompiler;
      }, function (e, t) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.ISOAdobeCharset = t.ExpertSubsetCharset = t.ExpertCharset = void 0;
        t.ISOAdobeCharset = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron"];
        t.ExpertCharset = [".notdef", "space", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"];
        t.ExpertSubsetCharset = [".notdef", "space", "dollaroldstyle", "dollarsuperior", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "hyphensuperior", "colonmonetary", "onefitted", "rupiah", "centoldstyle", "figuredash", "hypheninferior", "onequarter", "onehalf", "threequarters", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior"];
      }, function (e, t) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.ZapfDingbatsEncoding = t.WinAnsiEncoding = t.SymbolSetEncoding = t.StandardEncoding = t.MacRomanEncoding = t.ExpertEncoding = void 0;
        t.getEncoding = function getEncoding(e) {
          switch (e) {
            case "WinAnsiEncoding":
              return s;
            case "StandardEncoding":
              return n;
            case "MacRomanEncoding":
              return i;
            case "SymbolSetEncoding":
              return o;
            case "ZapfDingbatsEncoding":
              return c;
            case "ExpertEncoding":
              return a;
            case "MacExpertEncoding":
              return r;
            default:
              return null;
          }
        };
        var a = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"];
        t.ExpertEncoding = a;
        var r = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "centoldstyle", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "", "threequartersemdash", "", "questionsmall", "", "", "", "", "Ethsmall", "", "", "onequarter", "onehalf", "threequarters", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "", "", "", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hypheninferior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "asuperior", "centsuperior", "", "", "", "", "Aacutesmall", "Agravesmall", "Acircumflexsmall", "Adieresissmall", "Atildesmall", "Aringsmall", "Ccedillasmall", "Eacutesmall", "Egravesmall", "Ecircumflexsmall", "Edieresissmall", "Iacutesmall", "Igravesmall", "Icircumflexsmall", "Idieresissmall", "Ntildesmall", "Oacutesmall", "Ogravesmall", "Ocircumflexsmall", "Odieresissmall", "Otildesmall", "Uacutesmall", "Ugravesmall", "Ucircumflexsmall", "Udieresissmall", "", "eightsuperior", "fourinferior", "threeinferior", "sixinferior", "eightinferior", "seveninferior", "Scaronsmall", "", "centinferior", "twoinferior", "", "Dieresissmall", "", "Caronsmall", "osuperior", "fiveinferior", "", "commainferior", "periodinferior", "Yacutesmall", "", "dollarinferior", "", "", "Thornsmall", "", "nineinferior", "zeroinferior", "Zcaronsmall", "AEsmall", "Oslashsmall", "questiondownsmall", "oneinferior", "Lslashsmall", "", "", "", "", "", "", "Cedillasmall", "", "", "", "", "", "OEsmall", "figuredash", "hyphensuperior", "", "", "", "", "exclamdownsmall", "", "Ydieresissmall", "", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "ninesuperior", "zerosuperior", "", "esuperior", "rsuperior", "tsuperior", "", "", "isuperior", "ssuperior", "dsuperior", "", "", "", "", "", "lsuperior", "Ogoneksmall", "Brevesmall", "Macronsmall", "bsuperior", "nsuperior", "msuperior", "commasuperior", "periodsuperior", "Dotaccentsmall", "Ringsmall", "", "", "", ""],
          i = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "space", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron"];
        t.MacRomanEncoding = i;
        var n = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls", "", "", "", ""];
        t.StandardEncoding = n;
        var s = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "bullet", "Euro", "bullet", "quotesinglbase", "florin", "quotedblbase", "ellipsis", "dagger", "daggerdbl", "circumflex", "perthousand", "Scaron", "guilsinglleft", "OE", "bullet", "Zcaron", "bullet", "bullet", "quoteleft", "quoteright", "quotedblleft", "quotedblright", "bullet", "endash", "emdash", "tilde", "trademark", "scaron", "guilsinglright", "oe", "bullet", "zcaron", "Ydieresis", "space", "exclamdown", "cent", "sterling", "currency", "yen", "brokenbar", "section", "dieresis", "copyright", "ordfeminine", "guillemotleft", "logicalnot", "hyphen", "registered", "macron", "degree", "plusminus", "twosuperior", "threesuperior", "acute", "mu", "paragraph", "periodcentered", "cedilla", "onesuperior", "ordmasculine", "guillemotright", "onequarter", "onehalf", "threequarters", "questiondown", "Agrave", "Aacute", "Acircumflex", "Atilde", "Adieresis", "Aring", "AE", "Ccedilla", "Egrave", "Eacute", "Ecircumflex", "Edieresis", "Igrave", "Iacute", "Icircumflex", "Idieresis", "Eth", "Ntilde", "Ograve", "Oacute", "Ocircumflex", "Otilde", "Odieresis", "multiply", "Oslash", "Ugrave", "Uacute", "Ucircumflex", "Udieresis", "Yacute", "Thorn", "germandbls", "agrave", "aacute", "acircumflex", "atilde", "adieresis", "aring", "ae", "ccedilla", "egrave", "eacute", "ecircumflex", "edieresis", "igrave", "iacute", "icircumflex", "idieresis", "eth", "ntilde", "ograve", "oacute", "ocircumflex", "otilde", "odieresis", "divide", "oslash", "ugrave", "uacute", "ucircumflex", "udieresis", "yacute", "thorn", "ydieresis"];
        t.WinAnsiEncoding = s;
        var o = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "universal", "numbersign", "existential", "percent", "ampersand", "suchthat", "parenleft", "parenright", "asteriskmath", "plus", "comma", "minus", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "congruent", "Alpha", "Beta", "Chi", "Delta", "Epsilon", "Phi", "Gamma", "Eta", "Iota", "theta1", "Kappa", "Lambda", "Mu", "Nu", "Omicron", "Pi", "Theta", "Rho", "Sigma", "Tau", "Upsilon", "sigma1", "Omega", "Xi", "Psi", "Zeta", "bracketleft", "therefore", "bracketright", "perpendicular", "underscore", "radicalex", "alpha", "beta", "chi", "delta", "epsilon", "phi", "gamma", "eta", "iota", "phi1", "kappa", "lambda", "mu", "nu", "omicron", "pi", "theta", "rho", "sigma", "tau", "upsilon", "omega1", "omega", "xi", "psi", "zeta", "braceleft", "bar", "braceright", "similar", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "Euro", "Upsilon1", "minute", "lessequal", "fraction", "infinity", "florin", "club", "diamond", "heart", "spade", "arrowboth", "arrowleft", "arrowup", "arrowright", "arrowdown", "degree", "plusminus", "second", "greaterequal", "multiply", "proportional", "partialdiff", "bullet", "divide", "notequal", "equivalence", "approxequal", "ellipsis", "arrowvertex", "arrowhorizex", "carriagereturn", "aleph", "Ifraktur", "Rfraktur", "weierstrass", "circlemultiply", "circleplus", "emptyset", "intersection", "union", "propersuperset", "reflexsuperset", "notsubset", "propersubset", "reflexsubset", "element", "notelement", "angle", "gradient", "registerserif", "copyrightserif", "trademarkserif", "product", "radical", "dotmath", "logicalnot", "logicaland", "logicalor", "arrowdblboth", "arrowdblleft", "arrowdblup", "arrowdblright", "arrowdbldown", "lozenge", "angleleft", "registersans", "copyrightsans", "trademarksans", "summation", "parenlefttp", "parenleftex", "parenleftbt", "bracketlefttp", "bracketleftex", "bracketleftbt", "bracelefttp", "braceleftmid", "braceleftbt", "braceex", "", "angleright", "integral", "integraltp", "integralex", "integralbt", "parenrighttp", "parenrightex", "parenrightbt", "bracketrighttp", "bracketrightex", "bracketrightbt", "bracerighttp", "bracerightmid", "bracerightbt", ""];
        t.SymbolSetEncoding = o;
        var c = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "a1", "a2", "a202", "a3", "a4", "a5", "a119", "a118", "a117", "a11", "a12", "a13", "a14", "a15", "a16", "a105", "a17", "a18", "a19", "a20", "a21", "a22", "a23", "a24", "a25", "a26", "a27", "a28", "a6", "a7", "a8", "a9", "a10", "a29", "a30", "a31", "a32", "a33", "a34", "a35", "a36", "a37", "a38", "a39", "a40", "a41", "a42", "a43", "a44", "a45", "a46", "a47", "a48", "a49", "a50", "a51", "a52", "a53", "a54", "a55", "a56", "a57", "a58", "a59", "a60", "a61", "a62", "a63", "a64", "a65", "a66", "a67", "a68", "a69", "a70", "a71", "a72", "a73", "a74", "a203", "a75", "a204", "a76", "a77", "a78", "a79", "a81", "a82", "a83", "a84", "a97", "a98", "a99", "a100", "", "a89", "a90", "a93", "a94", "a91", "a92", "a205", "a85", "a206", "a86", "a87", "a88", "a95", "a96", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "a101", "a102", "a103", "a104", "a106", "a107", "a108", "a112", "a111", "a110", "a109", "a120", "a121", "a122", "a123", "a124", "a125", "a126", "a127", "a128", "a129", "a130", "a131", "a132", "a133", "a134", "a135", "a136", "a137", "a138", "a139", "a140", "a141", "a142", "a143", "a144", "a145", "a146", "a147", "a148", "a149", "a150", "a151", "a152", "a153", "a154", "a155", "a156", "a157", "a158", "a159", "a160", "a161", "a163", "a164", "a196", "a165", "a192", "a166", "a167", "a168", "a169", "a170", "a171", "a172", "a173", "a162", "a174", "a175", "a176", "a177", "a178", "a179", "a193", "a180", "a199", "a181", "a200", "a182", "", "a201", "a183", "a184", "a197", "a185", "a194", "a198", "a186", "a195", "a187", "a188", "a189", "a190", "a191", ""];
        t.ZapfDingbatsEncoding = c;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.SEAC_ANALYSIS_ENABLED = t.MacStandardGlyphOrdering = t.FontFlags = void 0;
        t.normalizeFontName = function normalizeFontName(e) {
          return e.replaceAll(/[,_]/g, "-").replaceAll(/\s/g, "");
        };
        t.recoverGlyphName = recoverGlyphName;
        t.type1FontGlyphMapping = function type1FontGlyphMapping(e, t, a) {
          var n = Object.create(null);
          var s, c, l;
          var h = !!(e.flags & o.Symbolic);
          if (e.isInternalFont) {
            l = t;
            for (c = 0; c < l.length; c++) {
              s = a.indexOf(l[c]);
              n[c] = s >= 0 ? s : 0;
            }
          } else if (e.baseEncodingName) {
            l = (0, r.getEncoding)(e.baseEncodingName);
            for (c = 0; c < l.length; c++) {
              s = a.indexOf(l[c]);
              n[c] = s >= 0 ? s : 0;
            }
          } else if (h) for (c in t) n[c] = t[c];else {
            l = r.StandardEncoding;
            for (c = 0; c < l.length; c++) {
              s = a.indexOf(l[c]);
              n[c] = s >= 0 ? s : 0;
            }
          }
          var u = e.differences;
          var d;
          if (u) for (c in u) {
            var _e385 = u[c];
            s = a.indexOf(_e385);
            if (-1 === s) {
              d || (d = (0, i.getGlyphsUnicode)());
              var _t269 = recoverGlyphName(_e385, d);
              _t269 !== _e385 && (s = a.indexOf(_t269));
            }
            n[c] = s >= 0 ? s : 0;
          }
          return n;
        };
        var r = a(37),
          i = a(39),
          n = a(40),
          s = a(2);
        t.SEAC_ANALYSIS_ENABLED = !0;
        var o = {
          FixedPitch: 1,
          Serif: 2,
          Symbolic: 4,
          Script: 8,
          Nonsymbolic: 32,
          Italic: 64,
          AllCap: 65536,
          SmallCap: 131072,
          ForceBold: 262144
        };
        t.FontFlags = o;
        t.MacStandardGlyphOrdering = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"];
        function recoverGlyphName(e, t) {
          if (void 0 !== t[e]) return e;
          var a = (0, n.getUnicodeForGlyph)(e, t);
          if (-1 !== a) for (var _e386 in t) if (t[_e386] === a) return _e386;
          (0, s.info)("Unable to recover a standard glyph name for: " + e);
          return e;
        }
      }, function (e, t, a) {
        a.r(t);
        a.d(t, {
          getDingbatsGlyphsUnicode: function getDingbatsGlyphsUnicode() {
            return n;
          },
          getGlyphsUnicode: function getGlyphsUnicode() {
            return i;
          }
        });
        var r = a(3);
        var i = (0, r.getLookupTableFactory)(function (e) {
            e.A = 65;
            e.AE = 198;
            e.AEacute = 508;
            e.AEmacron = 482;
            e.AEsmall = 63462;
            e.Aacute = 193;
            e.Aacutesmall = 63457;
            e.Abreve = 258;
            e.Abreveacute = 7854;
            e.Abrevecyrillic = 1232;
            e.Abrevedotbelow = 7862;
            e.Abrevegrave = 7856;
            e.Abrevehookabove = 7858;
            e.Abrevetilde = 7860;
            e.Acaron = 461;
            e.Acircle = 9398;
            e.Acircumflex = 194;
            e.Acircumflexacute = 7844;
            e.Acircumflexdotbelow = 7852;
            e.Acircumflexgrave = 7846;
            e.Acircumflexhookabove = 7848;
            e.Acircumflexsmall = 63458;
            e.Acircumflextilde = 7850;
            e.Acute = 63177;
            e.Acutesmall = 63412;
            e.Acyrillic = 1040;
            e.Adblgrave = 512;
            e.Adieresis = 196;
            e.Adieresiscyrillic = 1234;
            e.Adieresismacron = 478;
            e.Adieresissmall = 63460;
            e.Adotbelow = 7840;
            e.Adotmacron = 480;
            e.Agrave = 192;
            e.Agravesmall = 63456;
            e.Ahookabove = 7842;
            e.Aiecyrillic = 1236;
            e.Ainvertedbreve = 514;
            e.Alpha = 913;
            e.Alphatonos = 902;
            e.Amacron = 256;
            e.Amonospace = 65313;
            e.Aogonek = 260;
            e.Aring = 197;
            e.Aringacute = 506;
            e.Aringbelow = 7680;
            e.Aringsmall = 63461;
            e.Asmall = 63329;
            e.Atilde = 195;
            e.Atildesmall = 63459;
            e.Aybarmenian = 1329;
            e.B = 66;
            e.Bcircle = 9399;
            e.Bdotaccent = 7682;
            e.Bdotbelow = 7684;
            e.Becyrillic = 1041;
            e.Benarmenian = 1330;
            e.Beta = 914;
            e.Bhook = 385;
            e.Blinebelow = 7686;
            e.Bmonospace = 65314;
            e.Brevesmall = 63220;
            e.Bsmall = 63330;
            e.Btopbar = 386;
            e.C = 67;
            e.Caarmenian = 1342;
            e.Cacute = 262;
            e.Caron = 63178;
            e.Caronsmall = 63221;
            e.Ccaron = 268;
            e.Ccedilla = 199;
            e.Ccedillaacute = 7688;
            e.Ccedillasmall = 63463;
            e.Ccircle = 9400;
            e.Ccircumflex = 264;
            e.Cdot = 266;
            e.Cdotaccent = 266;
            e.Cedillasmall = 63416;
            e.Chaarmenian = 1353;
            e.Cheabkhasiancyrillic = 1212;
            e.Checyrillic = 1063;
            e.Chedescenderabkhasiancyrillic = 1214;
            e.Chedescendercyrillic = 1206;
            e.Chedieresiscyrillic = 1268;
            e.Cheharmenian = 1347;
            e.Chekhakassiancyrillic = 1227;
            e.Cheverticalstrokecyrillic = 1208;
            e.Chi = 935;
            e.Chook = 391;
            e.Circumflexsmall = 63222;
            e.Cmonospace = 65315;
            e.Coarmenian = 1361;
            e.Csmall = 63331;
            e.D = 68;
            e.DZ = 497;
            e.DZcaron = 452;
            e.Daarmenian = 1332;
            e.Dafrican = 393;
            e.Dcaron = 270;
            e.Dcedilla = 7696;
            e.Dcircle = 9401;
            e.Dcircumflexbelow = 7698;
            e.Dcroat = 272;
            e.Ddotaccent = 7690;
            e.Ddotbelow = 7692;
            e.Decyrillic = 1044;
            e.Deicoptic = 1006;
            e.Delta = 8710;
            e.Deltagreek = 916;
            e.Dhook = 394;
            e.Dieresis = 63179;
            e.DieresisAcute = 63180;
            e.DieresisGrave = 63181;
            e.Dieresissmall = 63400;
            e.Digammagreek = 988;
            e.Djecyrillic = 1026;
            e.Dlinebelow = 7694;
            e.Dmonospace = 65316;
            e.Dotaccentsmall = 63223;
            e.Dslash = 272;
            e.Dsmall = 63332;
            e.Dtopbar = 395;
            e.Dz = 498;
            e.Dzcaron = 453;
            e.Dzeabkhasiancyrillic = 1248;
            e.Dzecyrillic = 1029;
            e.Dzhecyrillic = 1039;
            e.E = 69;
            e.Eacute = 201;
            e.Eacutesmall = 63465;
            e.Ebreve = 276;
            e.Ecaron = 282;
            e.Ecedillabreve = 7708;
            e.Echarmenian = 1333;
            e.Ecircle = 9402;
            e.Ecircumflex = 202;
            e.Ecircumflexacute = 7870;
            e.Ecircumflexbelow = 7704;
            e.Ecircumflexdotbelow = 7878;
            e.Ecircumflexgrave = 7872;
            e.Ecircumflexhookabove = 7874;
            e.Ecircumflexsmall = 63466;
            e.Ecircumflextilde = 7876;
            e.Ecyrillic = 1028;
            e.Edblgrave = 516;
            e.Edieresis = 203;
            e.Edieresissmall = 63467;
            e.Edot = 278;
            e.Edotaccent = 278;
            e.Edotbelow = 7864;
            e.Efcyrillic = 1060;
            e.Egrave = 200;
            e.Egravesmall = 63464;
            e.Eharmenian = 1335;
            e.Ehookabove = 7866;
            e.Eightroman = 8551;
            e.Einvertedbreve = 518;
            e.Eiotifiedcyrillic = 1124;
            e.Elcyrillic = 1051;
            e.Elevenroman = 8554;
            e.Emacron = 274;
            e.Emacronacute = 7702;
            e.Emacrongrave = 7700;
            e.Emcyrillic = 1052;
            e.Emonospace = 65317;
            e.Encyrillic = 1053;
            e.Endescendercyrillic = 1186;
            e.Eng = 330;
            e.Enghecyrillic = 1188;
            e.Enhookcyrillic = 1223;
            e.Eogonek = 280;
            e.Eopen = 400;
            e.Epsilon = 917;
            e.Epsilontonos = 904;
            e.Ercyrillic = 1056;
            e.Ereversed = 398;
            e.Ereversedcyrillic = 1069;
            e.Escyrillic = 1057;
            e.Esdescendercyrillic = 1194;
            e.Esh = 425;
            e.Esmall = 63333;
            e.Eta = 919;
            e.Etarmenian = 1336;
            e.Etatonos = 905;
            e.Eth = 208;
            e.Ethsmall = 63472;
            e.Etilde = 7868;
            e.Etildebelow = 7706;
            e.Euro = 8364;
            e.Ezh = 439;
            e.Ezhcaron = 494;
            e.Ezhreversed = 440;
            e.F = 70;
            e.Fcircle = 9403;
            e.Fdotaccent = 7710;
            e.Feharmenian = 1366;
            e.Feicoptic = 996;
            e.Fhook = 401;
            e.Fitacyrillic = 1138;
            e.Fiveroman = 8548;
            e.Fmonospace = 65318;
            e.Fourroman = 8547;
            e.Fsmall = 63334;
            e.G = 71;
            e.GBsquare = 13191;
            e.Gacute = 500;
            e.Gamma = 915;
            e.Gammaafrican = 404;
            e.Gangiacoptic = 1002;
            e.Gbreve = 286;
            e.Gcaron = 486;
            e.Gcedilla = 290;
            e.Gcircle = 9404;
            e.Gcircumflex = 284;
            e.Gcommaaccent = 290;
            e.Gdot = 288;
            e.Gdotaccent = 288;
            e.Gecyrillic = 1043;
            e.Ghadarmenian = 1346;
            e.Ghemiddlehookcyrillic = 1172;
            e.Ghestrokecyrillic = 1170;
            e.Gheupturncyrillic = 1168;
            e.Ghook = 403;
            e.Gimarmenian = 1331;
            e.Gjecyrillic = 1027;
            e.Gmacron = 7712;
            e.Gmonospace = 65319;
            e.Grave = 63182;
            e.Gravesmall = 63328;
            e.Gsmall = 63335;
            e.Gsmallhook = 667;
            e.Gstroke = 484;
            e.H = 72;
            e.H18533 = 9679;
            e.H18543 = 9642;
            e.H18551 = 9643;
            e.H22073 = 9633;
            e.HPsquare = 13259;
            e.Haabkhasiancyrillic = 1192;
            e.Hadescendercyrillic = 1202;
            e.Hardsigncyrillic = 1066;
            e.Hbar = 294;
            e.Hbrevebelow = 7722;
            e.Hcedilla = 7720;
            e.Hcircle = 9405;
            e.Hcircumflex = 292;
            e.Hdieresis = 7718;
            e.Hdotaccent = 7714;
            e.Hdotbelow = 7716;
            e.Hmonospace = 65320;
            e.Hoarmenian = 1344;
            e.Horicoptic = 1e3;
            e.Hsmall = 63336;
            e.Hungarumlaut = 63183;
            e.Hungarumlautsmall = 63224;
            e.Hzsquare = 13200;
            e.I = 73;
            e.IAcyrillic = 1071;
            e.IJ = 306;
            e.IUcyrillic = 1070;
            e.Iacute = 205;
            e.Iacutesmall = 63469;
            e.Ibreve = 300;
            e.Icaron = 463;
            e.Icircle = 9406;
            e.Icircumflex = 206;
            e.Icircumflexsmall = 63470;
            e.Icyrillic = 1030;
            e.Idblgrave = 520;
            e.Idieresis = 207;
            e.Idieresisacute = 7726;
            e.Idieresiscyrillic = 1252;
            e.Idieresissmall = 63471;
            e.Idot = 304;
            e.Idotaccent = 304;
            e.Idotbelow = 7882;
            e.Iebrevecyrillic = 1238;
            e.Iecyrillic = 1045;
            e.Ifraktur = 8465;
            e.Igrave = 204;
            e.Igravesmall = 63468;
            e.Ihookabove = 7880;
            e.Iicyrillic = 1048;
            e.Iinvertedbreve = 522;
            e.Iishortcyrillic = 1049;
            e.Imacron = 298;
            e.Imacroncyrillic = 1250;
            e.Imonospace = 65321;
            e.Iniarmenian = 1339;
            e.Iocyrillic = 1025;
            e.Iogonek = 302;
            e.Iota = 921;
            e.Iotaafrican = 406;
            e.Iotadieresis = 938;
            e.Iotatonos = 906;
            e.Ismall = 63337;
            e.Istroke = 407;
            e.Itilde = 296;
            e.Itildebelow = 7724;
            e.Izhitsacyrillic = 1140;
            e.Izhitsadblgravecyrillic = 1142;
            e.J = 74;
            e.Jaarmenian = 1345;
            e.Jcircle = 9407;
            e.Jcircumflex = 308;
            e.Jecyrillic = 1032;
            e.Jheharmenian = 1355;
            e.Jmonospace = 65322;
            e.Jsmall = 63338;
            e.K = 75;
            e.KBsquare = 13189;
            e.KKsquare = 13261;
            e.Kabashkircyrillic = 1184;
            e.Kacute = 7728;
            e.Kacyrillic = 1050;
            e.Kadescendercyrillic = 1178;
            e.Kahookcyrillic = 1219;
            e.Kappa = 922;
            e.Kastrokecyrillic = 1182;
            e.Kaverticalstrokecyrillic = 1180;
            e.Kcaron = 488;
            e.Kcedilla = 310;
            e.Kcircle = 9408;
            e.Kcommaaccent = 310;
            e.Kdotbelow = 7730;
            e.Keharmenian = 1364;
            e.Kenarmenian = 1343;
            e.Khacyrillic = 1061;
            e.Kheicoptic = 998;
            e.Khook = 408;
            e.Kjecyrillic = 1036;
            e.Klinebelow = 7732;
            e.Kmonospace = 65323;
            e.Koppacyrillic = 1152;
            e.Koppagreek = 990;
            e.Ksicyrillic = 1134;
            e.Ksmall = 63339;
            e.L = 76;
            e.LJ = 455;
            e.LL = 63167;
            e.Lacute = 313;
            e.Lambda = 923;
            e.Lcaron = 317;
            e.Lcedilla = 315;
            e.Lcircle = 9409;
            e.Lcircumflexbelow = 7740;
            e.Lcommaaccent = 315;
            e.Ldot = 319;
            e.Ldotaccent = 319;
            e.Ldotbelow = 7734;
            e.Ldotbelowmacron = 7736;
            e.Liwnarmenian = 1340;
            e.Lj = 456;
            e.Ljecyrillic = 1033;
            e.Llinebelow = 7738;
            e.Lmonospace = 65324;
            e.Lslash = 321;
            e.Lslashsmall = 63225;
            e.Lsmall = 63340;
            e.M = 77;
            e.MBsquare = 13190;
            e.Macron = 63184;
            e.Macronsmall = 63407;
            e.Macute = 7742;
            e.Mcircle = 9410;
            e.Mdotaccent = 7744;
            e.Mdotbelow = 7746;
            e.Menarmenian = 1348;
            e.Mmonospace = 65325;
            e.Msmall = 63341;
            e.Mturned = 412;
            e.Mu = 924;
            e.N = 78;
            e.NJ = 458;
            e.Nacute = 323;
            e.Ncaron = 327;
            e.Ncedilla = 325;
            e.Ncircle = 9411;
            e.Ncircumflexbelow = 7754;
            e.Ncommaaccent = 325;
            e.Ndotaccent = 7748;
            e.Ndotbelow = 7750;
            e.Nhookleft = 413;
            e.Nineroman = 8552;
            e.Nj = 459;
            e.Njecyrillic = 1034;
            e.Nlinebelow = 7752;
            e.Nmonospace = 65326;
            e.Nowarmenian = 1350;
            e.Nsmall = 63342;
            e.Ntilde = 209;
            e.Ntildesmall = 63473;
            e.Nu = 925;
            e.O = 79;
            e.OE = 338;
            e.OEsmall = 63226;
            e.Oacute = 211;
            e.Oacutesmall = 63475;
            e.Obarredcyrillic = 1256;
            e.Obarreddieresiscyrillic = 1258;
            e.Obreve = 334;
            e.Ocaron = 465;
            e.Ocenteredtilde = 415;
            e.Ocircle = 9412;
            e.Ocircumflex = 212;
            e.Ocircumflexacute = 7888;
            e.Ocircumflexdotbelow = 7896;
            e.Ocircumflexgrave = 7890;
            e.Ocircumflexhookabove = 7892;
            e.Ocircumflexsmall = 63476;
            e.Ocircumflextilde = 7894;
            e.Ocyrillic = 1054;
            e.Odblacute = 336;
            e.Odblgrave = 524;
            e.Odieresis = 214;
            e.Odieresiscyrillic = 1254;
            e.Odieresissmall = 63478;
            e.Odotbelow = 7884;
            e.Ogoneksmall = 63227;
            e.Ograve = 210;
            e.Ogravesmall = 63474;
            e.Oharmenian = 1365;
            e.Ohm = 8486;
            e.Ohookabove = 7886;
            e.Ohorn = 416;
            e.Ohornacute = 7898;
            e.Ohorndotbelow = 7906;
            e.Ohorngrave = 7900;
            e.Ohornhookabove = 7902;
            e.Ohorntilde = 7904;
            e.Ohungarumlaut = 336;
            e.Oi = 418;
            e.Oinvertedbreve = 526;
            e.Omacron = 332;
            e.Omacronacute = 7762;
            e.Omacrongrave = 7760;
            e.Omega = 8486;
            e.Omegacyrillic = 1120;
            e.Omegagreek = 937;
            e.Omegaroundcyrillic = 1146;
            e.Omegatitlocyrillic = 1148;
            e.Omegatonos = 911;
            e.Omicron = 927;
            e.Omicrontonos = 908;
            e.Omonospace = 65327;
            e.Oneroman = 8544;
            e.Oogonek = 490;
            e.Oogonekmacron = 492;
            e.Oopen = 390;
            e.Oslash = 216;
            e.Oslashacute = 510;
            e.Oslashsmall = 63480;
            e.Osmall = 63343;
            e.Ostrokeacute = 510;
            e.Otcyrillic = 1150;
            e.Otilde = 213;
            e.Otildeacute = 7756;
            e.Otildedieresis = 7758;
            e.Otildesmall = 63477;
            e.P = 80;
            e.Pacute = 7764;
            e.Pcircle = 9413;
            e.Pdotaccent = 7766;
            e.Pecyrillic = 1055;
            e.Peharmenian = 1354;
            e.Pemiddlehookcyrillic = 1190;
            e.Phi = 934;
            e.Phook = 420;
            e.Pi = 928;
            e.Piwrarmenian = 1363;
            e.Pmonospace = 65328;
            e.Psi = 936;
            e.Psicyrillic = 1136;
            e.Psmall = 63344;
            e.Q = 81;
            e.Qcircle = 9414;
            e.Qmonospace = 65329;
            e.Qsmall = 63345;
            e.R = 82;
            e.Raarmenian = 1356;
            e.Racute = 340;
            e.Rcaron = 344;
            e.Rcedilla = 342;
            e.Rcircle = 9415;
            e.Rcommaaccent = 342;
            e.Rdblgrave = 528;
            e.Rdotaccent = 7768;
            e.Rdotbelow = 7770;
            e.Rdotbelowmacron = 7772;
            e.Reharmenian = 1360;
            e.Rfraktur = 8476;
            e.Rho = 929;
            e.Ringsmall = 63228;
            e.Rinvertedbreve = 530;
            e.Rlinebelow = 7774;
            e.Rmonospace = 65330;
            e.Rsmall = 63346;
            e.Rsmallinverted = 641;
            e.Rsmallinvertedsuperior = 694;
            e.S = 83;
            e.SF010000 = 9484;
            e.SF020000 = 9492;
            e.SF030000 = 9488;
            e.SF040000 = 9496;
            e.SF050000 = 9532;
            e.SF060000 = 9516;
            e.SF070000 = 9524;
            e.SF080000 = 9500;
            e.SF090000 = 9508;
            e.SF100000 = 9472;
            e.SF110000 = 9474;
            e.SF190000 = 9569;
            e.SF200000 = 9570;
            e.SF210000 = 9558;
            e.SF220000 = 9557;
            e.SF230000 = 9571;
            e.SF240000 = 9553;
            e.SF250000 = 9559;
            e.SF260000 = 9565;
            e.SF270000 = 9564;
            e.SF280000 = 9563;
            e.SF360000 = 9566;
            e.SF370000 = 9567;
            e.SF380000 = 9562;
            e.SF390000 = 9556;
            e.SF400000 = 9577;
            e.SF410000 = 9574;
            e.SF420000 = 9568;
            e.SF430000 = 9552;
            e.SF440000 = 9580;
            e.SF450000 = 9575;
            e.SF460000 = 9576;
            e.SF470000 = 9572;
            e.SF480000 = 9573;
            e.SF490000 = 9561;
            e.SF500000 = 9560;
            e.SF510000 = 9554;
            e.SF520000 = 9555;
            e.SF530000 = 9579;
            e.SF540000 = 9578;
            e.Sacute = 346;
            e.Sacutedotaccent = 7780;
            e.Sampigreek = 992;
            e.Scaron = 352;
            e.Scarondotaccent = 7782;
            e.Scaronsmall = 63229;
            e.Scedilla = 350;
            e.Schwa = 399;
            e.Schwacyrillic = 1240;
            e.Schwadieresiscyrillic = 1242;
            e.Scircle = 9416;
            e.Scircumflex = 348;
            e.Scommaaccent = 536;
            e.Sdotaccent = 7776;
            e.Sdotbelow = 7778;
            e.Sdotbelowdotaccent = 7784;
            e.Seharmenian = 1357;
            e.Sevenroman = 8550;
            e.Shaarmenian = 1351;
            e.Shacyrillic = 1064;
            e.Shchacyrillic = 1065;
            e.Sheicoptic = 994;
            e.Shhacyrillic = 1210;
            e.Shimacoptic = 1004;
            e.Sigma = 931;
            e.Sixroman = 8549;
            e.Smonospace = 65331;
            e.Softsigncyrillic = 1068;
            e.Ssmall = 63347;
            e.Stigmagreek = 986;
            e.T = 84;
            e.Tau = 932;
            e.Tbar = 358;
            e.Tcaron = 356;
            e.Tcedilla = 354;
            e.Tcircle = 9417;
            e.Tcircumflexbelow = 7792;
            e.Tcommaaccent = 354;
            e.Tdotaccent = 7786;
            e.Tdotbelow = 7788;
            e.Tecyrillic = 1058;
            e.Tedescendercyrillic = 1196;
            e.Tenroman = 8553;
            e.Tetsecyrillic = 1204;
            e.Theta = 920;
            e.Thook = 428;
            e.Thorn = 222;
            e.Thornsmall = 63486;
            e.Threeroman = 8546;
            e.Tildesmall = 63230;
            e.Tiwnarmenian = 1359;
            e.Tlinebelow = 7790;
            e.Tmonospace = 65332;
            e.Toarmenian = 1337;
            e.Tonefive = 444;
            e.Tonesix = 388;
            e.Tonetwo = 423;
            e.Tretroflexhook = 430;
            e.Tsecyrillic = 1062;
            e.Tshecyrillic = 1035;
            e.Tsmall = 63348;
            e.Twelveroman = 8555;
            e.Tworoman = 8545;
            e.U = 85;
            e.Uacute = 218;
            e.Uacutesmall = 63482;
            e.Ubreve = 364;
            e.Ucaron = 467;
            e.Ucircle = 9418;
            e.Ucircumflex = 219;
            e.Ucircumflexbelow = 7798;
            e.Ucircumflexsmall = 63483;
            e.Ucyrillic = 1059;
            e.Udblacute = 368;
            e.Udblgrave = 532;
            e.Udieresis = 220;
            e.Udieresisacute = 471;
            e.Udieresisbelow = 7794;
            e.Udieresiscaron = 473;
            e.Udieresiscyrillic = 1264;
            e.Udieresisgrave = 475;
            e.Udieresismacron = 469;
            e.Udieresissmall = 63484;
            e.Udotbelow = 7908;
            e.Ugrave = 217;
            e.Ugravesmall = 63481;
            e.Uhookabove = 7910;
            e.Uhorn = 431;
            e.Uhornacute = 7912;
            e.Uhorndotbelow = 7920;
            e.Uhorngrave = 7914;
            e.Uhornhookabove = 7916;
            e.Uhorntilde = 7918;
            e.Uhungarumlaut = 368;
            e.Uhungarumlautcyrillic = 1266;
            e.Uinvertedbreve = 534;
            e.Ukcyrillic = 1144;
            e.Umacron = 362;
            e.Umacroncyrillic = 1262;
            e.Umacrondieresis = 7802;
            e.Umonospace = 65333;
            e.Uogonek = 370;
            e.Upsilon = 933;
            e.Upsilon1 = 978;
            e.Upsilonacutehooksymbolgreek = 979;
            e.Upsilonafrican = 433;
            e.Upsilondieresis = 939;
            e.Upsilondieresishooksymbolgreek = 980;
            e.Upsilonhooksymbol = 978;
            e.Upsilontonos = 910;
            e.Uring = 366;
            e.Ushortcyrillic = 1038;
            e.Usmall = 63349;
            e.Ustraightcyrillic = 1198;
            e.Ustraightstrokecyrillic = 1200;
            e.Utilde = 360;
            e.Utildeacute = 7800;
            e.Utildebelow = 7796;
            e.V = 86;
            e.Vcircle = 9419;
            e.Vdotbelow = 7806;
            e.Vecyrillic = 1042;
            e.Vewarmenian = 1358;
            e.Vhook = 434;
            e.Vmonospace = 65334;
            e.Voarmenian = 1352;
            e.Vsmall = 63350;
            e.Vtilde = 7804;
            e.W = 87;
            e.Wacute = 7810;
            e.Wcircle = 9420;
            e.Wcircumflex = 372;
            e.Wdieresis = 7812;
            e.Wdotaccent = 7814;
            e.Wdotbelow = 7816;
            e.Wgrave = 7808;
            e.Wmonospace = 65335;
            e.Wsmall = 63351;
            e.X = 88;
            e.Xcircle = 9421;
            e.Xdieresis = 7820;
            e.Xdotaccent = 7818;
            e.Xeharmenian = 1341;
            e.Xi = 926;
            e.Xmonospace = 65336;
            e.Xsmall = 63352;
            e.Y = 89;
            e.Yacute = 221;
            e.Yacutesmall = 63485;
            e.Yatcyrillic = 1122;
            e.Ycircle = 9422;
            e.Ycircumflex = 374;
            e.Ydieresis = 376;
            e.Ydieresissmall = 63487;
            e.Ydotaccent = 7822;
            e.Ydotbelow = 7924;
            e.Yericyrillic = 1067;
            e.Yerudieresiscyrillic = 1272;
            e.Ygrave = 7922;
            e.Yhook = 435;
            e.Yhookabove = 7926;
            e.Yiarmenian = 1349;
            e.Yicyrillic = 1031;
            e.Yiwnarmenian = 1362;
            e.Ymonospace = 65337;
            e.Ysmall = 63353;
            e.Ytilde = 7928;
            e.Yusbigcyrillic = 1130;
            e.Yusbigiotifiedcyrillic = 1132;
            e.Yuslittlecyrillic = 1126;
            e.Yuslittleiotifiedcyrillic = 1128;
            e.Z = 90;
            e.Zaarmenian = 1334;
            e.Zacute = 377;
            e.Zcaron = 381;
            e.Zcaronsmall = 63231;
            e.Zcircle = 9423;
            e.Zcircumflex = 7824;
            e.Zdot = 379;
            e.Zdotaccent = 379;
            e.Zdotbelow = 7826;
            e.Zecyrillic = 1047;
            e.Zedescendercyrillic = 1176;
            e.Zedieresiscyrillic = 1246;
            e.Zeta = 918;
            e.Zhearmenian = 1338;
            e.Zhebrevecyrillic = 1217;
            e.Zhecyrillic = 1046;
            e.Zhedescendercyrillic = 1174;
            e.Zhedieresiscyrillic = 1244;
            e.Zlinebelow = 7828;
            e.Zmonospace = 65338;
            e.Zsmall = 63354;
            e.Zstroke = 437;
            e.a = 97;
            e.aabengali = 2438;
            e.aacute = 225;
            e.aadeva = 2310;
            e.aagujarati = 2694;
            e.aagurmukhi = 2566;
            e.aamatragurmukhi = 2622;
            e.aarusquare = 13059;
            e.aavowelsignbengali = 2494;
            e.aavowelsigndeva = 2366;
            e.aavowelsigngujarati = 2750;
            e.abbreviationmarkarmenian = 1375;
            e.abbreviationsigndeva = 2416;
            e.abengali = 2437;
            e.abopomofo = 12570;
            e.abreve = 259;
            e.abreveacute = 7855;
            e.abrevecyrillic = 1233;
            e.abrevedotbelow = 7863;
            e.abrevegrave = 7857;
            e.abrevehookabove = 7859;
            e.abrevetilde = 7861;
            e.acaron = 462;
            e.acircle = 9424;
            e.acircumflex = 226;
            e.acircumflexacute = 7845;
            e.acircumflexdotbelow = 7853;
            e.acircumflexgrave = 7847;
            e.acircumflexhookabove = 7849;
            e.acircumflextilde = 7851;
            e.acute = 180;
            e.acutebelowcmb = 791;
            e.acutecmb = 769;
            e.acutecomb = 769;
            e.acutedeva = 2388;
            e.acutelowmod = 719;
            e.acutetonecmb = 833;
            e.acyrillic = 1072;
            e.adblgrave = 513;
            e.addakgurmukhi = 2673;
            e.adeva = 2309;
            e.adieresis = 228;
            e.adieresiscyrillic = 1235;
            e.adieresismacron = 479;
            e.adotbelow = 7841;
            e.adotmacron = 481;
            e.ae = 230;
            e.aeacute = 509;
            e.aekorean = 12624;
            e.aemacron = 483;
            e.afii00208 = 8213;
            e.afii08941 = 8356;
            e.afii10017 = 1040;
            e.afii10018 = 1041;
            e.afii10019 = 1042;
            e.afii10020 = 1043;
            e.afii10021 = 1044;
            e.afii10022 = 1045;
            e.afii10023 = 1025;
            e.afii10024 = 1046;
            e.afii10025 = 1047;
            e.afii10026 = 1048;
            e.afii10027 = 1049;
            e.afii10028 = 1050;
            e.afii10029 = 1051;
            e.afii10030 = 1052;
            e.afii10031 = 1053;
            e.afii10032 = 1054;
            e.afii10033 = 1055;
            e.afii10034 = 1056;
            e.afii10035 = 1057;
            e.afii10036 = 1058;
            e.afii10037 = 1059;
            e.afii10038 = 1060;
            e.afii10039 = 1061;
            e.afii10040 = 1062;
            e.afii10041 = 1063;
            e.afii10042 = 1064;
            e.afii10043 = 1065;
            e.afii10044 = 1066;
            e.afii10045 = 1067;
            e.afii10046 = 1068;
            e.afii10047 = 1069;
            e.afii10048 = 1070;
            e.afii10049 = 1071;
            e.afii10050 = 1168;
            e.afii10051 = 1026;
            e.afii10052 = 1027;
            e.afii10053 = 1028;
            e.afii10054 = 1029;
            e.afii10055 = 1030;
            e.afii10056 = 1031;
            e.afii10057 = 1032;
            e.afii10058 = 1033;
            e.afii10059 = 1034;
            e.afii10060 = 1035;
            e.afii10061 = 1036;
            e.afii10062 = 1038;
            e.afii10063 = 63172;
            e.afii10064 = 63173;
            e.afii10065 = 1072;
            e.afii10066 = 1073;
            e.afii10067 = 1074;
            e.afii10068 = 1075;
            e.afii10069 = 1076;
            e.afii10070 = 1077;
            e.afii10071 = 1105;
            e.afii10072 = 1078;
            e.afii10073 = 1079;
            e.afii10074 = 1080;
            e.afii10075 = 1081;
            e.afii10076 = 1082;
            e.afii10077 = 1083;
            e.afii10078 = 1084;
            e.afii10079 = 1085;
            e.afii10080 = 1086;
            e.afii10081 = 1087;
            e.afii10082 = 1088;
            e.afii10083 = 1089;
            e.afii10084 = 1090;
            e.afii10085 = 1091;
            e.afii10086 = 1092;
            e.afii10087 = 1093;
            e.afii10088 = 1094;
            e.afii10089 = 1095;
            e.afii10090 = 1096;
            e.afii10091 = 1097;
            e.afii10092 = 1098;
            e.afii10093 = 1099;
            e.afii10094 = 1100;
            e.afii10095 = 1101;
            e.afii10096 = 1102;
            e.afii10097 = 1103;
            e.afii10098 = 1169;
            e.afii10099 = 1106;
            e.afii10100 = 1107;
            e.afii10101 = 1108;
            e.afii10102 = 1109;
            e.afii10103 = 1110;
            e.afii10104 = 1111;
            e.afii10105 = 1112;
            e.afii10106 = 1113;
            e.afii10107 = 1114;
            e.afii10108 = 1115;
            e.afii10109 = 1116;
            e.afii10110 = 1118;
            e.afii10145 = 1039;
            e.afii10146 = 1122;
            e.afii10147 = 1138;
            e.afii10148 = 1140;
            e.afii10192 = 63174;
            e.afii10193 = 1119;
            e.afii10194 = 1123;
            e.afii10195 = 1139;
            e.afii10196 = 1141;
            e.afii10831 = 63175;
            e.afii10832 = 63176;
            e.afii10846 = 1241;
            e.afii299 = 8206;
            e.afii300 = 8207;
            e.afii301 = 8205;
            e.afii57381 = 1642;
            e.afii57388 = 1548;
            e.afii57392 = 1632;
            e.afii57393 = 1633;
            e.afii57394 = 1634;
            e.afii57395 = 1635;
            e.afii57396 = 1636;
            e.afii57397 = 1637;
            e.afii57398 = 1638;
            e.afii57399 = 1639;
            e.afii57400 = 1640;
            e.afii57401 = 1641;
            e.afii57403 = 1563;
            e.afii57407 = 1567;
            e.afii57409 = 1569;
            e.afii57410 = 1570;
            e.afii57411 = 1571;
            e.afii57412 = 1572;
            e.afii57413 = 1573;
            e.afii57414 = 1574;
            e.afii57415 = 1575;
            e.afii57416 = 1576;
            e.afii57417 = 1577;
            e.afii57418 = 1578;
            e.afii57419 = 1579;
            e.afii57420 = 1580;
            e.afii57421 = 1581;
            e.afii57422 = 1582;
            e.afii57423 = 1583;
            e.afii57424 = 1584;
            e.afii57425 = 1585;
            e.afii57426 = 1586;
            e.afii57427 = 1587;
            e.afii57428 = 1588;
            e.afii57429 = 1589;
            e.afii57430 = 1590;
            e.afii57431 = 1591;
            e.afii57432 = 1592;
            e.afii57433 = 1593;
            e.afii57434 = 1594;
            e.afii57440 = 1600;
            e.afii57441 = 1601;
            e.afii57442 = 1602;
            e.afii57443 = 1603;
            e.afii57444 = 1604;
            e.afii57445 = 1605;
            e.afii57446 = 1606;
            e.afii57448 = 1608;
            e.afii57449 = 1609;
            e.afii57450 = 1610;
            e.afii57451 = 1611;
            e.afii57452 = 1612;
            e.afii57453 = 1613;
            e.afii57454 = 1614;
            e.afii57455 = 1615;
            e.afii57456 = 1616;
            e.afii57457 = 1617;
            e.afii57458 = 1618;
            e.afii57470 = 1607;
            e.afii57505 = 1700;
            e.afii57506 = 1662;
            e.afii57507 = 1670;
            e.afii57508 = 1688;
            e.afii57509 = 1711;
            e.afii57511 = 1657;
            e.afii57512 = 1672;
            e.afii57513 = 1681;
            e.afii57514 = 1722;
            e.afii57519 = 1746;
            e.afii57534 = 1749;
            e.afii57636 = 8362;
            e.afii57645 = 1470;
            e.afii57658 = 1475;
            e.afii57664 = 1488;
            e.afii57665 = 1489;
            e.afii57666 = 1490;
            e.afii57667 = 1491;
            e.afii57668 = 1492;
            e.afii57669 = 1493;
            e.afii57670 = 1494;
            e.afii57671 = 1495;
            e.afii57672 = 1496;
            e.afii57673 = 1497;
            e.afii57674 = 1498;
            e.afii57675 = 1499;
            e.afii57676 = 1500;
            e.afii57677 = 1501;
            e.afii57678 = 1502;
            e.afii57679 = 1503;
            e.afii57680 = 1504;
            e.afii57681 = 1505;
            e.afii57682 = 1506;
            e.afii57683 = 1507;
            e.afii57684 = 1508;
            e.afii57685 = 1509;
            e.afii57686 = 1510;
            e.afii57687 = 1511;
            e.afii57688 = 1512;
            e.afii57689 = 1513;
            e.afii57690 = 1514;
            e.afii57694 = 64298;
            e.afii57695 = 64299;
            e.afii57700 = 64331;
            e.afii57705 = 64287;
            e.afii57716 = 1520;
            e.afii57717 = 1521;
            e.afii57718 = 1522;
            e.afii57723 = 64309;
            e.afii57793 = 1460;
            e.afii57794 = 1461;
            e.afii57795 = 1462;
            e.afii57796 = 1467;
            e.afii57797 = 1464;
            e.afii57798 = 1463;
            e.afii57799 = 1456;
            e.afii57800 = 1458;
            e.afii57801 = 1457;
            e.afii57802 = 1459;
            e.afii57803 = 1474;
            e.afii57804 = 1473;
            e.afii57806 = 1465;
            e.afii57807 = 1468;
            e.afii57839 = 1469;
            e.afii57841 = 1471;
            e.afii57842 = 1472;
            e.afii57929 = 700;
            e.afii61248 = 8453;
            e.afii61289 = 8467;
            e.afii61352 = 8470;
            e.afii61573 = 8236;
            e.afii61574 = 8237;
            e.afii61575 = 8238;
            e.afii61664 = 8204;
            e.afii63167 = 1645;
            e.afii64937 = 701;
            e.agrave = 224;
            e.agujarati = 2693;
            e.agurmukhi = 2565;
            e.ahiragana = 12354;
            e.ahookabove = 7843;
            e.aibengali = 2448;
            e.aibopomofo = 12574;
            e.aideva = 2320;
            e.aiecyrillic = 1237;
            e.aigujarati = 2704;
            e.aigurmukhi = 2576;
            e.aimatragurmukhi = 2632;
            e.ainarabic = 1593;
            e.ainfinalarabic = 65226;
            e.aininitialarabic = 65227;
            e.ainmedialarabic = 65228;
            e.ainvertedbreve = 515;
            e.aivowelsignbengali = 2504;
            e.aivowelsigndeva = 2376;
            e.aivowelsigngujarati = 2760;
            e.akatakana = 12450;
            e.akatakanahalfwidth = 65393;
            e.akorean = 12623;
            e.alef = 1488;
            e.alefarabic = 1575;
            e.alefdageshhebrew = 64304;
            e.aleffinalarabic = 65166;
            e.alefhamzaabovearabic = 1571;
            e.alefhamzaabovefinalarabic = 65156;
            e.alefhamzabelowarabic = 1573;
            e.alefhamzabelowfinalarabic = 65160;
            e.alefhebrew = 1488;
            e.aleflamedhebrew = 64335;
            e.alefmaddaabovearabic = 1570;
            e.alefmaddaabovefinalarabic = 65154;
            e.alefmaksuraarabic = 1609;
            e.alefmaksurafinalarabic = 65264;
            e.alefmaksurainitialarabic = 65267;
            e.alefmaksuramedialarabic = 65268;
            e.alefpatahhebrew = 64302;
            e.alefqamatshebrew = 64303;
            e.aleph = 8501;
            e.allequal = 8780;
            e.alpha = 945;
            e.alphatonos = 940;
            e.amacron = 257;
            e.amonospace = 65345;
            e.ampersand = 38;
            e.ampersandmonospace = 65286;
            e.ampersandsmall = 63270;
            e.amsquare = 13250;
            e.anbopomofo = 12578;
            e.angbopomofo = 12580;
            e.angbracketleft = 12296;
            e.angbracketright = 12297;
            e.angkhankhuthai = 3674;
            e.angle = 8736;
            e.anglebracketleft = 12296;
            e.anglebracketleftvertical = 65087;
            e.anglebracketright = 12297;
            e.anglebracketrightvertical = 65088;
            e.angleleft = 9001;
            e.angleright = 9002;
            e.angstrom = 8491;
            e.anoteleia = 903;
            e.anudattadeva = 2386;
            e.anusvarabengali = 2434;
            e.anusvaradeva = 2306;
            e.anusvaragujarati = 2690;
            e.aogonek = 261;
            e.apaatosquare = 13056;
            e.aparen = 9372;
            e.apostrophearmenian = 1370;
            e.apostrophemod = 700;
            e.apple = 63743;
            e.approaches = 8784;
            e.approxequal = 8776;
            e.approxequalorimage = 8786;
            e.approximatelyequal = 8773;
            e.araeaekorean = 12686;
            e.araeakorean = 12685;
            e.arc = 8978;
            e.arighthalfring = 7834;
            e.aring = 229;
            e.aringacute = 507;
            e.aringbelow = 7681;
            e.arrowboth = 8596;
            e.arrowdashdown = 8675;
            e.arrowdashleft = 8672;
            e.arrowdashright = 8674;
            e.arrowdashup = 8673;
            e.arrowdblboth = 8660;
            e.arrowdbldown = 8659;
            e.arrowdblleft = 8656;
            e.arrowdblright = 8658;
            e.arrowdblup = 8657;
            e.arrowdown = 8595;
            e.arrowdownleft = 8601;
            e.arrowdownright = 8600;
            e.arrowdownwhite = 8681;
            e.arrowheaddownmod = 709;
            e.arrowheadleftmod = 706;
            e.arrowheadrightmod = 707;
            e.arrowheadupmod = 708;
            e.arrowhorizex = 63719;
            e.arrowleft = 8592;
            e.arrowleftdbl = 8656;
            e.arrowleftdblstroke = 8653;
            e.arrowleftoverright = 8646;
            e.arrowleftwhite = 8678;
            e.arrowright = 8594;
            e.arrowrightdblstroke = 8655;
            e.arrowrightheavy = 10142;
            e.arrowrightoverleft = 8644;
            e.arrowrightwhite = 8680;
            e.arrowtableft = 8676;
            e.arrowtabright = 8677;
            e.arrowup = 8593;
            e.arrowupdn = 8597;
            e.arrowupdnbse = 8616;
            e.arrowupdownbase = 8616;
            e.arrowupleft = 8598;
            e.arrowupleftofdown = 8645;
            e.arrowupright = 8599;
            e.arrowupwhite = 8679;
            e.arrowvertex = 63718;
            e.asciicircum = 94;
            e.asciicircummonospace = 65342;
            e.asciitilde = 126;
            e.asciitildemonospace = 65374;
            e.ascript = 593;
            e.ascriptturned = 594;
            e.asmallhiragana = 12353;
            e.asmallkatakana = 12449;
            e.asmallkatakanahalfwidth = 65383;
            e.asterisk = 42;
            e.asteriskaltonearabic = 1645;
            e.asteriskarabic = 1645;
            e.asteriskmath = 8727;
            e.asteriskmonospace = 65290;
            e.asterisksmall = 65121;
            e.asterism = 8258;
            e.asuperior = 63209;
            e.asymptoticallyequal = 8771;
            e.at = 64;
            e.atilde = 227;
            e.atmonospace = 65312;
            e.atsmall = 65131;
            e.aturned = 592;
            e.aubengali = 2452;
            e.aubopomofo = 12576;
            e.audeva = 2324;
            e.augujarati = 2708;
            e.augurmukhi = 2580;
            e.aulengthmarkbengali = 2519;
            e.aumatragurmukhi = 2636;
            e.auvowelsignbengali = 2508;
            e.auvowelsigndeva = 2380;
            e.auvowelsigngujarati = 2764;
            e.avagrahadeva = 2365;
            e.aybarmenian = 1377;
            e.ayin = 1506;
            e.ayinaltonehebrew = 64288;
            e.ayinhebrew = 1506;
            e.b = 98;
            e.babengali = 2476;
            e.backslash = 92;
            e.backslashmonospace = 65340;
            e.badeva = 2348;
            e.bagujarati = 2732;
            e.bagurmukhi = 2604;
            e.bahiragana = 12400;
            e.bahtthai = 3647;
            e.bakatakana = 12496;
            e.bar = 124;
            e.barmonospace = 65372;
            e.bbopomofo = 12549;
            e.bcircle = 9425;
            e.bdotaccent = 7683;
            e.bdotbelow = 7685;
            e.beamedsixteenthnotes = 9836;
            e.because = 8757;
            e.becyrillic = 1073;
            e.beharabic = 1576;
            e.behfinalarabic = 65168;
            e.behinitialarabic = 65169;
            e.behiragana = 12409;
            e.behmedialarabic = 65170;
            e.behmeeminitialarabic = 64671;
            e.behmeemisolatedarabic = 64520;
            e.behnoonfinalarabic = 64621;
            e.bekatakana = 12505;
            e.benarmenian = 1378;
            e.bet = 1489;
            e.beta = 946;
            e.betasymbolgreek = 976;
            e.betdagesh = 64305;
            e.betdageshhebrew = 64305;
            e.bethebrew = 1489;
            e.betrafehebrew = 64332;
            e.bhabengali = 2477;
            e.bhadeva = 2349;
            e.bhagujarati = 2733;
            e.bhagurmukhi = 2605;
            e.bhook = 595;
            e.bihiragana = 12403;
            e.bikatakana = 12499;
            e.bilabialclick = 664;
            e.bindigurmukhi = 2562;
            e.birusquare = 13105;
            e.blackcircle = 9679;
            e.blackdiamond = 9670;
            e.blackdownpointingtriangle = 9660;
            e.blackleftpointingpointer = 9668;
            e.blackleftpointingtriangle = 9664;
            e.blacklenticularbracketleft = 12304;
            e.blacklenticularbracketleftvertical = 65083;
            e.blacklenticularbracketright = 12305;
            e.blacklenticularbracketrightvertical = 65084;
            e.blacklowerlefttriangle = 9699;
            e.blacklowerrighttriangle = 9698;
            e.blackrectangle = 9644;
            e.blackrightpointingpointer = 9658;
            e.blackrightpointingtriangle = 9654;
            e.blacksmallsquare = 9642;
            e.blacksmilingface = 9787;
            e.blacksquare = 9632;
            e.blackstar = 9733;
            e.blackupperlefttriangle = 9700;
            e.blackupperrighttriangle = 9701;
            e.blackuppointingsmalltriangle = 9652;
            e.blackuppointingtriangle = 9650;
            e.blank = 9251;
            e.blinebelow = 7687;
            e.block = 9608;
            e.bmonospace = 65346;
            e.bobaimaithai = 3610;
            e.bohiragana = 12412;
            e.bokatakana = 12508;
            e.bparen = 9373;
            e.bqsquare = 13251;
            e.braceex = 63732;
            e.braceleft = 123;
            e.braceleftbt = 63731;
            e.braceleftmid = 63730;
            e.braceleftmonospace = 65371;
            e.braceleftsmall = 65115;
            e.bracelefttp = 63729;
            e.braceleftvertical = 65079;
            e.braceright = 125;
            e.bracerightbt = 63742;
            e.bracerightmid = 63741;
            e.bracerightmonospace = 65373;
            e.bracerightsmall = 65116;
            e.bracerighttp = 63740;
            e.bracerightvertical = 65080;
            e.bracketleft = 91;
            e.bracketleftbt = 63728;
            e.bracketleftex = 63727;
            e.bracketleftmonospace = 65339;
            e.bracketlefttp = 63726;
            e.bracketright = 93;
            e.bracketrightbt = 63739;
            e.bracketrightex = 63738;
            e.bracketrightmonospace = 65341;
            e.bracketrighttp = 63737;
            e.breve = 728;
            e.brevebelowcmb = 814;
            e.brevecmb = 774;
            e.breveinvertedbelowcmb = 815;
            e.breveinvertedcmb = 785;
            e.breveinverteddoublecmb = 865;
            e.bridgebelowcmb = 810;
            e.bridgeinvertedbelowcmb = 826;
            e.brokenbar = 166;
            e.bstroke = 384;
            e.bsuperior = 63210;
            e.btopbar = 387;
            e.buhiragana = 12406;
            e.bukatakana = 12502;
            e.bullet = 8226;
            e.bulletinverse = 9688;
            e.bulletoperator = 8729;
            e.bullseye = 9678;
            e.c = 99;
            e.caarmenian = 1390;
            e.cabengali = 2458;
            e.cacute = 263;
            e.cadeva = 2330;
            e.cagujarati = 2714;
            e.cagurmukhi = 2586;
            e.calsquare = 13192;
            e.candrabindubengali = 2433;
            e.candrabinducmb = 784;
            e.candrabindudeva = 2305;
            e.candrabindugujarati = 2689;
            e.capslock = 8682;
            e.careof = 8453;
            e.caron = 711;
            e.caronbelowcmb = 812;
            e.caroncmb = 780;
            e.carriagereturn = 8629;
            e.cbopomofo = 12568;
            e.ccaron = 269;
            e.ccedilla = 231;
            e.ccedillaacute = 7689;
            e.ccircle = 9426;
            e.ccircumflex = 265;
            e.ccurl = 597;
            e.cdot = 267;
            e.cdotaccent = 267;
            e.cdsquare = 13253;
            e.cedilla = 184;
            e.cedillacmb = 807;
            e.cent = 162;
            e.centigrade = 8451;
            e.centinferior = 63199;
            e.centmonospace = 65504;
            e.centoldstyle = 63394;
            e.centsuperior = 63200;
            e.chaarmenian = 1401;
            e.chabengali = 2459;
            e.chadeva = 2331;
            e.chagujarati = 2715;
            e.chagurmukhi = 2587;
            e.chbopomofo = 12564;
            e.cheabkhasiancyrillic = 1213;
            e.checkmark = 10003;
            e.checyrillic = 1095;
            e.chedescenderabkhasiancyrillic = 1215;
            e.chedescendercyrillic = 1207;
            e.chedieresiscyrillic = 1269;
            e.cheharmenian = 1395;
            e.chekhakassiancyrillic = 1228;
            e.cheverticalstrokecyrillic = 1209;
            e.chi = 967;
            e.chieuchacirclekorean = 12919;
            e.chieuchaparenkorean = 12823;
            e.chieuchcirclekorean = 12905;
            e.chieuchkorean = 12618;
            e.chieuchparenkorean = 12809;
            e.chochangthai = 3594;
            e.chochanthai = 3592;
            e.chochingthai = 3593;
            e.chochoethai = 3596;
            e.chook = 392;
            e.cieucacirclekorean = 12918;
            e.cieucaparenkorean = 12822;
            e.cieuccirclekorean = 12904;
            e.cieuckorean = 12616;
            e.cieucparenkorean = 12808;
            e.cieucuparenkorean = 12828;
            e.circle = 9675;
            e.circlecopyrt = 169;
            e.circlemultiply = 8855;
            e.circleot = 8857;
            e.circleplus = 8853;
            e.circlepostalmark = 12342;
            e.circlewithlefthalfblack = 9680;
            e.circlewithrighthalfblack = 9681;
            e.circumflex = 710;
            e.circumflexbelowcmb = 813;
            e.circumflexcmb = 770;
            e.clear = 8999;
            e.clickalveolar = 450;
            e.clickdental = 448;
            e.clicklateral = 449;
            e.clickretroflex = 451;
            e.club = 9827;
            e.clubsuitblack = 9827;
            e.clubsuitwhite = 9831;
            e.cmcubedsquare = 13220;
            e.cmonospace = 65347;
            e.cmsquaredsquare = 13216;
            e.coarmenian = 1409;
            e.colon = 58;
            e.colonmonetary = 8353;
            e.colonmonospace = 65306;
            e.colonsign = 8353;
            e.colonsmall = 65109;
            e.colontriangularhalfmod = 721;
            e.colontriangularmod = 720;
            e.comma = 44;
            e.commaabovecmb = 787;
            e.commaaboverightcmb = 789;
            e.commaaccent = 63171;
            e.commaarabic = 1548;
            e.commaarmenian = 1373;
            e.commainferior = 63201;
            e.commamonospace = 65292;
            e.commareversedabovecmb = 788;
            e.commareversedmod = 701;
            e.commasmall = 65104;
            e.commasuperior = 63202;
            e.commaturnedabovecmb = 786;
            e.commaturnedmod = 699;
            e.compass = 9788;
            e.congruent = 8773;
            e.contourintegral = 8750;
            e.control = 8963;
            e.controlACK = 6;
            e.controlBEL = 7;
            e.controlBS = 8;
            e.controlCAN = 24;
            e.controlCR = 13;
            e.controlDC1 = 17;
            e.controlDC2 = 18;
            e.controlDC3 = 19;
            e.controlDC4 = 20;
            e.controlDEL = 127;
            e.controlDLE = 16;
            e.controlEM = 25;
            e.controlENQ = 5;
            e.controlEOT = 4;
            e.controlESC = 27;
            e.controlETB = 23;
            e.controlETX = 3;
            e.controlFF = 12;
            e.controlFS = 28;
            e.controlGS = 29;
            e.controlHT = 9;
            e.controlLF = 10;
            e.controlNAK = 21;
            e.controlNULL = 0;
            e.controlRS = 30;
            e.controlSI = 15;
            e.controlSO = 14;
            e.controlSOT = 2;
            e.controlSTX = 1;
            e.controlSUB = 26;
            e.controlSYN = 22;
            e.controlUS = 31;
            e.controlVT = 11;
            e.copyright = 169;
            e.copyrightsans = 63721;
            e.copyrightserif = 63193;
            e.cornerbracketleft = 12300;
            e.cornerbracketlefthalfwidth = 65378;
            e.cornerbracketleftvertical = 65089;
            e.cornerbracketright = 12301;
            e.cornerbracketrighthalfwidth = 65379;
            e.cornerbracketrightvertical = 65090;
            e.corporationsquare = 13183;
            e.cosquare = 13255;
            e.coverkgsquare = 13254;
            e.cparen = 9374;
            e.cruzeiro = 8354;
            e.cstretched = 663;
            e.curlyand = 8911;
            e.curlyor = 8910;
            e.currency = 164;
            e.cyrBreve = 63185;
            e.cyrFlex = 63186;
            e.cyrbreve = 63188;
            e.cyrflex = 63189;
            e.d = 100;
            e.daarmenian = 1380;
            e.dabengali = 2470;
            e.dadarabic = 1590;
            e.dadeva = 2342;
            e.dadfinalarabic = 65214;
            e.dadinitialarabic = 65215;
            e.dadmedialarabic = 65216;
            e.dagesh = 1468;
            e.dageshhebrew = 1468;
            e.dagger = 8224;
            e.daggerdbl = 8225;
            e.dagujarati = 2726;
            e.dagurmukhi = 2598;
            e.dahiragana = 12384;
            e.dakatakana = 12480;
            e.dalarabic = 1583;
            e.dalet = 1491;
            e.daletdagesh = 64307;
            e.daletdageshhebrew = 64307;
            e.dalethebrew = 1491;
            e.dalfinalarabic = 65194;
            e.dammaarabic = 1615;
            e.dammalowarabic = 1615;
            e.dammatanaltonearabic = 1612;
            e.dammatanarabic = 1612;
            e.danda = 2404;
            e.dargahebrew = 1447;
            e.dargalefthebrew = 1447;
            e.dasiapneumatacyrilliccmb = 1157;
            e.dblGrave = 63187;
            e.dblanglebracketleft = 12298;
            e.dblanglebracketleftvertical = 65085;
            e.dblanglebracketright = 12299;
            e.dblanglebracketrightvertical = 65086;
            e.dblarchinvertedbelowcmb = 811;
            e.dblarrowleft = 8660;
            e.dblarrowright = 8658;
            e.dbldanda = 2405;
            e.dblgrave = 63190;
            e.dblgravecmb = 783;
            e.dblintegral = 8748;
            e.dbllowline = 8215;
            e.dbllowlinecmb = 819;
            e.dbloverlinecmb = 831;
            e.dblprimemod = 698;
            e.dblverticalbar = 8214;
            e.dblverticallineabovecmb = 782;
            e.dbopomofo = 12553;
            e.dbsquare = 13256;
            e.dcaron = 271;
            e.dcedilla = 7697;
            e.dcircle = 9427;
            e.dcircumflexbelow = 7699;
            e.dcroat = 273;
            e.ddabengali = 2465;
            e.ddadeva = 2337;
            e.ddagujarati = 2721;
            e.ddagurmukhi = 2593;
            e.ddalarabic = 1672;
            e.ddalfinalarabic = 64393;
            e.dddhadeva = 2396;
            e.ddhabengali = 2466;
            e.ddhadeva = 2338;
            e.ddhagujarati = 2722;
            e.ddhagurmukhi = 2594;
            e.ddotaccent = 7691;
            e.ddotbelow = 7693;
            e.decimalseparatorarabic = 1643;
            e.decimalseparatorpersian = 1643;
            e.decyrillic = 1076;
            e.degree = 176;
            e.dehihebrew = 1453;
            e.dehiragana = 12391;
            e.deicoptic = 1007;
            e.dekatakana = 12487;
            e.deleteleft = 9003;
            e.deleteright = 8998;
            e.delta = 948;
            e.deltaturned = 397;
            e.denominatorminusonenumeratorbengali = 2552;
            e.dezh = 676;
            e.dhabengali = 2471;
            e.dhadeva = 2343;
            e.dhagujarati = 2727;
            e.dhagurmukhi = 2599;
            e.dhook = 599;
            e.dialytikatonos = 901;
            e.dialytikatonoscmb = 836;
            e.diamond = 9830;
            e.diamondsuitwhite = 9826;
            e.dieresis = 168;
            e.dieresisacute = 63191;
            e.dieresisbelowcmb = 804;
            e.dieresiscmb = 776;
            e.dieresisgrave = 63192;
            e.dieresistonos = 901;
            e.dihiragana = 12386;
            e.dikatakana = 12482;
            e.dittomark = 12291;
            e.divide = 247;
            e.divides = 8739;
            e.divisionslash = 8725;
            e.djecyrillic = 1106;
            e.dkshade = 9619;
            e.dlinebelow = 7695;
            e.dlsquare = 13207;
            e.dmacron = 273;
            e.dmonospace = 65348;
            e.dnblock = 9604;
            e.dochadathai = 3598;
            e.dodekthai = 3604;
            e.dohiragana = 12393;
            e.dokatakana = 12489;
            e.dollar = 36;
            e.dollarinferior = 63203;
            e.dollarmonospace = 65284;
            e.dollaroldstyle = 63268;
            e.dollarsmall = 65129;
            e.dollarsuperior = 63204;
            e.dong = 8363;
            e.dorusquare = 13094;
            e.dotaccent = 729;
            e.dotaccentcmb = 775;
            e.dotbelowcmb = 803;
            e.dotbelowcomb = 803;
            e.dotkatakana = 12539;
            e.dotlessi = 305;
            e.dotlessj = 63166;
            e.dotlessjstrokehook = 644;
            e.dotmath = 8901;
            e.dottedcircle = 9676;
            e.doubleyodpatah = 64287;
            e.doubleyodpatahhebrew = 64287;
            e.downtackbelowcmb = 798;
            e.downtackmod = 725;
            e.dparen = 9375;
            e.dsuperior = 63211;
            e.dtail = 598;
            e.dtopbar = 396;
            e.duhiragana = 12389;
            e.dukatakana = 12485;
            e.dz = 499;
            e.dzaltone = 675;
            e.dzcaron = 454;
            e.dzcurl = 677;
            e.dzeabkhasiancyrillic = 1249;
            e.dzecyrillic = 1109;
            e.dzhecyrillic = 1119;
            e.e = 101;
            e.eacute = 233;
            e.earth = 9793;
            e.ebengali = 2447;
            e.ebopomofo = 12572;
            e.ebreve = 277;
            e.ecandradeva = 2317;
            e.ecandragujarati = 2701;
            e.ecandravowelsigndeva = 2373;
            e.ecandravowelsigngujarati = 2757;
            e.ecaron = 283;
            e.ecedillabreve = 7709;
            e.echarmenian = 1381;
            e.echyiwnarmenian = 1415;
            e.ecircle = 9428;
            e.ecircumflex = 234;
            e.ecircumflexacute = 7871;
            e.ecircumflexbelow = 7705;
            e.ecircumflexdotbelow = 7879;
            e.ecircumflexgrave = 7873;
            e.ecircumflexhookabove = 7875;
            e.ecircumflextilde = 7877;
            e.ecyrillic = 1108;
            e.edblgrave = 517;
            e.edeva = 2319;
            e.edieresis = 235;
            e.edot = 279;
            e.edotaccent = 279;
            e.edotbelow = 7865;
            e.eegurmukhi = 2575;
            e.eematragurmukhi = 2631;
            e.efcyrillic = 1092;
            e.egrave = 232;
            e.egujarati = 2703;
            e.eharmenian = 1383;
            e.ehbopomofo = 12573;
            e.ehiragana = 12360;
            e.ehookabove = 7867;
            e.eibopomofo = 12575;
            e.eight = 56;
            e.eightarabic = 1640;
            e.eightbengali = 2542;
            e.eightcircle = 9319;
            e.eightcircleinversesansserif = 10129;
            e.eightdeva = 2414;
            e.eighteencircle = 9329;
            e.eighteenparen = 9349;
            e.eighteenperiod = 9369;
            e.eightgujarati = 2798;
            e.eightgurmukhi = 2670;
            e.eighthackarabic = 1640;
            e.eighthangzhou = 12328;
            e.eighthnotebeamed = 9835;
            e.eightideographicparen = 12839;
            e.eightinferior = 8328;
            e.eightmonospace = 65304;
            e.eightoldstyle = 63288;
            e.eightparen = 9339;
            e.eightperiod = 9359;
            e.eightpersian = 1784;
            e.eightroman = 8567;
            e.eightsuperior = 8312;
            e.eightthai = 3672;
            e.einvertedbreve = 519;
            e.eiotifiedcyrillic = 1125;
            e.ekatakana = 12456;
            e.ekatakanahalfwidth = 65396;
            e.ekonkargurmukhi = 2676;
            e.ekorean = 12628;
            e.elcyrillic = 1083;
            e.element = 8712;
            e.elevencircle = 9322;
            e.elevenparen = 9342;
            e.elevenperiod = 9362;
            e.elevenroman = 8570;
            e.ellipsis = 8230;
            e.ellipsisvertical = 8942;
            e.emacron = 275;
            e.emacronacute = 7703;
            e.emacrongrave = 7701;
            e.emcyrillic = 1084;
            e.emdash = 8212;
            e.emdashvertical = 65073;
            e.emonospace = 65349;
            e.emphasismarkarmenian = 1371;
            e.emptyset = 8709;
            e.enbopomofo = 12579;
            e.encyrillic = 1085;
            e.endash = 8211;
            e.endashvertical = 65074;
            e.endescendercyrillic = 1187;
            e.eng = 331;
            e.engbopomofo = 12581;
            e.enghecyrillic = 1189;
            e.enhookcyrillic = 1224;
            e.enspace = 8194;
            e.eogonek = 281;
            e.eokorean = 12627;
            e.eopen = 603;
            e.eopenclosed = 666;
            e.eopenreversed = 604;
            e.eopenreversedclosed = 606;
            e.eopenreversedhook = 605;
            e.eparen = 9376;
            e.epsilon = 949;
            e.epsilontonos = 941;
            e.equal = 61;
            e.equalmonospace = 65309;
            e.equalsmall = 65126;
            e.equalsuperior = 8316;
            e.equivalence = 8801;
            e.erbopomofo = 12582;
            e.ercyrillic = 1088;
            e.ereversed = 600;
            e.ereversedcyrillic = 1101;
            e.escyrillic = 1089;
            e.esdescendercyrillic = 1195;
            e.esh = 643;
            e.eshcurl = 646;
            e.eshortdeva = 2318;
            e.eshortvowelsigndeva = 2374;
            e.eshreversedloop = 426;
            e.eshsquatreversed = 645;
            e.esmallhiragana = 12359;
            e.esmallkatakana = 12455;
            e.esmallkatakanahalfwidth = 65386;
            e.estimated = 8494;
            e.esuperior = 63212;
            e.eta = 951;
            e.etarmenian = 1384;
            e.etatonos = 942;
            e.eth = 240;
            e.etilde = 7869;
            e.etildebelow = 7707;
            e.etnahtafoukhhebrew = 1425;
            e.etnahtafoukhlefthebrew = 1425;
            e.etnahtahebrew = 1425;
            e.etnahtalefthebrew = 1425;
            e.eturned = 477;
            e.eukorean = 12641;
            e.euro = 8364;
            e.evowelsignbengali = 2503;
            e.evowelsigndeva = 2375;
            e.evowelsigngujarati = 2759;
            e.exclam = 33;
            e.exclamarmenian = 1372;
            e.exclamdbl = 8252;
            e.exclamdown = 161;
            e.exclamdownsmall = 63393;
            e.exclammonospace = 65281;
            e.exclamsmall = 63265;
            e.existential = 8707;
            e.ezh = 658;
            e.ezhcaron = 495;
            e.ezhcurl = 659;
            e.ezhreversed = 441;
            e.ezhtail = 442;
            e.f = 102;
            e.fadeva = 2398;
            e.fagurmukhi = 2654;
            e.fahrenheit = 8457;
            e.fathaarabic = 1614;
            e.fathalowarabic = 1614;
            e.fathatanarabic = 1611;
            e.fbopomofo = 12552;
            e.fcircle = 9429;
            e.fdotaccent = 7711;
            e.feharabic = 1601;
            e.feharmenian = 1414;
            e.fehfinalarabic = 65234;
            e.fehinitialarabic = 65235;
            e.fehmedialarabic = 65236;
            e.feicoptic = 997;
            e.female = 9792;
            e.ff = 64256;
            e.f_f = 64256;
            e.ffi = 64259;
            e.f_f_i = 64259;
            e.ffl = 64260;
            e.f_f_l = 64260;
            e.fi = 64257;
            e.f_i = 64257;
            e.fifteencircle = 9326;
            e.fifteenparen = 9346;
            e.fifteenperiod = 9366;
            e.figuredash = 8210;
            e.filledbox = 9632;
            e.filledrect = 9644;
            e.finalkaf = 1498;
            e.finalkafdagesh = 64314;
            e.finalkafdageshhebrew = 64314;
            e.finalkafhebrew = 1498;
            e.finalmem = 1501;
            e.finalmemhebrew = 1501;
            e.finalnun = 1503;
            e.finalnunhebrew = 1503;
            e.finalpe = 1507;
            e.finalpehebrew = 1507;
            e.finaltsadi = 1509;
            e.finaltsadihebrew = 1509;
            e.firsttonechinese = 713;
            e.fisheye = 9673;
            e.fitacyrillic = 1139;
            e.five = 53;
            e.fivearabic = 1637;
            e.fivebengali = 2539;
            e.fivecircle = 9316;
            e.fivecircleinversesansserif = 10126;
            e.fivedeva = 2411;
            e.fiveeighths = 8541;
            e.fivegujarati = 2795;
            e.fivegurmukhi = 2667;
            e.fivehackarabic = 1637;
            e.fivehangzhou = 12325;
            e.fiveideographicparen = 12836;
            e.fiveinferior = 8325;
            e.fivemonospace = 65301;
            e.fiveoldstyle = 63285;
            e.fiveparen = 9336;
            e.fiveperiod = 9356;
            e.fivepersian = 1781;
            e.fiveroman = 8564;
            e.fivesuperior = 8309;
            e.fivethai = 3669;
            e.fl = 64258;
            e.f_l = 64258;
            e.florin = 402;
            e.fmonospace = 65350;
            e.fmsquare = 13209;
            e.fofanthai = 3615;
            e.fofathai = 3613;
            e.fongmanthai = 3663;
            e.forall = 8704;
            e.four = 52;
            e.fourarabic = 1636;
            e.fourbengali = 2538;
            e.fourcircle = 9315;
            e.fourcircleinversesansserif = 10125;
            e.fourdeva = 2410;
            e.fourgujarati = 2794;
            e.fourgurmukhi = 2666;
            e.fourhackarabic = 1636;
            e.fourhangzhou = 12324;
            e.fourideographicparen = 12835;
            e.fourinferior = 8324;
            e.fourmonospace = 65300;
            e.fournumeratorbengali = 2551;
            e.fouroldstyle = 63284;
            e.fourparen = 9335;
            e.fourperiod = 9355;
            e.fourpersian = 1780;
            e.fourroman = 8563;
            e.foursuperior = 8308;
            e.fourteencircle = 9325;
            e.fourteenparen = 9345;
            e.fourteenperiod = 9365;
            e.fourthai = 3668;
            e.fourthtonechinese = 715;
            e.fparen = 9377;
            e.fraction = 8260;
            e.franc = 8355;
            e.g = 103;
            e.gabengali = 2455;
            e.gacute = 501;
            e.gadeva = 2327;
            e.gafarabic = 1711;
            e.gaffinalarabic = 64403;
            e.gafinitialarabic = 64404;
            e.gafmedialarabic = 64405;
            e.gagujarati = 2711;
            e.gagurmukhi = 2583;
            e.gahiragana = 12364;
            e.gakatakana = 12460;
            e.gamma = 947;
            e.gammalatinsmall = 611;
            e.gammasuperior = 736;
            e.gangiacoptic = 1003;
            e.gbopomofo = 12557;
            e.gbreve = 287;
            e.gcaron = 487;
            e.gcedilla = 291;
            e.gcircle = 9430;
            e.gcircumflex = 285;
            e.gcommaaccent = 291;
            e.gdot = 289;
            e.gdotaccent = 289;
            e.gecyrillic = 1075;
            e.gehiragana = 12370;
            e.gekatakana = 12466;
            e.geometricallyequal = 8785;
            e.gereshaccenthebrew = 1436;
            e.gereshhebrew = 1523;
            e.gereshmuqdamhebrew = 1437;
            e.germandbls = 223;
            e.gershayimaccenthebrew = 1438;
            e.gershayimhebrew = 1524;
            e.getamark = 12307;
            e.ghabengali = 2456;
            e.ghadarmenian = 1394;
            e.ghadeva = 2328;
            e.ghagujarati = 2712;
            e.ghagurmukhi = 2584;
            e.ghainarabic = 1594;
            e.ghainfinalarabic = 65230;
            e.ghaininitialarabic = 65231;
            e.ghainmedialarabic = 65232;
            e.ghemiddlehookcyrillic = 1173;
            e.ghestrokecyrillic = 1171;
            e.gheupturncyrillic = 1169;
            e.ghhadeva = 2394;
            e.ghhagurmukhi = 2650;
            e.ghook = 608;
            e.ghzsquare = 13203;
            e.gihiragana = 12366;
            e.gikatakana = 12462;
            e.gimarmenian = 1379;
            e.gimel = 1490;
            e.gimeldagesh = 64306;
            e.gimeldageshhebrew = 64306;
            e.gimelhebrew = 1490;
            e.gjecyrillic = 1107;
            e.glottalinvertedstroke = 446;
            e.glottalstop = 660;
            e.glottalstopinverted = 662;
            e.glottalstopmod = 704;
            e.glottalstopreversed = 661;
            e.glottalstopreversedmod = 705;
            e.glottalstopreversedsuperior = 740;
            e.glottalstopstroke = 673;
            e.glottalstopstrokereversed = 674;
            e.gmacron = 7713;
            e.gmonospace = 65351;
            e.gohiragana = 12372;
            e.gokatakana = 12468;
            e.gparen = 9378;
            e.gpasquare = 13228;
            e.gradient = 8711;
            e.grave = 96;
            e.gravebelowcmb = 790;
            e.gravecmb = 768;
            e.gravecomb = 768;
            e.gravedeva = 2387;
            e.gravelowmod = 718;
            e.gravemonospace = 65344;
            e.gravetonecmb = 832;
            e.greater = 62;
            e.greaterequal = 8805;
            e.greaterequalorless = 8923;
            e.greatermonospace = 65310;
            e.greaterorequivalent = 8819;
            e.greaterorless = 8823;
            e.greateroverequal = 8807;
            e.greatersmall = 65125;
            e.gscript = 609;
            e.gstroke = 485;
            e.guhiragana = 12368;
            e.guillemotleft = 171;
            e.guillemotright = 187;
            e.guilsinglleft = 8249;
            e.guilsinglright = 8250;
            e.gukatakana = 12464;
            e.guramusquare = 13080;
            e.gysquare = 13257;
            e.h = 104;
            e.haabkhasiancyrillic = 1193;
            e.haaltonearabic = 1729;
            e.habengali = 2489;
            e.hadescendercyrillic = 1203;
            e.hadeva = 2361;
            e.hagujarati = 2745;
            e.hagurmukhi = 2617;
            e.haharabic = 1581;
            e.hahfinalarabic = 65186;
            e.hahinitialarabic = 65187;
            e.hahiragana = 12399;
            e.hahmedialarabic = 65188;
            e.haitusquare = 13098;
            e.hakatakana = 12495;
            e.hakatakanahalfwidth = 65418;
            e.halantgurmukhi = 2637;
            e.hamzaarabic = 1569;
            e.hamzalowarabic = 1569;
            e.hangulfiller = 12644;
            e.hardsigncyrillic = 1098;
            e.harpoonleftbarbup = 8636;
            e.harpoonrightbarbup = 8640;
            e.hasquare = 13258;
            e.hatafpatah = 1458;
            e.hatafpatah16 = 1458;
            e.hatafpatah23 = 1458;
            e.hatafpatah2f = 1458;
            e.hatafpatahhebrew = 1458;
            e.hatafpatahnarrowhebrew = 1458;
            e.hatafpatahquarterhebrew = 1458;
            e.hatafpatahwidehebrew = 1458;
            e.hatafqamats = 1459;
            e.hatafqamats1b = 1459;
            e.hatafqamats28 = 1459;
            e.hatafqamats34 = 1459;
            e.hatafqamatshebrew = 1459;
            e.hatafqamatsnarrowhebrew = 1459;
            e.hatafqamatsquarterhebrew = 1459;
            e.hatafqamatswidehebrew = 1459;
            e.hatafsegol = 1457;
            e.hatafsegol17 = 1457;
            e.hatafsegol24 = 1457;
            e.hatafsegol30 = 1457;
            e.hatafsegolhebrew = 1457;
            e.hatafsegolnarrowhebrew = 1457;
            e.hatafsegolquarterhebrew = 1457;
            e.hatafsegolwidehebrew = 1457;
            e.hbar = 295;
            e.hbopomofo = 12559;
            e.hbrevebelow = 7723;
            e.hcedilla = 7721;
            e.hcircle = 9431;
            e.hcircumflex = 293;
            e.hdieresis = 7719;
            e.hdotaccent = 7715;
            e.hdotbelow = 7717;
            e.he = 1492;
            e.heart = 9829;
            e.heartsuitblack = 9829;
            e.heartsuitwhite = 9825;
            e.hedagesh = 64308;
            e.hedageshhebrew = 64308;
            e.hehaltonearabic = 1729;
            e.heharabic = 1607;
            e.hehebrew = 1492;
            e.hehfinalaltonearabic = 64423;
            e.hehfinalalttwoarabic = 65258;
            e.hehfinalarabic = 65258;
            e.hehhamzaabovefinalarabic = 64421;
            e.hehhamzaaboveisolatedarabic = 64420;
            e.hehinitialaltonearabic = 64424;
            e.hehinitialarabic = 65259;
            e.hehiragana = 12408;
            e.hehmedialaltonearabic = 64425;
            e.hehmedialarabic = 65260;
            e.heiseierasquare = 13179;
            e.hekatakana = 12504;
            e.hekatakanahalfwidth = 65421;
            e.hekutaarusquare = 13110;
            e.henghook = 615;
            e.herutusquare = 13113;
            e.het = 1495;
            e.hethebrew = 1495;
            e.hhook = 614;
            e.hhooksuperior = 689;
            e.hieuhacirclekorean = 12923;
            e.hieuhaparenkorean = 12827;
            e.hieuhcirclekorean = 12909;
            e.hieuhkorean = 12622;
            e.hieuhparenkorean = 12813;
            e.hihiragana = 12402;
            e.hikatakana = 12498;
            e.hikatakanahalfwidth = 65419;
            e.hiriq = 1460;
            e.hiriq14 = 1460;
            e.hiriq21 = 1460;
            e.hiriq2d = 1460;
            e.hiriqhebrew = 1460;
            e.hiriqnarrowhebrew = 1460;
            e.hiriqquarterhebrew = 1460;
            e.hiriqwidehebrew = 1460;
            e.hlinebelow = 7830;
            e.hmonospace = 65352;
            e.hoarmenian = 1392;
            e.hohipthai = 3627;
            e.hohiragana = 12411;
            e.hokatakana = 12507;
            e.hokatakanahalfwidth = 65422;
            e.holam = 1465;
            e.holam19 = 1465;
            e.holam26 = 1465;
            e.holam32 = 1465;
            e.holamhebrew = 1465;
            e.holamnarrowhebrew = 1465;
            e.holamquarterhebrew = 1465;
            e.holamwidehebrew = 1465;
            e.honokhukthai = 3630;
            e.hookabovecomb = 777;
            e.hookcmb = 777;
            e.hookpalatalizedbelowcmb = 801;
            e.hookretroflexbelowcmb = 802;
            e.hoonsquare = 13122;
            e.horicoptic = 1001;
            e.horizontalbar = 8213;
            e.horncmb = 795;
            e.hotsprings = 9832;
            e.house = 8962;
            e.hparen = 9379;
            e.hsuperior = 688;
            e.hturned = 613;
            e.huhiragana = 12405;
            e.huiitosquare = 13107;
            e.hukatakana = 12501;
            e.hukatakanahalfwidth = 65420;
            e.hungarumlaut = 733;
            e.hungarumlautcmb = 779;
            e.hv = 405;
            e.hyphen = 45;
            e.hypheninferior = 63205;
            e.hyphenmonospace = 65293;
            e.hyphensmall = 65123;
            e.hyphensuperior = 63206;
            e.hyphentwo = 8208;
            e.i = 105;
            e.iacute = 237;
            e.iacyrillic = 1103;
            e.ibengali = 2439;
            e.ibopomofo = 12583;
            e.ibreve = 301;
            e.icaron = 464;
            e.icircle = 9432;
            e.icircumflex = 238;
            e.icyrillic = 1110;
            e.idblgrave = 521;
            e.ideographearthcircle = 12943;
            e.ideographfirecircle = 12939;
            e.ideographicallianceparen = 12863;
            e.ideographiccallparen = 12858;
            e.ideographiccentrecircle = 12965;
            e.ideographicclose = 12294;
            e.ideographiccomma = 12289;
            e.ideographiccommaleft = 65380;
            e.ideographiccongratulationparen = 12855;
            e.ideographiccorrectcircle = 12963;
            e.ideographicearthparen = 12847;
            e.ideographicenterpriseparen = 12861;
            e.ideographicexcellentcircle = 12957;
            e.ideographicfestivalparen = 12864;
            e.ideographicfinancialcircle = 12950;
            e.ideographicfinancialparen = 12854;
            e.ideographicfireparen = 12843;
            e.ideographichaveparen = 12850;
            e.ideographichighcircle = 12964;
            e.ideographiciterationmark = 12293;
            e.ideographiclaborcircle = 12952;
            e.ideographiclaborparen = 12856;
            e.ideographicleftcircle = 12967;
            e.ideographiclowcircle = 12966;
            e.ideographicmedicinecircle = 12969;
            e.ideographicmetalparen = 12846;
            e.ideographicmoonparen = 12842;
            e.ideographicnameparen = 12852;
            e.ideographicperiod = 12290;
            e.ideographicprintcircle = 12958;
            e.ideographicreachparen = 12867;
            e.ideographicrepresentparen = 12857;
            e.ideographicresourceparen = 12862;
            e.ideographicrightcircle = 12968;
            e.ideographicsecretcircle = 12953;
            e.ideographicselfparen = 12866;
            e.ideographicsocietyparen = 12851;
            e.ideographicspace = 12288;
            e.ideographicspecialparen = 12853;
            e.ideographicstockparen = 12849;
            e.ideographicstudyparen = 12859;
            e.ideographicsunparen = 12848;
            e.ideographicsuperviseparen = 12860;
            e.ideographicwaterparen = 12844;
            e.ideographicwoodparen = 12845;
            e.ideographiczero = 12295;
            e.ideographmetalcircle = 12942;
            e.ideographmooncircle = 12938;
            e.ideographnamecircle = 12948;
            e.ideographsuncircle = 12944;
            e.ideographwatercircle = 12940;
            e.ideographwoodcircle = 12941;
            e.ideva = 2311;
            e.idieresis = 239;
            e.idieresisacute = 7727;
            e.idieresiscyrillic = 1253;
            e.idotbelow = 7883;
            e.iebrevecyrillic = 1239;
            e.iecyrillic = 1077;
            e.ieungacirclekorean = 12917;
            e.ieungaparenkorean = 12821;
            e.ieungcirclekorean = 12903;
            e.ieungkorean = 12615;
            e.ieungparenkorean = 12807;
            e.igrave = 236;
            e.igujarati = 2695;
            e.igurmukhi = 2567;
            e.ihiragana = 12356;
            e.ihookabove = 7881;
            e.iibengali = 2440;
            e.iicyrillic = 1080;
            e.iideva = 2312;
            e.iigujarati = 2696;
            e.iigurmukhi = 2568;
            e.iimatragurmukhi = 2624;
            e.iinvertedbreve = 523;
            e.iishortcyrillic = 1081;
            e.iivowelsignbengali = 2496;
            e.iivowelsigndeva = 2368;
            e.iivowelsigngujarati = 2752;
            e.ij = 307;
            e.ikatakana = 12452;
            e.ikatakanahalfwidth = 65394;
            e.ikorean = 12643;
            e.ilde = 732;
            e.iluyhebrew = 1452;
            e.imacron = 299;
            e.imacroncyrillic = 1251;
            e.imageorapproximatelyequal = 8787;
            e.imatragurmukhi = 2623;
            e.imonospace = 65353;
            e.increment = 8710;
            e.infinity = 8734;
            e.iniarmenian = 1387;
            e.integral = 8747;
            e.integralbottom = 8993;
            e.integralbt = 8993;
            e.integralex = 63733;
            e.integraltop = 8992;
            e.integraltp = 8992;
            e.intersection = 8745;
            e.intisquare = 13061;
            e.invbullet = 9688;
            e.invcircle = 9689;
            e.invsmileface = 9787;
            e.iocyrillic = 1105;
            e.iogonek = 303;
            e.iota = 953;
            e.iotadieresis = 970;
            e.iotadieresistonos = 912;
            e.iotalatin = 617;
            e.iotatonos = 943;
            e.iparen = 9380;
            e.irigurmukhi = 2674;
            e.ismallhiragana = 12355;
            e.ismallkatakana = 12451;
            e.ismallkatakanahalfwidth = 65384;
            e.issharbengali = 2554;
            e.istroke = 616;
            e.isuperior = 63213;
            e.iterationhiragana = 12445;
            e.iterationkatakana = 12541;
            e.itilde = 297;
            e.itildebelow = 7725;
            e.iubopomofo = 12585;
            e.iucyrillic = 1102;
            e.ivowelsignbengali = 2495;
            e.ivowelsigndeva = 2367;
            e.ivowelsigngujarati = 2751;
            e.izhitsacyrillic = 1141;
            e.izhitsadblgravecyrillic = 1143;
            e.j = 106;
            e.jaarmenian = 1393;
            e.jabengali = 2460;
            e.jadeva = 2332;
            e.jagujarati = 2716;
            e.jagurmukhi = 2588;
            e.jbopomofo = 12560;
            e.jcaron = 496;
            e.jcircle = 9433;
            e.jcircumflex = 309;
            e.jcrossedtail = 669;
            e.jdotlessstroke = 607;
            e.jecyrillic = 1112;
            e.jeemarabic = 1580;
            e.jeemfinalarabic = 65182;
            e.jeeminitialarabic = 65183;
            e.jeemmedialarabic = 65184;
            e.jeharabic = 1688;
            e.jehfinalarabic = 64395;
            e.jhabengali = 2461;
            e.jhadeva = 2333;
            e.jhagujarati = 2717;
            e.jhagurmukhi = 2589;
            e.jheharmenian = 1403;
            e.jis = 12292;
            e.jmonospace = 65354;
            e.jparen = 9381;
            e.jsuperior = 690;
            e.k = 107;
            e.kabashkircyrillic = 1185;
            e.kabengali = 2453;
            e.kacute = 7729;
            e.kacyrillic = 1082;
            e.kadescendercyrillic = 1179;
            e.kadeva = 2325;
            e.kaf = 1499;
            e.kafarabic = 1603;
            e.kafdagesh = 64315;
            e.kafdageshhebrew = 64315;
            e.kaffinalarabic = 65242;
            e.kafhebrew = 1499;
            e.kafinitialarabic = 65243;
            e.kafmedialarabic = 65244;
            e.kafrafehebrew = 64333;
            e.kagujarati = 2709;
            e.kagurmukhi = 2581;
            e.kahiragana = 12363;
            e.kahookcyrillic = 1220;
            e.kakatakana = 12459;
            e.kakatakanahalfwidth = 65398;
            e.kappa = 954;
            e.kappasymbolgreek = 1008;
            e.kapyeounmieumkorean = 12657;
            e.kapyeounphieuphkorean = 12676;
            e.kapyeounpieupkorean = 12664;
            e.kapyeounssangpieupkorean = 12665;
            e.karoriisquare = 13069;
            e.kashidaautoarabic = 1600;
            e.kashidaautonosidebearingarabic = 1600;
            e.kasmallkatakana = 12533;
            e.kasquare = 13188;
            e.kasraarabic = 1616;
            e.kasratanarabic = 1613;
            e.kastrokecyrillic = 1183;
            e.katahiraprolongmarkhalfwidth = 65392;
            e.kaverticalstrokecyrillic = 1181;
            e.kbopomofo = 12558;
            e.kcalsquare = 13193;
            e.kcaron = 489;
            e.kcedilla = 311;
            e.kcircle = 9434;
            e.kcommaaccent = 311;
            e.kdotbelow = 7731;
            e.keharmenian = 1412;
            e.kehiragana = 12369;
            e.kekatakana = 12465;
            e.kekatakanahalfwidth = 65401;
            e.kenarmenian = 1391;
            e.kesmallkatakana = 12534;
            e.kgreenlandic = 312;
            e.khabengali = 2454;
            e.khacyrillic = 1093;
            e.khadeva = 2326;
            e.khagujarati = 2710;
            e.khagurmukhi = 2582;
            e.khaharabic = 1582;
            e.khahfinalarabic = 65190;
            e.khahinitialarabic = 65191;
            e.khahmedialarabic = 65192;
            e.kheicoptic = 999;
            e.khhadeva = 2393;
            e.khhagurmukhi = 2649;
            e.khieukhacirclekorean = 12920;
            e.khieukhaparenkorean = 12824;
            e.khieukhcirclekorean = 12906;
            e.khieukhkorean = 12619;
            e.khieukhparenkorean = 12810;
            e.khokhaithai = 3586;
            e.khokhonthai = 3589;
            e.khokhuatthai = 3587;
            e.khokhwaithai = 3588;
            e.khomutthai = 3675;
            e.khook = 409;
            e.khorakhangthai = 3590;
            e.khzsquare = 13201;
            e.kihiragana = 12365;
            e.kikatakana = 12461;
            e.kikatakanahalfwidth = 65399;
            e.kiroguramusquare = 13077;
            e.kiromeetorusquare = 13078;
            e.kirosquare = 13076;
            e.kiyeokacirclekorean = 12910;
            e.kiyeokaparenkorean = 12814;
            e.kiyeokcirclekorean = 12896;
            e.kiyeokkorean = 12593;
            e.kiyeokparenkorean = 12800;
            e.kiyeoksioskorean = 12595;
            e.kjecyrillic = 1116;
            e.klinebelow = 7733;
            e.klsquare = 13208;
            e.kmcubedsquare = 13222;
            e.kmonospace = 65355;
            e.kmsquaredsquare = 13218;
            e.kohiragana = 12371;
            e.kohmsquare = 13248;
            e.kokaithai = 3585;
            e.kokatakana = 12467;
            e.kokatakanahalfwidth = 65402;
            e.kooposquare = 13086;
            e.koppacyrillic = 1153;
            e.koreanstandardsymbol = 12927;
            e.koroniscmb = 835;
            e.kparen = 9382;
            e.kpasquare = 13226;
            e.ksicyrillic = 1135;
            e.ktsquare = 13263;
            e.kturned = 670;
            e.kuhiragana = 12367;
            e.kukatakana = 12463;
            e.kukatakanahalfwidth = 65400;
            e.kvsquare = 13240;
            e.kwsquare = 13246;
            e.l = 108;
            e.labengali = 2482;
            e.lacute = 314;
            e.ladeva = 2354;
            e.lagujarati = 2738;
            e.lagurmukhi = 2610;
            e.lakkhangyaothai = 3653;
            e.lamaleffinalarabic = 65276;
            e.lamalefhamzaabovefinalarabic = 65272;
            e.lamalefhamzaaboveisolatedarabic = 65271;
            e.lamalefhamzabelowfinalarabic = 65274;
            e.lamalefhamzabelowisolatedarabic = 65273;
            e.lamalefisolatedarabic = 65275;
            e.lamalefmaddaabovefinalarabic = 65270;
            e.lamalefmaddaaboveisolatedarabic = 65269;
            e.lamarabic = 1604;
            e.lambda = 955;
            e.lambdastroke = 411;
            e.lamed = 1500;
            e.lameddagesh = 64316;
            e.lameddageshhebrew = 64316;
            e.lamedhebrew = 1500;
            e.lamfinalarabic = 65246;
            e.lamhahinitialarabic = 64714;
            e.laminitialarabic = 65247;
            e.lamjeeminitialarabic = 64713;
            e.lamkhahinitialarabic = 64715;
            e.lamlamhehisolatedarabic = 65010;
            e.lammedialarabic = 65248;
            e.lammeemhahinitialarabic = 64904;
            e.lammeeminitialarabic = 64716;
            e.largecircle = 9711;
            e.lbar = 410;
            e.lbelt = 620;
            e.lbopomofo = 12556;
            e.lcaron = 318;
            e.lcedilla = 316;
            e.lcircle = 9435;
            e.lcircumflexbelow = 7741;
            e.lcommaaccent = 316;
            e.ldot = 320;
            e.ldotaccent = 320;
            e.ldotbelow = 7735;
            e.ldotbelowmacron = 7737;
            e.leftangleabovecmb = 794;
            e.lefttackbelowcmb = 792;
            e.less = 60;
            e.lessequal = 8804;
            e.lessequalorgreater = 8922;
            e.lessmonospace = 65308;
            e.lessorequivalent = 8818;
            e.lessorgreater = 8822;
            e.lessoverequal = 8806;
            e.lesssmall = 65124;
            e.lezh = 622;
            e.lfblock = 9612;
            e.lhookretroflex = 621;
            e.lira = 8356;
            e.liwnarmenian = 1388;
            e.lj = 457;
            e.ljecyrillic = 1113;
            e.ll = 63168;
            e.lladeva = 2355;
            e.llagujarati = 2739;
            e.llinebelow = 7739;
            e.llladeva = 2356;
            e.llvocalicbengali = 2529;
            e.llvocalicdeva = 2401;
            e.llvocalicvowelsignbengali = 2531;
            e.llvocalicvowelsigndeva = 2403;
            e.lmiddletilde = 619;
            e.lmonospace = 65356;
            e.lmsquare = 13264;
            e.lochulathai = 3628;
            e.logicaland = 8743;
            e.logicalnot = 172;
            e.logicalnotreversed = 8976;
            e.logicalor = 8744;
            e.lolingthai = 3621;
            e.longs = 383;
            e.lowlinecenterline = 65102;
            e.lowlinecmb = 818;
            e.lowlinedashed = 65101;
            e.lozenge = 9674;
            e.lparen = 9383;
            e.lslash = 322;
            e.lsquare = 8467;
            e.lsuperior = 63214;
            e.ltshade = 9617;
            e.luthai = 3622;
            e.lvocalicbengali = 2444;
            e.lvocalicdeva = 2316;
            e.lvocalicvowelsignbengali = 2530;
            e.lvocalicvowelsigndeva = 2402;
            e.lxsquare = 13267;
            e.m = 109;
            e.mabengali = 2478;
            e.macron = 175;
            e.macronbelowcmb = 817;
            e.macroncmb = 772;
            e.macronlowmod = 717;
            e.macronmonospace = 65507;
            e.macute = 7743;
            e.madeva = 2350;
            e.magujarati = 2734;
            e.magurmukhi = 2606;
            e.mahapakhhebrew = 1444;
            e.mahapakhlefthebrew = 1444;
            e.mahiragana = 12414;
            e.maichattawalowleftthai = 63637;
            e.maichattawalowrightthai = 63636;
            e.maichattawathai = 3659;
            e.maichattawaupperleftthai = 63635;
            e.maieklowleftthai = 63628;
            e.maieklowrightthai = 63627;
            e.maiekthai = 3656;
            e.maiekupperleftthai = 63626;
            e.maihanakatleftthai = 63620;
            e.maihanakatthai = 3633;
            e.maitaikhuleftthai = 63625;
            e.maitaikhuthai = 3655;
            e.maitholowleftthai = 63631;
            e.maitholowrightthai = 63630;
            e.maithothai = 3657;
            e.maithoupperleftthai = 63629;
            e.maitrilowleftthai = 63634;
            e.maitrilowrightthai = 63633;
            e.maitrithai = 3658;
            e.maitriupperleftthai = 63632;
            e.maiyamokthai = 3654;
            e.makatakana = 12510;
            e.makatakanahalfwidth = 65423;
            e.male = 9794;
            e.mansyonsquare = 13127;
            e.maqafhebrew = 1470;
            e.mars = 9794;
            e.masoracirclehebrew = 1455;
            e.masquare = 13187;
            e.mbopomofo = 12551;
            e.mbsquare = 13268;
            e.mcircle = 9436;
            e.mcubedsquare = 13221;
            e.mdotaccent = 7745;
            e.mdotbelow = 7747;
            e.meemarabic = 1605;
            e.meemfinalarabic = 65250;
            e.meeminitialarabic = 65251;
            e.meemmedialarabic = 65252;
            e.meemmeeminitialarabic = 64721;
            e.meemmeemisolatedarabic = 64584;
            e.meetorusquare = 13133;
            e.mehiragana = 12417;
            e.meizierasquare = 13182;
            e.mekatakana = 12513;
            e.mekatakanahalfwidth = 65426;
            e.mem = 1502;
            e.memdagesh = 64318;
            e.memdageshhebrew = 64318;
            e.memhebrew = 1502;
            e.menarmenian = 1396;
            e.merkhahebrew = 1445;
            e.merkhakefulahebrew = 1446;
            e.merkhakefulalefthebrew = 1446;
            e.merkhalefthebrew = 1445;
            e.mhook = 625;
            e.mhzsquare = 13202;
            e.middledotkatakanahalfwidth = 65381;
            e.middot = 183;
            e.mieumacirclekorean = 12914;
            e.mieumaparenkorean = 12818;
            e.mieumcirclekorean = 12900;
            e.mieumkorean = 12609;
            e.mieumpansioskorean = 12656;
            e.mieumparenkorean = 12804;
            e.mieumpieupkorean = 12654;
            e.mieumsioskorean = 12655;
            e.mihiragana = 12415;
            e.mikatakana = 12511;
            e.mikatakanahalfwidth = 65424;
            e.minus = 8722;
            e.minusbelowcmb = 800;
            e.minuscircle = 8854;
            e.minusmod = 727;
            e.minusplus = 8723;
            e.minute = 8242;
            e.miribaarusquare = 13130;
            e.mirisquare = 13129;
            e.mlonglegturned = 624;
            e.mlsquare = 13206;
            e.mmcubedsquare = 13219;
            e.mmonospace = 65357;
            e.mmsquaredsquare = 13215;
            e.mohiragana = 12418;
            e.mohmsquare = 13249;
            e.mokatakana = 12514;
            e.mokatakanahalfwidth = 65427;
            e.molsquare = 13270;
            e.momathai = 3617;
            e.moverssquare = 13223;
            e.moverssquaredsquare = 13224;
            e.mparen = 9384;
            e.mpasquare = 13227;
            e.mssquare = 13235;
            e.msuperior = 63215;
            e.mturned = 623;
            e.mu = 181;
            e.mu1 = 181;
            e.muasquare = 13186;
            e.muchgreater = 8811;
            e.muchless = 8810;
            e.mufsquare = 13196;
            e.mugreek = 956;
            e.mugsquare = 13197;
            e.muhiragana = 12416;
            e.mukatakana = 12512;
            e.mukatakanahalfwidth = 65425;
            e.mulsquare = 13205;
            e.multiply = 215;
            e.mumsquare = 13211;
            e.munahhebrew = 1443;
            e.munahlefthebrew = 1443;
            e.musicalnote = 9834;
            e.musicalnotedbl = 9835;
            e.musicflatsign = 9837;
            e.musicsharpsign = 9839;
            e.mussquare = 13234;
            e.muvsquare = 13238;
            e.muwsquare = 13244;
            e.mvmegasquare = 13241;
            e.mvsquare = 13239;
            e.mwmegasquare = 13247;
            e.mwsquare = 13245;
            e.n = 110;
            e.nabengali = 2472;
            e.nabla = 8711;
            e.nacute = 324;
            e.nadeva = 2344;
            e.nagujarati = 2728;
            e.nagurmukhi = 2600;
            e.nahiragana = 12394;
            e.nakatakana = 12490;
            e.nakatakanahalfwidth = 65413;
            e.napostrophe = 329;
            e.nasquare = 13185;
            e.nbopomofo = 12555;
            e.nbspace = 160;
            e.ncaron = 328;
            e.ncedilla = 326;
            e.ncircle = 9437;
            e.ncircumflexbelow = 7755;
            e.ncommaaccent = 326;
            e.ndotaccent = 7749;
            e.ndotbelow = 7751;
            e.nehiragana = 12397;
            e.nekatakana = 12493;
            e.nekatakanahalfwidth = 65416;
            e.newsheqelsign = 8362;
            e.nfsquare = 13195;
            e.ngabengali = 2457;
            e.ngadeva = 2329;
            e.ngagujarati = 2713;
            e.ngagurmukhi = 2585;
            e.ngonguthai = 3591;
            e.nhiragana = 12435;
            e.nhookleft = 626;
            e.nhookretroflex = 627;
            e.nieunacirclekorean = 12911;
            e.nieunaparenkorean = 12815;
            e.nieuncieuckorean = 12597;
            e.nieuncirclekorean = 12897;
            e.nieunhieuhkorean = 12598;
            e.nieunkorean = 12596;
            e.nieunpansioskorean = 12648;
            e.nieunparenkorean = 12801;
            e.nieunsioskorean = 12647;
            e.nieuntikeutkorean = 12646;
            e.nihiragana = 12395;
            e.nikatakana = 12491;
            e.nikatakanahalfwidth = 65414;
            e.nikhahitleftthai = 63641;
            e.nikhahitthai = 3661;
            e.nine = 57;
            e.ninearabic = 1641;
            e.ninebengali = 2543;
            e.ninecircle = 9320;
            e.ninecircleinversesansserif = 10130;
            e.ninedeva = 2415;
            e.ninegujarati = 2799;
            e.ninegurmukhi = 2671;
            e.ninehackarabic = 1641;
            e.ninehangzhou = 12329;
            e.nineideographicparen = 12840;
            e.nineinferior = 8329;
            e.ninemonospace = 65305;
            e.nineoldstyle = 63289;
            e.nineparen = 9340;
            e.nineperiod = 9360;
            e.ninepersian = 1785;
            e.nineroman = 8568;
            e.ninesuperior = 8313;
            e.nineteencircle = 9330;
            e.nineteenparen = 9350;
            e.nineteenperiod = 9370;
            e.ninethai = 3673;
            e.nj = 460;
            e.njecyrillic = 1114;
            e.nkatakana = 12531;
            e.nkatakanahalfwidth = 65437;
            e.nlegrightlong = 414;
            e.nlinebelow = 7753;
            e.nmonospace = 65358;
            e.nmsquare = 13210;
            e.nnabengali = 2467;
            e.nnadeva = 2339;
            e.nnagujarati = 2723;
            e.nnagurmukhi = 2595;
            e.nnnadeva = 2345;
            e.nohiragana = 12398;
            e.nokatakana = 12494;
            e.nokatakanahalfwidth = 65417;
            e.nonbreakingspace = 160;
            e.nonenthai = 3603;
            e.nonuthai = 3609;
            e.noonarabic = 1606;
            e.noonfinalarabic = 65254;
            e.noonghunnaarabic = 1722;
            e.noonghunnafinalarabic = 64415;
            e.nooninitialarabic = 65255;
            e.noonjeeminitialarabic = 64722;
            e.noonjeemisolatedarabic = 64587;
            e.noonmedialarabic = 65256;
            e.noonmeeminitialarabic = 64725;
            e.noonmeemisolatedarabic = 64590;
            e.noonnoonfinalarabic = 64653;
            e.notcontains = 8716;
            e.notelement = 8713;
            e.notelementof = 8713;
            e.notequal = 8800;
            e.notgreater = 8815;
            e.notgreaternorequal = 8817;
            e.notgreaternorless = 8825;
            e.notidentical = 8802;
            e.notless = 8814;
            e.notlessnorequal = 8816;
            e.notparallel = 8742;
            e.notprecedes = 8832;
            e.notsubset = 8836;
            e.notsucceeds = 8833;
            e.notsuperset = 8837;
            e.nowarmenian = 1398;
            e.nparen = 9385;
            e.nssquare = 13233;
            e.nsuperior = 8319;
            e.ntilde = 241;
            e.nu = 957;
            e.nuhiragana = 12396;
            e.nukatakana = 12492;
            e.nukatakanahalfwidth = 65415;
            e.nuktabengali = 2492;
            e.nuktadeva = 2364;
            e.nuktagujarati = 2748;
            e.nuktagurmukhi = 2620;
            e.numbersign = 35;
            e.numbersignmonospace = 65283;
            e.numbersignsmall = 65119;
            e.numeralsigngreek = 884;
            e.numeralsignlowergreek = 885;
            e.numero = 8470;
            e.nun = 1504;
            e.nundagesh = 64320;
            e.nundageshhebrew = 64320;
            e.nunhebrew = 1504;
            e.nvsquare = 13237;
            e.nwsquare = 13243;
            e.nyabengali = 2462;
            e.nyadeva = 2334;
            e.nyagujarati = 2718;
            e.nyagurmukhi = 2590;
            e.o = 111;
            e.oacute = 243;
            e.oangthai = 3629;
            e.obarred = 629;
            e.obarredcyrillic = 1257;
            e.obarreddieresiscyrillic = 1259;
            e.obengali = 2451;
            e.obopomofo = 12571;
            e.obreve = 335;
            e.ocandradeva = 2321;
            e.ocandragujarati = 2705;
            e.ocandravowelsigndeva = 2377;
            e.ocandravowelsigngujarati = 2761;
            e.ocaron = 466;
            e.ocircle = 9438;
            e.ocircumflex = 244;
            e.ocircumflexacute = 7889;
            e.ocircumflexdotbelow = 7897;
            e.ocircumflexgrave = 7891;
            e.ocircumflexhookabove = 7893;
            e.ocircumflextilde = 7895;
            e.ocyrillic = 1086;
            e.odblacute = 337;
            e.odblgrave = 525;
            e.odeva = 2323;
            e.odieresis = 246;
            e.odieresiscyrillic = 1255;
            e.odotbelow = 7885;
            e.oe = 339;
            e.oekorean = 12634;
            e.ogonek = 731;
            e.ogonekcmb = 808;
            e.ograve = 242;
            e.ogujarati = 2707;
            e.oharmenian = 1413;
            e.ohiragana = 12362;
            e.ohookabove = 7887;
            e.ohorn = 417;
            e.ohornacute = 7899;
            e.ohorndotbelow = 7907;
            e.ohorngrave = 7901;
            e.ohornhookabove = 7903;
            e.ohorntilde = 7905;
            e.ohungarumlaut = 337;
            e.oi = 419;
            e.oinvertedbreve = 527;
            e.okatakana = 12458;
            e.okatakanahalfwidth = 65397;
            e.okorean = 12631;
            e.olehebrew = 1451;
            e.omacron = 333;
            e.omacronacute = 7763;
            e.omacrongrave = 7761;
            e.omdeva = 2384;
            e.omega = 969;
            e.omega1 = 982;
            e.omegacyrillic = 1121;
            e.omegalatinclosed = 631;
            e.omegaroundcyrillic = 1147;
            e.omegatitlocyrillic = 1149;
            e.omegatonos = 974;
            e.omgujarati = 2768;
            e.omicron = 959;
            e.omicrontonos = 972;
            e.omonospace = 65359;
            e.one = 49;
            e.onearabic = 1633;
            e.onebengali = 2535;
            e.onecircle = 9312;
            e.onecircleinversesansserif = 10122;
            e.onedeva = 2407;
            e.onedotenleader = 8228;
            e.oneeighth = 8539;
            e.onefitted = 63196;
            e.onegujarati = 2791;
            e.onegurmukhi = 2663;
            e.onehackarabic = 1633;
            e.onehalf = 189;
            e.onehangzhou = 12321;
            e.oneideographicparen = 12832;
            e.oneinferior = 8321;
            e.onemonospace = 65297;
            e.onenumeratorbengali = 2548;
            e.oneoldstyle = 63281;
            e.oneparen = 9332;
            e.oneperiod = 9352;
            e.onepersian = 1777;
            e.onequarter = 188;
            e.oneroman = 8560;
            e.onesuperior = 185;
            e.onethai = 3665;
            e.onethird = 8531;
            e.oogonek = 491;
            e.oogonekmacron = 493;
            e.oogurmukhi = 2579;
            e.oomatragurmukhi = 2635;
            e.oopen = 596;
            e.oparen = 9386;
            e.openbullet = 9702;
            e.option = 8997;
            e.ordfeminine = 170;
            e.ordmasculine = 186;
            e.orthogonal = 8735;
            e.oshortdeva = 2322;
            e.oshortvowelsigndeva = 2378;
            e.oslash = 248;
            e.oslashacute = 511;
            e.osmallhiragana = 12361;
            e.osmallkatakana = 12457;
            e.osmallkatakanahalfwidth = 65387;
            e.ostrokeacute = 511;
            e.osuperior = 63216;
            e.otcyrillic = 1151;
            e.otilde = 245;
            e.otildeacute = 7757;
            e.otildedieresis = 7759;
            e.oubopomofo = 12577;
            e.overline = 8254;
            e.overlinecenterline = 65098;
            e.overlinecmb = 773;
            e.overlinedashed = 65097;
            e.overlinedblwavy = 65100;
            e.overlinewavy = 65099;
            e.overscore = 175;
            e.ovowelsignbengali = 2507;
            e.ovowelsigndeva = 2379;
            e.ovowelsigngujarati = 2763;
            e.p = 112;
            e.paampssquare = 13184;
            e.paasentosquare = 13099;
            e.pabengali = 2474;
            e.pacute = 7765;
            e.padeva = 2346;
            e.pagedown = 8671;
            e.pageup = 8670;
            e.pagujarati = 2730;
            e.pagurmukhi = 2602;
            e.pahiragana = 12401;
            e.paiyannoithai = 3631;
            e.pakatakana = 12497;
            e.palatalizationcyrilliccmb = 1156;
            e.palochkacyrillic = 1216;
            e.pansioskorean = 12671;
            e.paragraph = 182;
            e.parallel = 8741;
            e.parenleft = 40;
            e.parenleftaltonearabic = 64830;
            e.parenleftbt = 63725;
            e.parenleftex = 63724;
            e.parenleftinferior = 8333;
            e.parenleftmonospace = 65288;
            e.parenleftsmall = 65113;
            e.parenleftsuperior = 8317;
            e.parenlefttp = 63723;
            e.parenleftvertical = 65077;
            e.parenright = 41;
            e.parenrightaltonearabic = 64831;
            e.parenrightbt = 63736;
            e.parenrightex = 63735;
            e.parenrightinferior = 8334;
            e.parenrightmonospace = 65289;
            e.parenrightsmall = 65114;
            e.parenrightsuperior = 8318;
            e.parenrighttp = 63734;
            e.parenrightvertical = 65078;
            e.partialdiff = 8706;
            e.paseqhebrew = 1472;
            e.pashtahebrew = 1433;
            e.pasquare = 13225;
            e.patah = 1463;
            e.patah11 = 1463;
            e.patah1d = 1463;
            e.patah2a = 1463;
            e.patahhebrew = 1463;
            e.patahnarrowhebrew = 1463;
            e.patahquarterhebrew = 1463;
            e.patahwidehebrew = 1463;
            e.pazerhebrew = 1441;
            e.pbopomofo = 12550;
            e.pcircle = 9439;
            e.pdotaccent = 7767;
            e.pe = 1508;
            e.pecyrillic = 1087;
            e.pedagesh = 64324;
            e.pedageshhebrew = 64324;
            e.peezisquare = 13115;
            e.pefinaldageshhebrew = 64323;
            e.peharabic = 1662;
            e.peharmenian = 1402;
            e.pehebrew = 1508;
            e.pehfinalarabic = 64343;
            e.pehinitialarabic = 64344;
            e.pehiragana = 12410;
            e.pehmedialarabic = 64345;
            e.pekatakana = 12506;
            e.pemiddlehookcyrillic = 1191;
            e.perafehebrew = 64334;
            e.percent = 37;
            e.percentarabic = 1642;
            e.percentmonospace = 65285;
            e.percentsmall = 65130;
            e.period = 46;
            e.periodarmenian = 1417;
            e.periodcentered = 183;
            e.periodhalfwidth = 65377;
            e.periodinferior = 63207;
            e.periodmonospace = 65294;
            e.periodsmall = 65106;
            e.periodsuperior = 63208;
            e.perispomenigreekcmb = 834;
            e.perpendicular = 8869;
            e.perthousand = 8240;
            e.peseta = 8359;
            e.pfsquare = 13194;
            e.phabengali = 2475;
            e.phadeva = 2347;
            e.phagujarati = 2731;
            e.phagurmukhi = 2603;
            e.phi = 966;
            e.phi1 = 981;
            e.phieuphacirclekorean = 12922;
            e.phieuphaparenkorean = 12826;
            e.phieuphcirclekorean = 12908;
            e.phieuphkorean = 12621;
            e.phieuphparenkorean = 12812;
            e.philatin = 632;
            e.phinthuthai = 3642;
            e.phisymbolgreek = 981;
            e.phook = 421;
            e.phophanthai = 3614;
            e.phophungthai = 3612;
            e.phosamphaothai = 3616;
            e.pi = 960;
            e.pieupacirclekorean = 12915;
            e.pieupaparenkorean = 12819;
            e.pieupcieuckorean = 12662;
            e.pieupcirclekorean = 12901;
            e.pieupkiyeokkorean = 12658;
            e.pieupkorean = 12610;
            e.pieupparenkorean = 12805;
            e.pieupsioskiyeokkorean = 12660;
            e.pieupsioskorean = 12612;
            e.pieupsiostikeutkorean = 12661;
            e.pieupthieuthkorean = 12663;
            e.pieuptikeutkorean = 12659;
            e.pihiragana = 12404;
            e.pikatakana = 12500;
            e.pisymbolgreek = 982;
            e.piwrarmenian = 1411;
            e.plus = 43;
            e.plusbelowcmb = 799;
            e.pluscircle = 8853;
            e.plusminus = 177;
            e.plusmod = 726;
            e.plusmonospace = 65291;
            e.plussmall = 65122;
            e.plussuperior = 8314;
            e.pmonospace = 65360;
            e.pmsquare = 13272;
            e.pohiragana = 12413;
            e.pointingindexdownwhite = 9759;
            e.pointingindexleftwhite = 9756;
            e.pointingindexrightwhite = 9758;
            e.pointingindexupwhite = 9757;
            e.pokatakana = 12509;
            e.poplathai = 3611;
            e.postalmark = 12306;
            e.postalmarkface = 12320;
            e.pparen = 9387;
            e.precedes = 8826;
            e.prescription = 8478;
            e.primemod = 697;
            e.primereversed = 8245;
            e.product = 8719;
            e.projective = 8965;
            e.prolongedkana = 12540;
            e.propellor = 8984;
            e.propersubset = 8834;
            e.propersuperset = 8835;
            e.proportion = 8759;
            e.proportional = 8733;
            e.psi = 968;
            e.psicyrillic = 1137;
            e.psilipneumatacyrilliccmb = 1158;
            e.pssquare = 13232;
            e.puhiragana = 12407;
            e.pukatakana = 12503;
            e.pvsquare = 13236;
            e.pwsquare = 13242;
            e.q = 113;
            e.qadeva = 2392;
            e.qadmahebrew = 1448;
            e.qafarabic = 1602;
            e.qaffinalarabic = 65238;
            e.qafinitialarabic = 65239;
            e.qafmedialarabic = 65240;
            e.qamats = 1464;
            e.qamats10 = 1464;
            e.qamats1a = 1464;
            e.qamats1c = 1464;
            e.qamats27 = 1464;
            e.qamats29 = 1464;
            e.qamats33 = 1464;
            e.qamatsde = 1464;
            e.qamatshebrew = 1464;
            e.qamatsnarrowhebrew = 1464;
            e.qamatsqatanhebrew = 1464;
            e.qamatsqatannarrowhebrew = 1464;
            e.qamatsqatanquarterhebrew = 1464;
            e.qamatsqatanwidehebrew = 1464;
            e.qamatsquarterhebrew = 1464;
            e.qamatswidehebrew = 1464;
            e.qarneyparahebrew = 1439;
            e.qbopomofo = 12561;
            e.qcircle = 9440;
            e.qhook = 672;
            e.qmonospace = 65361;
            e.qof = 1511;
            e.qofdagesh = 64327;
            e.qofdageshhebrew = 64327;
            e.qofhebrew = 1511;
            e.qparen = 9388;
            e.quarternote = 9833;
            e.qubuts = 1467;
            e.qubuts18 = 1467;
            e.qubuts25 = 1467;
            e.qubuts31 = 1467;
            e.qubutshebrew = 1467;
            e.qubutsnarrowhebrew = 1467;
            e.qubutsquarterhebrew = 1467;
            e.qubutswidehebrew = 1467;
            e.question = 63;
            e.questionarabic = 1567;
            e.questionarmenian = 1374;
            e.questiondown = 191;
            e.questiondownsmall = 63423;
            e.questiongreek = 894;
            e.questionmonospace = 65311;
            e.questionsmall = 63295;
            e.quotedbl = 34;
            e.quotedblbase = 8222;
            e.quotedblleft = 8220;
            e.quotedblmonospace = 65282;
            e.quotedblprime = 12318;
            e.quotedblprimereversed = 12317;
            e.quotedblright = 8221;
            e.quoteleft = 8216;
            e.quoteleftreversed = 8219;
            e.quotereversed = 8219;
            e.quoteright = 8217;
            e.quoterightn = 329;
            e.quotesinglbase = 8218;
            e.quotesingle = 39;
            e.quotesinglemonospace = 65287;
            e.r = 114;
            e.raarmenian = 1404;
            e.rabengali = 2480;
            e.racute = 341;
            e.radeva = 2352;
            e.radical = 8730;
            e.radicalex = 63717;
            e.radoverssquare = 13230;
            e.radoverssquaredsquare = 13231;
            e.radsquare = 13229;
            e.rafe = 1471;
            e.rafehebrew = 1471;
            e.ragujarati = 2736;
            e.ragurmukhi = 2608;
            e.rahiragana = 12425;
            e.rakatakana = 12521;
            e.rakatakanahalfwidth = 65431;
            e.ralowerdiagonalbengali = 2545;
            e.ramiddlediagonalbengali = 2544;
            e.ramshorn = 612;
            e.ratio = 8758;
            e.rbopomofo = 12566;
            e.rcaron = 345;
            e.rcedilla = 343;
            e.rcircle = 9441;
            e.rcommaaccent = 343;
            e.rdblgrave = 529;
            e.rdotaccent = 7769;
            e.rdotbelow = 7771;
            e.rdotbelowmacron = 7773;
            e.referencemark = 8251;
            e.reflexsubset = 8838;
            e.reflexsuperset = 8839;
            e.registered = 174;
            e.registersans = 63720;
            e.registerserif = 63194;
            e.reharabic = 1585;
            e.reharmenian = 1408;
            e.rehfinalarabic = 65198;
            e.rehiragana = 12428;
            e.rekatakana = 12524;
            e.rekatakanahalfwidth = 65434;
            e.resh = 1512;
            e.reshdageshhebrew = 64328;
            e.reshhebrew = 1512;
            e.reversedtilde = 8765;
            e.reviahebrew = 1431;
            e.reviamugrashhebrew = 1431;
            e.revlogicalnot = 8976;
            e.rfishhook = 638;
            e.rfishhookreversed = 639;
            e.rhabengali = 2525;
            e.rhadeva = 2397;
            e.rho = 961;
            e.rhook = 637;
            e.rhookturned = 635;
            e.rhookturnedsuperior = 693;
            e.rhosymbolgreek = 1009;
            e.rhotichookmod = 734;
            e.rieulacirclekorean = 12913;
            e.rieulaparenkorean = 12817;
            e.rieulcirclekorean = 12899;
            e.rieulhieuhkorean = 12608;
            e.rieulkiyeokkorean = 12602;
            e.rieulkiyeoksioskorean = 12649;
            e.rieulkorean = 12601;
            e.rieulmieumkorean = 12603;
            e.rieulpansioskorean = 12652;
            e.rieulparenkorean = 12803;
            e.rieulphieuphkorean = 12607;
            e.rieulpieupkorean = 12604;
            e.rieulpieupsioskorean = 12651;
            e.rieulsioskorean = 12605;
            e.rieulthieuthkorean = 12606;
            e.rieultikeutkorean = 12650;
            e.rieulyeorinhieuhkorean = 12653;
            e.rightangle = 8735;
            e.righttackbelowcmb = 793;
            e.righttriangle = 8895;
            e.rihiragana = 12426;
            e.rikatakana = 12522;
            e.rikatakanahalfwidth = 65432;
            e.ring = 730;
            e.ringbelowcmb = 805;
            e.ringcmb = 778;
            e.ringhalfleft = 703;
            e.ringhalfleftarmenian = 1369;
            e.ringhalfleftbelowcmb = 796;
            e.ringhalfleftcentered = 723;
            e.ringhalfright = 702;
            e.ringhalfrightbelowcmb = 825;
            e.ringhalfrightcentered = 722;
            e.rinvertedbreve = 531;
            e.rittorusquare = 13137;
            e.rlinebelow = 7775;
            e.rlongleg = 636;
            e.rlonglegturned = 634;
            e.rmonospace = 65362;
            e.rohiragana = 12429;
            e.rokatakana = 12525;
            e.rokatakanahalfwidth = 65435;
            e.roruathai = 3619;
            e.rparen = 9389;
            e.rrabengali = 2524;
            e.rradeva = 2353;
            e.rragurmukhi = 2652;
            e.rreharabic = 1681;
            e.rrehfinalarabic = 64397;
            e.rrvocalicbengali = 2528;
            e.rrvocalicdeva = 2400;
            e.rrvocalicgujarati = 2784;
            e.rrvocalicvowelsignbengali = 2500;
            e.rrvocalicvowelsigndeva = 2372;
            e.rrvocalicvowelsigngujarati = 2756;
            e.rsuperior = 63217;
            e.rtblock = 9616;
            e.rturned = 633;
            e.rturnedsuperior = 692;
            e.ruhiragana = 12427;
            e.rukatakana = 12523;
            e.rukatakanahalfwidth = 65433;
            e.rupeemarkbengali = 2546;
            e.rupeesignbengali = 2547;
            e.rupiah = 63197;
            e.ruthai = 3620;
            e.rvocalicbengali = 2443;
            e.rvocalicdeva = 2315;
            e.rvocalicgujarati = 2699;
            e.rvocalicvowelsignbengali = 2499;
            e.rvocalicvowelsigndeva = 2371;
            e.rvocalicvowelsigngujarati = 2755;
            e.s = 115;
            e.sabengali = 2488;
            e.sacute = 347;
            e.sacutedotaccent = 7781;
            e.sadarabic = 1589;
            e.sadeva = 2360;
            e.sadfinalarabic = 65210;
            e.sadinitialarabic = 65211;
            e.sadmedialarabic = 65212;
            e.sagujarati = 2744;
            e.sagurmukhi = 2616;
            e.sahiragana = 12373;
            e.sakatakana = 12469;
            e.sakatakanahalfwidth = 65403;
            e.sallallahoualayhewasallamarabic = 65018;
            e.samekh = 1505;
            e.samekhdagesh = 64321;
            e.samekhdageshhebrew = 64321;
            e.samekhhebrew = 1505;
            e.saraaathai = 3634;
            e.saraaethai = 3649;
            e.saraaimaimalaithai = 3652;
            e.saraaimaimuanthai = 3651;
            e.saraamthai = 3635;
            e.saraathai = 3632;
            e.saraethai = 3648;
            e.saraiileftthai = 63622;
            e.saraiithai = 3637;
            e.saraileftthai = 63621;
            e.saraithai = 3636;
            e.saraothai = 3650;
            e.saraueeleftthai = 63624;
            e.saraueethai = 3639;
            e.saraueleftthai = 63623;
            e.sarauethai = 3638;
            e.sarauthai = 3640;
            e.sarauuthai = 3641;
            e.sbopomofo = 12569;
            e.scaron = 353;
            e.scarondotaccent = 7783;
            e.scedilla = 351;
            e.schwa = 601;
            e.schwacyrillic = 1241;
            e.schwadieresiscyrillic = 1243;
            e.schwahook = 602;
            e.scircle = 9442;
            e.scircumflex = 349;
            e.scommaaccent = 537;
            e.sdotaccent = 7777;
            e.sdotbelow = 7779;
            e.sdotbelowdotaccent = 7785;
            e.seagullbelowcmb = 828;
            e.second = 8243;
            e.secondtonechinese = 714;
            e.section = 167;
            e.seenarabic = 1587;
            e.seenfinalarabic = 65202;
            e.seeninitialarabic = 65203;
            e.seenmedialarabic = 65204;
            e.segol = 1462;
            e.segol13 = 1462;
            e.segol1f = 1462;
            e.segol2c = 1462;
            e.segolhebrew = 1462;
            e.segolnarrowhebrew = 1462;
            e.segolquarterhebrew = 1462;
            e.segoltahebrew = 1426;
            e.segolwidehebrew = 1462;
            e.seharmenian = 1405;
            e.sehiragana = 12379;
            e.sekatakana = 12475;
            e.sekatakanahalfwidth = 65406;
            e.semicolon = 59;
            e.semicolonarabic = 1563;
            e.semicolonmonospace = 65307;
            e.semicolonsmall = 65108;
            e.semivoicedmarkkana = 12444;
            e.semivoicedmarkkanahalfwidth = 65439;
            e.sentisquare = 13090;
            e.sentosquare = 13091;
            e.seven = 55;
            e.sevenarabic = 1639;
            e.sevenbengali = 2541;
            e.sevencircle = 9318;
            e.sevencircleinversesansserif = 10128;
            e.sevendeva = 2413;
            e.seveneighths = 8542;
            e.sevengujarati = 2797;
            e.sevengurmukhi = 2669;
            e.sevenhackarabic = 1639;
            e.sevenhangzhou = 12327;
            e.sevenideographicparen = 12838;
            e.seveninferior = 8327;
            e.sevenmonospace = 65303;
            e.sevenoldstyle = 63287;
            e.sevenparen = 9338;
            e.sevenperiod = 9358;
            e.sevenpersian = 1783;
            e.sevenroman = 8566;
            e.sevensuperior = 8311;
            e.seventeencircle = 9328;
            e.seventeenparen = 9348;
            e.seventeenperiod = 9368;
            e.seventhai = 3671;
            e.sfthyphen = 173;
            e.shaarmenian = 1399;
            e.shabengali = 2486;
            e.shacyrillic = 1096;
            e.shaddaarabic = 1617;
            e.shaddadammaarabic = 64609;
            e.shaddadammatanarabic = 64606;
            e.shaddafathaarabic = 64608;
            e.shaddakasraarabic = 64610;
            e.shaddakasratanarabic = 64607;
            e.shade = 9618;
            e.shadedark = 9619;
            e.shadelight = 9617;
            e.shademedium = 9618;
            e.shadeva = 2358;
            e.shagujarati = 2742;
            e.shagurmukhi = 2614;
            e.shalshelethebrew = 1427;
            e.shbopomofo = 12565;
            e.shchacyrillic = 1097;
            e.sheenarabic = 1588;
            e.sheenfinalarabic = 65206;
            e.sheeninitialarabic = 65207;
            e.sheenmedialarabic = 65208;
            e.sheicoptic = 995;
            e.sheqel = 8362;
            e.sheqelhebrew = 8362;
            e.sheva = 1456;
            e.sheva115 = 1456;
            e.sheva15 = 1456;
            e.sheva22 = 1456;
            e.sheva2e = 1456;
            e.shevahebrew = 1456;
            e.shevanarrowhebrew = 1456;
            e.shevaquarterhebrew = 1456;
            e.shevawidehebrew = 1456;
            e.shhacyrillic = 1211;
            e.shimacoptic = 1005;
            e.shin = 1513;
            e.shindagesh = 64329;
            e.shindageshhebrew = 64329;
            e.shindageshshindot = 64300;
            e.shindageshshindothebrew = 64300;
            e.shindageshsindot = 64301;
            e.shindageshsindothebrew = 64301;
            e.shindothebrew = 1473;
            e.shinhebrew = 1513;
            e.shinshindot = 64298;
            e.shinshindothebrew = 64298;
            e.shinsindot = 64299;
            e.shinsindothebrew = 64299;
            e.shook = 642;
            e.sigma = 963;
            e.sigma1 = 962;
            e.sigmafinal = 962;
            e.sigmalunatesymbolgreek = 1010;
            e.sihiragana = 12375;
            e.sikatakana = 12471;
            e.sikatakanahalfwidth = 65404;
            e.siluqhebrew = 1469;
            e.siluqlefthebrew = 1469;
            e.similar = 8764;
            e.sindothebrew = 1474;
            e.siosacirclekorean = 12916;
            e.siosaparenkorean = 12820;
            e.sioscieuckorean = 12670;
            e.sioscirclekorean = 12902;
            e.sioskiyeokkorean = 12666;
            e.sioskorean = 12613;
            e.siosnieunkorean = 12667;
            e.siosparenkorean = 12806;
            e.siospieupkorean = 12669;
            e.siostikeutkorean = 12668;
            e.six = 54;
            e.sixarabic = 1638;
            e.sixbengali = 2540;
            e.sixcircle = 9317;
            e.sixcircleinversesansserif = 10127;
            e.sixdeva = 2412;
            e.sixgujarati = 2796;
            e.sixgurmukhi = 2668;
            e.sixhackarabic = 1638;
            e.sixhangzhou = 12326;
            e.sixideographicparen = 12837;
            e.sixinferior = 8326;
            e.sixmonospace = 65302;
            e.sixoldstyle = 63286;
            e.sixparen = 9337;
            e.sixperiod = 9357;
            e.sixpersian = 1782;
            e.sixroman = 8565;
            e.sixsuperior = 8310;
            e.sixteencircle = 9327;
            e.sixteencurrencydenominatorbengali = 2553;
            e.sixteenparen = 9347;
            e.sixteenperiod = 9367;
            e.sixthai = 3670;
            e.slash = 47;
            e.slashmonospace = 65295;
            e.slong = 383;
            e.slongdotaccent = 7835;
            e.smileface = 9786;
            e.smonospace = 65363;
            e.sofpasuqhebrew = 1475;
            e.softhyphen = 173;
            e.softsigncyrillic = 1100;
            e.sohiragana = 12381;
            e.sokatakana = 12477;
            e.sokatakanahalfwidth = 65407;
            e.soliduslongoverlaycmb = 824;
            e.solidusshortoverlaycmb = 823;
            e.sorusithai = 3625;
            e.sosalathai = 3624;
            e.sosothai = 3595;
            e.sosuathai = 3626;
            e.space = 32;
            e.spacehackarabic = 32;
            e.spade = 9824;
            e.spadesuitblack = 9824;
            e.spadesuitwhite = 9828;
            e.sparen = 9390;
            e.squarebelowcmb = 827;
            e.squarecc = 13252;
            e.squarecm = 13213;
            e.squarediagonalcrosshatchfill = 9641;
            e.squarehorizontalfill = 9636;
            e.squarekg = 13199;
            e.squarekm = 13214;
            e.squarekmcapital = 13262;
            e.squareln = 13265;
            e.squarelog = 13266;
            e.squaremg = 13198;
            e.squaremil = 13269;
            e.squaremm = 13212;
            e.squaremsquared = 13217;
            e.squareorthogonalcrosshatchfill = 9638;
            e.squareupperlefttolowerrightfill = 9639;
            e.squareupperrighttolowerleftfill = 9640;
            e.squareverticalfill = 9637;
            e.squarewhitewithsmallblack = 9635;
            e.srsquare = 13275;
            e.ssabengali = 2487;
            e.ssadeva = 2359;
            e.ssagujarati = 2743;
            e.ssangcieuckorean = 12617;
            e.ssanghieuhkorean = 12677;
            e.ssangieungkorean = 12672;
            e.ssangkiyeokkorean = 12594;
            e.ssangnieunkorean = 12645;
            e.ssangpieupkorean = 12611;
            e.ssangsioskorean = 12614;
            e.ssangtikeutkorean = 12600;
            e.ssuperior = 63218;
            e.sterling = 163;
            e.sterlingmonospace = 65505;
            e.strokelongoverlaycmb = 822;
            e.strokeshortoverlaycmb = 821;
            e.subset = 8834;
            e.subsetnotequal = 8842;
            e.subsetorequal = 8838;
            e.succeeds = 8827;
            e.suchthat = 8715;
            e.suhiragana = 12377;
            e.sukatakana = 12473;
            e.sukatakanahalfwidth = 65405;
            e.sukunarabic = 1618;
            e.summation = 8721;
            e.sun = 9788;
            e.superset = 8835;
            e.supersetnotequal = 8843;
            e.supersetorequal = 8839;
            e.svsquare = 13276;
            e.syouwaerasquare = 13180;
            e.t = 116;
            e.tabengali = 2468;
            e.tackdown = 8868;
            e.tackleft = 8867;
            e.tadeva = 2340;
            e.tagujarati = 2724;
            e.tagurmukhi = 2596;
            e.taharabic = 1591;
            e.tahfinalarabic = 65218;
            e.tahinitialarabic = 65219;
            e.tahiragana = 12383;
            e.tahmedialarabic = 65220;
            e.taisyouerasquare = 13181;
            e.takatakana = 12479;
            e.takatakanahalfwidth = 65408;
            e.tatweelarabic = 1600;
            e.tau = 964;
            e.tav = 1514;
            e.tavdages = 64330;
            e.tavdagesh = 64330;
            e.tavdageshhebrew = 64330;
            e.tavhebrew = 1514;
            e.tbar = 359;
            e.tbopomofo = 12554;
            e.tcaron = 357;
            e.tccurl = 680;
            e.tcedilla = 355;
            e.tcheharabic = 1670;
            e.tchehfinalarabic = 64379;
            e.tchehinitialarabic = 64380;
            e.tchehmedialarabic = 64381;
            e.tcircle = 9443;
            e.tcircumflexbelow = 7793;
            e.tcommaaccent = 355;
            e.tdieresis = 7831;
            e.tdotaccent = 7787;
            e.tdotbelow = 7789;
            e.tecyrillic = 1090;
            e.tedescendercyrillic = 1197;
            e.teharabic = 1578;
            e.tehfinalarabic = 65174;
            e.tehhahinitialarabic = 64674;
            e.tehhahisolatedarabic = 64524;
            e.tehinitialarabic = 65175;
            e.tehiragana = 12390;
            e.tehjeeminitialarabic = 64673;
            e.tehjeemisolatedarabic = 64523;
            e.tehmarbutaarabic = 1577;
            e.tehmarbutafinalarabic = 65172;
            e.tehmedialarabic = 65176;
            e.tehmeeminitialarabic = 64676;
            e.tehmeemisolatedarabic = 64526;
            e.tehnoonfinalarabic = 64627;
            e.tekatakana = 12486;
            e.tekatakanahalfwidth = 65411;
            e.telephone = 8481;
            e.telephoneblack = 9742;
            e.telishagedolahebrew = 1440;
            e.telishaqetanahebrew = 1449;
            e.tencircle = 9321;
            e.tenideographicparen = 12841;
            e.tenparen = 9341;
            e.tenperiod = 9361;
            e.tenroman = 8569;
            e.tesh = 679;
            e.tet = 1496;
            e.tetdagesh = 64312;
            e.tetdageshhebrew = 64312;
            e.tethebrew = 1496;
            e.tetsecyrillic = 1205;
            e.tevirhebrew = 1435;
            e.tevirlefthebrew = 1435;
            e.thabengali = 2469;
            e.thadeva = 2341;
            e.thagujarati = 2725;
            e.thagurmukhi = 2597;
            e.thalarabic = 1584;
            e.thalfinalarabic = 65196;
            e.thanthakhatlowleftthai = 63640;
            e.thanthakhatlowrightthai = 63639;
            e.thanthakhatthai = 3660;
            e.thanthakhatupperleftthai = 63638;
            e.theharabic = 1579;
            e.thehfinalarabic = 65178;
            e.thehinitialarabic = 65179;
            e.thehmedialarabic = 65180;
            e.thereexists = 8707;
            e.therefore = 8756;
            e.theta = 952;
            e.theta1 = 977;
            e.thetasymbolgreek = 977;
            e.thieuthacirclekorean = 12921;
            e.thieuthaparenkorean = 12825;
            e.thieuthcirclekorean = 12907;
            e.thieuthkorean = 12620;
            e.thieuthparenkorean = 12811;
            e.thirteencircle = 9324;
            e.thirteenparen = 9344;
            e.thirteenperiod = 9364;
            e.thonangmonthothai = 3601;
            e.thook = 429;
            e.thophuthaothai = 3602;
            e.thorn = 254;
            e.thothahanthai = 3607;
            e.thothanthai = 3600;
            e.thothongthai = 3608;
            e.thothungthai = 3606;
            e.thousandcyrillic = 1154;
            e.thousandsseparatorarabic = 1644;
            e.thousandsseparatorpersian = 1644;
            e.three = 51;
            e.threearabic = 1635;
            e.threebengali = 2537;
            e.threecircle = 9314;
            e.threecircleinversesansserif = 10124;
            e.threedeva = 2409;
            e.threeeighths = 8540;
            e.threegujarati = 2793;
            e.threegurmukhi = 2665;
            e.threehackarabic = 1635;
            e.threehangzhou = 12323;
            e.threeideographicparen = 12834;
            e.threeinferior = 8323;
            e.threemonospace = 65299;
            e.threenumeratorbengali = 2550;
            e.threeoldstyle = 63283;
            e.threeparen = 9334;
            e.threeperiod = 9354;
            e.threepersian = 1779;
            e.threequarters = 190;
            e.threequartersemdash = 63198;
            e.threeroman = 8562;
            e.threesuperior = 179;
            e.threethai = 3667;
            e.thzsquare = 13204;
            e.tihiragana = 12385;
            e.tikatakana = 12481;
            e.tikatakanahalfwidth = 65409;
            e.tikeutacirclekorean = 12912;
            e.tikeutaparenkorean = 12816;
            e.tikeutcirclekorean = 12898;
            e.tikeutkorean = 12599;
            e.tikeutparenkorean = 12802;
            e.tilde = 732;
            e.tildebelowcmb = 816;
            e.tildecmb = 771;
            e.tildecomb = 771;
            e.tildedoublecmb = 864;
            e.tildeoperator = 8764;
            e.tildeoverlaycmb = 820;
            e.tildeverticalcmb = 830;
            e.timescircle = 8855;
            e.tipehahebrew = 1430;
            e.tipehalefthebrew = 1430;
            e.tippigurmukhi = 2672;
            e.titlocyrilliccmb = 1155;
            e.tiwnarmenian = 1407;
            e.tlinebelow = 7791;
            e.tmonospace = 65364;
            e.toarmenian = 1385;
            e.tohiragana = 12392;
            e.tokatakana = 12488;
            e.tokatakanahalfwidth = 65412;
            e.tonebarextrahighmod = 741;
            e.tonebarextralowmod = 745;
            e.tonebarhighmod = 742;
            e.tonebarlowmod = 744;
            e.tonebarmidmod = 743;
            e.tonefive = 445;
            e.tonesix = 389;
            e.tonetwo = 424;
            e.tonos = 900;
            e.tonsquare = 13095;
            e.topatakthai = 3599;
            e.tortoiseshellbracketleft = 12308;
            e.tortoiseshellbracketleftsmall = 65117;
            e.tortoiseshellbracketleftvertical = 65081;
            e.tortoiseshellbracketright = 12309;
            e.tortoiseshellbracketrightsmall = 65118;
            e.tortoiseshellbracketrightvertical = 65082;
            e.totaothai = 3605;
            e.tpalatalhook = 427;
            e.tparen = 9391;
            e.trademark = 8482;
            e.trademarksans = 63722;
            e.trademarkserif = 63195;
            e.tretroflexhook = 648;
            e.triagdn = 9660;
            e.triaglf = 9668;
            e.triagrt = 9658;
            e.triagup = 9650;
            e.ts = 678;
            e.tsadi = 1510;
            e.tsadidagesh = 64326;
            e.tsadidageshhebrew = 64326;
            e.tsadihebrew = 1510;
            e.tsecyrillic = 1094;
            e.tsere = 1461;
            e.tsere12 = 1461;
            e.tsere1e = 1461;
            e.tsere2b = 1461;
            e.tserehebrew = 1461;
            e.tserenarrowhebrew = 1461;
            e.tserequarterhebrew = 1461;
            e.tserewidehebrew = 1461;
            e.tshecyrillic = 1115;
            e.tsuperior = 63219;
            e.ttabengali = 2463;
            e.ttadeva = 2335;
            e.ttagujarati = 2719;
            e.ttagurmukhi = 2591;
            e.tteharabic = 1657;
            e.ttehfinalarabic = 64359;
            e.ttehinitialarabic = 64360;
            e.ttehmedialarabic = 64361;
            e.tthabengali = 2464;
            e.tthadeva = 2336;
            e.tthagujarati = 2720;
            e.tthagurmukhi = 2592;
            e.tturned = 647;
            e.tuhiragana = 12388;
            e.tukatakana = 12484;
            e.tukatakanahalfwidth = 65410;
            e.tusmallhiragana = 12387;
            e.tusmallkatakana = 12483;
            e.tusmallkatakanahalfwidth = 65391;
            e.twelvecircle = 9323;
            e.twelveparen = 9343;
            e.twelveperiod = 9363;
            e.twelveroman = 8571;
            e.twentycircle = 9331;
            e.twentyhangzhou = 21316;
            e.twentyparen = 9351;
            e.twentyperiod = 9371;
            e.two = 50;
            e.twoarabic = 1634;
            e.twobengali = 2536;
            e.twocircle = 9313;
            e.twocircleinversesansserif = 10123;
            e.twodeva = 2408;
            e.twodotenleader = 8229;
            e.twodotleader = 8229;
            e.twodotleadervertical = 65072;
            e.twogujarati = 2792;
            e.twogurmukhi = 2664;
            e.twohackarabic = 1634;
            e.twohangzhou = 12322;
            e.twoideographicparen = 12833;
            e.twoinferior = 8322;
            e.twomonospace = 65298;
            e.twonumeratorbengali = 2549;
            e.twooldstyle = 63282;
            e.twoparen = 9333;
            e.twoperiod = 9353;
            e.twopersian = 1778;
            e.tworoman = 8561;
            e.twostroke = 443;
            e.twosuperior = 178;
            e.twothai = 3666;
            e.twothirds = 8532;
            e.u = 117;
            e.uacute = 250;
            e.ubar = 649;
            e.ubengali = 2441;
            e.ubopomofo = 12584;
            e.ubreve = 365;
            e.ucaron = 468;
            e.ucircle = 9444;
            e.ucircumflex = 251;
            e.ucircumflexbelow = 7799;
            e.ucyrillic = 1091;
            e.udattadeva = 2385;
            e.udblacute = 369;
            e.udblgrave = 533;
            e.udeva = 2313;
            e.udieresis = 252;
            e.udieresisacute = 472;
            e.udieresisbelow = 7795;
            e.udieresiscaron = 474;
            e.udieresiscyrillic = 1265;
            e.udieresisgrave = 476;
            e.udieresismacron = 470;
            e.udotbelow = 7909;
            e.ugrave = 249;
            e.ugujarati = 2697;
            e.ugurmukhi = 2569;
            e.uhiragana = 12358;
            e.uhookabove = 7911;
            e.uhorn = 432;
            e.uhornacute = 7913;
            e.uhorndotbelow = 7921;
            e.uhorngrave = 7915;
            e.uhornhookabove = 7917;
            e.uhorntilde = 7919;
            e.uhungarumlaut = 369;
            e.uhungarumlautcyrillic = 1267;
            e.uinvertedbreve = 535;
            e.ukatakana = 12454;
            e.ukatakanahalfwidth = 65395;
            e.ukcyrillic = 1145;
            e.ukorean = 12636;
            e.umacron = 363;
            e.umacroncyrillic = 1263;
            e.umacrondieresis = 7803;
            e.umatragurmukhi = 2625;
            e.umonospace = 65365;
            e.underscore = 95;
            e.underscoredbl = 8215;
            e.underscoremonospace = 65343;
            e.underscorevertical = 65075;
            e.underscorewavy = 65103;
            e.union = 8746;
            e.universal = 8704;
            e.uogonek = 371;
            e.uparen = 9392;
            e.upblock = 9600;
            e.upperdothebrew = 1476;
            e.upsilon = 965;
            e.upsilondieresis = 971;
            e.upsilondieresistonos = 944;
            e.upsilonlatin = 650;
            e.upsilontonos = 973;
            e.uptackbelowcmb = 797;
            e.uptackmod = 724;
            e.uragurmukhi = 2675;
            e.uring = 367;
            e.ushortcyrillic = 1118;
            e.usmallhiragana = 12357;
            e.usmallkatakana = 12453;
            e.usmallkatakanahalfwidth = 65385;
            e.ustraightcyrillic = 1199;
            e.ustraightstrokecyrillic = 1201;
            e.utilde = 361;
            e.utildeacute = 7801;
            e.utildebelow = 7797;
            e.uubengali = 2442;
            e.uudeva = 2314;
            e.uugujarati = 2698;
            e.uugurmukhi = 2570;
            e.uumatragurmukhi = 2626;
            e.uuvowelsignbengali = 2498;
            e.uuvowelsigndeva = 2370;
            e.uuvowelsigngujarati = 2754;
            e.uvowelsignbengali = 2497;
            e.uvowelsigndeva = 2369;
            e.uvowelsigngujarati = 2753;
            e.v = 118;
            e.vadeva = 2357;
            e.vagujarati = 2741;
            e.vagurmukhi = 2613;
            e.vakatakana = 12535;
            e.vav = 1493;
            e.vavdagesh = 64309;
            e.vavdagesh65 = 64309;
            e.vavdageshhebrew = 64309;
            e.vavhebrew = 1493;
            e.vavholam = 64331;
            e.vavholamhebrew = 64331;
            e.vavvavhebrew = 1520;
            e.vavyodhebrew = 1521;
            e.vcircle = 9445;
            e.vdotbelow = 7807;
            e.vecyrillic = 1074;
            e.veharabic = 1700;
            e.vehfinalarabic = 64363;
            e.vehinitialarabic = 64364;
            e.vehmedialarabic = 64365;
            e.vekatakana = 12537;
            e.venus = 9792;
            e.verticalbar = 124;
            e.verticallineabovecmb = 781;
            e.verticallinebelowcmb = 809;
            e.verticallinelowmod = 716;
            e.verticallinemod = 712;
            e.vewarmenian = 1406;
            e.vhook = 651;
            e.vikatakana = 12536;
            e.viramabengali = 2509;
            e.viramadeva = 2381;
            e.viramagujarati = 2765;
            e.visargabengali = 2435;
            e.visargadeva = 2307;
            e.visargagujarati = 2691;
            e.vmonospace = 65366;
            e.voarmenian = 1400;
            e.voicediterationhiragana = 12446;
            e.voicediterationkatakana = 12542;
            e.voicedmarkkana = 12443;
            e.voicedmarkkanahalfwidth = 65438;
            e.vokatakana = 12538;
            e.vparen = 9393;
            e.vtilde = 7805;
            e.vturned = 652;
            e.vuhiragana = 12436;
            e.vukatakana = 12532;
            e.w = 119;
            e.wacute = 7811;
            e.waekorean = 12633;
            e.wahiragana = 12431;
            e.wakatakana = 12527;
            e.wakatakanahalfwidth = 65436;
            e.wakorean = 12632;
            e.wasmallhiragana = 12430;
            e.wasmallkatakana = 12526;
            e.wattosquare = 13143;
            e.wavedash = 12316;
            e.wavyunderscorevertical = 65076;
            e.wawarabic = 1608;
            e.wawfinalarabic = 65262;
            e.wawhamzaabovearabic = 1572;
            e.wawhamzaabovefinalarabic = 65158;
            e.wbsquare = 13277;
            e.wcircle = 9446;
            e.wcircumflex = 373;
            e.wdieresis = 7813;
            e.wdotaccent = 7815;
            e.wdotbelow = 7817;
            e.wehiragana = 12433;
            e.weierstrass = 8472;
            e.wekatakana = 12529;
            e.wekorean = 12638;
            e.weokorean = 12637;
            e.wgrave = 7809;
            e.whitebullet = 9702;
            e.whitecircle = 9675;
            e.whitecircleinverse = 9689;
            e.whitecornerbracketleft = 12302;
            e.whitecornerbracketleftvertical = 65091;
            e.whitecornerbracketright = 12303;
            e.whitecornerbracketrightvertical = 65092;
            e.whitediamond = 9671;
            e.whitediamondcontainingblacksmalldiamond = 9672;
            e.whitedownpointingsmalltriangle = 9663;
            e.whitedownpointingtriangle = 9661;
            e.whiteleftpointingsmalltriangle = 9667;
            e.whiteleftpointingtriangle = 9665;
            e.whitelenticularbracketleft = 12310;
            e.whitelenticularbracketright = 12311;
            e.whiterightpointingsmalltriangle = 9657;
            e.whiterightpointingtriangle = 9655;
            e.whitesmallsquare = 9643;
            e.whitesmilingface = 9786;
            e.whitesquare = 9633;
            e.whitestar = 9734;
            e.whitetelephone = 9743;
            e.whitetortoiseshellbracketleft = 12312;
            e.whitetortoiseshellbracketright = 12313;
            e.whiteuppointingsmalltriangle = 9653;
            e.whiteuppointingtriangle = 9651;
            e.wihiragana = 12432;
            e.wikatakana = 12528;
            e.wikorean = 12639;
            e.wmonospace = 65367;
            e.wohiragana = 12434;
            e.wokatakana = 12530;
            e.wokatakanahalfwidth = 65382;
            e.won = 8361;
            e.wonmonospace = 65510;
            e.wowaenthai = 3623;
            e.wparen = 9394;
            e.wring = 7832;
            e.wsuperior = 695;
            e.wturned = 653;
            e.wynn = 447;
            e.x = 120;
            e.xabovecmb = 829;
            e.xbopomofo = 12562;
            e.xcircle = 9447;
            e.xdieresis = 7821;
            e.xdotaccent = 7819;
            e.xeharmenian = 1389;
            e.xi = 958;
            e.xmonospace = 65368;
            e.xparen = 9395;
            e.xsuperior = 739;
            e.y = 121;
            e.yaadosquare = 13134;
            e.yabengali = 2479;
            e.yacute = 253;
            e.yadeva = 2351;
            e.yaekorean = 12626;
            e.yagujarati = 2735;
            e.yagurmukhi = 2607;
            e.yahiragana = 12420;
            e.yakatakana = 12516;
            e.yakatakanahalfwidth = 65428;
            e.yakorean = 12625;
            e.yamakkanthai = 3662;
            e.yasmallhiragana = 12419;
            e.yasmallkatakana = 12515;
            e.yasmallkatakanahalfwidth = 65388;
            e.yatcyrillic = 1123;
            e.ycircle = 9448;
            e.ycircumflex = 375;
            e.ydieresis = 255;
            e.ydotaccent = 7823;
            e.ydotbelow = 7925;
            e.yeharabic = 1610;
            e.yehbarreearabic = 1746;
            e.yehbarreefinalarabic = 64431;
            e.yehfinalarabic = 65266;
            e.yehhamzaabovearabic = 1574;
            e.yehhamzaabovefinalarabic = 65162;
            e.yehhamzaaboveinitialarabic = 65163;
            e.yehhamzaabovemedialarabic = 65164;
            e.yehinitialarabic = 65267;
            e.yehmedialarabic = 65268;
            e.yehmeeminitialarabic = 64733;
            e.yehmeemisolatedarabic = 64600;
            e.yehnoonfinalarabic = 64660;
            e.yehthreedotsbelowarabic = 1745;
            e.yekorean = 12630;
            e.yen = 165;
            e.yenmonospace = 65509;
            e.yeokorean = 12629;
            e.yeorinhieuhkorean = 12678;
            e.yerahbenyomohebrew = 1450;
            e.yerahbenyomolefthebrew = 1450;
            e.yericyrillic = 1099;
            e.yerudieresiscyrillic = 1273;
            e.yesieungkorean = 12673;
            e.yesieungpansioskorean = 12675;
            e.yesieungsioskorean = 12674;
            e.yetivhebrew = 1434;
            e.ygrave = 7923;
            e.yhook = 436;
            e.yhookabove = 7927;
            e.yiarmenian = 1397;
            e.yicyrillic = 1111;
            e.yikorean = 12642;
            e.yinyang = 9775;
            e.yiwnarmenian = 1410;
            e.ymonospace = 65369;
            e.yod = 1497;
            e.yoddagesh = 64313;
            e.yoddageshhebrew = 64313;
            e.yodhebrew = 1497;
            e.yodyodhebrew = 1522;
            e.yodyodpatahhebrew = 64287;
            e.yohiragana = 12424;
            e.yoikorean = 12681;
            e.yokatakana = 12520;
            e.yokatakanahalfwidth = 65430;
            e.yokorean = 12635;
            e.yosmallhiragana = 12423;
            e.yosmallkatakana = 12519;
            e.yosmallkatakanahalfwidth = 65390;
            e.yotgreek = 1011;
            e.yoyaekorean = 12680;
            e.yoyakorean = 12679;
            e.yoyakthai = 3618;
            e.yoyingthai = 3597;
            e.yparen = 9396;
            e.ypogegrammeni = 890;
            e.ypogegrammenigreekcmb = 837;
            e.yr = 422;
            e.yring = 7833;
            e.ysuperior = 696;
            e.ytilde = 7929;
            e.yturned = 654;
            e.yuhiragana = 12422;
            e.yuikorean = 12684;
            e.yukatakana = 12518;
            e.yukatakanahalfwidth = 65429;
            e.yukorean = 12640;
            e.yusbigcyrillic = 1131;
            e.yusbigiotifiedcyrillic = 1133;
            e.yuslittlecyrillic = 1127;
            e.yuslittleiotifiedcyrillic = 1129;
            e.yusmallhiragana = 12421;
            e.yusmallkatakana = 12517;
            e.yusmallkatakanahalfwidth = 65389;
            e.yuyekorean = 12683;
            e.yuyeokorean = 12682;
            e.yyabengali = 2527;
            e.yyadeva = 2399;
            e.z = 122;
            e.zaarmenian = 1382;
            e.zacute = 378;
            e.zadeva = 2395;
            e.zagurmukhi = 2651;
            e.zaharabic = 1592;
            e.zahfinalarabic = 65222;
            e.zahinitialarabic = 65223;
            e.zahiragana = 12374;
            e.zahmedialarabic = 65224;
            e.zainarabic = 1586;
            e.zainfinalarabic = 65200;
            e.zakatakana = 12470;
            e.zaqefgadolhebrew = 1429;
            e.zaqefqatanhebrew = 1428;
            e.zarqahebrew = 1432;
            e.zayin = 1494;
            e.zayindagesh = 64310;
            e.zayindageshhebrew = 64310;
            e.zayinhebrew = 1494;
            e.zbopomofo = 12567;
            e.zcaron = 382;
            e.zcircle = 9449;
            e.zcircumflex = 7825;
            e.zcurl = 657;
            e.zdot = 380;
            e.zdotaccent = 380;
            e.zdotbelow = 7827;
            e.zecyrillic = 1079;
            e.zedescendercyrillic = 1177;
            e.zedieresiscyrillic = 1247;
            e.zehiragana = 12380;
            e.zekatakana = 12476;
            e.zero = 48;
            e.zeroarabic = 1632;
            e.zerobengali = 2534;
            e.zerodeva = 2406;
            e.zerogujarati = 2790;
            e.zerogurmukhi = 2662;
            e.zerohackarabic = 1632;
            e.zeroinferior = 8320;
            e.zeromonospace = 65296;
            e.zerooldstyle = 63280;
            e.zeropersian = 1776;
            e.zerosuperior = 8304;
            e.zerothai = 3664;
            e.zerowidthjoiner = 65279;
            e.zerowidthnonjoiner = 8204;
            e.zerowidthspace = 8203;
            e.zeta = 950;
            e.zhbopomofo = 12563;
            e.zhearmenian = 1386;
            e.zhebrevecyrillic = 1218;
            e.zhecyrillic = 1078;
            e.zhedescendercyrillic = 1175;
            e.zhedieresiscyrillic = 1245;
            e.zihiragana = 12376;
            e.zikatakana = 12472;
            e.zinorhebrew = 1454;
            e.zlinebelow = 7829;
            e.zmonospace = 65370;
            e.zohiragana = 12382;
            e.zokatakana = 12478;
            e.zparen = 9397;
            e.zretroflexhook = 656;
            e.zstroke = 438;
            e.zuhiragana = 12378;
            e.zukatakana = 12474;
            e[".notdef"] = 0;
            e.angbracketleftbig = 9001;
            e.angbracketleftBig = 9001;
            e.angbracketleftbigg = 9001;
            e.angbracketleftBigg = 9001;
            e.angbracketrightBig = 9002;
            e.angbracketrightbig = 9002;
            e.angbracketrightBigg = 9002;
            e.angbracketrightbigg = 9002;
            e.arrowhookleft = 8618;
            e.arrowhookright = 8617;
            e.arrowlefttophalf = 8636;
            e.arrowleftbothalf = 8637;
            e.arrownortheast = 8599;
            e.arrownorthwest = 8598;
            e.arrowrighttophalf = 8640;
            e.arrowrightbothalf = 8641;
            e.arrowsoutheast = 8600;
            e.arrowsouthwest = 8601;
            e.backslashbig = 8726;
            e.backslashBig = 8726;
            e.backslashBigg = 8726;
            e.backslashbigg = 8726;
            e.bardbl = 8214;
            e.bracehtipdownleft = 65079;
            e.bracehtipdownright = 65079;
            e.bracehtipupleft = 65080;
            e.bracehtipupright = 65080;
            e.braceleftBig = 123;
            e.braceleftbig = 123;
            e.braceleftbigg = 123;
            e.braceleftBigg = 123;
            e.bracerightBig = 125;
            e.bracerightbig = 125;
            e.bracerightbigg = 125;
            e.bracerightBigg = 125;
            e.bracketleftbig = 91;
            e.bracketleftBig = 91;
            e.bracketleftbigg = 91;
            e.bracketleftBigg = 91;
            e.bracketrightBig = 93;
            e.bracketrightbig = 93;
            e.bracketrightbigg = 93;
            e.bracketrightBigg = 93;
            e.ceilingleftbig = 8968;
            e.ceilingleftBig = 8968;
            e.ceilingleftBigg = 8968;
            e.ceilingleftbigg = 8968;
            e.ceilingrightbig = 8969;
            e.ceilingrightBig = 8969;
            e.ceilingrightbigg = 8969;
            e.ceilingrightBigg = 8969;
            e.circledotdisplay = 8857;
            e.circledottext = 8857;
            e.circlemultiplydisplay = 8855;
            e.circlemultiplytext = 8855;
            e.circleplusdisplay = 8853;
            e.circleplustext = 8853;
            e.contintegraldisplay = 8750;
            e.contintegraltext = 8750;
            e.coproductdisplay = 8720;
            e.coproducttext = 8720;
            e.floorleftBig = 8970;
            e.floorleftbig = 8970;
            e.floorleftbigg = 8970;
            e.floorleftBigg = 8970;
            e.floorrightbig = 8971;
            e.floorrightBig = 8971;
            e.floorrightBigg = 8971;
            e.floorrightbigg = 8971;
            e.hatwide = 770;
            e.hatwider = 770;
            e.hatwidest = 770;
            e.intercal = 7488;
            e.integraldisplay = 8747;
            e.integraltext = 8747;
            e.intersectiondisplay = 8898;
            e.intersectiontext = 8898;
            e.logicalanddisplay = 8743;
            e.logicalandtext = 8743;
            e.logicalordisplay = 8744;
            e.logicalortext = 8744;
            e.parenleftBig = 40;
            e.parenleftbig = 40;
            e.parenleftBigg = 40;
            e.parenleftbigg = 40;
            e.parenrightBig = 41;
            e.parenrightbig = 41;
            e.parenrightBigg = 41;
            e.parenrightbigg = 41;
            e.prime = 8242;
            e.productdisplay = 8719;
            e.producttext = 8719;
            e.radicalbig = 8730;
            e.radicalBig = 8730;
            e.radicalBigg = 8730;
            e.radicalbigg = 8730;
            e.radicalbt = 8730;
            e.radicaltp = 8730;
            e.radicalvertex = 8730;
            e.slashbig = 47;
            e.slashBig = 47;
            e.slashBigg = 47;
            e.slashbigg = 47;
            e.summationdisplay = 8721;
            e.summationtext = 8721;
            e.tildewide = 732;
            e.tildewider = 732;
            e.tildewidest = 732;
            e.uniondisplay = 8899;
            e.unionmultidisplay = 8846;
            e.unionmultitext = 8846;
            e.unionsqdisplay = 8852;
            e.unionsqtext = 8852;
            e.uniontext = 8899;
            e.vextenddouble = 8741;
            e.vextendsingle = 8739;
          }),
          n = (0, r.getLookupTableFactory)(function (e) {
            e.space = 32;
            e.a1 = 9985;
            e.a2 = 9986;
            e.a202 = 9987;
            e.a3 = 9988;
            e.a4 = 9742;
            e.a5 = 9990;
            e.a119 = 9991;
            e.a118 = 9992;
            e.a117 = 9993;
            e.a11 = 9755;
            e.a12 = 9758;
            e.a13 = 9996;
            e.a14 = 9997;
            e.a15 = 9998;
            e.a16 = 9999;
            e.a105 = 1e4;
            e.a17 = 10001;
            e.a18 = 10002;
            e.a19 = 10003;
            e.a20 = 10004;
            e.a21 = 10005;
            e.a22 = 10006;
            e.a23 = 10007;
            e.a24 = 10008;
            e.a25 = 10009;
            e.a26 = 10010;
            e.a27 = 10011;
            e.a28 = 10012;
            e.a6 = 10013;
            e.a7 = 10014;
            e.a8 = 10015;
            e.a9 = 10016;
            e.a10 = 10017;
            e.a29 = 10018;
            e.a30 = 10019;
            e.a31 = 10020;
            e.a32 = 10021;
            e.a33 = 10022;
            e.a34 = 10023;
            e.a35 = 9733;
            e.a36 = 10025;
            e.a37 = 10026;
            e.a38 = 10027;
            e.a39 = 10028;
            e.a40 = 10029;
            e.a41 = 10030;
            e.a42 = 10031;
            e.a43 = 10032;
            e.a44 = 10033;
            e.a45 = 10034;
            e.a46 = 10035;
            e.a47 = 10036;
            e.a48 = 10037;
            e.a49 = 10038;
            e.a50 = 10039;
            e.a51 = 10040;
            e.a52 = 10041;
            e.a53 = 10042;
            e.a54 = 10043;
            e.a55 = 10044;
            e.a56 = 10045;
            e.a57 = 10046;
            e.a58 = 10047;
            e.a59 = 10048;
            e.a60 = 10049;
            e.a61 = 10050;
            e.a62 = 10051;
            e.a63 = 10052;
            e.a64 = 10053;
            e.a65 = 10054;
            e.a66 = 10055;
            e.a67 = 10056;
            e.a68 = 10057;
            e.a69 = 10058;
            e.a70 = 10059;
            e.a71 = 9679;
            e.a72 = 10061;
            e.a73 = 9632;
            e.a74 = 10063;
            e.a203 = 10064;
            e.a75 = 10065;
            e.a204 = 10066;
            e.a76 = 9650;
            e.a77 = 9660;
            e.a78 = 9670;
            e.a79 = 10070;
            e.a81 = 9687;
            e.a82 = 10072;
            e.a83 = 10073;
            e.a84 = 10074;
            e.a97 = 10075;
            e.a98 = 10076;
            e.a99 = 10077;
            e.a100 = 10078;
            e.a101 = 10081;
            e.a102 = 10082;
            e.a103 = 10083;
            e.a104 = 10084;
            e.a106 = 10085;
            e.a107 = 10086;
            e.a108 = 10087;
            e.a112 = 9827;
            e.a111 = 9830;
            e.a110 = 9829;
            e.a109 = 9824;
            e.a120 = 9312;
            e.a121 = 9313;
            e.a122 = 9314;
            e.a123 = 9315;
            e.a124 = 9316;
            e.a125 = 9317;
            e.a126 = 9318;
            e.a127 = 9319;
            e.a128 = 9320;
            e.a129 = 9321;
            e.a130 = 10102;
            e.a131 = 10103;
            e.a132 = 10104;
            e.a133 = 10105;
            e.a134 = 10106;
            e.a135 = 10107;
            e.a136 = 10108;
            e.a137 = 10109;
            e.a138 = 10110;
            e.a139 = 10111;
            e.a140 = 10112;
            e.a141 = 10113;
            e.a142 = 10114;
            e.a143 = 10115;
            e.a144 = 10116;
            e.a145 = 10117;
            e.a146 = 10118;
            e.a147 = 10119;
            e.a148 = 10120;
            e.a149 = 10121;
            e.a150 = 10122;
            e.a151 = 10123;
            e.a152 = 10124;
            e.a153 = 10125;
            e.a154 = 10126;
            e.a155 = 10127;
            e.a156 = 10128;
            e.a157 = 10129;
            e.a158 = 10130;
            e.a159 = 10131;
            e.a160 = 10132;
            e.a161 = 8594;
            e.a163 = 8596;
            e.a164 = 8597;
            e.a196 = 10136;
            e.a165 = 10137;
            e.a192 = 10138;
            e.a166 = 10139;
            e.a167 = 10140;
            e.a168 = 10141;
            e.a169 = 10142;
            e.a170 = 10143;
            e.a171 = 10144;
            e.a172 = 10145;
            e.a173 = 10146;
            e.a162 = 10147;
            e.a174 = 10148;
            e.a175 = 10149;
            e.a176 = 10150;
            e.a177 = 10151;
            e.a178 = 10152;
            e.a179 = 10153;
            e.a193 = 10154;
            e.a180 = 10155;
            e.a199 = 10156;
            e.a181 = 10157;
            e.a200 = 10158;
            e.a182 = 10159;
            e.a201 = 10161;
            e.a183 = 10162;
            e.a184 = 10163;
            e.a197 = 10164;
            e.a185 = 10165;
            e.a194 = 10166;
            e.a198 = 10167;
            e.a186 = 10168;
            e.a195 = 10169;
            e.a187 = 10170;
            e.a188 = 10171;
            e.a189 = 10172;
            e.a190 = 10173;
            e.a191 = 10174;
            e.a89 = 10088;
            e.a90 = 10089;
            e.a93 = 10090;
            e.a94 = 10091;
            e.a91 = 10092;
            e.a92 = 10093;
            e.a205 = 10094;
            e.a85 = 10095;
            e.a206 = 10096;
            e.a86 = 10097;
            e.a87 = 10098;
            e.a88 = 10099;
            e.a95 = 10100;
            e.a96 = 10101;
            e[".notdef"] = 0;
          });
      }, function (e, t, a) {
        a.r(t);
        a.d(t, {
          clearUnicodeCaches: function clearUnicodeCaches() {
            return _clearUnicodeCaches;
          },
          getCharUnicodeCategory: function getCharUnicodeCategory() {
            return _getCharUnicodeCategory;
          },
          getUnicodeForGlyph: function getUnicodeForGlyph() {
            return _getUnicodeForGlyph;
          },
          getUnicodeRangeFor: function getUnicodeRangeFor() {
            return _getUnicodeRangeFor;
          },
          mapSpecialUnicodeValues: function mapSpecialUnicodeValues() {
            return _mapSpecialUnicodeValues;
          }
        });
        var r = (0, a(3).getLookupTableFactory)(function (e) {
          e[63721] = 169;
          e[63193] = 169;
          e[63720] = 174;
          e[63194] = 174;
          e[63722] = 8482;
          e[63195] = 8482;
          e[63729] = 9127;
          e[63730] = 9128;
          e[63731] = 9129;
          e[63740] = 9131;
          e[63741] = 9132;
          e[63742] = 9133;
          e[63726] = 9121;
          e[63727] = 9122;
          e[63728] = 9123;
          e[63737] = 9124;
          e[63738] = 9125;
          e[63739] = 9126;
          e[63723] = 9115;
          e[63724] = 9116;
          e[63725] = 9117;
          e[63734] = 9118;
          e[63735] = 9119;
          e[63736] = 9120;
        });
        function _mapSpecialUnicodeValues(e) {
          return e >= 65520 && e <= 65535 ? 0 : e >= 62976 && e <= 63743 ? r()[e] || e : 173 === e ? 45 : e;
        }
        function _getUnicodeForGlyph(e, t) {
          var a = t[e];
          if (void 0 !== a) return a;
          if (!e) return -1;
          if ("u" === e[0]) {
            var _t270 = e.length;
            var _r175;
            if (7 === _t270 && "n" === e[1] && "i" === e[2]) _r175 = e.substring(3);else {
              if (!(_t270 >= 5 && _t270 <= 7)) return -1;
              _r175 = e.substring(1);
            }
            if (_r175 === _r175.toUpperCase()) {
              a = parseInt(_r175, 16);
              if (a >= 0) return a;
            }
          }
          return -1;
        }
        var i = [[0, 127], [128, 255], [256, 383], [384, 591], [592, 687, 7424, 7551, 7552, 7615], [688, 767, 42752, 42783], [768, 879, 7616, 7679], [880, 1023], [11392, 11519], [1024, 1279, 1280, 1327, 11744, 11775, 42560, 42655], [1328, 1423], [1424, 1535], [42240, 42559], [1536, 1791, 1872, 1919], [1984, 2047], [2304, 2431], [2432, 2559], [2560, 2687], [2688, 2815], [2816, 2943], [2944, 3071], [3072, 3199], [3200, 3327], [3328, 3455], [3584, 3711], [3712, 3839], [4256, 4351, 11520, 11567], [6912, 7039], [4352, 4607], [7680, 7935, 11360, 11391, 42784, 43007], [7936, 8191], [8192, 8303, 11776, 11903], [8304, 8351], [8352, 8399], [8400, 8447], [8448, 8527], [8528, 8591], [8592, 8703, 10224, 10239, 10496, 10623, 11008, 11263], [8704, 8959, 10752, 11007, 10176, 10223, 10624, 10751], [8960, 9215], [9216, 9279], [9280, 9311], [9312, 9471], [9472, 9599], [9600, 9631], [9632, 9727], [9728, 9983], [9984, 10175], [12288, 12351], [12352, 12447], [12448, 12543, 12784, 12799], [12544, 12591, 12704, 12735], [12592, 12687], [43072, 43135], [12800, 13055], [13056, 13311], [44032, 55215], [55296, 57343], [67840, 67871], [19968, 40959, 11904, 12031, 12032, 12255, 12272, 12287, 13312, 19903, 131072, 173791, 12688, 12703], [57344, 63743], [12736, 12783, 63744, 64255, 194560, 195103], [64256, 64335], [64336, 65023], [65056, 65071], [65040, 65055], [65104, 65135], [65136, 65279], [65280, 65519], [65520, 65535], [3840, 4095], [1792, 1871], [1920, 1983], [3456, 3583], [4096, 4255], [4608, 4991, 4992, 5023, 11648, 11743], [5024, 5119], [5120, 5759], [5760, 5791], [5792, 5887], [6016, 6143], [6144, 6319], [10240, 10495], [40960, 42127], [5888, 5919, 5920, 5951, 5952, 5983, 5984, 6015], [66304, 66351], [66352, 66383], [66560, 66639], [118784, 119039, 119040, 119295, 119296, 119375], [119808, 120831], [1044480, 1048573], [65024, 65039, 917760, 917999], [917504, 917631], [6400, 6479], [6480, 6527], [6528, 6623], [6656, 6687], [11264, 11359], [11568, 11647], [19904, 19967], [43008, 43055], [65536, 65663, 65664, 65791, 65792, 65855], [65856, 65935], [66432, 66463], [66464, 66527], [66640, 66687], [66688, 66735], [67584, 67647], [68096, 68191], [119552, 119647], [73728, 74751, 74752, 74879], [119648, 119679], [7040, 7103], [7168, 7247], [7248, 7295], [43136, 43231], [43264, 43311], [43312, 43359], [43520, 43615], [65936, 65999], [66e3, 66047], [66208, 66271, 66176, 66207, 67872, 67903], [127024, 127135, 126976, 127023]];
        function _getUnicodeRangeFor(e) {
          var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
          if (-1 !== t) {
            var _a215 = i[t];
            for (var _r176 = 0, _i155 = _a215.length; _r176 < _i155; _r176 += 2) if (e >= _a215[_r176] && e <= _a215[_r176 + 1]) return t;
          }
          for (var _t271 = 0, _a216 = i.length; _t271 < _a216; _t271++) {
            var _a217 = i[_t271];
            for (var _r177 = 0, _i156 = _a217.length; _r177 < _i156; _r177 += 2) if (e >= _a217[_r177] && e <= _a217[_r177 + 1]) return _t271;
          }
          return -1;
        }
        var n = new RegExp("^(\\s)|(\\p{Mn})|(\\p{Cf})$", "u"),
          s = new Map();
        function _getCharUnicodeCategory(e) {
          var t = s.get(e);
          if (t) return t;
          var a = e.match(n),
            r = {
              isWhitespace: !(!a || !a[1]),
              isZeroWidthDiacritic: !(!a || !a[2]),
              isInvisibleFormatMark: !(!a || !a[3])
            };
          s.set(e, r);
          return r;
        }
        function _clearUnicodeCaches() {
          s.clear();
        }
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.getSerifFonts = t.getNonStdFontMap = t.getGlyphMapForStandardFonts = t.getFontNameToFileMap = void 0;
        t.getStandardFontName = function getStandardFontName(e) {
          var t = (0, i.normalizeFontName)(e);
          return n()[t];
        };
        t.getSymbolsFonts = t.getSupplementalGlyphMapForCalibri = t.getSupplementalGlyphMapForArialBlack = t.getStdFontMap = void 0;
        var r = a(3),
          i = a(38);
        var n = (0, r.getLookupTableFactory)(function (e) {
          e["Times-Roman"] = "Times-Roman";
          e.Helvetica = "Helvetica";
          e.Courier = "Courier";
          e.Symbol = "Symbol";
          e["Times-Bold"] = "Times-Bold";
          e["Helvetica-Bold"] = "Helvetica-Bold";
          e["Courier-Bold"] = "Courier-Bold";
          e.ZapfDingbats = "ZapfDingbats";
          e["Times-Italic"] = "Times-Italic";
          e["Helvetica-Oblique"] = "Helvetica-Oblique";
          e["Courier-Oblique"] = "Courier-Oblique";
          e["Times-BoldItalic"] = "Times-BoldItalic";
          e["Helvetica-BoldOblique"] = "Helvetica-BoldOblique";
          e["Courier-BoldOblique"] = "Courier-BoldOblique";
          e.ArialNarrow = "Helvetica";
          e["ArialNarrow-Bold"] = "Helvetica-Bold";
          e["ArialNarrow-BoldItalic"] = "Helvetica-BoldOblique";
          e["ArialNarrow-Italic"] = "Helvetica-Oblique";
          e.ArialBlack = "Helvetica";
          e["ArialBlack-Bold"] = "Helvetica-Bold";
          e["ArialBlack-BoldItalic"] = "Helvetica-BoldOblique";
          e["ArialBlack-Italic"] = "Helvetica-Oblique";
          e["Arial-Black"] = "Helvetica";
          e["Arial-Black-Bold"] = "Helvetica-Bold";
          e["Arial-Black-BoldItalic"] = "Helvetica-BoldOblique";
          e["Arial-Black-Italic"] = "Helvetica-Oblique";
          e.Arial = "Helvetica";
          e["Arial-Bold"] = "Helvetica-Bold";
          e["Arial-BoldItalic"] = "Helvetica-BoldOblique";
          e["Arial-Italic"] = "Helvetica-Oblique";
          e.ArialMT = "Helvetica";
          e["Arial-BoldItalicMT"] = "Helvetica-BoldOblique";
          e["Arial-BoldMT"] = "Helvetica-Bold";
          e["Arial-ItalicMT"] = "Helvetica-Oblique";
          e.ArialUnicodeMS = "Helvetica";
          e["ArialUnicodeMS-Bold"] = "Helvetica-Bold";
          e["ArialUnicodeMS-BoldItalic"] = "Helvetica-BoldOblique";
          e["ArialUnicodeMS-Italic"] = "Helvetica-Oblique";
          e["Courier-BoldItalic"] = "Courier-BoldOblique";
          e["Courier-Italic"] = "Courier-Oblique";
          e.CourierNew = "Courier";
          e["CourierNew-Bold"] = "Courier-Bold";
          e["CourierNew-BoldItalic"] = "Courier-BoldOblique";
          e["CourierNew-Italic"] = "Courier-Oblique";
          e["CourierNewPS-BoldItalicMT"] = "Courier-BoldOblique";
          e["CourierNewPS-BoldMT"] = "Courier-Bold";
          e["CourierNewPS-ItalicMT"] = "Courier-Oblique";
          e.CourierNewPSMT = "Courier";
          e["Helvetica-BoldItalic"] = "Helvetica-BoldOblique";
          e["Helvetica-Italic"] = "Helvetica-Oblique";
          e["Symbol-Bold"] = "Symbol";
          e["Symbol-BoldItalic"] = "Symbol";
          e["Symbol-Italic"] = "Symbol";
          e.TimesNewRoman = "Times-Roman";
          e["TimesNewRoman-Bold"] = "Times-Bold";
          e["TimesNewRoman-BoldItalic"] = "Times-BoldItalic";
          e["TimesNewRoman-Italic"] = "Times-Italic";
          e.TimesNewRomanPS = "Times-Roman";
          e["TimesNewRomanPS-Bold"] = "Times-Bold";
          e["TimesNewRomanPS-BoldItalic"] = "Times-BoldItalic";
          e["TimesNewRomanPS-BoldItalicMT"] = "Times-BoldItalic";
          e["TimesNewRomanPS-BoldMT"] = "Times-Bold";
          e["TimesNewRomanPS-Italic"] = "Times-Italic";
          e["TimesNewRomanPS-ItalicMT"] = "Times-Italic";
          e.TimesNewRomanPSMT = "Times-Roman";
          e["TimesNewRomanPSMT-Bold"] = "Times-Bold";
          e["TimesNewRomanPSMT-BoldItalic"] = "Times-BoldItalic";
          e["TimesNewRomanPSMT-Italic"] = "Times-Italic";
        });
        t.getStdFontMap = n;
        var s = (0, r.getLookupTableFactory)(function (e) {
          e.Courier = "FoxitFixed.pfb";
          e["Courier-Bold"] = "FoxitFixedBold.pfb";
          e["Courier-BoldOblique"] = "FoxitFixedBoldItalic.pfb";
          e["Courier-Oblique"] = "FoxitFixedItalic.pfb";
          e.Helvetica = "FoxitSans.pfb";
          e["Helvetica-Bold"] = "FoxitSansBold.pfb";
          e["Helvetica-BoldOblique"] = "FoxitSansBoldItalic.pfb";
          e["Helvetica-Oblique"] = "FoxitSansItalic.pfb";
          e["Times-Roman"] = "FoxitSerif.pfb";
          e["Times-Bold"] = "FoxitSerifBold.pfb";
          e["Times-BoldItalic"] = "FoxitSerifBoldItalic.pfb";
          e["Times-Italic"] = "FoxitSerifItalic.pfb";
          e.Symbol = "FoxitSymbol.pfb";
          e.ZapfDingbats = "FoxitDingbats.pfb";
          e["LiberationSans-Regular"] = "LiberationSans-Regular.ttf";
          e["LiberationSans-Bold"] = "LiberationSans-Bold.ttf";
          e["LiberationSans-Italic"] = "LiberationSans-Italic.ttf";
          e["LiberationSans-BoldItalic"] = "LiberationSans-BoldItalic.ttf";
        });
        t.getFontNameToFileMap = s;
        var o = (0, r.getLookupTableFactory)(function (e) {
          e.Calibri = "Helvetica";
          e["Calibri-Bold"] = "Helvetica-Bold";
          e["Calibri-BoldItalic"] = "Helvetica-BoldOblique";
          e["Calibri-Italic"] = "Helvetica-Oblique";
          e.CenturyGothic = "Helvetica";
          e["CenturyGothic-Bold"] = "Helvetica-Bold";
          e["CenturyGothic-BoldItalic"] = "Helvetica-BoldOblique";
          e["CenturyGothic-Italic"] = "Helvetica-Oblique";
          e.ComicSansMS = "Comic Sans MS";
          e["ComicSansMS-Bold"] = "Comic Sans MS-Bold";
          e["ComicSansMS-BoldItalic"] = "Comic Sans MS-BoldItalic";
          e["ComicSansMS-Italic"] = "Comic Sans MS-Italic";
          e["ItcSymbol-Bold"] = "Helvetica-Bold";
          e["ItcSymbol-BoldItalic"] = "Helvetica-BoldOblique";
          e["ItcSymbol-Book"] = "Helvetica";
          e["ItcSymbol-BookItalic"] = "Helvetica-Oblique";
          e["ItcSymbol-Medium"] = "Helvetica";
          e["ItcSymbol-MediumItalic"] = "Helvetica-Oblique";
          e.LucidaConsole = "Courier";
          e["LucidaConsole-Bold"] = "Courier-Bold";
          e["LucidaConsole-BoldItalic"] = "Courier-BoldOblique";
          e["LucidaConsole-Italic"] = "Courier-Oblique";
          e["LucidaSans-Demi"] = "Helvetica-Bold";
          e["MS-Gothic"] = "MS Gothic";
          e["MS-Gothic-Bold"] = "MS Gothic-Bold";
          e["MS-Gothic-BoldItalic"] = "MS Gothic-BoldItalic";
          e["MS-Gothic-Italic"] = "MS Gothic-Italic";
          e["MS-Mincho"] = "MS Mincho";
          e["MS-Mincho-Bold"] = "MS Mincho-Bold";
          e["MS-Mincho-BoldItalic"] = "MS Mincho-BoldItalic";
          e["MS-Mincho-Italic"] = "MS Mincho-Italic";
          e["MS-PGothic"] = "MS PGothic";
          e["MS-PGothic-Bold"] = "MS PGothic-Bold";
          e["MS-PGothic-BoldItalic"] = "MS PGothic-BoldItalic";
          e["MS-PGothic-Italic"] = "MS PGothic-Italic";
          e["MS-PMincho"] = "MS PMincho";
          e["MS-PMincho-Bold"] = "MS PMincho-Bold";
          e["MS-PMincho-BoldItalic"] = "MS PMincho-BoldItalic";
          e["MS-PMincho-Italic"] = "MS PMincho-Italic";
          e.NuptialScript = "Times-Italic";
          e.SegoeUISymbol = "Helvetica";
          e.Wingdings = "ZapfDingbats";
          e["Wingdings-Regular"] = "ZapfDingbats";
        });
        t.getNonStdFontMap = o;
        var c = (0, r.getLookupTableFactory)(function (e) {
          e["Adobe Jenson"] = !0;
          e["Adobe Text"] = !0;
          e.Albertus = !0;
          e.Aldus = !0;
          e.Alexandria = !0;
          e.Algerian = !0;
          e["American Typewriter"] = !0;
          e.Antiqua = !0;
          e.Apex = !0;
          e.Arno = !0;
          e.Aster = !0;
          e.Aurora = !0;
          e.Baskerville = !0;
          e.Bell = !0;
          e.Bembo = !0;
          e["Bembo Schoolbook"] = !0;
          e.Benguiat = !0;
          e["Berkeley Old Style"] = !0;
          e["Bernhard Modern"] = !0;
          e["Berthold City"] = !0;
          e.Bodoni = !0;
          e["Bauer Bodoni"] = !0;
          e["Book Antiqua"] = !0;
          e.Bookman = !0;
          e["Bordeaux Roman"] = !0;
          e["Californian FB"] = !0;
          e.Calisto = !0;
          e.Calvert = !0;
          e.Capitals = !0;
          e.Cambria = !0;
          e.Cartier = !0;
          e.Caslon = !0;
          e.Catull = !0;
          e.Centaur = !0;
          e["Century Old Style"] = !0;
          e["Century Schoolbook"] = !0;
          e.Chaparral = !0;
          e["Charis SIL"] = !0;
          e.Cheltenham = !0;
          e["Cholla Slab"] = !0;
          e.Clarendon = !0;
          e.Clearface = !0;
          e.Cochin = !0;
          e.Colonna = !0;
          e["Computer Modern"] = !0;
          e["Concrete Roman"] = !0;
          e.Constantia = !0;
          e["Cooper Black"] = !0;
          e.Corona = !0;
          e.Ecotype = !0;
          e.Egyptienne = !0;
          e.Elephant = !0;
          e.Excelsior = !0;
          e.Fairfield = !0;
          e["FF Scala"] = !0;
          e.Folkard = !0;
          e.Footlight = !0;
          e.FreeSerif = !0;
          e["Friz Quadrata"] = !0;
          e.Garamond = !0;
          e.Gentium = !0;
          e.Georgia = !0;
          e.Gloucester = !0;
          e["Goudy Old Style"] = !0;
          e["Goudy Schoolbook"] = !0;
          e["Goudy Pro Font"] = !0;
          e.Granjon = !0;
          e["Guardian Egyptian"] = !0;
          e.Heather = !0;
          e.Hercules = !0;
          e["High Tower Text"] = !0;
          e.Hiroshige = !0;
          e["Hoefler Text"] = !0;
          e["Humana Serif"] = !0;
          e.Imprint = !0;
          e["Ionic No. 5"] = !0;
          e.Janson = !0;
          e.Joanna = !0;
          e.Korinna = !0;
          e.Lexicon = !0;
          e.LiberationSerif = !0;
          e["Liberation Serif"] = !0;
          e["Linux Libertine"] = !0;
          e.Literaturnaya = !0;
          e.Lucida = !0;
          e["Lucida Bright"] = !0;
          e.Melior = !0;
          e.Memphis = !0;
          e.Miller = !0;
          e.Minion = !0;
          e.Modern = !0;
          e["Mona Lisa"] = !0;
          e["Mrs Eaves"] = !0;
          e["MS Serif"] = !0;
          e["Museo Slab"] = !0;
          e["New York"] = !0;
          e["Nimbus Roman"] = !0;
          e["NPS Rawlinson Roadway"] = !0;
          e.NuptialScript = !0;
          e.Palatino = !0;
          e.Perpetua = !0;
          e.Plantin = !0;
          e["Plantin Schoolbook"] = !0;
          e.Playbill = !0;
          e["Poor Richard"] = !0;
          e["Rawlinson Roadway"] = !0;
          e.Renault = !0;
          e.Requiem = !0;
          e.Rockwell = !0;
          e.Roman = !0;
          e["Rotis Serif"] = !0;
          e.Sabon = !0;
          e.Scala = !0;
          e.Seagull = !0;
          e.Sistina = !0;
          e.Souvenir = !0;
          e.STIX = !0;
          e["Stone Informal"] = !0;
          e["Stone Serif"] = !0;
          e.Sylfaen = !0;
          e.Times = !0;
          e.Trajan = !0;
          e["Trinité"] = !0;
          e["Trump Mediaeval"] = !0;
          e.Utopia = !0;
          e["Vale Type"] = !0;
          e["Bitstream Vera"] = !0;
          e["Vera Serif"] = !0;
          e.Versailles = !0;
          e.Wanted = !0;
          e.Weiss = !0;
          e["Wide Latin"] = !0;
          e.Windsor = !0;
          e.XITS = !0;
        });
        t.getSerifFonts = c;
        var l = (0, r.getLookupTableFactory)(function (e) {
          e.Dingbats = !0;
          e.Symbol = !0;
          e.ZapfDingbats = !0;
        });
        t.getSymbolsFonts = l;
        var h = (0, r.getLookupTableFactory)(function (e) {
          e[2] = 10;
          e[3] = 32;
          e[4] = 33;
          e[5] = 34;
          e[6] = 35;
          e[7] = 36;
          e[8] = 37;
          e[9] = 38;
          e[10] = 39;
          e[11] = 40;
          e[12] = 41;
          e[13] = 42;
          e[14] = 43;
          e[15] = 44;
          e[16] = 45;
          e[17] = 46;
          e[18] = 47;
          e[19] = 48;
          e[20] = 49;
          e[21] = 50;
          e[22] = 51;
          e[23] = 52;
          e[24] = 53;
          e[25] = 54;
          e[26] = 55;
          e[27] = 56;
          e[28] = 57;
          e[29] = 58;
          e[30] = 894;
          e[31] = 60;
          e[32] = 61;
          e[33] = 62;
          e[34] = 63;
          e[35] = 64;
          e[36] = 65;
          e[37] = 66;
          e[38] = 67;
          e[39] = 68;
          e[40] = 69;
          e[41] = 70;
          e[42] = 71;
          e[43] = 72;
          e[44] = 73;
          e[45] = 74;
          e[46] = 75;
          e[47] = 76;
          e[48] = 77;
          e[49] = 78;
          e[50] = 79;
          e[51] = 80;
          e[52] = 81;
          e[53] = 82;
          e[54] = 83;
          e[55] = 84;
          e[56] = 85;
          e[57] = 86;
          e[58] = 87;
          e[59] = 88;
          e[60] = 89;
          e[61] = 90;
          e[62] = 91;
          e[63] = 92;
          e[64] = 93;
          e[65] = 94;
          e[66] = 95;
          e[67] = 96;
          e[68] = 97;
          e[69] = 98;
          e[70] = 99;
          e[71] = 100;
          e[72] = 101;
          e[73] = 102;
          e[74] = 103;
          e[75] = 104;
          e[76] = 105;
          e[77] = 106;
          e[78] = 107;
          e[79] = 108;
          e[80] = 109;
          e[81] = 110;
          e[82] = 111;
          e[83] = 112;
          e[84] = 113;
          e[85] = 114;
          e[86] = 115;
          e[87] = 116;
          e[88] = 117;
          e[89] = 118;
          e[90] = 119;
          e[91] = 120;
          e[92] = 121;
          e[93] = 122;
          e[94] = 123;
          e[95] = 124;
          e[96] = 125;
          e[97] = 126;
          e[98] = 196;
          e[99] = 197;
          e[100] = 199;
          e[101] = 201;
          e[102] = 209;
          e[103] = 214;
          e[104] = 220;
          e[105] = 225;
          e[106] = 224;
          e[107] = 226;
          e[108] = 228;
          e[109] = 227;
          e[110] = 229;
          e[111] = 231;
          e[112] = 233;
          e[113] = 232;
          e[114] = 234;
          e[115] = 235;
          e[116] = 237;
          e[117] = 236;
          e[118] = 238;
          e[119] = 239;
          e[120] = 241;
          e[121] = 243;
          e[122] = 242;
          e[123] = 244;
          e[124] = 246;
          e[125] = 245;
          e[126] = 250;
          e[127] = 249;
          e[128] = 251;
          e[129] = 252;
          e[130] = 8224;
          e[131] = 176;
          e[132] = 162;
          e[133] = 163;
          e[134] = 167;
          e[135] = 8226;
          e[136] = 182;
          e[137] = 223;
          e[138] = 174;
          e[139] = 169;
          e[140] = 8482;
          e[141] = 180;
          e[142] = 168;
          e[143] = 8800;
          e[144] = 198;
          e[145] = 216;
          e[146] = 8734;
          e[147] = 177;
          e[148] = 8804;
          e[149] = 8805;
          e[150] = 165;
          e[151] = 181;
          e[152] = 8706;
          e[153] = 8721;
          e[154] = 8719;
          e[156] = 8747;
          e[157] = 170;
          e[158] = 186;
          e[159] = 8486;
          e[160] = 230;
          e[161] = 248;
          e[162] = 191;
          e[163] = 161;
          e[164] = 172;
          e[165] = 8730;
          e[166] = 402;
          e[167] = 8776;
          e[168] = 8710;
          e[169] = 171;
          e[170] = 187;
          e[171] = 8230;
          e[179] = 8220;
          e[180] = 8221;
          e[181] = 8216;
          e[182] = 8217;
          e[200] = 193;
          e[203] = 205;
          e[207] = 211;
          e[210] = 218;
          e[223] = 711;
          e[224] = 321;
          e[225] = 322;
          e[226] = 352;
          e[227] = 353;
          e[228] = 381;
          e[229] = 382;
          e[233] = 221;
          e[234] = 253;
          e[252] = 263;
          e[253] = 268;
          e[254] = 269;
          e[258] = 258;
          e[260] = 260;
          e[261] = 261;
          e[265] = 280;
          e[266] = 281;
          e[267] = 282;
          e[268] = 283;
          e[269] = 313;
          e[275] = 323;
          e[276] = 324;
          e[278] = 328;
          e[283] = 344;
          e[284] = 345;
          e[285] = 346;
          e[286] = 347;
          e[292] = 367;
          e[295] = 377;
          e[296] = 378;
          e[298] = 380;
          e[305] = 963;
          e[306] = 964;
          e[307] = 966;
          e[308] = 8215;
          e[309] = 8252;
          e[310] = 8319;
          e[311] = 8359;
          e[312] = 8592;
          e[313] = 8593;
          e[337] = 9552;
          e[493] = 1039;
          e[494] = 1040;
          e[672] = 1488;
          e[673] = 1489;
          e[674] = 1490;
          e[675] = 1491;
          e[676] = 1492;
          e[677] = 1493;
          e[678] = 1494;
          e[679] = 1495;
          e[680] = 1496;
          e[681] = 1497;
          e[682] = 1498;
          e[683] = 1499;
          e[684] = 1500;
          e[685] = 1501;
          e[686] = 1502;
          e[687] = 1503;
          e[688] = 1504;
          e[689] = 1505;
          e[690] = 1506;
          e[691] = 1507;
          e[692] = 1508;
          e[693] = 1509;
          e[694] = 1510;
          e[695] = 1511;
          e[696] = 1512;
          e[697] = 1513;
          e[698] = 1514;
          e[705] = 1524;
          e[706] = 8362;
          e[710] = 64288;
          e[711] = 64298;
          e[759] = 1617;
          e[761] = 1776;
          e[763] = 1778;
          e[775] = 1652;
          e[777] = 1764;
          e[778] = 1780;
          e[779] = 1781;
          e[780] = 1782;
          e[782] = 771;
          e[783] = 64726;
          e[786] = 8363;
          e[788] = 8532;
          e[790] = 768;
          e[791] = 769;
          e[792] = 768;
          e[795] = 803;
          e[797] = 64336;
          e[798] = 64337;
          e[799] = 64342;
          e[800] = 64343;
          e[801] = 64344;
          e[802] = 64345;
          e[803] = 64362;
          e[804] = 64363;
          e[805] = 64364;
          e[2424] = 7821;
          e[2425] = 7822;
          e[2426] = 7823;
          e[2427] = 7824;
          e[2428] = 7825;
          e[2429] = 7826;
          e[2430] = 7827;
          e[2433] = 7682;
          e[2678] = 8045;
          e[2679] = 8046;
          e[2830] = 1552;
          e[2838] = 686;
          e[2840] = 751;
          e[2842] = 753;
          e[2843] = 754;
          e[2844] = 755;
          e[2846] = 757;
          e[2856] = 767;
          e[2857] = 848;
          e[2858] = 849;
          e[2862] = 853;
          e[2863] = 854;
          e[2864] = 855;
          e[2865] = 861;
          e[2866] = 862;
          e[2906] = 7460;
          e[2908] = 7462;
          e[2909] = 7463;
          e[2910] = 7464;
          e[2912] = 7466;
          e[2913] = 7467;
          e[2914] = 7468;
          e[2916] = 7470;
          e[2917] = 7471;
          e[2918] = 7472;
          e[2920] = 7474;
          e[2921] = 7475;
          e[2922] = 7476;
          e[2924] = 7478;
          e[2925] = 7479;
          e[2926] = 7480;
          e[2928] = 7482;
          e[2929] = 7483;
          e[2930] = 7484;
          e[2932] = 7486;
          e[2933] = 7487;
          e[2934] = 7488;
          e[2936] = 7490;
          e[2937] = 7491;
          e[2938] = 7492;
          e[2940] = 7494;
          e[2941] = 7495;
          e[2942] = 7496;
          e[2944] = 7498;
          e[2946] = 7500;
          e[2948] = 7502;
          e[2950] = 7504;
          e[2951] = 7505;
          e[2952] = 7506;
          e[2954] = 7508;
          e[2955] = 7509;
          e[2956] = 7510;
          e[2958] = 7512;
          e[2959] = 7513;
          e[2960] = 7514;
          e[2962] = 7516;
          e[2963] = 7517;
          e[2964] = 7518;
          e[2966] = 7520;
          e[2967] = 7521;
          e[2968] = 7522;
          e[2970] = 7524;
          e[2971] = 7525;
          e[2972] = 7526;
          e[2974] = 7528;
          e[2975] = 7529;
          e[2976] = 7530;
          e[2978] = 1537;
          e[2979] = 1538;
          e[2980] = 1539;
          e[2982] = 1549;
          e[2983] = 1551;
          e[2984] = 1552;
          e[2986] = 1554;
          e[2987] = 1555;
          e[2988] = 1556;
          e[2990] = 1623;
          e[2991] = 1624;
          e[2995] = 1775;
          e[2999] = 1791;
          e[3002] = 64290;
          e[3003] = 64291;
          e[3004] = 64292;
          e[3006] = 64294;
          e[3007] = 64295;
          e[3008] = 64296;
          e[3011] = 1900;
          e[3014] = 8223;
          e[3015] = 8244;
          e[3017] = 7532;
          e[3018] = 7533;
          e[3019] = 7534;
          e[3075] = 7590;
          e[3076] = 7591;
          e[3079] = 7594;
          e[3080] = 7595;
          e[3083] = 7598;
          e[3084] = 7599;
          e[3087] = 7602;
          e[3088] = 7603;
          e[3091] = 7606;
          e[3092] = 7607;
          e[3095] = 7610;
          e[3096] = 7611;
          e[3099] = 7614;
          e[3100] = 7615;
          e[3103] = 7618;
          e[3104] = 7619;
          e[3107] = 8337;
          e[3108] = 8338;
          e[3116] = 1884;
          e[3119] = 1885;
          e[3120] = 1885;
          e[3123] = 1886;
          e[3124] = 1886;
          e[3127] = 1887;
          e[3128] = 1887;
          e[3131] = 1888;
          e[3132] = 1888;
          e[3135] = 1889;
          e[3136] = 1889;
          e[3139] = 1890;
          e[3140] = 1890;
          e[3143] = 1891;
          e[3144] = 1891;
          e[3147] = 1892;
          e[3148] = 1892;
          e[3153] = 580;
          e[3154] = 581;
          e[3157] = 584;
          e[3158] = 585;
          e[3161] = 588;
          e[3162] = 589;
          e[3165] = 891;
          e[3166] = 892;
          e[3169] = 1274;
          e[3170] = 1275;
          e[3173] = 1278;
          e[3174] = 1279;
          e[3181] = 7622;
          e[3182] = 7623;
          e[3282] = 11799;
          e[3316] = 578;
          e[3379] = 42785;
          e[3393] = 1159;
          e[3416] = 8377;
        });
        t.getGlyphMapForStandardFonts = h;
        var u = (0, r.getLookupTableFactory)(function (e) {
          e[227] = 322;
          e[264] = 261;
          e[291] = 346;
        });
        t.getSupplementalGlyphMapForArialBlack = u;
        var d = (0, r.getLookupTableFactory)(function (e) {
          e[1] = 32;
          e[4] = 65;
          e[5] = 192;
          e[6] = 193;
          e[9] = 196;
          e[17] = 66;
          e[18] = 67;
          e[21] = 268;
          e[24] = 68;
          e[28] = 69;
          e[29] = 200;
          e[30] = 201;
          e[32] = 282;
          e[38] = 70;
          e[39] = 71;
          e[44] = 72;
          e[47] = 73;
          e[48] = 204;
          e[49] = 205;
          e[58] = 74;
          e[60] = 75;
          e[62] = 76;
          e[68] = 77;
          e[69] = 78;
          e[75] = 79;
          e[76] = 210;
          e[80] = 214;
          e[87] = 80;
          e[89] = 81;
          e[90] = 82;
          e[92] = 344;
          e[94] = 83;
          e[97] = 352;
          e[100] = 84;
          e[104] = 85;
          e[109] = 220;
          e[115] = 86;
          e[116] = 87;
          e[121] = 88;
          e[122] = 89;
          e[124] = 221;
          e[127] = 90;
          e[129] = 381;
          e[258] = 97;
          e[259] = 224;
          e[260] = 225;
          e[263] = 228;
          e[268] = 261;
          e[271] = 98;
          e[272] = 99;
          e[273] = 263;
          e[275] = 269;
          e[282] = 100;
          e[286] = 101;
          e[287] = 232;
          e[288] = 233;
          e[290] = 283;
          e[295] = 281;
          e[296] = 102;
          e[336] = 103;
          e[346] = 104;
          e[349] = 105;
          e[350] = 236;
          e[351] = 237;
          e[361] = 106;
          e[364] = 107;
          e[367] = 108;
          e[371] = 322;
          e[373] = 109;
          e[374] = 110;
          e[381] = 111;
          e[382] = 242;
          e[383] = 243;
          e[386] = 246;
          e[393] = 112;
          e[395] = 113;
          e[396] = 114;
          e[398] = 345;
          e[400] = 115;
          e[401] = 347;
          e[403] = 353;
          e[410] = 116;
          e[437] = 117;
          e[442] = 252;
          e[448] = 118;
          e[449] = 119;
          e[454] = 120;
          e[455] = 121;
          e[457] = 253;
          e[460] = 122;
          e[462] = 382;
          e[463] = 380;
          e[853] = 44;
          e[855] = 58;
          e[856] = 46;
          e[876] = 47;
          e[878] = 45;
          e[882] = 45;
          e[894] = 40;
          e[895] = 41;
          e[896] = 91;
          e[897] = 93;
          e[923] = 64;
          e[1004] = 48;
          e[1005] = 49;
          e[1006] = 50;
          e[1007] = 51;
          e[1008] = 52;
          e[1009] = 53;
          e[1010] = 54;
          e[1011] = 55;
          e[1012] = 56;
          e[1013] = 57;
          e[1081] = 37;
          e[1085] = 43;
          e[1086] = 45;
        });
        t.getSupplementalGlyphMapForCalibri = d;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.ToUnicodeMap = t.IdentityToUnicodeMap = void 0;
        var r = a(2);
        t.ToUnicodeMap = /*#__PURE__*/function () {
          function ToUnicodeMap() {
            var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
            _classCallCheck(this, ToUnicodeMap);
            this._map = e;
          }
          _createClass(ToUnicodeMap, [{
            key: "length",
            get: function get() {
              return this._map.length;
            }
          }, {
            key: "forEach",
            value: function forEach(e) {
              for (var _t272 in this._map) e(_t272, this._map[_t272].charCodeAt(0));
            }
          }, {
            key: "has",
            value: function has(e) {
              return void 0 !== this._map[e];
            }
          }, {
            key: "get",
            value: function get(e) {
              return this._map[e];
            }
          }, {
            key: "charCodeOf",
            value: function charCodeOf(e) {
              var t = this._map;
              if (t.length <= 65536) return t.indexOf(e);
              for (var _a218 in t) if (t[_a218] === e) return 0 | _a218;
              return -1;
            }
          }, {
            key: "amend",
            value: function amend(e) {
              for (var _t273 in e) this._map[_t273] = e[_t273];
            }
          }]);
          return ToUnicodeMap;
        }();
        t.IdentityToUnicodeMap = /*#__PURE__*/function () {
          function IdentityToUnicodeMap(e, t) {
            _classCallCheck(this, IdentityToUnicodeMap);
            this.firstChar = e;
            this.lastChar = t;
          }
          _createClass(IdentityToUnicodeMap, [{
            key: "length",
            get: function get() {
              return this.lastChar + 1 - this.firstChar;
            }
          }, {
            key: "forEach",
            value: function forEach(e) {
              for (var _t274 = this.firstChar, _a219 = this.lastChar; _t274 <= _a219; _t274++) e(_t274, _t274);
            }
          }, {
            key: "has",
            value: function has(e) {
              return this.firstChar <= e && e <= this.lastChar;
            }
          }, {
            key: "get",
            value: function get(e) {
              if (this.firstChar <= e && e <= this.lastChar) return String.fromCharCode(e);
            }
          }, {
            key: "charCodeOf",
            value: function charCodeOf(e) {
              return Number.isInteger(e) && e >= this.firstChar && e <= this.lastChar ? e : -1;
            }
          }, {
            key: "amend",
            value: function amend(e) {
              (0, r.unreachable)("Should not call amend()");
            }
          }]);
          return IdentityToUnicodeMap;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.CFFFont = void 0;
        var r = a(35),
          i = a(38),
          n = a(2);
        t.CFFFont = /*#__PURE__*/function () {
          function CFFFont(e, t) {
            _classCallCheck(this, CFFFont);
            this.properties = t;
            var a = new r.CFFParser(e, t, i.SEAC_ANALYSIS_ENABLED);
            this.cff = a.parse();
            this.cff.duplicateFirstGlyph();
            var s = new r.CFFCompiler(this.cff);
            this.seacs = this.cff.seacs;
            try {
              this.data = s.compile();
            } catch (a) {
              (0, n.warn)("Failed to compile font " + t.loadedName);
              this.data = e;
            }
            this._createBuiltInEncoding();
          }
          _createClass(CFFFont, [{
            key: "numGlyphs",
            get: function get() {
              return this.cff.charStrings.count;
            }
          }, {
            key: "getCharset",
            value: function getCharset() {
              return this.cff.charset.charset;
            }
          }, {
            key: "getGlyphMapping",
            value: function getGlyphMapping() {
              var e = this.cff,
                t = this.properties,
                a = t.cidToGidMap,
                r = t.cMap,
                n = e.charset.charset;
              var s, o;
              if (t.composite) {
                var _t275, _i157;
                if (a && a.length > 0) {
                  _t275 = Object.create(null);
                  for (var _e387 = 0, _r178 = a.length; _e387 < _r178; _e387++) {
                    var _r179 = a[_e387];
                    void 0 !== _r179 && (_t275[_r179] = _e387);
                  }
                }
                s = Object.create(null);
                if (e.isCIDFont) for (o = 0; o < n.length; o++) {
                  var _e388 = n[o];
                  _i157 = r.charCodeOf(_e388);
                  _t275 && void 0 !== _t275[_i157] && (_i157 = _t275[_i157]);
                  s[_i157] = o;
                } else for (o = 0; o < e.charStrings.count; o++) {
                  _i157 = r.charCodeOf(o);
                  s[_i157] = o;
                }
                return s;
              }
              var c = e.encoding ? e.encoding.encoding : null;
              t.isInternalFont && (c = t.defaultEncoding);
              s = (0, i.type1FontGlyphMapping)(t, c, n);
              return s;
            }
          }, {
            key: "hasGlyphId",
            value: function hasGlyphId(e) {
              return this.cff.hasGlyphId(e);
            }
          }, {
            key: "_createBuiltInEncoding",
            value: function _createBuiltInEncoding() {
              var _this$cff = this.cff,
                e = _this$cff.charset,
                t = _this$cff.encoding;
              if (!e || !t) return;
              var a = e.charset,
                r = t.encoding,
                i = [];
              for (var _e389 in r) {
                var _t276 = r[_e389];
                if (_t276 >= 0) {
                  var _r180 = a[_t276];
                  _r180 && (i[_e389] = _r180);
                }
              }
              i.length > 0 && (this.properties.builtInEncoding = i);
            }
          }]);
          return CFFFont;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.FontRendererFactory = void 0;
        var r = a(2),
          i = a(35),
          n = a(39),
          s = a(37),
          o = a(8);
        function getUint32(e, t) {
          return (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0;
        }
        function getUint16(e, t) {
          return e[t] << 8 | e[t + 1];
        }
        function getInt16(e, t) {
          return (e[t] << 24 | e[t + 1] << 16) >> 16;
        }
        function getInt8(e, t) {
          return e[t] << 24 >> 24;
        }
        function getFloat214(e, t) {
          return getInt16(e, t) / 16384;
        }
        function getSubroutineBias(e) {
          var t = e.length;
          var a = 32768;
          t < 1240 ? a = 107 : t < 33900 && (a = 1131);
          return a;
        }
        function parseCmap(e, t, a) {
          var i = 1 === getUint16(e, t + 2) ? getUint32(e, t + 8) : getUint32(e, t + 16),
            n = getUint16(e, t + i);
          var s, o, c;
          if (4 === n) {
            getUint16(e, t + i + 2);
            var _a220 = getUint16(e, t + i + 6) >> 1;
            o = t + i + 14;
            s = [];
            for (c = 0; c < _a220; c++, o += 2) s[c] = {
              end: getUint16(e, o)
            };
            o += 2;
            for (c = 0; c < _a220; c++, o += 2) s[c].start = getUint16(e, o);
            for (c = 0; c < _a220; c++, o += 2) s[c].idDelta = getUint16(e, o);
            for (c = 0; c < _a220; c++, o += 2) {
              var _t277 = getUint16(e, o);
              if (0 !== _t277) {
                s[c].ids = [];
                for (var _a221 = 0, _r181 = s[c].end - s[c].start + 1; _a221 < _r181; _a221++) {
                  s[c].ids[_a221] = getUint16(e, o + _t277);
                  _t277 += 2;
                }
              }
            }
            return s;
          }
          if (12 === n) {
            var _a222 = getUint32(e, t + i + 12);
            o = t + i + 16;
            s = [];
            for (c = 0; c < _a222; c++) {
              t = getUint32(e, o);
              s.push({
                start: t,
                end: getUint32(e, o + 4),
                idDelta: getUint32(e, o + 8) - t
              });
              o += 12;
            }
            return s;
          }
          throw new r.FormatError("unsupported cmap: ".concat(n));
        }
        function parseCff(e, t, a, r) {
          var n = new i.CFFParser(new o.Stream(e, t, a - t), {}, r).parse();
          return {
            glyphs: n.charStrings.objects,
            subrs: n.topDict.privateDict && n.topDict.privateDict.subrsIndex && n.topDict.privateDict.subrsIndex.objects,
            gsubrs: n.globalSubrIndex && n.globalSubrIndex.objects,
            isCFFCIDFont: n.isCIDFont,
            fdSelect: n.fdSelect,
            fdArray: n.fdArray
          };
        }
        function lookupCmap(e, t) {
          var a = t.codePointAt(0);
          var r = 0,
            i = 0,
            n = e.length - 1;
          for (; i < n;) {
            var _t278 = i + n + 1 >> 1;
            a < e[_t278].start ? n = _t278 - 1 : i = _t278;
          }
          e[i].start <= a && a <= e[i].end && (r = e[i].idDelta + (e[i].ids ? e[i].ids[a - e[i].start] : a) & 65535);
          return {
            charCode: a,
            glyphId: r
          };
        }
        function compileGlyf(e, t, a) {
          function moveTo(e, a) {
            t.push({
              cmd: "moveTo",
              args: [e, a]
            });
          }
          function lineTo(e, a) {
            t.push({
              cmd: "lineTo",
              args: [e, a]
            });
          }
          function quadraticCurveTo(e, a, r, i) {
            t.push({
              cmd: "quadraticCurveTo",
              args: [e, a, r, i]
            });
          }
          var r = 0;
          var i = getInt16(e, r);
          var n,
            s = 0,
            o = 0;
          r += 10;
          if (i < 0) do {
            n = getUint16(e, r);
            var _i158 = getUint16(e, r + 2);
            r += 4;
            var _c35 = void 0,
              l = void 0;
            if (1 & n) {
              if (2 & n) {
                _c35 = getInt16(e, r);
                l = getInt16(e, r + 2);
              } else {
                _c35 = getUint16(e, r);
                l = getUint16(e, r + 2);
              }
              r += 4;
            } else if (2 & n) {
              _c35 = getInt8(e, r++);
              l = getInt8(e, r++);
            } else {
              _c35 = e[r++];
              l = e[r++];
            }
            if (2 & n) {
              s = _c35;
              o = l;
            } else {
              s = 0;
              o = 0;
            }
            var _h23 = 1,
              u = 1,
              d = 0,
              _f16 = 0;
            if (8 & n) {
              _h23 = u = getFloat214(e, r);
              r += 2;
            } else if (64 & n) {
              _h23 = getFloat214(e, r);
              u = getFloat214(e, r + 2);
              r += 4;
            } else if (128 & n) {
              _h23 = getFloat214(e, r);
              d = getFloat214(e, r + 2);
              _f16 = getFloat214(e, r + 4);
              u = getFloat214(e, r + 6);
              r += 8;
            }
            var _g16 = a.glyphs[_i158];
            if (_g16) {
              t.push({
                cmd: "save"
              }, {
                cmd: "transform",
                args: [_h23, d, _f16, u, s, o]
              });
              compileGlyf(_g16, t, a);
              t.push({
                cmd: "restore"
              });
            }
          } while (32 & n);else {
            var _t279 = [];
            var _a223, _c36;
            for (_a223 = 0; _a223 < i; _a223++) {
              _t279.push(getUint16(e, r));
              r += 2;
            }
            r += 2 + getUint16(e, r);
            var _l24 = _t279.at(-1) + 1,
              _h24 = [];
            for (; _h24.length < _l24;) {
              n = e[r++];
              var _t280 = 1;
              8 & n && (_t280 += e[r++]);
              for (; _t280-- > 0;) _h24.push({
                flags: n
              });
            }
            for (_a223 = 0; _a223 < _l24; _a223++) {
              switch (18 & _h24[_a223].flags) {
                case 0:
                  s += getInt16(e, r);
                  r += 2;
                  break;
                case 2:
                  s -= e[r++];
                  break;
                case 18:
                  s += e[r++];
              }
              _h24[_a223].x = s;
            }
            for (_a223 = 0; _a223 < _l24; _a223++) {
              switch (36 & _h24[_a223].flags) {
                case 0:
                  o += getInt16(e, r);
                  r += 2;
                  break;
                case 4:
                  o -= e[r++];
                  break;
                case 36:
                  o += e[r++];
              }
              _h24[_a223].y = o;
            }
            var _u17 = 0;
            for (r = 0; r < i; r++) {
              var _e390 = _t279[r],
                _i159 = _h24.slice(_u17, _e390 + 1);
              if (1 & _i159[0].flags) _i159.push(_i159[0]);else if (1 & _i159.at(-1).flags) _i159.unshift(_i159.at(-1));else {
                var _e391 = {
                  flags: 1,
                  x: (_i159[0].x + _i159.at(-1).x) / 2,
                  y: (_i159[0].y + _i159.at(-1).y) / 2
                };
                _i159.unshift(_e391);
                _i159.push(_e391);
              }
              moveTo(_i159[0].x, _i159[0].y);
              for (_a223 = 1, _c36 = _i159.length; _a223 < _c36; _a223++) if (1 & _i159[_a223].flags) lineTo(_i159[_a223].x, _i159[_a223].y);else if (1 & _i159[_a223 + 1].flags) {
                quadraticCurveTo(_i159[_a223].x, _i159[_a223].y, _i159[_a223 + 1].x, _i159[_a223 + 1].y);
                _a223++;
              } else quadraticCurveTo(_i159[_a223].x, _i159[_a223].y, (_i159[_a223].x + _i159[_a223 + 1].x) / 2, (_i159[_a223].y + _i159[_a223 + 1].y) / 2);
              _u17 = _e390 + 1;
            }
          }
        }
        function compileCharString(e, t, a, i) {
          function moveTo(e, a) {
            t.push({
              cmd: "moveTo",
              args: [e, a]
            });
          }
          function lineTo(e, a) {
            t.push({
              cmd: "lineTo",
              args: [e, a]
            });
          }
          function bezierCurveTo(e, a, r, i, n, s) {
            t.push({
              cmd: "bezierCurveTo",
              args: [e, a, r, i, n, s]
            });
          }
          var n = [];
          var o = 0,
            c = 0,
            l = 0;
          !function parse(e) {
            var h = 0;
            for (; h < e.length;) {
              var u = void 0,
                d = void 0,
                _f17 = void 0,
                _g17 = void 0,
                _p12 = void 0,
                m = void 0,
                b = void 0,
                y = void 0,
                w = void 0,
                S = !1,
                x = e[h++];
              switch (x) {
                case 1:
                case 3:
                case 18:
                case 23:
                  l += n.length >> 1;
                  S = !0;
                  break;
                case 4:
                  c += n.pop();
                  moveTo(o, c);
                  S = !0;
                  break;
                case 5:
                  for (; n.length > 0;) {
                    o += n.shift();
                    c += n.shift();
                    lineTo(o, c);
                  }
                  break;
                case 6:
                  for (; n.length > 0;) {
                    o += n.shift();
                    lineTo(o, c);
                    if (0 === n.length) break;
                    c += n.shift();
                    lineTo(o, c);
                  }
                  break;
                case 7:
                  for (; n.length > 0;) {
                    c += n.shift();
                    lineTo(o, c);
                    if (0 === n.length) break;
                    o += n.shift();
                    lineTo(o, c);
                  }
                  break;
                case 8:
                  for (; n.length > 0;) {
                    u = o + n.shift();
                    _f17 = c + n.shift();
                    d = u + n.shift();
                    _g17 = _f17 + n.shift();
                    o = d + n.shift();
                    c = _g17 + n.shift();
                    bezierCurveTo(u, _f17, d, _g17, o, c);
                  }
                  break;
                case 10:
                  y = n.pop();
                  w = null;
                  if (a.isCFFCIDFont) {
                    var _e392 = a.fdSelect.getFDIndex(i);
                    if (_e392 >= 0 && _e392 < a.fdArray.length) {
                      var _t281 = a.fdArray[_e392];
                      var _r182 = void 0;
                      _t281.privateDict && _t281.privateDict.subrsIndex && (_r182 = _t281.privateDict.subrsIndex.objects);
                      if (_r182) {
                        y += getSubroutineBias(_r182);
                        w = _r182[y];
                      }
                    } else (0, r.warn)("Invalid fd index for glyph index.");
                  } else w = a.subrs[y + a.subrsBias];
                  w && parse(w);
                  break;
                case 11:
                  return;
                case 12:
                  x = e[h++];
                  switch (x) {
                    case 34:
                      u = o + n.shift();
                      d = u + n.shift();
                      _p12 = c + n.shift();
                      o = d + n.shift();
                      bezierCurveTo(u, c, d, _p12, o, _p12);
                      u = o + n.shift();
                      d = u + n.shift();
                      o = d + n.shift();
                      bezierCurveTo(u, _p12, d, c, o, c);
                      break;
                    case 35:
                      u = o + n.shift();
                      _f17 = c + n.shift();
                      d = u + n.shift();
                      _g17 = _f17 + n.shift();
                      o = d + n.shift();
                      c = _g17 + n.shift();
                      bezierCurveTo(u, _f17, d, _g17, o, c);
                      u = o + n.shift();
                      _f17 = c + n.shift();
                      d = u + n.shift();
                      _g17 = _f17 + n.shift();
                      o = d + n.shift();
                      c = _g17 + n.shift();
                      bezierCurveTo(u, _f17, d, _g17, o, c);
                      n.pop();
                      break;
                    case 36:
                      u = o + n.shift();
                      _p12 = c + n.shift();
                      d = u + n.shift();
                      m = _p12 + n.shift();
                      o = d + n.shift();
                      bezierCurveTo(u, _p12, d, m, o, m);
                      u = o + n.shift();
                      d = u + n.shift();
                      b = m + n.shift();
                      o = d + n.shift();
                      bezierCurveTo(u, m, d, b, o, c);
                      break;
                    case 37:
                      var _e393 = o,
                        _t282 = c;
                      u = o + n.shift();
                      _f17 = c + n.shift();
                      d = u + n.shift();
                      _g17 = _f17 + n.shift();
                      o = d + n.shift();
                      c = _g17 + n.shift();
                      bezierCurveTo(u, _f17, d, _g17, o, c);
                      u = o + n.shift();
                      _f17 = c + n.shift();
                      d = u + n.shift();
                      _g17 = _f17 + n.shift();
                      o = d;
                      c = _g17;
                      Math.abs(o - _e393) > Math.abs(c - _t282) ? o += n.shift() : c += n.shift();
                      bezierCurveTo(u, _f17, d, _g17, o, c);
                      break;
                    default:
                      throw new r.FormatError("unknown operator: 12 ".concat(x));
                  }
                  break;
                case 14:
                  if (n.length >= 4) {
                    var _e394 = n.pop(),
                      _r183 = n.pop();
                    c = n.pop();
                    o = n.pop();
                    t.push({
                      cmd: "save"
                    }, {
                      cmd: "translate",
                      args: [o, c]
                    });
                    var _i160 = lookupCmap(a.cmap, String.fromCharCode(a.glyphNameMap[s.StandardEncoding[_e394]]));
                    compileCharString(a.glyphs[_i160.glyphId], t, a, _i160.glyphId);
                    t.push({
                      cmd: "restore"
                    });
                    _i160 = lookupCmap(a.cmap, String.fromCharCode(a.glyphNameMap[s.StandardEncoding[_r183]]));
                    compileCharString(a.glyphs[_i160.glyphId], t, a, _i160.glyphId);
                  }
                  return;
                case 19:
                case 20:
                  l += n.length >> 1;
                  h += l + 7 >> 3;
                  S = !0;
                  break;
                case 21:
                  c += n.pop();
                  o += n.pop();
                  moveTo(o, c);
                  S = !0;
                  break;
                case 22:
                  o += n.pop();
                  moveTo(o, c);
                  S = !0;
                  break;
                case 24:
                  for (; n.length > 2;) {
                    u = o + n.shift();
                    _f17 = c + n.shift();
                    d = u + n.shift();
                    _g17 = _f17 + n.shift();
                    o = d + n.shift();
                    c = _g17 + n.shift();
                    bezierCurveTo(u, _f17, d, _g17, o, c);
                  }
                  o += n.shift();
                  c += n.shift();
                  lineTo(o, c);
                  break;
                case 25:
                  for (; n.length > 6;) {
                    o += n.shift();
                    c += n.shift();
                    lineTo(o, c);
                  }
                  u = o + n.shift();
                  _f17 = c + n.shift();
                  d = u + n.shift();
                  _g17 = _f17 + n.shift();
                  o = d + n.shift();
                  c = _g17 + n.shift();
                  bezierCurveTo(u, _f17, d, _g17, o, c);
                  break;
                case 26:
                  n.length % 2 && (o += n.shift());
                  for (; n.length > 0;) {
                    u = o;
                    _f17 = c + n.shift();
                    d = u + n.shift();
                    _g17 = _f17 + n.shift();
                    o = d;
                    c = _g17 + n.shift();
                    bezierCurveTo(u, _f17, d, _g17, o, c);
                  }
                  break;
                case 27:
                  n.length % 2 && (c += n.shift());
                  for (; n.length > 0;) {
                    u = o + n.shift();
                    _f17 = c;
                    d = u + n.shift();
                    _g17 = _f17 + n.shift();
                    o = d + n.shift();
                    c = _g17;
                    bezierCurveTo(u, _f17, d, _g17, o, c);
                  }
                  break;
                case 28:
                  n.push((e[h] << 24 | e[h + 1] << 16) >> 16);
                  h += 2;
                  break;
                case 29:
                  y = n.pop() + a.gsubrsBias;
                  w = a.gsubrs[y];
                  w && parse(w);
                  break;
                case 30:
                  for (; n.length > 0;) {
                    u = o;
                    _f17 = c + n.shift();
                    d = u + n.shift();
                    _g17 = _f17 + n.shift();
                    o = d + n.shift();
                    c = _g17 + (1 === n.length ? n.shift() : 0);
                    bezierCurveTo(u, _f17, d, _g17, o, c);
                    if (0 === n.length) break;
                    u = o + n.shift();
                    _f17 = c;
                    d = u + n.shift();
                    _g17 = _f17 + n.shift();
                    c = _g17 + n.shift();
                    o = d + (1 === n.length ? n.shift() : 0);
                    bezierCurveTo(u, _f17, d, _g17, o, c);
                  }
                  break;
                case 31:
                  for (; n.length > 0;) {
                    u = o + n.shift();
                    _f17 = c;
                    d = u + n.shift();
                    _g17 = _f17 + n.shift();
                    c = _g17 + n.shift();
                    o = d + (1 === n.length ? n.shift() : 0);
                    bezierCurveTo(u, _f17, d, _g17, o, c);
                    if (0 === n.length) break;
                    u = o;
                    _f17 = c + n.shift();
                    d = u + n.shift();
                    _g17 = _f17 + n.shift();
                    o = d + n.shift();
                    c = _g17 + (1 === n.length ? n.shift() : 0);
                    bezierCurveTo(u, _f17, d, _g17, o, c);
                  }
                  break;
                default:
                  if (x < 32) throw new r.FormatError("unknown operator: ".concat(x));
                  if (x < 247) n.push(x - 139);else if (x < 251) n.push(256 * (x - 247) + e[h++] + 108);else if (x < 255) n.push(256 * -(x - 251) - e[h++] - 108);else {
                    n.push((e[h] << 24 | e[h + 1] << 16 | e[h + 2] << 8 | e[h + 3]) / 65536);
                    h += 4;
                  }
              }
              S && (n.length = 0);
            }
          }(e);
        }
        var c = [];
        var CompiledFont = /*#__PURE__*/function () {
          function CompiledFont(e) {
            _classCallCheck(this, CompiledFont);
            this.constructor === CompiledFont && (0, r.unreachable)("Cannot initialize CompiledFont.");
            this.fontMatrix = e;
            this.compiledGlyphs = Object.create(null);
            this.compiledCharCodeToGlyphId = Object.create(null);
          }
          _createClass(CompiledFont, [{
            key: "getPathJs",
            value: function getPathJs(e) {
              var _lookupCmap = lookupCmap(this.cmap, e),
                t = _lookupCmap.charCode,
                a = _lookupCmap.glyphId;
              var r = this.compiledGlyphs[a];
              if (!r) try {
                r = this.compileGlyph(this.glyphs[a], a);
                this.compiledGlyphs[a] = r;
              } catch (e) {
                this.compiledGlyphs[a] = c;
                void 0 === this.compiledCharCodeToGlyphId[t] && (this.compiledCharCodeToGlyphId[t] = a);
                throw e;
              }
              void 0 === this.compiledCharCodeToGlyphId[t] && (this.compiledCharCodeToGlyphId[t] = a);
              return r;
            }
          }, {
            key: "compileGlyph",
            value: function compileGlyph(e, t) {
              if (!e || 0 === e.length || 14 === e[0]) return c;
              var a = this.fontMatrix;
              if (this.isCFFCIDFont) {
                var _e395 = this.fdSelect.getFDIndex(t);
                if (_e395 >= 0 && _e395 < this.fdArray.length) {
                  a = this.fdArray[_e395].getByName("FontMatrix") || r.FONT_IDENTITY_MATRIX;
                } else (0, r.warn)("Invalid fd index for glyph index.");
              }
              var i = [{
                cmd: "save"
              }, {
                cmd: "transform",
                args: a.slice()
              }, {
                cmd: "scale",
                args: ["size", "-size"]
              }];
              this.compileGlyphImpl(e, i, t);
              i.push({
                cmd: "restore"
              });
              return i;
            }
          }, {
            key: "compileGlyphImpl",
            value: function compileGlyphImpl() {
              (0, r.unreachable)("Children classes should implement this.");
            }
          }, {
            key: "hasBuiltPath",
            value: function hasBuiltPath(e) {
              var _lookupCmap2 = lookupCmap(this.cmap, e),
                t = _lookupCmap2.charCode,
                a = _lookupCmap2.glyphId;
              return void 0 !== this.compiledGlyphs[a] && void 0 !== this.compiledCharCodeToGlyphId[t];
            }
          }]);
          return CompiledFont;
        }();
        var TrueTypeCompiled = /*#__PURE__*/function (_CompiledFont) {
          _inherits(TrueTypeCompiled, _CompiledFont);
          var _super74 = _createSuper(TrueTypeCompiled);
          function TrueTypeCompiled(e, t, a) {
            var _this81;
            _classCallCheck(this, TrueTypeCompiled);
            _this81 = _super74.call(this, a || [488e-6, 0, 0, 488e-6, 0, 0]);
            _this81.glyphs = e;
            _this81.cmap = t;
            return _this81;
          }
          _createClass(TrueTypeCompiled, [{
            key: "compileGlyphImpl",
            value: function compileGlyphImpl(e, t) {
              compileGlyf(e, t, this);
            }
          }]);
          return TrueTypeCompiled;
        }(CompiledFont);
        var Type2Compiled = /*#__PURE__*/function (_CompiledFont2) {
          _inherits(Type2Compiled, _CompiledFont2);
          var _super75 = _createSuper(Type2Compiled);
          function Type2Compiled(e, t, a, r) {
            var _this82;
            _classCallCheck(this, Type2Compiled);
            _this82 = _super75.call(this, a || [.001, 0, 0, .001, 0, 0]);
            _this82.glyphs = e.glyphs;
            _this82.gsubrs = e.gsubrs || [];
            _this82.subrs = e.subrs || [];
            _this82.cmap = t;
            _this82.glyphNameMap = r || (0, n.getGlyphsUnicode)();
            _this82.gsubrsBias = getSubroutineBias(_this82.gsubrs);
            _this82.subrsBias = getSubroutineBias(_this82.subrs);
            _this82.isCFFCIDFont = e.isCFFCIDFont;
            _this82.fdSelect = e.fdSelect;
            _this82.fdArray = e.fdArray;
            return _this82;
          }
          _createClass(Type2Compiled, [{
            key: "compileGlyphImpl",
            value: function compileGlyphImpl(e, t, a) {
              compileCharString(e, t, this, a);
            }
          }]);
          return Type2Compiled;
        }(CompiledFont);
        t.FontRendererFactory = /*#__PURE__*/function () {
          function FontRendererFactory() {
            _classCallCheck(this, FontRendererFactory);
          }
          _createClass(FontRendererFactory, null, [{
            key: "create",
            value: function create(e, t) {
              var a = new Uint8Array(e.data);
              var i, n, s, o, c, l;
              var h = getUint16(a, 4);
              for (var _e396 = 0, u = 12; _e396 < h; _e396++, u += 16) {
                var _e397 = (0, r.bytesToString)(a.subarray(u, u + 4)),
                  _h25 = getUint32(a, u + 8),
                  d = getUint32(a, u + 12);
                switch (_e397) {
                  case "cmap":
                    i = parseCmap(a, _h25);
                    break;
                  case "glyf":
                    n = a.subarray(_h25, _h25 + d);
                    break;
                  case "loca":
                    s = a.subarray(_h25, _h25 + d);
                    break;
                  case "head":
                    l = getUint16(a, _h25 + 18);
                    c = getUint16(a, _h25 + 50);
                    break;
                  case "CFF ":
                    o = parseCff(a, _h25, _h25 + d, t);
                }
              }
              if (n) {
                var _t283 = l ? [1 / l, 0, 0, 1 / l, 0, 0] : e.fontMatrix;
                return new TrueTypeCompiled(function parseGlyfTable(e, t, a) {
                  var r, i;
                  if (a) {
                    r = 4;
                    i = getUint32;
                  } else {
                    r = 2;
                    i = function i(e, t) {
                      return 2 * getUint16(e, t);
                    };
                  }
                  var n = [];
                  var s = i(t, 0);
                  for (var _a224 = r; _a224 < t.length; _a224 += r) {
                    var _r184 = i(t, _a224);
                    n.push(e.subarray(s, _r184));
                    s = _r184;
                  }
                  return n;
                }(n, s, c), i, _t283);
              }
              return new Type2Compiled(o, i, e.fontMatrix, e.glyphNameMap);
            }
          }]);
          return FontRendererFactory;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.getMetrics = t.getFontBasicMetrics = void 0;
        var r = a(3);
        var i = (0, r.getLookupTableFactory)(function (e) {
          e.Courier = 600;
          e["Courier-Bold"] = 600;
          e["Courier-BoldOblique"] = 600;
          e["Courier-Oblique"] = 600;
          e.Helvetica = (0, r.getLookupTableFactory)(function (e) {
            e.space = 278;
            e.exclam = 278;
            e.quotedbl = 355;
            e.numbersign = 556;
            e.dollar = 556;
            e.percent = 889;
            e.ampersand = 667;
            e.quoteright = 222;
            e.parenleft = 333;
            e.parenright = 333;
            e.asterisk = 389;
            e.plus = 584;
            e.comma = 278;
            e.hyphen = 333;
            e.period = 278;
            e.slash = 278;
            e.zero = 556;
            e.one = 556;
            e.two = 556;
            e.three = 556;
            e.four = 556;
            e.five = 556;
            e.six = 556;
            e.seven = 556;
            e.eight = 556;
            e.nine = 556;
            e.colon = 278;
            e.semicolon = 278;
            e.less = 584;
            e.equal = 584;
            e.greater = 584;
            e.question = 556;
            e.at = 1015;
            e.A = 667;
            e.B = 667;
            e.C = 722;
            e.D = 722;
            e.E = 667;
            e.F = 611;
            e.G = 778;
            e.H = 722;
            e.I = 278;
            e.J = 500;
            e.K = 667;
            e.L = 556;
            e.M = 833;
            e.N = 722;
            e.O = 778;
            e.P = 667;
            e.Q = 778;
            e.R = 722;
            e.S = 667;
            e.T = 611;
            e.U = 722;
            e.V = 667;
            e.W = 944;
            e.X = 667;
            e.Y = 667;
            e.Z = 611;
            e.bracketleft = 278;
            e.backslash = 278;
            e.bracketright = 278;
            e.asciicircum = 469;
            e.underscore = 556;
            e.quoteleft = 222;
            e.a = 556;
            e.b = 556;
            e.c = 500;
            e.d = 556;
            e.e = 556;
            e.f = 278;
            e.g = 556;
            e.h = 556;
            e.i = 222;
            e.j = 222;
            e.k = 500;
            e.l = 222;
            e.m = 833;
            e.n = 556;
            e.o = 556;
            e.p = 556;
            e.q = 556;
            e.r = 333;
            e.s = 500;
            e.t = 278;
            e.u = 556;
            e.v = 500;
            e.w = 722;
            e.x = 500;
            e.y = 500;
            e.z = 500;
            e.braceleft = 334;
            e.bar = 260;
            e.braceright = 334;
            e.asciitilde = 584;
            e.exclamdown = 333;
            e.cent = 556;
            e.sterling = 556;
            e.fraction = 167;
            e.yen = 556;
            e.florin = 556;
            e.section = 556;
            e.currency = 556;
            e.quotesingle = 191;
            e.quotedblleft = 333;
            e.guillemotleft = 556;
            e.guilsinglleft = 333;
            e.guilsinglright = 333;
            e.fi = 500;
            e.fl = 500;
            e.endash = 556;
            e.dagger = 556;
            e.daggerdbl = 556;
            e.periodcentered = 278;
            e.paragraph = 537;
            e.bullet = 350;
            e.quotesinglbase = 222;
            e.quotedblbase = 333;
            e.quotedblright = 333;
            e.guillemotright = 556;
            e.ellipsis = 1e3;
            e.perthousand = 1e3;
            e.questiondown = 611;
            e.grave = 333;
            e.acute = 333;
            e.circumflex = 333;
            e.tilde = 333;
            e.macron = 333;
            e.breve = 333;
            e.dotaccent = 333;
            e.dieresis = 333;
            e.ring = 333;
            e.cedilla = 333;
            e.hungarumlaut = 333;
            e.ogonek = 333;
            e.caron = 333;
            e.emdash = 1e3;
            e.AE = 1e3;
            e.ordfeminine = 370;
            e.Lslash = 556;
            e.Oslash = 778;
            e.OE = 1e3;
            e.ordmasculine = 365;
            e.ae = 889;
            e.dotlessi = 278;
            e.lslash = 222;
            e.oslash = 611;
            e.oe = 944;
            e.germandbls = 611;
            e.Idieresis = 278;
            e.eacute = 556;
            e.abreve = 556;
            e.uhungarumlaut = 556;
            e.ecaron = 556;
            e.Ydieresis = 667;
            e.divide = 584;
            e.Yacute = 667;
            e.Acircumflex = 667;
            e.aacute = 556;
            e.Ucircumflex = 722;
            e.yacute = 500;
            e.scommaaccent = 500;
            e.ecircumflex = 556;
            e.Uring = 722;
            e.Udieresis = 722;
            e.aogonek = 556;
            e.Uacute = 722;
            e.uogonek = 556;
            e.Edieresis = 667;
            e.Dcroat = 722;
            e.commaaccent = 250;
            e.copyright = 737;
            e.Emacron = 667;
            e.ccaron = 500;
            e.aring = 556;
            e.Ncommaaccent = 722;
            e.lacute = 222;
            e.agrave = 556;
            e.Tcommaaccent = 611;
            e.Cacute = 722;
            e.atilde = 556;
            e.Edotaccent = 667;
            e.scaron = 500;
            e.scedilla = 500;
            e.iacute = 278;
            e.lozenge = 471;
            e.Rcaron = 722;
            e.Gcommaaccent = 778;
            e.ucircumflex = 556;
            e.acircumflex = 556;
            e.Amacron = 667;
            e.rcaron = 333;
            e.ccedilla = 500;
            e.Zdotaccent = 611;
            e.Thorn = 667;
            e.Omacron = 778;
            e.Racute = 722;
            e.Sacute = 667;
            e.dcaron = 643;
            e.Umacron = 722;
            e.uring = 556;
            e.threesuperior = 333;
            e.Ograve = 778;
            e.Agrave = 667;
            e.Abreve = 667;
            e.multiply = 584;
            e.uacute = 556;
            e.Tcaron = 611;
            e.partialdiff = 476;
            e.ydieresis = 500;
            e.Nacute = 722;
            e.icircumflex = 278;
            e.Ecircumflex = 667;
            e.adieresis = 556;
            e.edieresis = 556;
            e.cacute = 500;
            e.nacute = 556;
            e.umacron = 556;
            e.Ncaron = 722;
            e.Iacute = 278;
            e.plusminus = 584;
            e.brokenbar = 260;
            e.registered = 737;
            e.Gbreve = 778;
            e.Idotaccent = 278;
            e.summation = 600;
            e.Egrave = 667;
            e.racute = 333;
            e.omacron = 556;
            e.Zacute = 611;
            e.Zcaron = 611;
            e.greaterequal = 549;
            e.Eth = 722;
            e.Ccedilla = 722;
            e.lcommaaccent = 222;
            e.tcaron = 317;
            e.eogonek = 556;
            e.Uogonek = 722;
            e.Aacute = 667;
            e.Adieresis = 667;
            e.egrave = 556;
            e.zacute = 500;
            e.iogonek = 222;
            e.Oacute = 778;
            e.oacute = 556;
            e.amacron = 556;
            e.sacute = 500;
            e.idieresis = 278;
            e.Ocircumflex = 778;
            e.Ugrave = 722;
            e.Delta = 612;
            e.thorn = 556;
            e.twosuperior = 333;
            e.Odieresis = 778;
            e.mu = 556;
            e.igrave = 278;
            e.ohungarumlaut = 556;
            e.Eogonek = 667;
            e.dcroat = 556;
            e.threequarters = 834;
            e.Scedilla = 667;
            e.lcaron = 299;
            e.Kcommaaccent = 667;
            e.Lacute = 556;
            e.trademark = 1e3;
            e.edotaccent = 556;
            e.Igrave = 278;
            e.Imacron = 278;
            e.Lcaron = 556;
            e.onehalf = 834;
            e.lessequal = 549;
            e.ocircumflex = 556;
            e.ntilde = 556;
            e.Uhungarumlaut = 722;
            e.Eacute = 667;
            e.emacron = 556;
            e.gbreve = 556;
            e.onequarter = 834;
            e.Scaron = 667;
            e.Scommaaccent = 667;
            e.Ohungarumlaut = 778;
            e.degree = 400;
            e.ograve = 556;
            e.Ccaron = 722;
            e.ugrave = 556;
            e.radical = 453;
            e.Dcaron = 722;
            e.rcommaaccent = 333;
            e.Ntilde = 722;
            e.otilde = 556;
            e.Rcommaaccent = 722;
            e.Lcommaaccent = 556;
            e.Atilde = 667;
            e.Aogonek = 667;
            e.Aring = 667;
            e.Otilde = 778;
            e.zdotaccent = 500;
            e.Ecaron = 667;
            e.Iogonek = 278;
            e.kcommaaccent = 500;
            e.minus = 584;
            e.Icircumflex = 278;
            e.ncaron = 556;
            e.tcommaaccent = 278;
            e.logicalnot = 584;
            e.odieresis = 556;
            e.udieresis = 556;
            e.notequal = 549;
            e.gcommaaccent = 556;
            e.eth = 556;
            e.zcaron = 500;
            e.ncommaaccent = 556;
            e.onesuperior = 333;
            e.imacron = 278;
            e.Euro = 556;
          });
          e["Helvetica-Bold"] = (0, r.getLookupTableFactory)(function (e) {
            e.space = 278;
            e.exclam = 333;
            e.quotedbl = 474;
            e.numbersign = 556;
            e.dollar = 556;
            e.percent = 889;
            e.ampersand = 722;
            e.quoteright = 278;
            e.parenleft = 333;
            e.parenright = 333;
            e.asterisk = 389;
            e.plus = 584;
            e.comma = 278;
            e.hyphen = 333;
            e.period = 278;
            e.slash = 278;
            e.zero = 556;
            e.one = 556;
            e.two = 556;
            e.three = 556;
            e.four = 556;
            e.five = 556;
            e.six = 556;
            e.seven = 556;
            e.eight = 556;
            e.nine = 556;
            e.colon = 333;
            e.semicolon = 333;
            e.less = 584;
            e.equal = 584;
            e.greater = 584;
            e.question = 611;
            e.at = 975;
            e.A = 722;
            e.B = 722;
            e.C = 722;
            e.D = 722;
            e.E = 667;
            e.F = 611;
            e.G = 778;
            e.H = 722;
            e.I = 278;
            e.J = 556;
            e.K = 722;
            e.L = 611;
            e.M = 833;
            e.N = 722;
            e.O = 778;
            e.P = 667;
            e.Q = 778;
            e.R = 722;
            e.S = 667;
            e.T = 611;
            e.U = 722;
            e.V = 667;
            e.W = 944;
            e.X = 667;
            e.Y = 667;
            e.Z = 611;
            e.bracketleft = 333;
            e.backslash = 278;
            e.bracketright = 333;
            e.asciicircum = 584;
            e.underscore = 556;
            e.quoteleft = 278;
            e.a = 556;
            e.b = 611;
            e.c = 556;
            e.d = 611;
            e.e = 556;
            e.f = 333;
            e.g = 611;
            e.h = 611;
            e.i = 278;
            e.j = 278;
            e.k = 556;
            e.l = 278;
            e.m = 889;
            e.n = 611;
            e.o = 611;
            e.p = 611;
            e.q = 611;
            e.r = 389;
            e.s = 556;
            e.t = 333;
            e.u = 611;
            e.v = 556;
            e.w = 778;
            e.x = 556;
            e.y = 556;
            e.z = 500;
            e.braceleft = 389;
            e.bar = 280;
            e.braceright = 389;
            e.asciitilde = 584;
            e.exclamdown = 333;
            e.cent = 556;
            e.sterling = 556;
            e.fraction = 167;
            e.yen = 556;
            e.florin = 556;
            e.section = 556;
            e.currency = 556;
            e.quotesingle = 238;
            e.quotedblleft = 500;
            e.guillemotleft = 556;
            e.guilsinglleft = 333;
            e.guilsinglright = 333;
            e.fi = 611;
            e.fl = 611;
            e.endash = 556;
            e.dagger = 556;
            e.daggerdbl = 556;
            e.periodcentered = 278;
            e.paragraph = 556;
            e.bullet = 350;
            e.quotesinglbase = 278;
            e.quotedblbase = 500;
            e.quotedblright = 500;
            e.guillemotright = 556;
            e.ellipsis = 1e3;
            e.perthousand = 1e3;
            e.questiondown = 611;
            e.grave = 333;
            e.acute = 333;
            e.circumflex = 333;
            e.tilde = 333;
            e.macron = 333;
            e.breve = 333;
            e.dotaccent = 333;
            e.dieresis = 333;
            e.ring = 333;
            e.cedilla = 333;
            e.hungarumlaut = 333;
            e.ogonek = 333;
            e.caron = 333;
            e.emdash = 1e3;
            e.AE = 1e3;
            e.ordfeminine = 370;
            e.Lslash = 611;
            e.Oslash = 778;
            e.OE = 1e3;
            e.ordmasculine = 365;
            e.ae = 889;
            e.dotlessi = 278;
            e.lslash = 278;
            e.oslash = 611;
            e.oe = 944;
            e.germandbls = 611;
            e.Idieresis = 278;
            e.eacute = 556;
            e.abreve = 556;
            e.uhungarumlaut = 611;
            e.ecaron = 556;
            e.Ydieresis = 667;
            e.divide = 584;
            e.Yacute = 667;
            e.Acircumflex = 722;
            e.aacute = 556;
            e.Ucircumflex = 722;
            e.yacute = 556;
            e.scommaaccent = 556;
            e.ecircumflex = 556;
            e.Uring = 722;
            e.Udieresis = 722;
            e.aogonek = 556;
            e.Uacute = 722;
            e.uogonek = 611;
            e.Edieresis = 667;
            e.Dcroat = 722;
            e.commaaccent = 250;
            e.copyright = 737;
            e.Emacron = 667;
            e.ccaron = 556;
            e.aring = 556;
            e.Ncommaaccent = 722;
            e.lacute = 278;
            e.agrave = 556;
            e.Tcommaaccent = 611;
            e.Cacute = 722;
            e.atilde = 556;
            e.Edotaccent = 667;
            e.scaron = 556;
            e.scedilla = 556;
            e.iacute = 278;
            e.lozenge = 494;
            e.Rcaron = 722;
            e.Gcommaaccent = 778;
            e.ucircumflex = 611;
            e.acircumflex = 556;
            e.Amacron = 722;
            e.rcaron = 389;
            e.ccedilla = 556;
            e.Zdotaccent = 611;
            e.Thorn = 667;
            e.Omacron = 778;
            e.Racute = 722;
            e.Sacute = 667;
            e.dcaron = 743;
            e.Umacron = 722;
            e.uring = 611;
            e.threesuperior = 333;
            e.Ograve = 778;
            e.Agrave = 722;
            e.Abreve = 722;
            e.multiply = 584;
            e.uacute = 611;
            e.Tcaron = 611;
            e.partialdiff = 494;
            e.ydieresis = 556;
            e.Nacute = 722;
            e.icircumflex = 278;
            e.Ecircumflex = 667;
            e.adieresis = 556;
            e.edieresis = 556;
            e.cacute = 556;
            e.nacute = 611;
            e.umacron = 611;
            e.Ncaron = 722;
            e.Iacute = 278;
            e.plusminus = 584;
            e.brokenbar = 280;
            e.registered = 737;
            e.Gbreve = 778;
            e.Idotaccent = 278;
            e.summation = 600;
            e.Egrave = 667;
            e.racute = 389;
            e.omacron = 611;
            e.Zacute = 611;
            e.Zcaron = 611;
            e.greaterequal = 549;
            e.Eth = 722;
            e.Ccedilla = 722;
            e.lcommaaccent = 278;
            e.tcaron = 389;
            e.eogonek = 556;
            e.Uogonek = 722;
            e.Aacute = 722;
            e.Adieresis = 722;
            e.egrave = 556;
            e.zacute = 500;
            e.iogonek = 278;
            e.Oacute = 778;
            e.oacute = 611;
            e.amacron = 556;
            e.sacute = 556;
            e.idieresis = 278;
            e.Ocircumflex = 778;
            e.Ugrave = 722;
            e.Delta = 612;
            e.thorn = 611;
            e.twosuperior = 333;
            e.Odieresis = 778;
            e.mu = 611;
            e.igrave = 278;
            e.ohungarumlaut = 611;
            e.Eogonek = 667;
            e.dcroat = 611;
            e.threequarters = 834;
            e.Scedilla = 667;
            e.lcaron = 400;
            e.Kcommaaccent = 722;
            e.Lacute = 611;
            e.trademark = 1e3;
            e.edotaccent = 556;
            e.Igrave = 278;
            e.Imacron = 278;
            e.Lcaron = 611;
            e.onehalf = 834;
            e.lessequal = 549;
            e.ocircumflex = 611;
            e.ntilde = 611;
            e.Uhungarumlaut = 722;
            e.Eacute = 667;
            e.emacron = 556;
            e.gbreve = 611;
            e.onequarter = 834;
            e.Scaron = 667;
            e.Scommaaccent = 667;
            e.Ohungarumlaut = 778;
            e.degree = 400;
            e.ograve = 611;
            e.Ccaron = 722;
            e.ugrave = 611;
            e.radical = 549;
            e.Dcaron = 722;
            e.rcommaaccent = 389;
            e.Ntilde = 722;
            e.otilde = 611;
            e.Rcommaaccent = 722;
            e.Lcommaaccent = 611;
            e.Atilde = 722;
            e.Aogonek = 722;
            e.Aring = 722;
            e.Otilde = 778;
            e.zdotaccent = 500;
            e.Ecaron = 667;
            e.Iogonek = 278;
            e.kcommaaccent = 556;
            e.minus = 584;
            e.Icircumflex = 278;
            e.ncaron = 611;
            e.tcommaaccent = 333;
            e.logicalnot = 584;
            e.odieresis = 611;
            e.udieresis = 611;
            e.notequal = 549;
            e.gcommaaccent = 611;
            e.eth = 611;
            e.zcaron = 500;
            e.ncommaaccent = 611;
            e.onesuperior = 333;
            e.imacron = 278;
            e.Euro = 556;
          });
          e["Helvetica-BoldOblique"] = (0, r.getLookupTableFactory)(function (e) {
            e.space = 278;
            e.exclam = 333;
            e.quotedbl = 474;
            e.numbersign = 556;
            e.dollar = 556;
            e.percent = 889;
            e.ampersand = 722;
            e.quoteright = 278;
            e.parenleft = 333;
            e.parenright = 333;
            e.asterisk = 389;
            e.plus = 584;
            e.comma = 278;
            e.hyphen = 333;
            e.period = 278;
            e.slash = 278;
            e.zero = 556;
            e.one = 556;
            e.two = 556;
            e.three = 556;
            e.four = 556;
            e.five = 556;
            e.six = 556;
            e.seven = 556;
            e.eight = 556;
            e.nine = 556;
            e.colon = 333;
            e.semicolon = 333;
            e.less = 584;
            e.equal = 584;
            e.greater = 584;
            e.question = 611;
            e.at = 975;
            e.A = 722;
            e.B = 722;
            e.C = 722;
            e.D = 722;
            e.E = 667;
            e.F = 611;
            e.G = 778;
            e.H = 722;
            e.I = 278;
            e.J = 556;
            e.K = 722;
            e.L = 611;
            e.M = 833;
            e.N = 722;
            e.O = 778;
            e.P = 667;
            e.Q = 778;
            e.R = 722;
            e.S = 667;
            e.T = 611;
            e.U = 722;
            e.V = 667;
            e.W = 944;
            e.X = 667;
            e.Y = 667;
            e.Z = 611;
            e.bracketleft = 333;
            e.backslash = 278;
            e.bracketright = 333;
            e.asciicircum = 584;
            e.underscore = 556;
            e.quoteleft = 278;
            e.a = 556;
            e.b = 611;
            e.c = 556;
            e.d = 611;
            e.e = 556;
            e.f = 333;
            e.g = 611;
            e.h = 611;
            e.i = 278;
            e.j = 278;
            e.k = 556;
            e.l = 278;
            e.m = 889;
            e.n = 611;
            e.o = 611;
            e.p = 611;
            e.q = 611;
            e.r = 389;
            e.s = 556;
            e.t = 333;
            e.u = 611;
            e.v = 556;
            e.w = 778;
            e.x = 556;
            e.y = 556;
            e.z = 500;
            e.braceleft = 389;
            e.bar = 280;
            e.braceright = 389;
            e.asciitilde = 584;
            e.exclamdown = 333;
            e.cent = 556;
            e.sterling = 556;
            e.fraction = 167;
            e.yen = 556;
            e.florin = 556;
            e.section = 556;
            e.currency = 556;
            e.quotesingle = 238;
            e.quotedblleft = 500;
            e.guillemotleft = 556;
            e.guilsinglleft = 333;
            e.guilsinglright = 333;
            e.fi = 611;
            e.fl = 611;
            e.endash = 556;
            e.dagger = 556;
            e.daggerdbl = 556;
            e.periodcentered = 278;
            e.paragraph = 556;
            e.bullet = 350;
            e.quotesinglbase = 278;
            e.quotedblbase = 500;
            e.quotedblright = 500;
            e.guillemotright = 556;
            e.ellipsis = 1e3;
            e.perthousand = 1e3;
            e.questiondown = 611;
            e.grave = 333;
            e.acute = 333;
            e.circumflex = 333;
            e.tilde = 333;
            e.macron = 333;
            e.breve = 333;
            e.dotaccent = 333;
            e.dieresis = 333;
            e.ring = 333;
            e.cedilla = 333;
            e.hungarumlaut = 333;
            e.ogonek = 333;
            e.caron = 333;
            e.emdash = 1e3;
            e.AE = 1e3;
            e.ordfeminine = 370;
            e.Lslash = 611;
            e.Oslash = 778;
            e.OE = 1e3;
            e.ordmasculine = 365;
            e.ae = 889;
            e.dotlessi = 278;
            e.lslash = 278;
            e.oslash = 611;
            e.oe = 944;
            e.germandbls = 611;
            e.Idieresis = 278;
            e.eacute = 556;
            e.abreve = 556;
            e.uhungarumlaut = 611;
            e.ecaron = 556;
            e.Ydieresis = 667;
            e.divide = 584;
            e.Yacute = 667;
            e.Acircumflex = 722;
            e.aacute = 556;
            e.Ucircumflex = 722;
            e.yacute = 556;
            e.scommaaccent = 556;
            e.ecircumflex = 556;
            e.Uring = 722;
            e.Udieresis = 722;
            e.aogonek = 556;
            e.Uacute = 722;
            e.uogonek = 611;
            e.Edieresis = 667;
            e.Dcroat = 722;
            e.commaaccent = 250;
            e.copyright = 737;
            e.Emacron = 667;
            e.ccaron = 556;
            e.aring = 556;
            e.Ncommaaccent = 722;
            e.lacute = 278;
            e.agrave = 556;
            e.Tcommaaccent = 611;
            e.Cacute = 722;
            e.atilde = 556;
            e.Edotaccent = 667;
            e.scaron = 556;
            e.scedilla = 556;
            e.iacute = 278;
            e.lozenge = 494;
            e.Rcaron = 722;
            e.Gcommaaccent = 778;
            e.ucircumflex = 611;
            e.acircumflex = 556;
            e.Amacron = 722;
            e.rcaron = 389;
            e.ccedilla = 556;
            e.Zdotaccent = 611;
            e.Thorn = 667;
            e.Omacron = 778;
            e.Racute = 722;
            e.Sacute = 667;
            e.dcaron = 743;
            e.Umacron = 722;
            e.uring = 611;
            e.threesuperior = 333;
            e.Ograve = 778;
            e.Agrave = 722;
            e.Abreve = 722;
            e.multiply = 584;
            e.uacute = 611;
            e.Tcaron = 611;
            e.partialdiff = 494;
            e.ydieresis = 556;
            e.Nacute = 722;
            e.icircumflex = 278;
            e.Ecircumflex = 667;
            e.adieresis = 556;
            e.edieresis = 556;
            e.cacute = 556;
            e.nacute = 611;
            e.umacron = 611;
            e.Ncaron = 722;
            e.Iacute = 278;
            e.plusminus = 584;
            e.brokenbar = 280;
            e.registered = 737;
            e.Gbreve = 778;
            e.Idotaccent = 278;
            e.summation = 600;
            e.Egrave = 667;
            e.racute = 389;
            e.omacron = 611;
            e.Zacute = 611;
            e.Zcaron = 611;
            e.greaterequal = 549;
            e.Eth = 722;
            e.Ccedilla = 722;
            e.lcommaaccent = 278;
            e.tcaron = 389;
            e.eogonek = 556;
            e.Uogonek = 722;
            e.Aacute = 722;
            e.Adieresis = 722;
            e.egrave = 556;
            e.zacute = 500;
            e.iogonek = 278;
            e.Oacute = 778;
            e.oacute = 611;
            e.amacron = 556;
            e.sacute = 556;
            e.idieresis = 278;
            e.Ocircumflex = 778;
            e.Ugrave = 722;
            e.Delta = 612;
            e.thorn = 611;
            e.twosuperior = 333;
            e.Odieresis = 778;
            e.mu = 611;
            e.igrave = 278;
            e.ohungarumlaut = 611;
            e.Eogonek = 667;
            e.dcroat = 611;
            e.threequarters = 834;
            e.Scedilla = 667;
            e.lcaron = 400;
            e.Kcommaaccent = 722;
            e.Lacute = 611;
            e.trademark = 1e3;
            e.edotaccent = 556;
            e.Igrave = 278;
            e.Imacron = 278;
            e.Lcaron = 611;
            e.onehalf = 834;
            e.lessequal = 549;
            e.ocircumflex = 611;
            e.ntilde = 611;
            e.Uhungarumlaut = 722;
            e.Eacute = 667;
            e.emacron = 556;
            e.gbreve = 611;
            e.onequarter = 834;
            e.Scaron = 667;
            e.Scommaaccent = 667;
            e.Ohungarumlaut = 778;
            e.degree = 400;
            e.ograve = 611;
            e.Ccaron = 722;
            e.ugrave = 611;
            e.radical = 549;
            e.Dcaron = 722;
            e.rcommaaccent = 389;
            e.Ntilde = 722;
            e.otilde = 611;
            e.Rcommaaccent = 722;
            e.Lcommaaccent = 611;
            e.Atilde = 722;
            e.Aogonek = 722;
            e.Aring = 722;
            e.Otilde = 778;
            e.zdotaccent = 500;
            e.Ecaron = 667;
            e.Iogonek = 278;
            e.kcommaaccent = 556;
            e.minus = 584;
            e.Icircumflex = 278;
            e.ncaron = 611;
            e.tcommaaccent = 333;
            e.logicalnot = 584;
            e.odieresis = 611;
            e.udieresis = 611;
            e.notequal = 549;
            e.gcommaaccent = 611;
            e.eth = 611;
            e.zcaron = 500;
            e.ncommaaccent = 611;
            e.onesuperior = 333;
            e.imacron = 278;
            e.Euro = 556;
          });
          e["Helvetica-Oblique"] = (0, r.getLookupTableFactory)(function (e) {
            e.space = 278;
            e.exclam = 278;
            e.quotedbl = 355;
            e.numbersign = 556;
            e.dollar = 556;
            e.percent = 889;
            e.ampersand = 667;
            e.quoteright = 222;
            e.parenleft = 333;
            e.parenright = 333;
            e.asterisk = 389;
            e.plus = 584;
            e.comma = 278;
            e.hyphen = 333;
            e.period = 278;
            e.slash = 278;
            e.zero = 556;
            e.one = 556;
            e.two = 556;
            e.three = 556;
            e.four = 556;
            e.five = 556;
            e.six = 556;
            e.seven = 556;
            e.eight = 556;
            e.nine = 556;
            e.colon = 278;
            e.semicolon = 278;
            e.less = 584;
            e.equal = 584;
            e.greater = 584;
            e.question = 556;
            e.at = 1015;
            e.A = 667;
            e.B = 667;
            e.C = 722;
            e.D = 722;
            e.E = 667;
            e.F = 611;
            e.G = 778;
            e.H = 722;
            e.I = 278;
            e.J = 500;
            e.K = 667;
            e.L = 556;
            e.M = 833;
            e.N = 722;
            e.O = 778;
            e.P = 667;
            e.Q = 778;
            e.R = 722;
            e.S = 667;
            e.T = 611;
            e.U = 722;
            e.V = 667;
            e.W = 944;
            e.X = 667;
            e.Y = 667;
            e.Z = 611;
            e.bracketleft = 278;
            e.backslash = 278;
            e.bracketright = 278;
            e.asciicircum = 469;
            e.underscore = 556;
            e.quoteleft = 222;
            e.a = 556;
            e.b = 556;
            e.c = 500;
            e.d = 556;
            e.e = 556;
            e.f = 278;
            e.g = 556;
            e.h = 556;
            e.i = 222;
            e.j = 222;
            e.k = 500;
            e.l = 222;
            e.m = 833;
            e.n = 556;
            e.o = 556;
            e.p = 556;
            e.q = 556;
            e.r = 333;
            e.s = 500;
            e.t = 278;
            e.u = 556;
            e.v = 500;
            e.w = 722;
            e.x = 500;
            e.y = 500;
            e.z = 500;
            e.braceleft = 334;
            e.bar = 260;
            e.braceright = 334;
            e.asciitilde = 584;
            e.exclamdown = 333;
            e.cent = 556;
            e.sterling = 556;
            e.fraction = 167;
            e.yen = 556;
            e.florin = 556;
            e.section = 556;
            e.currency = 556;
            e.quotesingle = 191;
            e.quotedblleft = 333;
            e.guillemotleft = 556;
            e.guilsinglleft = 333;
            e.guilsinglright = 333;
            e.fi = 500;
            e.fl = 500;
            e.endash = 556;
            e.dagger = 556;
            e.daggerdbl = 556;
            e.periodcentered = 278;
            e.paragraph = 537;
            e.bullet = 350;
            e.quotesinglbase = 222;
            e.quotedblbase = 333;
            e.quotedblright = 333;
            e.guillemotright = 556;
            e.ellipsis = 1e3;
            e.perthousand = 1e3;
            e.questiondown = 611;
            e.grave = 333;
            e.acute = 333;
            e.circumflex = 333;
            e.tilde = 333;
            e.macron = 333;
            e.breve = 333;
            e.dotaccent = 333;
            e.dieresis = 333;
            e.ring = 333;
            e.cedilla = 333;
            e.hungarumlaut = 333;
            e.ogonek = 333;
            e.caron = 333;
            e.emdash = 1e3;
            e.AE = 1e3;
            e.ordfeminine = 370;
            e.Lslash = 556;
            e.Oslash = 778;
            e.OE = 1e3;
            e.ordmasculine = 365;
            e.ae = 889;
            e.dotlessi = 278;
            e.lslash = 222;
            e.oslash = 611;
            e.oe = 944;
            e.germandbls = 611;
            e.Idieresis = 278;
            e.eacute = 556;
            e.abreve = 556;
            e.uhungarumlaut = 556;
            e.ecaron = 556;
            e.Ydieresis = 667;
            e.divide = 584;
            e.Yacute = 667;
            e.Acircumflex = 667;
            e.aacute = 556;
            e.Ucircumflex = 722;
            e.yacute = 500;
            e.scommaaccent = 500;
            e.ecircumflex = 556;
            e.Uring = 722;
            e.Udieresis = 722;
            e.aogonek = 556;
            e.Uacute = 722;
            e.uogonek = 556;
            e.Edieresis = 667;
            e.Dcroat = 722;
            e.commaaccent = 250;
            e.copyright = 737;
            e.Emacron = 667;
            e.ccaron = 500;
            e.aring = 556;
            e.Ncommaaccent = 722;
            e.lacute = 222;
            e.agrave = 556;
            e.Tcommaaccent = 611;
            e.Cacute = 722;
            e.atilde = 556;
            e.Edotaccent = 667;
            e.scaron = 500;
            e.scedilla = 500;
            e.iacute = 278;
            e.lozenge = 471;
            e.Rcaron = 722;
            e.Gcommaaccent = 778;
            e.ucircumflex = 556;
            e.acircumflex = 556;
            e.Amacron = 667;
            e.rcaron = 333;
            e.ccedilla = 500;
            e.Zdotaccent = 611;
            e.Thorn = 667;
            e.Omacron = 778;
            e.Racute = 722;
            e.Sacute = 667;
            e.dcaron = 643;
            e.Umacron = 722;
            e.uring = 556;
            e.threesuperior = 333;
            e.Ograve = 778;
            e.Agrave = 667;
            e.Abreve = 667;
            e.multiply = 584;
            e.uacute = 556;
            e.Tcaron = 611;
            e.partialdiff = 476;
            e.ydieresis = 500;
            e.Nacute = 722;
            e.icircumflex = 278;
            e.Ecircumflex = 667;
            e.adieresis = 556;
            e.edieresis = 556;
            e.cacute = 500;
            e.nacute = 556;
            e.umacron = 556;
            e.Ncaron = 722;
            e.Iacute = 278;
            e.plusminus = 584;
            e.brokenbar = 260;
            e.registered = 737;
            e.Gbreve = 778;
            e.Idotaccent = 278;
            e.summation = 600;
            e.Egrave = 667;
            e.racute = 333;
            e.omacron = 556;
            e.Zacute = 611;
            e.Zcaron = 611;
            e.greaterequal = 549;
            e.Eth = 722;
            e.Ccedilla = 722;
            e.lcommaaccent = 222;
            e.tcaron = 317;
            e.eogonek = 556;
            e.Uogonek = 722;
            e.Aacute = 667;
            e.Adieresis = 667;
            e.egrave = 556;
            e.zacute = 500;
            e.iogonek = 222;
            e.Oacute = 778;
            e.oacute = 556;
            e.amacron = 556;
            e.sacute = 500;
            e.idieresis = 278;
            e.Ocircumflex = 778;
            e.Ugrave = 722;
            e.Delta = 612;
            e.thorn = 556;
            e.twosuperior = 333;
            e.Odieresis = 778;
            e.mu = 556;
            e.igrave = 278;
            e.ohungarumlaut = 556;
            e.Eogonek = 667;
            e.dcroat = 556;
            e.threequarters = 834;
            e.Scedilla = 667;
            e.lcaron = 299;
            e.Kcommaaccent = 667;
            e.Lacute = 556;
            e.trademark = 1e3;
            e.edotaccent = 556;
            e.Igrave = 278;
            e.Imacron = 278;
            e.Lcaron = 556;
            e.onehalf = 834;
            e.lessequal = 549;
            e.ocircumflex = 556;
            e.ntilde = 556;
            e.Uhungarumlaut = 722;
            e.Eacute = 667;
            e.emacron = 556;
            e.gbreve = 556;
            e.onequarter = 834;
            e.Scaron = 667;
            e.Scommaaccent = 667;
            e.Ohungarumlaut = 778;
            e.degree = 400;
            e.ograve = 556;
            e.Ccaron = 722;
            e.ugrave = 556;
            e.radical = 453;
            e.Dcaron = 722;
            e.rcommaaccent = 333;
            e.Ntilde = 722;
            e.otilde = 556;
            e.Rcommaaccent = 722;
            e.Lcommaaccent = 556;
            e.Atilde = 667;
            e.Aogonek = 667;
            e.Aring = 667;
            e.Otilde = 778;
            e.zdotaccent = 500;
            e.Ecaron = 667;
            e.Iogonek = 278;
            e.kcommaaccent = 500;
            e.minus = 584;
            e.Icircumflex = 278;
            e.ncaron = 556;
            e.tcommaaccent = 278;
            e.logicalnot = 584;
            e.odieresis = 556;
            e.udieresis = 556;
            e.notequal = 549;
            e.gcommaaccent = 556;
            e.eth = 556;
            e.zcaron = 500;
            e.ncommaaccent = 556;
            e.onesuperior = 333;
            e.imacron = 278;
            e.Euro = 556;
          });
          e.Symbol = (0, r.getLookupTableFactory)(function (e) {
            e.space = 250;
            e.exclam = 333;
            e.universal = 713;
            e.numbersign = 500;
            e.existential = 549;
            e.percent = 833;
            e.ampersand = 778;
            e.suchthat = 439;
            e.parenleft = 333;
            e.parenright = 333;
            e.asteriskmath = 500;
            e.plus = 549;
            e.comma = 250;
            e.minus = 549;
            e.period = 250;
            e.slash = 278;
            e.zero = 500;
            e.one = 500;
            e.two = 500;
            e.three = 500;
            e.four = 500;
            e.five = 500;
            e.six = 500;
            e.seven = 500;
            e.eight = 500;
            e.nine = 500;
            e.colon = 278;
            e.semicolon = 278;
            e.less = 549;
            e.equal = 549;
            e.greater = 549;
            e.question = 444;
            e.congruent = 549;
            e.Alpha = 722;
            e.Beta = 667;
            e.Chi = 722;
            e.Delta = 612;
            e.Epsilon = 611;
            e.Phi = 763;
            e.Gamma = 603;
            e.Eta = 722;
            e.Iota = 333;
            e.theta1 = 631;
            e.Kappa = 722;
            e.Lambda = 686;
            e.Mu = 889;
            e.Nu = 722;
            e.Omicron = 722;
            e.Pi = 768;
            e.Theta = 741;
            e.Rho = 556;
            e.Sigma = 592;
            e.Tau = 611;
            e.Upsilon = 690;
            e.sigma1 = 439;
            e.Omega = 768;
            e.Xi = 645;
            e.Psi = 795;
            e.Zeta = 611;
            e.bracketleft = 333;
            e.therefore = 863;
            e.bracketright = 333;
            e.perpendicular = 658;
            e.underscore = 500;
            e.radicalex = 500;
            e.alpha = 631;
            e.beta = 549;
            e.chi = 549;
            e.delta = 494;
            e.epsilon = 439;
            e.phi = 521;
            e.gamma = 411;
            e.eta = 603;
            e.iota = 329;
            e.phi1 = 603;
            e.kappa = 549;
            e.lambda = 549;
            e.mu = 576;
            e.nu = 521;
            e.omicron = 549;
            e.pi = 549;
            e.theta = 521;
            e.rho = 549;
            e.sigma = 603;
            e.tau = 439;
            e.upsilon = 576;
            e.omega1 = 713;
            e.omega = 686;
            e.xi = 493;
            e.psi = 686;
            e.zeta = 494;
            e.braceleft = 480;
            e.bar = 200;
            e.braceright = 480;
            e.similar = 549;
            e.Euro = 750;
            e.Upsilon1 = 620;
            e.minute = 247;
            e.lessequal = 549;
            e.fraction = 167;
            e.infinity = 713;
            e.florin = 500;
            e.club = 753;
            e.diamond = 753;
            e.heart = 753;
            e.spade = 753;
            e.arrowboth = 1042;
            e.arrowleft = 987;
            e.arrowup = 603;
            e.arrowright = 987;
            e.arrowdown = 603;
            e.degree = 400;
            e.plusminus = 549;
            e.second = 411;
            e.greaterequal = 549;
            e.multiply = 549;
            e.proportional = 713;
            e.partialdiff = 494;
            e.bullet = 460;
            e.divide = 549;
            e.notequal = 549;
            e.equivalence = 549;
            e.approxequal = 549;
            e.ellipsis = 1e3;
            e.arrowvertex = 603;
            e.arrowhorizex = 1e3;
            e.carriagereturn = 658;
            e.aleph = 823;
            e.Ifraktur = 686;
            e.Rfraktur = 795;
            e.weierstrass = 987;
            e.circlemultiply = 768;
            e.circleplus = 768;
            e.emptyset = 823;
            e.intersection = 768;
            e.union = 768;
            e.propersuperset = 713;
            e.reflexsuperset = 713;
            e.notsubset = 713;
            e.propersubset = 713;
            e.reflexsubset = 713;
            e.element = 713;
            e.notelement = 713;
            e.angle = 768;
            e.gradient = 713;
            e.registerserif = 790;
            e.copyrightserif = 790;
            e.trademarkserif = 890;
            e.product = 823;
            e.radical = 549;
            e.dotmath = 250;
            e.logicalnot = 713;
            e.logicaland = 603;
            e.logicalor = 603;
            e.arrowdblboth = 1042;
            e.arrowdblleft = 987;
            e.arrowdblup = 603;
            e.arrowdblright = 987;
            e.arrowdbldown = 603;
            e.lozenge = 494;
            e.angleleft = 329;
            e.registersans = 790;
            e.copyrightsans = 790;
            e.trademarksans = 786;
            e.summation = 713;
            e.parenlefttp = 384;
            e.parenleftex = 384;
            e.parenleftbt = 384;
            e.bracketlefttp = 384;
            e.bracketleftex = 384;
            e.bracketleftbt = 384;
            e.bracelefttp = 494;
            e.braceleftmid = 494;
            e.braceleftbt = 494;
            e.braceex = 494;
            e.angleright = 329;
            e.integral = 274;
            e.integraltp = 686;
            e.integralex = 686;
            e.integralbt = 686;
            e.parenrighttp = 384;
            e.parenrightex = 384;
            e.parenrightbt = 384;
            e.bracketrighttp = 384;
            e.bracketrightex = 384;
            e.bracketrightbt = 384;
            e.bracerighttp = 494;
            e.bracerightmid = 494;
            e.bracerightbt = 494;
            e.apple = 790;
          });
          e["Times-Roman"] = (0, r.getLookupTableFactory)(function (e) {
            e.space = 250;
            e.exclam = 333;
            e.quotedbl = 408;
            e.numbersign = 500;
            e.dollar = 500;
            e.percent = 833;
            e.ampersand = 778;
            e.quoteright = 333;
            e.parenleft = 333;
            e.parenright = 333;
            e.asterisk = 500;
            e.plus = 564;
            e.comma = 250;
            e.hyphen = 333;
            e.period = 250;
            e.slash = 278;
            e.zero = 500;
            e.one = 500;
            e.two = 500;
            e.three = 500;
            e.four = 500;
            e.five = 500;
            e.six = 500;
            e.seven = 500;
            e.eight = 500;
            e.nine = 500;
            e.colon = 278;
            e.semicolon = 278;
            e.less = 564;
            e.equal = 564;
            e.greater = 564;
            e.question = 444;
            e.at = 921;
            e.A = 722;
            e.B = 667;
            e.C = 667;
            e.D = 722;
            e.E = 611;
            e.F = 556;
            e.G = 722;
            e.H = 722;
            e.I = 333;
            e.J = 389;
            e.K = 722;
            e.L = 611;
            e.M = 889;
            e.N = 722;
            e.O = 722;
            e.P = 556;
            e.Q = 722;
            e.R = 667;
            e.S = 556;
            e.T = 611;
            e.U = 722;
            e.V = 722;
            e.W = 944;
            e.X = 722;
            e.Y = 722;
            e.Z = 611;
            e.bracketleft = 333;
            e.backslash = 278;
            e.bracketright = 333;
            e.asciicircum = 469;
            e.underscore = 500;
            e.quoteleft = 333;
            e.a = 444;
            e.b = 500;
            e.c = 444;
            e.d = 500;
            e.e = 444;
            e.f = 333;
            e.g = 500;
            e.h = 500;
            e.i = 278;
            e.j = 278;
            e.k = 500;
            e.l = 278;
            e.m = 778;
            e.n = 500;
            e.o = 500;
            e.p = 500;
            e.q = 500;
            e.r = 333;
            e.s = 389;
            e.t = 278;
            e.u = 500;
            e.v = 500;
            e.w = 722;
            e.x = 500;
            e.y = 500;
            e.z = 444;
            e.braceleft = 480;
            e.bar = 200;
            e.braceright = 480;
            e.asciitilde = 541;
            e.exclamdown = 333;
            e.cent = 500;
            e.sterling = 500;
            e.fraction = 167;
            e.yen = 500;
            e.florin = 500;
            e.section = 500;
            e.currency = 500;
            e.quotesingle = 180;
            e.quotedblleft = 444;
            e.guillemotleft = 500;
            e.guilsinglleft = 333;
            e.guilsinglright = 333;
            e.fi = 556;
            e.fl = 556;
            e.endash = 500;
            e.dagger = 500;
            e.daggerdbl = 500;
            e.periodcentered = 250;
            e.paragraph = 453;
            e.bullet = 350;
            e.quotesinglbase = 333;
            e.quotedblbase = 444;
            e.quotedblright = 444;
            e.guillemotright = 500;
            e.ellipsis = 1e3;
            e.perthousand = 1e3;
            e.questiondown = 444;
            e.grave = 333;
            e.acute = 333;
            e.circumflex = 333;
            e.tilde = 333;
            e.macron = 333;
            e.breve = 333;
            e.dotaccent = 333;
            e.dieresis = 333;
            e.ring = 333;
            e.cedilla = 333;
            e.hungarumlaut = 333;
            e.ogonek = 333;
            e.caron = 333;
            e.emdash = 1e3;
            e.AE = 889;
            e.ordfeminine = 276;
            e.Lslash = 611;
            e.Oslash = 722;
            e.OE = 889;
            e.ordmasculine = 310;
            e.ae = 667;
            e.dotlessi = 278;
            e.lslash = 278;
            e.oslash = 500;
            e.oe = 722;
            e.germandbls = 500;
            e.Idieresis = 333;
            e.eacute = 444;
            e.abreve = 444;
            e.uhungarumlaut = 500;
            e.ecaron = 444;
            e.Ydieresis = 722;
            e.divide = 564;
            e.Yacute = 722;
            e.Acircumflex = 722;
            e.aacute = 444;
            e.Ucircumflex = 722;
            e.yacute = 500;
            e.scommaaccent = 389;
            e.ecircumflex = 444;
            e.Uring = 722;
            e.Udieresis = 722;
            e.aogonek = 444;
            e.Uacute = 722;
            e.uogonek = 500;
            e.Edieresis = 611;
            e.Dcroat = 722;
            e.commaaccent = 250;
            e.copyright = 760;
            e.Emacron = 611;
            e.ccaron = 444;
            e.aring = 444;
            e.Ncommaaccent = 722;
            e.lacute = 278;
            e.agrave = 444;
            e.Tcommaaccent = 611;
            e.Cacute = 667;
            e.atilde = 444;
            e.Edotaccent = 611;
            e.scaron = 389;
            e.scedilla = 389;
            e.iacute = 278;
            e.lozenge = 471;
            e.Rcaron = 667;
            e.Gcommaaccent = 722;
            e.ucircumflex = 500;
            e.acircumflex = 444;
            e.Amacron = 722;
            e.rcaron = 333;
            e.ccedilla = 444;
            e.Zdotaccent = 611;
            e.Thorn = 556;
            e.Omacron = 722;
            e.Racute = 667;
            e.Sacute = 556;
            e.dcaron = 588;
            e.Umacron = 722;
            e.uring = 500;
            e.threesuperior = 300;
            e.Ograve = 722;
            e.Agrave = 722;
            e.Abreve = 722;
            e.multiply = 564;
            e.uacute = 500;
            e.Tcaron = 611;
            e.partialdiff = 476;
            e.ydieresis = 500;
            e.Nacute = 722;
            e.icircumflex = 278;
            e.Ecircumflex = 611;
            e.adieresis = 444;
            e.edieresis = 444;
            e.cacute = 444;
            e.nacute = 500;
            e.umacron = 500;
            e.Ncaron = 722;
            e.Iacute = 333;
            e.plusminus = 564;
            e.brokenbar = 200;
            e.registered = 760;
            e.Gbreve = 722;
            e.Idotaccent = 333;
            e.summation = 600;
            e.Egrave = 611;
            e.racute = 333;
            e.omacron = 500;
            e.Zacute = 611;
            e.Zcaron = 611;
            e.greaterequal = 549;
            e.Eth = 722;
            e.Ccedilla = 667;
            e.lcommaaccent = 278;
            e.tcaron = 326;
            e.eogonek = 444;
            e.Uogonek = 722;
            e.Aacute = 722;
            e.Adieresis = 722;
            e.egrave = 444;
            e.zacute = 444;
            e.iogonek = 278;
            e.Oacute = 722;
            e.oacute = 500;
            e.amacron = 444;
            e.sacute = 389;
            e.idieresis = 278;
            e.Ocircumflex = 722;
            e.Ugrave = 722;
            e.Delta = 612;
            e.thorn = 500;
            e.twosuperior = 300;
            e.Odieresis = 722;
            e.mu = 500;
            e.igrave = 278;
            e.ohungarumlaut = 500;
            e.Eogonek = 611;
            e.dcroat = 500;
            e.threequarters = 750;
            e.Scedilla = 556;
            e.lcaron = 344;
            e.Kcommaaccent = 722;
            e.Lacute = 611;
            e.trademark = 980;
            e.edotaccent = 444;
            e.Igrave = 333;
            e.Imacron = 333;
            e.Lcaron = 611;
            e.onehalf = 750;
            e.lessequal = 549;
            e.ocircumflex = 500;
            e.ntilde = 500;
            e.Uhungarumlaut = 722;
            e.Eacute = 611;
            e.emacron = 444;
            e.gbreve = 500;
            e.onequarter = 750;
            e.Scaron = 556;
            e.Scommaaccent = 556;
            e.Ohungarumlaut = 722;
            e.degree = 400;
            e.ograve = 500;
            e.Ccaron = 667;
            e.ugrave = 500;
            e.radical = 453;
            e.Dcaron = 722;
            e.rcommaaccent = 333;
            e.Ntilde = 722;
            e.otilde = 500;
            e.Rcommaaccent = 667;
            e.Lcommaaccent = 611;
            e.Atilde = 722;
            e.Aogonek = 722;
            e.Aring = 722;
            e.Otilde = 722;
            e.zdotaccent = 444;
            e.Ecaron = 611;
            e.Iogonek = 333;
            e.kcommaaccent = 500;
            e.minus = 564;
            e.Icircumflex = 333;
            e.ncaron = 500;
            e.tcommaaccent = 278;
            e.logicalnot = 564;
            e.odieresis = 500;
            e.udieresis = 500;
            e.notequal = 549;
            e.gcommaaccent = 500;
            e.eth = 500;
            e.zcaron = 444;
            e.ncommaaccent = 500;
            e.onesuperior = 300;
            e.imacron = 278;
            e.Euro = 500;
          });
          e["Times-Bold"] = (0, r.getLookupTableFactory)(function (e) {
            e.space = 250;
            e.exclam = 333;
            e.quotedbl = 555;
            e.numbersign = 500;
            e.dollar = 500;
            e.percent = 1e3;
            e.ampersand = 833;
            e.quoteright = 333;
            e.parenleft = 333;
            e.parenright = 333;
            e.asterisk = 500;
            e.plus = 570;
            e.comma = 250;
            e.hyphen = 333;
            e.period = 250;
            e.slash = 278;
            e.zero = 500;
            e.one = 500;
            e.two = 500;
            e.three = 500;
            e.four = 500;
            e.five = 500;
            e.six = 500;
            e.seven = 500;
            e.eight = 500;
            e.nine = 500;
            e.colon = 333;
            e.semicolon = 333;
            e.less = 570;
            e.equal = 570;
            e.greater = 570;
            e.question = 500;
            e.at = 930;
            e.A = 722;
            e.B = 667;
            e.C = 722;
            e.D = 722;
            e.E = 667;
            e.F = 611;
            e.G = 778;
            e.H = 778;
            e.I = 389;
            e.J = 500;
            e.K = 778;
            e.L = 667;
            e.M = 944;
            e.N = 722;
            e.O = 778;
            e.P = 611;
            e.Q = 778;
            e.R = 722;
            e.S = 556;
            e.T = 667;
            e.U = 722;
            e.V = 722;
            e.W = 1e3;
            e.X = 722;
            e.Y = 722;
            e.Z = 667;
            e.bracketleft = 333;
            e.backslash = 278;
            e.bracketright = 333;
            e.asciicircum = 581;
            e.underscore = 500;
            e.quoteleft = 333;
            e.a = 500;
            e.b = 556;
            e.c = 444;
            e.d = 556;
            e.e = 444;
            e.f = 333;
            e.g = 500;
            e.h = 556;
            e.i = 278;
            e.j = 333;
            e.k = 556;
            e.l = 278;
            e.m = 833;
            e.n = 556;
            e.o = 500;
            e.p = 556;
            e.q = 556;
            e.r = 444;
            e.s = 389;
            e.t = 333;
            e.u = 556;
            e.v = 500;
            e.w = 722;
            e.x = 500;
            e.y = 500;
            e.z = 444;
            e.braceleft = 394;
            e.bar = 220;
            e.braceright = 394;
            e.asciitilde = 520;
            e.exclamdown = 333;
            e.cent = 500;
            e.sterling = 500;
            e.fraction = 167;
            e.yen = 500;
            e.florin = 500;
            e.section = 500;
            e.currency = 500;
            e.quotesingle = 278;
            e.quotedblleft = 500;
            e.guillemotleft = 500;
            e.guilsinglleft = 333;
            e.guilsinglright = 333;
            e.fi = 556;
            e.fl = 556;
            e.endash = 500;
            e.dagger = 500;
            e.daggerdbl = 500;
            e.periodcentered = 250;
            e.paragraph = 540;
            e.bullet = 350;
            e.quotesinglbase = 333;
            e.quotedblbase = 500;
            e.quotedblright = 500;
            e.guillemotright = 500;
            e.ellipsis = 1e3;
            e.perthousand = 1e3;
            e.questiondown = 500;
            e.grave = 333;
            e.acute = 333;
            e.circumflex = 333;
            e.tilde = 333;
            e.macron = 333;
            e.breve = 333;
            e.dotaccent = 333;
            e.dieresis = 333;
            e.ring = 333;
            e.cedilla = 333;
            e.hungarumlaut = 333;
            e.ogonek = 333;
            e.caron = 333;
            e.emdash = 1e3;
            e.AE = 1e3;
            e.ordfeminine = 300;
            e.Lslash = 667;
            e.Oslash = 778;
            e.OE = 1e3;
            e.ordmasculine = 330;
            e.ae = 722;
            e.dotlessi = 278;
            e.lslash = 278;
            e.oslash = 500;
            e.oe = 722;
            e.germandbls = 556;
            e.Idieresis = 389;
            e.eacute = 444;
            e.abreve = 500;
            e.uhungarumlaut = 556;
            e.ecaron = 444;
            e.Ydieresis = 722;
            e.divide = 570;
            e.Yacute = 722;
            e.Acircumflex = 722;
            e.aacute = 500;
            e.Ucircumflex = 722;
            e.yacute = 500;
            e.scommaaccent = 389;
            e.ecircumflex = 444;
            e.Uring = 722;
            e.Udieresis = 722;
            e.aogonek = 500;
            e.Uacute = 722;
            e.uogonek = 556;
            e.Edieresis = 667;
            e.Dcroat = 722;
            e.commaaccent = 250;
            e.copyright = 747;
            e.Emacron = 667;
            e.ccaron = 444;
            e.aring = 500;
            e.Ncommaaccent = 722;
            e.lacute = 278;
            e.agrave = 500;
            e.Tcommaaccent = 667;
            e.Cacute = 722;
            e.atilde = 500;
            e.Edotaccent = 667;
            e.scaron = 389;
            e.scedilla = 389;
            e.iacute = 278;
            e.lozenge = 494;
            e.Rcaron = 722;
            e.Gcommaaccent = 778;
            e.ucircumflex = 556;
            e.acircumflex = 500;
            e.Amacron = 722;
            e.rcaron = 444;
            e.ccedilla = 444;
            e.Zdotaccent = 667;
            e.Thorn = 611;
            e.Omacron = 778;
            e.Racute = 722;
            e.Sacute = 556;
            e.dcaron = 672;
            e.Umacron = 722;
            e.uring = 556;
            e.threesuperior = 300;
            e.Ograve = 778;
            e.Agrave = 722;
            e.Abreve = 722;
            e.multiply = 570;
            e.uacute = 556;
            e.Tcaron = 667;
            e.partialdiff = 494;
            e.ydieresis = 500;
            e.Nacute = 722;
            e.icircumflex = 278;
            e.Ecircumflex = 667;
            e.adieresis = 500;
            e.edieresis = 444;
            e.cacute = 444;
            e.nacute = 556;
            e.umacron = 556;
            e.Ncaron = 722;
            e.Iacute = 389;
            e.plusminus = 570;
            e.brokenbar = 220;
            e.registered = 747;
            e.Gbreve = 778;
            e.Idotaccent = 389;
            e.summation = 600;
            e.Egrave = 667;
            e.racute = 444;
            e.omacron = 500;
            e.Zacute = 667;
            e.Zcaron = 667;
            e.greaterequal = 549;
            e.Eth = 722;
            e.Ccedilla = 722;
            e.lcommaaccent = 278;
            e.tcaron = 416;
            e.eogonek = 444;
            e.Uogonek = 722;
            e.Aacute = 722;
            e.Adieresis = 722;
            e.egrave = 444;
            e.zacute = 444;
            e.iogonek = 278;
            e.Oacute = 778;
            e.oacute = 500;
            e.amacron = 500;
            e.sacute = 389;
            e.idieresis = 278;
            e.Ocircumflex = 778;
            e.Ugrave = 722;
            e.Delta = 612;
            e.thorn = 556;
            e.twosuperior = 300;
            e.Odieresis = 778;
            e.mu = 556;
            e.igrave = 278;
            e.ohungarumlaut = 500;
            e.Eogonek = 667;
            e.dcroat = 556;
            e.threequarters = 750;
            e.Scedilla = 556;
            e.lcaron = 394;
            e.Kcommaaccent = 778;
            e.Lacute = 667;
            e.trademark = 1e3;
            e.edotaccent = 444;
            e.Igrave = 389;
            e.Imacron = 389;
            e.Lcaron = 667;
            e.onehalf = 750;
            e.lessequal = 549;
            e.ocircumflex = 500;
            e.ntilde = 556;
            e.Uhungarumlaut = 722;
            e.Eacute = 667;
            e.emacron = 444;
            e.gbreve = 500;
            e.onequarter = 750;
            e.Scaron = 556;
            e.Scommaaccent = 556;
            e.Ohungarumlaut = 778;
            e.degree = 400;
            e.ograve = 500;
            e.Ccaron = 722;
            e.ugrave = 556;
            e.radical = 549;
            e.Dcaron = 722;
            e.rcommaaccent = 444;
            e.Ntilde = 722;
            e.otilde = 500;
            e.Rcommaaccent = 722;
            e.Lcommaaccent = 667;
            e.Atilde = 722;
            e.Aogonek = 722;
            e.Aring = 722;
            e.Otilde = 778;
            e.zdotaccent = 444;
            e.Ecaron = 667;
            e.Iogonek = 389;
            e.kcommaaccent = 556;
            e.minus = 570;
            e.Icircumflex = 389;
            e.ncaron = 556;
            e.tcommaaccent = 333;
            e.logicalnot = 570;
            e.odieresis = 500;
            e.udieresis = 556;
            e.notequal = 549;
            e.gcommaaccent = 500;
            e.eth = 500;
            e.zcaron = 444;
            e.ncommaaccent = 556;
            e.onesuperior = 300;
            e.imacron = 278;
            e.Euro = 500;
          });
          e["Times-BoldItalic"] = (0, r.getLookupTableFactory)(function (e) {
            e.space = 250;
            e.exclam = 389;
            e.quotedbl = 555;
            e.numbersign = 500;
            e.dollar = 500;
            e.percent = 833;
            e.ampersand = 778;
            e.quoteright = 333;
            e.parenleft = 333;
            e.parenright = 333;
            e.asterisk = 500;
            e.plus = 570;
            e.comma = 250;
            e.hyphen = 333;
            e.period = 250;
            e.slash = 278;
            e.zero = 500;
            e.one = 500;
            e.two = 500;
            e.three = 500;
            e.four = 500;
            e.five = 500;
            e.six = 500;
            e.seven = 500;
            e.eight = 500;
            e.nine = 500;
            e.colon = 333;
            e.semicolon = 333;
            e.less = 570;
            e.equal = 570;
            e.greater = 570;
            e.question = 500;
            e.at = 832;
            e.A = 667;
            e.B = 667;
            e.C = 667;
            e.D = 722;
            e.E = 667;
            e.F = 667;
            e.G = 722;
            e.H = 778;
            e.I = 389;
            e.J = 500;
            e.K = 667;
            e.L = 611;
            e.M = 889;
            e.N = 722;
            e.O = 722;
            e.P = 611;
            e.Q = 722;
            e.R = 667;
            e.S = 556;
            e.T = 611;
            e.U = 722;
            e.V = 667;
            e.W = 889;
            e.X = 667;
            e.Y = 611;
            e.Z = 611;
            e.bracketleft = 333;
            e.backslash = 278;
            e.bracketright = 333;
            e.asciicircum = 570;
            e.underscore = 500;
            e.quoteleft = 333;
            e.a = 500;
            e.b = 500;
            e.c = 444;
            e.d = 500;
            e.e = 444;
            e.f = 333;
            e.g = 500;
            e.h = 556;
            e.i = 278;
            e.j = 278;
            e.k = 500;
            e.l = 278;
            e.m = 778;
            e.n = 556;
            e.o = 500;
            e.p = 500;
            e.q = 500;
            e.r = 389;
            e.s = 389;
            e.t = 278;
            e.u = 556;
            e.v = 444;
            e.w = 667;
            e.x = 500;
            e.y = 444;
            e.z = 389;
            e.braceleft = 348;
            e.bar = 220;
            e.braceright = 348;
            e.asciitilde = 570;
            e.exclamdown = 389;
            e.cent = 500;
            e.sterling = 500;
            e.fraction = 167;
            e.yen = 500;
            e.florin = 500;
            e.section = 500;
            e.currency = 500;
            e.quotesingle = 278;
            e.quotedblleft = 500;
            e.guillemotleft = 500;
            e.guilsinglleft = 333;
            e.guilsinglright = 333;
            e.fi = 556;
            e.fl = 556;
            e.endash = 500;
            e.dagger = 500;
            e.daggerdbl = 500;
            e.periodcentered = 250;
            e.paragraph = 500;
            e.bullet = 350;
            e.quotesinglbase = 333;
            e.quotedblbase = 500;
            e.quotedblright = 500;
            e.guillemotright = 500;
            e.ellipsis = 1e3;
            e.perthousand = 1e3;
            e.questiondown = 500;
            e.grave = 333;
            e.acute = 333;
            e.circumflex = 333;
            e.tilde = 333;
            e.macron = 333;
            e.breve = 333;
            e.dotaccent = 333;
            e.dieresis = 333;
            e.ring = 333;
            e.cedilla = 333;
            e.hungarumlaut = 333;
            e.ogonek = 333;
            e.caron = 333;
            e.emdash = 1e3;
            e.AE = 944;
            e.ordfeminine = 266;
            e.Lslash = 611;
            e.Oslash = 722;
            e.OE = 944;
            e.ordmasculine = 300;
            e.ae = 722;
            e.dotlessi = 278;
            e.lslash = 278;
            e.oslash = 500;
            e.oe = 722;
            e.germandbls = 500;
            e.Idieresis = 389;
            e.eacute = 444;
            e.abreve = 500;
            e.uhungarumlaut = 556;
            e.ecaron = 444;
            e.Ydieresis = 611;
            e.divide = 570;
            e.Yacute = 611;
            e.Acircumflex = 667;
            e.aacute = 500;
            e.Ucircumflex = 722;
            e.yacute = 444;
            e.scommaaccent = 389;
            e.ecircumflex = 444;
            e.Uring = 722;
            e.Udieresis = 722;
            e.aogonek = 500;
            e.Uacute = 722;
            e.uogonek = 556;
            e.Edieresis = 667;
            e.Dcroat = 722;
            e.commaaccent = 250;
            e.copyright = 747;
            e.Emacron = 667;
            e.ccaron = 444;
            e.aring = 500;
            e.Ncommaaccent = 722;
            e.lacute = 278;
            e.agrave = 500;
            e.Tcommaaccent = 611;
            e.Cacute = 667;
            e.atilde = 500;
            e.Edotaccent = 667;
            e.scaron = 389;
            e.scedilla = 389;
            e.iacute = 278;
            e.lozenge = 494;
            e.Rcaron = 667;
            e.Gcommaaccent = 722;
            e.ucircumflex = 556;
            e.acircumflex = 500;
            e.Amacron = 667;
            e.rcaron = 389;
            e.ccedilla = 444;
            e.Zdotaccent = 611;
            e.Thorn = 611;
            e.Omacron = 722;
            e.Racute = 667;
            e.Sacute = 556;
            e.dcaron = 608;
            e.Umacron = 722;
            e.uring = 556;
            e.threesuperior = 300;
            e.Ograve = 722;
            e.Agrave = 667;
            e.Abreve = 667;
            e.multiply = 570;
            e.uacute = 556;
            e.Tcaron = 611;
            e.partialdiff = 494;
            e.ydieresis = 444;
            e.Nacute = 722;
            e.icircumflex = 278;
            e.Ecircumflex = 667;
            e.adieresis = 500;
            e.edieresis = 444;
            e.cacute = 444;
            e.nacute = 556;
            e.umacron = 556;
            e.Ncaron = 722;
            e.Iacute = 389;
            e.plusminus = 570;
            e.brokenbar = 220;
            e.registered = 747;
            e.Gbreve = 722;
            e.Idotaccent = 389;
            e.summation = 600;
            e.Egrave = 667;
            e.racute = 389;
            e.omacron = 500;
            e.Zacute = 611;
            e.Zcaron = 611;
            e.greaterequal = 549;
            e.Eth = 722;
            e.Ccedilla = 667;
            e.lcommaaccent = 278;
            e.tcaron = 366;
            e.eogonek = 444;
            e.Uogonek = 722;
            e.Aacute = 667;
            e.Adieresis = 667;
            e.egrave = 444;
            e.zacute = 389;
            e.iogonek = 278;
            e.Oacute = 722;
            e.oacute = 500;
            e.amacron = 500;
            e.sacute = 389;
            e.idieresis = 278;
            e.Ocircumflex = 722;
            e.Ugrave = 722;
            e.Delta = 612;
            e.thorn = 500;
            e.twosuperior = 300;
            e.Odieresis = 722;
            e.mu = 576;
            e.igrave = 278;
            e.ohungarumlaut = 500;
            e.Eogonek = 667;
            e.dcroat = 500;
            e.threequarters = 750;
            e.Scedilla = 556;
            e.lcaron = 382;
            e.Kcommaaccent = 667;
            e.Lacute = 611;
            e.trademark = 1e3;
            e.edotaccent = 444;
            e.Igrave = 389;
            e.Imacron = 389;
            e.Lcaron = 611;
            e.onehalf = 750;
            e.lessequal = 549;
            e.ocircumflex = 500;
            e.ntilde = 556;
            e.Uhungarumlaut = 722;
            e.Eacute = 667;
            e.emacron = 444;
            e.gbreve = 500;
            e.onequarter = 750;
            e.Scaron = 556;
            e.Scommaaccent = 556;
            e.Ohungarumlaut = 722;
            e.degree = 400;
            e.ograve = 500;
            e.Ccaron = 667;
            e.ugrave = 556;
            e.radical = 549;
            e.Dcaron = 722;
            e.rcommaaccent = 389;
            e.Ntilde = 722;
            e.otilde = 500;
            e.Rcommaaccent = 667;
            e.Lcommaaccent = 611;
            e.Atilde = 667;
            e.Aogonek = 667;
            e.Aring = 667;
            e.Otilde = 722;
            e.zdotaccent = 389;
            e.Ecaron = 667;
            e.Iogonek = 389;
            e.kcommaaccent = 500;
            e.minus = 606;
            e.Icircumflex = 389;
            e.ncaron = 556;
            e.tcommaaccent = 278;
            e.logicalnot = 606;
            e.odieresis = 500;
            e.udieresis = 556;
            e.notequal = 549;
            e.gcommaaccent = 500;
            e.eth = 500;
            e.zcaron = 389;
            e.ncommaaccent = 556;
            e.onesuperior = 300;
            e.imacron = 278;
            e.Euro = 500;
          });
          e["Times-Italic"] = (0, r.getLookupTableFactory)(function (e) {
            e.space = 250;
            e.exclam = 333;
            e.quotedbl = 420;
            e.numbersign = 500;
            e.dollar = 500;
            e.percent = 833;
            e.ampersand = 778;
            e.quoteright = 333;
            e.parenleft = 333;
            e.parenright = 333;
            e.asterisk = 500;
            e.plus = 675;
            e.comma = 250;
            e.hyphen = 333;
            e.period = 250;
            e.slash = 278;
            e.zero = 500;
            e.one = 500;
            e.two = 500;
            e.three = 500;
            e.four = 500;
            e.five = 500;
            e.six = 500;
            e.seven = 500;
            e.eight = 500;
            e.nine = 500;
            e.colon = 333;
            e.semicolon = 333;
            e.less = 675;
            e.equal = 675;
            e.greater = 675;
            e.question = 500;
            e.at = 920;
            e.A = 611;
            e.B = 611;
            e.C = 667;
            e.D = 722;
            e.E = 611;
            e.F = 611;
            e.G = 722;
            e.H = 722;
            e.I = 333;
            e.J = 444;
            e.K = 667;
            e.L = 556;
            e.M = 833;
            e.N = 667;
            e.O = 722;
            e.P = 611;
            e.Q = 722;
            e.R = 611;
            e.S = 500;
            e.T = 556;
            e.U = 722;
            e.V = 611;
            e.W = 833;
            e.X = 611;
            e.Y = 556;
            e.Z = 556;
            e.bracketleft = 389;
            e.backslash = 278;
            e.bracketright = 389;
            e.asciicircum = 422;
            e.underscore = 500;
            e.quoteleft = 333;
            e.a = 500;
            e.b = 500;
            e.c = 444;
            e.d = 500;
            e.e = 444;
            e.f = 278;
            e.g = 500;
            e.h = 500;
            e.i = 278;
            e.j = 278;
            e.k = 444;
            e.l = 278;
            e.m = 722;
            e.n = 500;
            e.o = 500;
            e.p = 500;
            e.q = 500;
            e.r = 389;
            e.s = 389;
            e.t = 278;
            e.u = 500;
            e.v = 444;
            e.w = 667;
            e.x = 444;
            e.y = 444;
            e.z = 389;
            e.braceleft = 400;
            e.bar = 275;
            e.braceright = 400;
            e.asciitilde = 541;
            e.exclamdown = 389;
            e.cent = 500;
            e.sterling = 500;
            e.fraction = 167;
            e.yen = 500;
            e.florin = 500;
            e.section = 500;
            e.currency = 500;
            e.quotesingle = 214;
            e.quotedblleft = 556;
            e.guillemotleft = 500;
            e.guilsinglleft = 333;
            e.guilsinglright = 333;
            e.fi = 500;
            e.fl = 500;
            e.endash = 500;
            e.dagger = 500;
            e.daggerdbl = 500;
            e.periodcentered = 250;
            e.paragraph = 523;
            e.bullet = 350;
            e.quotesinglbase = 333;
            e.quotedblbase = 556;
            e.quotedblright = 556;
            e.guillemotright = 500;
            e.ellipsis = 889;
            e.perthousand = 1e3;
            e.questiondown = 500;
            e.grave = 333;
            e.acute = 333;
            e.circumflex = 333;
            e.tilde = 333;
            e.macron = 333;
            e.breve = 333;
            e.dotaccent = 333;
            e.dieresis = 333;
            e.ring = 333;
            e.cedilla = 333;
            e.hungarumlaut = 333;
            e.ogonek = 333;
            e.caron = 333;
            e.emdash = 889;
            e.AE = 889;
            e.ordfeminine = 276;
            e.Lslash = 556;
            e.Oslash = 722;
            e.OE = 944;
            e.ordmasculine = 310;
            e.ae = 667;
            e.dotlessi = 278;
            e.lslash = 278;
            e.oslash = 500;
            e.oe = 667;
            e.germandbls = 500;
            e.Idieresis = 333;
            e.eacute = 444;
            e.abreve = 500;
            e.uhungarumlaut = 500;
            e.ecaron = 444;
            e.Ydieresis = 556;
            e.divide = 675;
            e.Yacute = 556;
            e.Acircumflex = 611;
            e.aacute = 500;
            e.Ucircumflex = 722;
            e.yacute = 444;
            e.scommaaccent = 389;
            e.ecircumflex = 444;
            e.Uring = 722;
            e.Udieresis = 722;
            e.aogonek = 500;
            e.Uacute = 722;
            e.uogonek = 500;
            e.Edieresis = 611;
            e.Dcroat = 722;
            e.commaaccent = 250;
            e.copyright = 760;
            e.Emacron = 611;
            e.ccaron = 444;
            e.aring = 500;
            e.Ncommaaccent = 667;
            e.lacute = 278;
            e.agrave = 500;
            e.Tcommaaccent = 556;
            e.Cacute = 667;
            e.atilde = 500;
            e.Edotaccent = 611;
            e.scaron = 389;
            e.scedilla = 389;
            e.iacute = 278;
            e.lozenge = 471;
            e.Rcaron = 611;
            e.Gcommaaccent = 722;
            e.ucircumflex = 500;
            e.acircumflex = 500;
            e.Amacron = 611;
            e.rcaron = 389;
            e.ccedilla = 444;
            e.Zdotaccent = 556;
            e.Thorn = 611;
            e.Omacron = 722;
            e.Racute = 611;
            e.Sacute = 500;
            e.dcaron = 544;
            e.Umacron = 722;
            e.uring = 500;
            e.threesuperior = 300;
            e.Ograve = 722;
            e.Agrave = 611;
            e.Abreve = 611;
            e.multiply = 675;
            e.uacute = 500;
            e.Tcaron = 556;
            e.partialdiff = 476;
            e.ydieresis = 444;
            e.Nacute = 667;
            e.icircumflex = 278;
            e.Ecircumflex = 611;
            e.adieresis = 500;
            e.edieresis = 444;
            e.cacute = 444;
            e.nacute = 500;
            e.umacron = 500;
            e.Ncaron = 667;
            e.Iacute = 333;
            e.plusminus = 675;
            e.brokenbar = 275;
            e.registered = 760;
            e.Gbreve = 722;
            e.Idotaccent = 333;
            e.summation = 600;
            e.Egrave = 611;
            e.racute = 389;
            e.omacron = 500;
            e.Zacute = 556;
            e.Zcaron = 556;
            e.greaterequal = 549;
            e.Eth = 722;
            e.Ccedilla = 667;
            e.lcommaaccent = 278;
            e.tcaron = 300;
            e.eogonek = 444;
            e.Uogonek = 722;
            e.Aacute = 611;
            e.Adieresis = 611;
            e.egrave = 444;
            e.zacute = 389;
            e.iogonek = 278;
            e.Oacute = 722;
            e.oacute = 500;
            e.amacron = 500;
            e.sacute = 389;
            e.idieresis = 278;
            e.Ocircumflex = 722;
            e.Ugrave = 722;
            e.Delta = 612;
            e.thorn = 500;
            e.twosuperior = 300;
            e.Odieresis = 722;
            e.mu = 500;
            e.igrave = 278;
            e.ohungarumlaut = 500;
            e.Eogonek = 611;
            e.dcroat = 500;
            e.threequarters = 750;
            e.Scedilla = 500;
            e.lcaron = 300;
            e.Kcommaaccent = 667;
            e.Lacute = 556;
            e.trademark = 980;
            e.edotaccent = 444;
            e.Igrave = 333;
            e.Imacron = 333;
            e.Lcaron = 611;
            e.onehalf = 750;
            e.lessequal = 549;
            e.ocircumflex = 500;
            e.ntilde = 500;
            e.Uhungarumlaut = 722;
            e.Eacute = 611;
            e.emacron = 444;
            e.gbreve = 500;
            e.onequarter = 750;
            e.Scaron = 500;
            e.Scommaaccent = 500;
            e.Ohungarumlaut = 722;
            e.degree = 400;
            e.ograve = 500;
            e.Ccaron = 667;
            e.ugrave = 500;
            e.radical = 453;
            e.Dcaron = 722;
            e.rcommaaccent = 389;
            e.Ntilde = 667;
            e.otilde = 500;
            e.Rcommaaccent = 611;
            e.Lcommaaccent = 556;
            e.Atilde = 611;
            e.Aogonek = 611;
            e.Aring = 611;
            e.Otilde = 722;
            e.zdotaccent = 389;
            e.Ecaron = 611;
            e.Iogonek = 333;
            e.kcommaaccent = 444;
            e.minus = 675;
            e.Icircumflex = 333;
            e.ncaron = 500;
            e.tcommaaccent = 278;
            e.logicalnot = 675;
            e.odieresis = 500;
            e.udieresis = 500;
            e.notequal = 549;
            e.gcommaaccent = 500;
            e.eth = 500;
            e.zcaron = 389;
            e.ncommaaccent = 500;
            e.onesuperior = 300;
            e.imacron = 278;
            e.Euro = 500;
          });
          e.ZapfDingbats = (0, r.getLookupTableFactory)(function (e) {
            e.space = 278;
            e.a1 = 974;
            e.a2 = 961;
            e.a202 = 974;
            e.a3 = 980;
            e.a4 = 719;
            e.a5 = 789;
            e.a119 = 790;
            e.a118 = 791;
            e.a117 = 690;
            e.a11 = 960;
            e.a12 = 939;
            e.a13 = 549;
            e.a14 = 855;
            e.a15 = 911;
            e.a16 = 933;
            e.a105 = 911;
            e.a17 = 945;
            e.a18 = 974;
            e.a19 = 755;
            e.a20 = 846;
            e.a21 = 762;
            e.a22 = 761;
            e.a23 = 571;
            e.a24 = 677;
            e.a25 = 763;
            e.a26 = 760;
            e.a27 = 759;
            e.a28 = 754;
            e.a6 = 494;
            e.a7 = 552;
            e.a8 = 537;
            e.a9 = 577;
            e.a10 = 692;
            e.a29 = 786;
            e.a30 = 788;
            e.a31 = 788;
            e.a32 = 790;
            e.a33 = 793;
            e.a34 = 794;
            e.a35 = 816;
            e.a36 = 823;
            e.a37 = 789;
            e.a38 = 841;
            e.a39 = 823;
            e.a40 = 833;
            e.a41 = 816;
            e.a42 = 831;
            e.a43 = 923;
            e.a44 = 744;
            e.a45 = 723;
            e.a46 = 749;
            e.a47 = 790;
            e.a48 = 792;
            e.a49 = 695;
            e.a50 = 776;
            e.a51 = 768;
            e.a52 = 792;
            e.a53 = 759;
            e.a54 = 707;
            e.a55 = 708;
            e.a56 = 682;
            e.a57 = 701;
            e.a58 = 826;
            e.a59 = 815;
            e.a60 = 789;
            e.a61 = 789;
            e.a62 = 707;
            e.a63 = 687;
            e.a64 = 696;
            e.a65 = 689;
            e.a66 = 786;
            e.a67 = 787;
            e.a68 = 713;
            e.a69 = 791;
            e.a70 = 785;
            e.a71 = 791;
            e.a72 = 873;
            e.a73 = 761;
            e.a74 = 762;
            e.a203 = 762;
            e.a75 = 759;
            e.a204 = 759;
            e.a76 = 892;
            e.a77 = 892;
            e.a78 = 788;
            e.a79 = 784;
            e.a81 = 438;
            e.a82 = 138;
            e.a83 = 277;
            e.a84 = 415;
            e.a97 = 392;
            e.a98 = 392;
            e.a99 = 668;
            e.a100 = 668;
            e.a89 = 390;
            e.a90 = 390;
            e.a93 = 317;
            e.a94 = 317;
            e.a91 = 276;
            e.a92 = 276;
            e.a205 = 509;
            e.a85 = 509;
            e.a206 = 410;
            e.a86 = 410;
            e.a87 = 234;
            e.a88 = 234;
            e.a95 = 334;
            e.a96 = 334;
            e.a101 = 732;
            e.a102 = 544;
            e.a103 = 544;
            e.a104 = 910;
            e.a106 = 667;
            e.a107 = 760;
            e.a108 = 760;
            e.a112 = 776;
            e.a111 = 595;
            e.a110 = 694;
            e.a109 = 626;
            e.a120 = 788;
            e.a121 = 788;
            e.a122 = 788;
            e.a123 = 788;
            e.a124 = 788;
            e.a125 = 788;
            e.a126 = 788;
            e.a127 = 788;
            e.a128 = 788;
            e.a129 = 788;
            e.a130 = 788;
            e.a131 = 788;
            e.a132 = 788;
            e.a133 = 788;
            e.a134 = 788;
            e.a135 = 788;
            e.a136 = 788;
            e.a137 = 788;
            e.a138 = 788;
            e.a139 = 788;
            e.a140 = 788;
            e.a141 = 788;
            e.a142 = 788;
            e.a143 = 788;
            e.a144 = 788;
            e.a145 = 788;
            e.a146 = 788;
            e.a147 = 788;
            e.a148 = 788;
            e.a149 = 788;
            e.a150 = 788;
            e.a151 = 788;
            e.a152 = 788;
            e.a153 = 788;
            e.a154 = 788;
            e.a155 = 788;
            e.a156 = 788;
            e.a157 = 788;
            e.a158 = 788;
            e.a159 = 788;
            e.a160 = 894;
            e.a161 = 838;
            e.a163 = 1016;
            e.a164 = 458;
            e.a196 = 748;
            e.a165 = 924;
            e.a192 = 748;
            e.a166 = 918;
            e.a167 = 927;
            e.a168 = 928;
            e.a169 = 928;
            e.a170 = 834;
            e.a171 = 873;
            e.a172 = 828;
            e.a173 = 924;
            e.a162 = 924;
            e.a174 = 917;
            e.a175 = 930;
            e.a176 = 931;
            e.a177 = 463;
            e.a178 = 883;
            e.a179 = 836;
            e.a193 = 836;
            e.a180 = 867;
            e.a199 = 867;
            e.a181 = 696;
            e.a200 = 696;
            e.a182 = 874;
            e.a201 = 874;
            e.a183 = 760;
            e.a184 = 946;
            e.a197 = 771;
            e.a185 = 865;
            e.a194 = 771;
            e.a198 = 888;
            e.a186 = 967;
            e.a195 = 888;
            e.a187 = 831;
            e.a188 = 873;
            e.a189 = 927;
            e.a190 = 970;
            e.a191 = 918;
          });
        });
        t.getMetrics = i;
        var n = (0, r.getLookupTableFactory)(function (e) {
          e.Courier = {
            ascent: 629,
            descent: -157,
            capHeight: 562,
            xHeight: -426
          };
          e["Courier-Bold"] = {
            ascent: 629,
            descent: -157,
            capHeight: 562,
            xHeight: 439
          };
          e["Courier-Oblique"] = {
            ascent: 629,
            descent: -157,
            capHeight: 562,
            xHeight: 426
          };
          e["Courier-BoldOblique"] = {
            ascent: 629,
            descent: -157,
            capHeight: 562,
            xHeight: 426
          };
          e.Helvetica = {
            ascent: 718,
            descent: -207,
            capHeight: 718,
            xHeight: 523
          };
          e["Helvetica-Bold"] = {
            ascent: 718,
            descent: -207,
            capHeight: 718,
            xHeight: 532
          };
          e["Helvetica-Oblique"] = {
            ascent: 718,
            descent: -207,
            capHeight: 718,
            xHeight: 523
          };
          e["Helvetica-BoldOblique"] = {
            ascent: 718,
            descent: -207,
            capHeight: 718,
            xHeight: 532
          };
          e["Times-Roman"] = {
            ascent: 683,
            descent: -217,
            capHeight: 662,
            xHeight: 450
          };
          e["Times-Bold"] = {
            ascent: 683,
            descent: -217,
            capHeight: 676,
            xHeight: 461
          };
          e["Times-Italic"] = {
            ascent: 683,
            descent: -217,
            capHeight: 653,
            xHeight: 441
          };
          e["Times-BoldItalic"] = {
            ascent: 683,
            descent: -217,
            capHeight: 669,
            xHeight: 462
          };
          e.Symbol = {
            ascent: Math.NaN,
            descent: Math.NaN,
            capHeight: Math.NaN,
            xHeight: Math.NaN
          };
          e.ZapfDingbats = {
            ascent: Math.NaN,
            descent: Math.NaN,
            capHeight: Math.NaN,
            xHeight: Math.NaN
          };
        });
        t.getFontBasicMetrics = n;
      }, function (e, t) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.GlyfTable = void 0;
        t.GlyfTable = /*#__PURE__*/function () {
          function GlyfTable(_ref68) {
            var e = _ref68.glyfTable,
              t = _ref68.isGlyphLocationsLong,
              a = _ref68.locaTable,
              r = _ref68.numGlyphs;
            _classCallCheck(this, GlyfTable);
            this.glyphs = [];
            var i = new DataView(a.buffer, a.byteOffset, a.byteLength),
              n = new DataView(e.buffer, e.byteOffset, e.byteLength),
              s = t ? 4 : 2;
            var o = t ? i.getUint32(0) : 2 * i.getUint16(0),
              c = 0;
            for (var _e398 = 0; _e398 < r; _e398++) {
              c += s;
              var _e399 = t ? i.getUint32(c) : 2 * i.getUint16(c);
              if (_e399 === o) {
                this.glyphs.push(new Glyph({}));
                continue;
              }
              var _a225 = Glyph.parse(o, n);
              this.glyphs.push(_a225);
              o = _e399;
            }
          }
          _createClass(GlyfTable, [{
            key: "getSize",
            value: function getSize() {
              return this.glyphs.reduce(function (e, t) {
                return e + (t.getSize() + 3 & -4);
              }, 0);
            }
          }, {
            key: "write",
            value: function write() {
              var e = this.getSize(),
                t = new DataView(new ArrayBuffer(e)),
                a = e > 131070,
                r = a ? 4 : 2,
                i = new DataView(new ArrayBuffer((this.glyphs.length + 1) * r));
              a ? i.setUint32(0, 0) : i.setUint16(0, 0);
              var n = 0,
                s = 0;
              var _iterator106 = _createForOfIteratorHelper(this.glyphs),
                _step106;
              try {
                for (_iterator106.s(); !(_step106 = _iterator106.n()).done;) {
                  var _e400 = _step106.value;
                  n += _e400.write(n, t);
                  n = n + 3 & -4;
                  s += r;
                  a ? i.setUint32(s, n) : i.setUint16(s, n >> 1);
                }
              } catch (err) {
                _iterator106.e(err);
              } finally {
                _iterator106.f();
              }
              return {
                isLocationLong: a,
                loca: new Uint8Array(i.buffer),
                glyf: new Uint8Array(t.buffer)
              };
            }
          }, {
            key: "scale",
            value: function scale(e) {
              for (var _t284 = 0, a = this.glyphs.length; _t284 < a; _t284++) this.glyphs[_t284].scale(e[_t284]);
            }
          }]);
          return GlyfTable;
        }();
        var Glyph = /*#__PURE__*/function () {
          function Glyph(_ref69) {
            var _ref69$header = _ref69.header,
              e = _ref69$header === void 0 ? null : _ref69$header,
              _ref69$simple = _ref69.simple,
              t = _ref69$simple === void 0 ? null : _ref69$simple,
              _ref69$composites = _ref69.composites,
              a = _ref69$composites === void 0 ? null : _ref69$composites;
            _classCallCheck(this, Glyph);
            this.header = e;
            this.simple = t;
            this.composites = a;
          }
          _createClass(Glyph, [{
            key: "getSize",
            value: function getSize() {
              if (!this.header) return 0;
              var e = this.simple ? this.simple.getSize() : this.composites.reduce(function (e, t) {
                return e + t.getSize();
              }, 0);
              return this.header.getSize() + e;
            }
          }, {
            key: "write",
            value: function write(e, t) {
              if (!this.header) return 0;
              var a = e;
              e += this.header.write(e, t);
              if (this.simple) e += this.simple.write(e, t);else {
                var _iterator107 = _createForOfIteratorHelper(this.composites),
                  _step107;
                try {
                  for (_iterator107.s(); !(_step107 = _iterator107.n()).done;) {
                    var _a226 = _step107.value;
                    e += _a226.write(e, t);
                  }
                } catch (err) {
                  _iterator107.e(err);
                } finally {
                  _iterator107.f();
                }
              }
              return e - a;
            }
          }, {
            key: "scale",
            value: function scale(e) {
              if (!this.header) return;
              var t = (this.header.xMin + this.header.xMax) / 2;
              this.header.scale(t, e);
              if (this.simple) this.simple.scale(t, e);else {
                var _iterator108 = _createForOfIteratorHelper(this.composites),
                  _step108;
                try {
                  for (_iterator108.s(); !(_step108 = _iterator108.n()).done;) {
                    var a = _step108.value;
                    a.scale(t, e);
                  }
                } catch (err) {
                  _iterator108.e(err);
                } finally {
                  _iterator108.f();
                }
              }
            }
          }], [{
            key: "parse",
            value: function parse(e, t) {
              var _GlyphHeader$parse = GlyphHeader.parse(e, t),
                _GlyphHeader$parse2 = _slicedToArray(_GlyphHeader$parse, 2),
                a = _GlyphHeader$parse2[0],
                r = _GlyphHeader$parse2[1];
              e += a;
              if (r.numberOfContours < 0) {
                var _a227 = [];
                for (;;) {
                  var _CompositeGlyph$parse = CompositeGlyph.parse(e, t),
                    _CompositeGlyph$parse2 = _slicedToArray(_CompositeGlyph$parse, 2),
                    _r185 = _CompositeGlyph$parse2[0],
                    _i161 = _CompositeGlyph$parse2[1];
                  e += _r185;
                  _a227.push(_i161);
                  if (!(32 & _i161.flags)) break;
                }
                return new Glyph({
                  header: r,
                  composites: _a227
                });
              }
              var i = SimpleGlyph.parse(e, t, r.numberOfContours);
              return new Glyph({
                header: r,
                simple: i
              });
            }
          }]);
          return Glyph;
        }();
        var GlyphHeader = /*#__PURE__*/function () {
          function GlyphHeader(_ref70) {
            var e = _ref70.numberOfContours,
              t = _ref70.xMin,
              a = _ref70.yMin,
              r = _ref70.xMax,
              i = _ref70.yMax;
            _classCallCheck(this, GlyphHeader);
            this.numberOfContours = e;
            this.xMin = t;
            this.yMin = a;
            this.xMax = r;
            this.yMax = i;
          }
          _createClass(GlyphHeader, [{
            key: "getSize",
            value: function getSize() {
              return 10;
            }
          }, {
            key: "write",
            value: function write(e, t) {
              t.setInt16(e, this.numberOfContours);
              t.setInt16(e + 2, this.xMin);
              t.setInt16(e + 4, this.yMin);
              t.setInt16(e + 6, this.xMax);
              t.setInt16(e + 8, this.yMax);
              return 10;
            }
          }, {
            key: "scale",
            value: function scale(e, t) {
              this.xMin = Math.round(e + (this.xMin - e) * t);
              this.xMax = Math.round(e + (this.xMax - e) * t);
            }
          }], [{
            key: "parse",
            value: function parse(e, t) {
              return [10, new GlyphHeader({
                numberOfContours: t.getInt16(e),
                xMin: t.getInt16(e + 2),
                yMin: t.getInt16(e + 4),
                xMax: t.getInt16(e + 6),
                yMax: t.getInt16(e + 8)
              })];
            }
          }]);
          return GlyphHeader;
        }();
        var Contour = /*#__PURE__*/_createClass(function Contour(_ref71) {
          var e = _ref71.flags,
            t = _ref71.xCoordinates,
            a = _ref71.yCoordinates;
          _classCallCheck(this, Contour);
          this.xCoordinates = t;
          this.yCoordinates = a;
          this.flags = e;
        });
        var SimpleGlyph = /*#__PURE__*/function () {
          function SimpleGlyph(_ref72) {
            var e = _ref72.contours,
              t = _ref72.instructions;
            _classCallCheck(this, SimpleGlyph);
            this.contours = e;
            this.instructions = t;
          }
          _createClass(SimpleGlyph, [{
            key: "getSize",
            value: function getSize() {
              var e = 2 * this.contours.length + 2 + this.instructions.length,
                t = 0,
                a = 0;
              var _iterator109 = _createForOfIteratorHelper(this.contours),
                _step109;
              try {
                for (_iterator109.s(); !(_step109 = _iterator109.n()).done;) {
                  var r = _step109.value;
                  e += r.flags.length;
                  for (var _i162 = 0, _n104 = r.xCoordinates.length; _i162 < _n104; _i162++) {
                    var _n105 = r.xCoordinates[_i162],
                      _s73 = r.yCoordinates[_i162];
                    var _o61 = Math.abs(_n105 - t);
                    _o61 > 255 ? e += 2 : _o61 > 0 && (e += 1);
                    t = _n105;
                    _o61 = Math.abs(_s73 - a);
                    _o61 > 255 ? e += 2 : _o61 > 0 && (e += 1);
                    a = _s73;
                  }
                }
              } catch (err) {
                _iterator109.e(err);
              } finally {
                _iterator109.f();
              }
              return e;
            }
          }, {
            key: "write",
            value: function write(e, t) {
              var a = e,
                r = [],
                i = [],
                n = [];
              var s = 0,
                o = 0;
              var _iterator110 = _createForOfIteratorHelper(this.contours),
                _step110;
              try {
                for (_iterator110.s(); !(_step110 = _iterator110.n()).done;) {
                  var _a231 = _step110.value;
                  for (var _e401 = 0, _t285 = _a231.xCoordinates.length; _e401 < _t285; _e401++) {
                    var _t286 = _a231.flags[_e401];
                    var _c37 = _a231.xCoordinates[_e401];
                    var l = _c37 - s;
                    if (0 === l) {
                      _t286 |= 16;
                      r.push(0);
                    } else {
                      var _e402 = Math.abs(l);
                      if (_e402 <= 255) {
                        _t286 |= l >= 0 ? 18 : 2;
                        r.push(_e402);
                      } else r.push(l);
                    }
                    s = _c37;
                    var _h26 = _a231.yCoordinates[_e401];
                    l = _h26 - o;
                    if (0 === l) {
                      _t286 |= 32;
                      i.push(0);
                    } else {
                      var _e403 = Math.abs(l);
                      if (_e403 <= 255) {
                        _t286 |= l >= 0 ? 36 : 4;
                        i.push(_e403);
                      } else i.push(l);
                    }
                    o = _h26;
                    n.push(_t286);
                  }
                  t.setUint16(e, r.length - 1);
                  e += 2;
                }
              } catch (err) {
                _iterator110.e(err);
              } finally {
                _iterator110.f();
              }
              t.setUint16(e, this.instructions.length);
              e += 2;
              if (this.instructions.length) {
                new Uint8Array(t.buffer, 0, t.buffer.byteLength).set(this.instructions, e);
                e += this.instructions.length;
              }
              for (var _i163 = 0, _n106 = n; _i163 < _n106.length; _i163++) {
                var _a228 = _n106[_i163];
                t.setUint8(e++, _a228);
              }
              for (var _a229 = 0, _i164 = r.length; _a229 < _i164; _a229++) {
                var _i165 = r[_a229],
                  _s74 = n[_a229];
                if (2 & _s74) t.setUint8(e++, _i165);else if (!(16 & _s74)) {
                  t.setInt16(e, _i165);
                  e += 2;
                }
              }
              for (var _a230 = 0, _r186 = i.length; _a230 < _r186; _a230++) {
                var _r187 = i[_a230],
                  _s75 = n[_a230];
                if (4 & _s75) t.setUint8(e++, _r187);else if (!(32 & _s75)) {
                  t.setInt16(e, _r187);
                  e += 2;
                }
              }
              return e - a;
            }
          }, {
            key: "scale",
            value: function scale(e, t) {
              var _iterator111 = _createForOfIteratorHelper(this.contours),
                _step111;
              try {
                for (_iterator111.s(); !(_step111 = _iterator111.n()).done;) {
                  var a = _step111.value;
                  if (0 !== a.xCoordinates.length) for (var r = 0, _i166 = a.xCoordinates.length; r < _i166; r++) a.xCoordinates[r] = Math.round(e + (a.xCoordinates[r] - e) * t);
                }
              } catch (err) {
                _iterator111.e(err);
              } finally {
                _iterator111.f();
              }
            }
          }], [{
            key: "parse",
            value: function parse(e, t, a) {
              var r = [];
              for (var _i167 = 0; _i167 < a; _i167++) {
                var _a232 = t.getUint16(e);
                e += 2;
                r.push(_a232);
              }
              var i = r[a - 1] + 1,
                n = t.getUint16(e);
              e += 2;
              var s = new Uint8Array(t).slice(e, e + n);
              e += n;
              var o = [];
              for (var _a233 = 0; _a233 < i; e++, _a233++) {
                var _r188 = t.getUint8(e);
                o.push(_r188);
                if (8 & _r188) {
                  var _i168 = t.getUint8(++e);
                  _r188 ^= 8;
                  for (var _e404 = 0; _e404 < _i168; _e404++) o.push(_r188);
                  _a233 += _i168;
                }
              }
              var c = [];
              var l = [],
                h = [],
                u = [];
              var d = [];
              var f = 0,
                g = 0;
              for (var _a234 = 0; _a234 < i; _a234++) {
                var _i169 = o[_a234];
                if (2 & _i169) {
                  var _a235 = t.getUint8(e++);
                  g += 16 & _i169 ? _a235 : -_a235;
                  l.push(g);
                } else if (16 & _i169) l.push(g);else {
                  g += t.getInt16(e);
                  e += 2;
                  l.push(g);
                }
                if (r[f] === _a234) {
                  f++;
                  c.push(l);
                  l = [];
                }
              }
              g = 0;
              f = 0;
              for (var _a236 = 0; _a236 < i; _a236++) {
                var _i170 = o[_a236];
                if (4 & _i170) {
                  var _a237 = t.getUint8(e++);
                  g += 32 & _i170 ? _a237 : -_a237;
                  h.push(g);
                } else if (32 & _i170) h.push(g);else {
                  g += t.getInt16(e);
                  e += 2;
                  h.push(g);
                }
                u.push(1 & _i170 | 64 & _i170);
                if (r[f] === _a236) {
                  l = c[f];
                  f++;
                  d.push(new Contour({
                    flags: u,
                    xCoordinates: l,
                    yCoordinates: h
                  }));
                  h = [];
                  u = [];
                }
              }
              return new SimpleGlyph({
                contours: d,
                instructions: s
              });
            }
          }]);
          return SimpleGlyph;
        }();
        var CompositeGlyph = /*#__PURE__*/function () {
          function CompositeGlyph(_ref73) {
            var e = _ref73.flags,
              t = _ref73.glyphIndex,
              a = _ref73.argument1,
              r = _ref73.argument2,
              i = _ref73.transf,
              n = _ref73.instructions;
            _classCallCheck(this, CompositeGlyph);
            this.flags = e;
            this.glyphIndex = t;
            this.argument1 = a;
            this.argument2 = r;
            this.transf = i;
            this.instructions = n;
          }
          _createClass(CompositeGlyph, [{
            key: "getSize",
            value: function getSize() {
              var e = 4 + 2 * this.transf.length;
              256 & this.flags && (e += 2 + this.instructions.length);
              e += 2;
              2 & this.flags ? this.argument1 >= -128 && this.argument1 <= 127 && this.argument2 >= -128 && this.argument2 <= 127 || (e += 2) : this.argument1 >= 0 && this.argument1 <= 255 && this.argument2 >= 0 && this.argument2 <= 255 || (e += 2);
              return e;
            }
          }, {
            key: "write",
            value: function write(e, t) {
              var a = e;
              2 & this.flags ? this.argument1 >= -128 && this.argument1 <= 127 && this.argument2 >= -128 && this.argument2 <= 127 || (this.flags |= 1) : this.argument1 >= 0 && this.argument1 <= 255 && this.argument2 >= 0 && this.argument2 <= 255 || (this.flags |= 1);
              t.setUint16(e, this.flags);
              t.setUint16(e + 2, this.glyphIndex);
              e += 4;
              if (1 & this.flags) {
                if (2 & this.flags) {
                  t.setInt16(e, this.argument1);
                  t.setInt16(e + 2, this.argument2);
                } else {
                  t.setUint16(e, this.argument1);
                  t.setUint16(e + 2, this.argument2);
                }
                e += 4;
              } else {
                t.setUint8(e, this.argument1);
                t.setUint8(e + 1, this.argument2);
                e += 2;
              }
              if (256 & this.flags) {
                t.setUint16(e, this.instructions.length);
                e += 2;
                if (this.instructions.length) {
                  new Uint8Array(t.buffer, 0, t.buffer.byteLength).set(this.instructions, e);
                  e += this.instructions.length;
                }
              }
              return e - a;
            }
          }, {
            key: "scale",
            value: function scale(e, t) {}
          }], [{
            key: "parse",
            value: function parse(e, t) {
              var a = e,
                r = [];
              var i = t.getUint16(e);
              var n = t.getUint16(e + 2);
              e += 4;
              var s, o;
              if (1 & i) {
                if (2 & i) {
                  s = t.getInt16(e);
                  o = t.getInt16(e + 2);
                } else {
                  s = t.getUint16(e);
                  o = t.getUint16(e + 2);
                }
                e += 4;
                i ^= 1;
              } else {
                if (2 & i) {
                  s = t.getInt8(e);
                  o = t.getInt8(e + 1);
                } else {
                  s = t.getUint8(e);
                  o = t.getUint8(e + 1);
                }
                e += 2;
              }
              if (8 & i) {
                r.push(t.getUint16(e));
                e += 2;
              } else if (64 & i) {
                r.push(t.getUint16(e), t.getUint16(e + 2));
                e += 4;
              } else if (128 & i) {
                r.push(t.getUint16(e), t.getUint16(e + 2), t.getUint16(e + 4), t.getUint16(e + 6));
                e += 8;
              }
              var c = null;
              if (256 & i) {
                var _a238 = t.getUint16(e);
                e += 2;
                c = new Uint8Array(t).slice(e, e + _a238);
                e += _a238;
              }
              return [e - a, new CompositeGlyph({
                flags: i,
                glyphIndex: n,
                argument1: s,
                argument2: o,
                transf: r,
                instructions: c
              })];
            }
          }]);
          return CompositeGlyph;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.OpenTypeFileBuilder = void 0;
        var r = a(3),
          i = a(2);
        function writeInt16(e, t, a) {
          e[t] = a >> 8 & 255;
          e[t + 1] = 255 & a;
        }
        function writeInt32(e, t, a) {
          e[t] = a >> 24 & 255;
          e[t + 1] = a >> 16 & 255;
          e[t + 2] = a >> 8 & 255;
          e[t + 3] = 255 & a;
        }
        function writeData(e, t, a) {
          if (a instanceof Uint8Array) e.set(a, t);else if ("string" == typeof a) for (var _r189 = 0, _i171 = a.length; _r189 < _i171; _r189++) e[t++] = 255 & a.charCodeAt(_r189);else {
            var _iterator112 = _createForOfIteratorHelper(a),
              _step112;
            try {
              for (_iterator112.s(); !(_step112 = _iterator112.n()).done;) {
                var _r190 = _step112.value;
                e[t++] = 255 & _r190;
              }
            } catch (err) {
              _iterator112.e(err);
            } finally {
              _iterator112.f();
            }
          }
        }
        var OpenTypeFileBuilder = /*#__PURE__*/function () {
          function OpenTypeFileBuilder(e) {
            _classCallCheck(this, OpenTypeFileBuilder);
            this.sfnt = e;
            this.tables = Object.create(null);
          }
          _createClass(OpenTypeFileBuilder, [{
            key: "toArray",
            value: function toArray() {
              var e = this.sfnt;
              var t = this.tables,
                a = Object.keys(t);
              a.sort();
              var n = a.length;
              var s,
                o,
                c,
                l,
                h,
                u = 12 + 16 * n;
              var d = [u];
              for (s = 0; s < n; s++) {
                l = t[a[s]];
                u += (l.length + 3 & -4) >>> 0;
                d.push(u);
              }
              var f = new Uint8Array(u);
              for (s = 0; s < n; s++) {
                l = t[a[s]];
                writeData(f, d[s], l);
              }
              "true" === e && (e = (0, i.string32)(65536));
              f[0] = 255 & e.charCodeAt(0);
              f[1] = 255 & e.charCodeAt(1);
              f[2] = 255 & e.charCodeAt(2);
              f[3] = 255 & e.charCodeAt(3);
              writeInt16(f, 4, n);
              var g = OpenTypeFileBuilder.getSearchParams(n, 16);
              writeInt16(f, 6, g.range);
              writeInt16(f, 8, g.entry);
              writeInt16(f, 10, g.rangeShift);
              u = 12;
              for (s = 0; s < n; s++) {
                h = a[s];
                f[u] = 255 & h.charCodeAt(0);
                f[u + 1] = 255 & h.charCodeAt(1);
                f[u + 2] = 255 & h.charCodeAt(2);
                f[u + 3] = 255 & h.charCodeAt(3);
                var _e405 = 0;
                for (o = d[s], c = d[s + 1]; o < c; o += 4) {
                  _e405 = _e405 + (0, r.readUint32)(f, o) >>> 0;
                }
                writeInt32(f, u + 4, _e405);
                writeInt32(f, u + 8, d[s]);
                writeInt32(f, u + 12, t[h].length);
                u += 16;
              }
              return f;
            }
          }, {
            key: "addTable",
            value: function addTable(e, t) {
              if (e in this.tables) throw new Error("Table " + e + " already exists");
              this.tables[e] = t;
            }
          }], [{
            key: "getSearchParams",
            value: function getSearchParams(e, t) {
              var a = 1,
                r = 0;
              for (; (a ^ e) > a;) {
                a <<= 1;
                r++;
              }
              var i = a * t;
              return {
                range: i,
                entry: r,
                rangeShift: t * e - i
              };
            }
          }]);
          return OpenTypeFileBuilder;
        }();
        t.OpenTypeFileBuilder = OpenTypeFileBuilder;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.Type1Font = void 0;
        var r = a(35),
          i = a(2),
          n = a(38),
          s = a(3),
          o = a(8),
          c = a(49);
        function findBlock(e, t, a) {
          var r = e.length,
            i = t.length,
            n = r - i;
          var o = a,
            c = !1;
          for (; o < n;) {
            var _a239 = 0;
            for (; _a239 < i && e[o + _a239] === t[_a239];) _a239++;
            if (_a239 >= i) {
              o += _a239;
              for (; o < r && (0, s.isWhiteSpace)(e[o]);) o++;
              c = !0;
              break;
            }
            o++;
          }
          return {
            found: c,
            length: o
          };
        }
        t.Type1Font = /*#__PURE__*/function () {
          function Type1Font(e, t, a) {
            _classCallCheck(this, Type1Font);
            var r = a.length1,
              s = a.length2,
              l = t.peekBytes(6);
            var h = 128 === l[0] && 1 === l[1];
            if (h) {
              t.skip(6);
              r = l[5] << 24 | l[4] << 16 | l[3] << 8 | l[2];
            }
            var u = function getHeaderBlock(e, t) {
              var a = [101, 101, 120, 101, 99],
                r = e.pos;
              var n, s, c, l;
              try {
                n = e.getBytes(t);
                s = n.length;
              } catch (e) {}
              if (s === t) {
                c = findBlock(n, a, t - 2 * a.length);
                if (c.found && c.length === t) return {
                  stream: new o.Stream(n),
                  length: t
                };
              }
              (0, i.warn)('Invalid "Length1" property in Type1 font -- trying to recover.');
              e.pos = r;
              for (;;) {
                c = findBlock(e.peekBytes(2048), a, 0);
                if (0 === c.length) break;
                e.pos += c.length;
                if (c.found) {
                  l = e.pos - r;
                  break;
                }
              }
              e.pos = r;
              if (l) return {
                stream: new o.Stream(e.getBytes(l)),
                length: l
              };
              (0, i.warn)('Unable to recover "Length1" property in Type1 font -- using as is.');
              return {
                stream: new o.Stream(e.getBytes(t)),
                length: t
              };
            }(t, r);
            new c.Type1Parser(u.stream, !1, n.SEAC_ANALYSIS_ENABLED).extractFontHeader(a);
            if (h) {
              l = t.getBytes(6);
              s = l[5] << 24 | l[4] << 16 | l[3] << 8 | l[2];
            }
            var d = function getEexecBlock(e, t) {
                var a = e.getBytes();
                if (0 === a.length) throw new i.FormatError("getEexecBlock - no font program found.");
                return {
                  stream: new o.Stream(a),
                  length: a.length
                };
              }(t),
              f = new c.Type1Parser(d.stream, !0, n.SEAC_ANALYSIS_ENABLED).extractFontProgram(a);
            for (var _e406 in f.properties) a[_e406] = f.properties[_e406];
            var g = f.charstrings,
              p = this.getType2Charstrings(g),
              m = this.getType2Subrs(f.subrs);
            this.charstrings = g;
            this.data = this.wrap(e, p, this.charstrings, m, a);
            this.seacs = this.getSeacs(f.charstrings);
          }
          _createClass(Type1Font, [{
            key: "numGlyphs",
            get: function get() {
              return this.charstrings.length + 1;
            }
          }, {
            key: "getCharset",
            value: function getCharset() {
              var e = [".notdef"];
              var _iterator113 = _createForOfIteratorHelper(this.charstrings),
                _step113;
              try {
                for (_iterator113.s(); !(_step113 = _iterator113.n()).done;) {
                  var _t287 = _step113.value.glyphName;
                  e.push(_t287);
                }
              } catch (err) {
                _iterator113.e(err);
              } finally {
                _iterator113.f();
              }
              return e;
            }
          }, {
            key: "getGlyphMapping",
            value: function getGlyphMapping(e) {
              var t = this.charstrings;
              if (e.composite) {
                var _a240 = Object.create(null);
                for (var _r191 = 0, _i172 = t.length; _r191 < _i172; _r191++) {
                  _a240[e.cMap.charCodeOf(_r191)] = _r191 + 1;
                }
                return _a240;
              }
              var a = [".notdef"];
              var r, i;
              for (i = 0; i < t.length; i++) a.push(t[i].glyphName);
              var s = e.builtInEncoding;
              if (s) {
                r = Object.create(null);
                for (var _e407 in s) {
                  i = a.indexOf(s[_e407]);
                  i >= 0 && (r[_e407] = i);
                }
              }
              return (0, n.type1FontGlyphMapping)(e, r, a);
            }
          }, {
            key: "hasGlyphId",
            value: function hasGlyphId(e) {
              if (e < 0 || e >= this.numGlyphs) return !1;
              if (0 === e) return !0;
              return this.charstrings[e - 1].charstring.length > 0;
            }
          }, {
            key: "getSeacs",
            value: function getSeacs(e) {
              var t = [];
              for (var _a241 = 0, _r192 = e.length; _a241 < _r192; _a241++) {
                var _r193 = e[_a241];
                _r193.seac && (t[_a241 + 1] = _r193.seac);
              }
              return t;
            }
          }, {
            key: "getType2Charstrings",
            value: function getType2Charstrings(e) {
              var t = [];
              var _iterator114 = _createForOfIteratorHelper(e),
                _step114;
              try {
                for (_iterator114.s(); !(_step114 = _iterator114.n()).done;) {
                  var _a242 = _step114.value;
                  t.push(_a242.charstring);
                }
              } catch (err) {
                _iterator114.e(err);
              } finally {
                _iterator114.f();
              }
              return t;
            }
          }, {
            key: "getType2Subrs",
            value: function getType2Subrs(e) {
              var t = 0;
              var a = e.length;
              t = a < 1133 ? 107 : a < 33769 ? 1131 : 32768;
              var r = [];
              var i;
              for (i = 0; i < t; i++) r.push([11]);
              for (i = 0; i < a; i++) r.push(e[i]);
              return r;
            }
          }, {
            key: "wrap",
            value: function wrap(e, t, a, i, n) {
              var s = new r.CFF();
              s.header = new r.CFFHeader(1, 0, 4, 4);
              s.names = [e];
              var o = new r.CFFTopDict();
              o.setByName("version", 391);
              o.setByName("Notice", 392);
              o.setByName("FullName", 393);
              o.setByName("FamilyName", 394);
              o.setByName("Weight", 395);
              o.setByName("Encoding", null);
              o.setByName("FontMatrix", n.fontMatrix);
              o.setByName("FontBBox", n.bbox);
              o.setByName("charset", null);
              o.setByName("CharStrings", null);
              o.setByName("Private", null);
              s.topDict = o;
              var c = new r.CFFStrings();
              c.add("Version 0.11");
              c.add("See original notice");
              c.add(e);
              c.add(e);
              c.add("Medium");
              s.strings = c;
              s.globalSubrIndex = new r.CFFIndex();
              var l = t.length,
                h = [".notdef"];
              var u, d;
              for (u = 0; u < l; u++) {
                var _e408 = a[u].glyphName;
                -1 === r.CFFStandardStrings.indexOf(_e408) && c.add(_e408);
                h.push(_e408);
              }
              s.charset = new r.CFFCharset(!1, 0, h);
              var f = new r.CFFIndex();
              f.add([139, 14]);
              for (u = 0; u < l; u++) f.add(t[u]);
              s.charStrings = f;
              var g = new r.CFFPrivateDict();
              g.setByName("Subrs", null);
              var p = ["BlueValues", "OtherBlues", "FamilyBlues", "FamilyOtherBlues", "StemSnapH", "StemSnapV", "BlueShift", "BlueFuzz", "BlueScale", "LanguageGroup", "ExpansionFactor", "ForceBold", "StdHW", "StdVW"];
              for (u = 0, d = p.length; u < d; u++) {
                var _e409 = p[u];
                if (!(_e409 in n.privateData)) continue;
                var _t288 = n.privateData[_e409];
                if (Array.isArray(_t288)) for (var _e410 = _t288.length - 1; _e410 > 0; _e410--) _t288[_e410] -= _t288[_e410 - 1];
                g.setByName(_e409, _t288);
              }
              s.topDict.privateDict = g;
              var m = new r.CFFIndex();
              for (u = 0, d = i.length; u < d; u++) m.add(i[u]);
              g.subrsIndex = m;
              return new r.CFFCompiler(s).compile();
            }
          }]);
          return Type1Font;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.Type1Parser = void 0;
        var r = a(37),
          i = a(3),
          n = a(8),
          s = a(2);
        var o = [4],
          c = [5],
          l = [6],
          h = [7],
          u = [8],
          d = [12, 35],
          f = [14],
          g = [21],
          p = [22],
          m = [30],
          b = [31];
        var Type1CharString = /*#__PURE__*/function () {
          function Type1CharString() {
            _classCallCheck(this, Type1CharString);
            this.width = 0;
            this.lsb = 0;
            this.flexing = !1;
            this.output = [];
            this.stack = [];
          }
          _createClass(Type1CharString, [{
            key: "convert",
            value: function convert(e, t, a) {
              var r = e.length;
              var i,
                n,
                y,
                w = !1;
              for (var S = 0; S < r; S++) {
                var _r194 = e[S];
                if (_r194 < 32) {
                  12 === _r194 && (_r194 = (_r194 << 8) + e[++S]);
                  switch (_r194) {
                    case 1:
                    case 3:
                    case 9:
                    case 3072:
                    case 3073:
                    case 3074:
                    case 3105:
                      this.stack = [];
                      break;
                    case 4:
                      if (this.flexing) {
                        if (this.stack.length < 1) {
                          w = !0;
                          break;
                        }
                        var _e411 = this.stack.pop();
                        this.stack.push(0, _e411);
                        break;
                      }
                      w = this.executeCommand(1, o);
                      break;
                    case 5:
                      w = this.executeCommand(2, c);
                      break;
                    case 6:
                      w = this.executeCommand(1, l);
                      break;
                    case 7:
                      w = this.executeCommand(1, h);
                      break;
                    case 8:
                      w = this.executeCommand(6, u);
                      break;
                    case 10:
                      if (this.stack.length < 1) {
                        w = !0;
                        break;
                      }
                      y = this.stack.pop();
                      if (!t[y]) {
                        w = !0;
                        break;
                      }
                      w = this.convert(t[y], t, a);
                      break;
                    case 11:
                      return w;
                    case 13:
                      if (this.stack.length < 2) {
                        w = !0;
                        break;
                      }
                      i = this.stack.pop();
                      n = this.stack.pop();
                      this.lsb = n;
                      this.width = i;
                      this.stack.push(i, n);
                      w = this.executeCommand(2, p);
                      break;
                    case 14:
                      this.output.push(f[0]);
                      break;
                    case 21:
                      if (this.flexing) break;
                      w = this.executeCommand(2, g);
                      break;
                    case 22:
                      if (this.flexing) {
                        this.stack.push(0);
                        break;
                      }
                      w = this.executeCommand(1, p);
                      break;
                    case 30:
                      w = this.executeCommand(4, m);
                      break;
                    case 31:
                      w = this.executeCommand(4, b);
                      break;
                    case 3078:
                      if (a) {
                        var _e412 = this.stack.at(-5);
                        this.seac = this.stack.splice(-4, 4);
                        this.seac[0] += this.lsb - _e412;
                        w = this.executeCommand(0, f);
                      } else w = this.executeCommand(4, f);
                      break;
                    case 3079:
                      if (this.stack.length < 4) {
                        w = !0;
                        break;
                      }
                      this.stack.pop();
                      i = this.stack.pop();
                      var _e413 = this.stack.pop();
                      n = this.stack.pop();
                      this.lsb = n;
                      this.width = i;
                      this.stack.push(i, n, _e413);
                      w = this.executeCommand(3, g);
                      break;
                    case 3084:
                      if (this.stack.length < 2) {
                        w = !0;
                        break;
                      }
                      var _S = this.stack.pop(),
                        x = this.stack.pop();
                      this.stack.push(x / _S);
                      break;
                    case 3088:
                      if (this.stack.length < 2) {
                        w = !0;
                        break;
                      }
                      y = this.stack.pop();
                      var C = this.stack.pop();
                      if (0 === y && 3 === C) {
                        var _e414 = this.stack.splice(-17, 17);
                        this.stack.push(_e414[2] + _e414[0], _e414[3] + _e414[1], _e414[4], _e414[5], _e414[6], _e414[7], _e414[8], _e414[9], _e414[10], _e414[11], _e414[12], _e414[13], _e414[14]);
                        w = this.executeCommand(13, d, !0);
                        this.flexing = !1;
                        this.stack.push(_e414[15], _e414[16]);
                      } else 1 === y && 0 === C && (this.flexing = !0);
                      break;
                    case 3089:
                      break;
                    default:
                      (0, s.warn)('Unknown type 1 charstring command of "' + _r194 + '"');
                  }
                  if (w) break;
                } else {
                  _r194 <= 246 ? _r194 -= 139 : _r194 = _r194 <= 250 ? 256 * (_r194 - 247) + e[++S] + 108 : _r194 <= 254 ? -256 * (_r194 - 251) - e[++S] - 108 : (255 & e[++S]) << 24 | (255 & e[++S]) << 16 | (255 & e[++S]) << 8 | (255 & e[++S]) << 0;
                  this.stack.push(_r194);
                }
              }
              return w;
            }
          }, {
            key: "executeCommand",
            value: function executeCommand(e, t, a) {
              var _this$output;
              var r = this.stack.length;
              if (e > r) return !0;
              var i = r - e;
              for (var _e415 = i; _e415 < r; _e415++) {
                var _t289 = this.stack[_e415];
                if (Number.isInteger(_t289)) this.output.push(28, _t289 >> 8 & 255, 255 & _t289);else {
                  _t289 = 65536 * _t289 | 0;
                  this.output.push(255, _t289 >> 24 & 255, _t289 >> 16 & 255, _t289 >> 8 & 255, 255 & _t289);
                }
              }
              (_this$output = this.output).push.apply(_this$output, _toConsumableArray(t));
              a ? this.stack.splice(i, e) : this.stack.length = 0;
              return !1;
            }
          }]);
          return Type1CharString;
        }();
        function isHexDigit(e) {
          return e >= 48 && e <= 57 || e >= 65 && e <= 70 || e >= 97 && e <= 102;
        }
        function decrypt(e, t, a) {
          if (a >= e.length) return new Uint8Array(0);
          var r,
            i,
            n = 0 | t;
          for (r = 0; r < a; r++) n = 52845 * (e[r] + n) + 22719 & 65535;
          var s = e.length - a,
            o = new Uint8Array(s);
          for (r = a, i = 0; i < s; r++, i++) {
            var _t290 = e[r];
            o[i] = _t290 ^ n >> 8;
            n = 52845 * (_t290 + n) + 22719 & 65535;
          }
          return o;
        }
        function isSpecial(e) {
          return 47 === e || 91 === e || 93 === e || 123 === e || 125 === e || 40 === e || 41 === e;
        }
        t.Type1Parser = /*#__PURE__*/function () {
          function Type1Parser(e, t, a) {
            _classCallCheck(this, Type1Parser);
            if (t) {
              var _t291 = e.getBytes(),
                _a243 = !((isHexDigit(_t291[0]) || (0, i.isWhiteSpace)(_t291[0])) && isHexDigit(_t291[1]) && isHexDigit(_t291[2]) && isHexDigit(_t291[3]) && isHexDigit(_t291[4]) && isHexDigit(_t291[5]) && isHexDigit(_t291[6]) && isHexDigit(_t291[7]));
              e = new n.Stream(_a243 ? decrypt(_t291, 55665, 4) : function decryptAscii(e, t, a) {
                var r = 0 | t;
                var i = e.length,
                  n = new Uint8Array(i >>> 1);
                var s, o;
                for (s = 0, o = 0; s < i; s++) {
                  var _t292 = e[s];
                  if (!isHexDigit(_t292)) continue;
                  s++;
                  var _a244 = void 0;
                  for (; s < i && !isHexDigit(_a244 = e[s]);) s++;
                  if (s < i) {
                    var _e416 = parseInt(String.fromCharCode(_t292, _a244), 16);
                    n[o++] = _e416 ^ r >> 8;
                    r = 52845 * (_e416 + r) + 22719 & 65535;
                  }
                }
                return n.slice(a, o);
              }(_t291, 55665, 4));
            }
            this.seacAnalysisEnabled = !!a;
            this.stream = e;
            this.nextChar();
          }
          _createClass(Type1Parser, [{
            key: "readNumberArray",
            value: function readNumberArray() {
              this.getToken();
              var e = [];
              for (;;) {
                var _t293 = this.getToken();
                if (null === _t293 || "]" === _t293 || "}" === _t293) break;
                e.push(parseFloat(_t293 || 0));
              }
              return e;
            }
          }, {
            key: "readNumber",
            value: function readNumber() {
              var e = this.getToken();
              return parseFloat(e || 0);
            }
          }, {
            key: "readInt",
            value: function readInt() {
              var e = this.getToken();
              return 0 | parseInt(e || 0, 10);
            }
          }, {
            key: "readBoolean",
            value: function readBoolean() {
              return "true" === this.getToken() ? 1 : 0;
            }
          }, {
            key: "nextChar",
            value: function nextChar() {
              return this.currentChar = this.stream.getByte();
            }
          }, {
            key: "prevChar",
            value: function prevChar() {
              this.stream.skip(-2);
              return this.currentChar = this.stream.getByte();
            }
          }, {
            key: "getToken",
            value: function getToken() {
              var e = !1,
                t = this.currentChar;
              for (;;) {
                if (-1 === t) return null;
                if (e) 10 !== t && 13 !== t || (e = !1);else if (37 === t) e = !0;else if (!(0, i.isWhiteSpace)(t)) break;
                t = this.nextChar();
              }
              if (isSpecial(t)) {
                this.nextChar();
                return String.fromCharCode(t);
              }
              var a = "";
              do {
                a += String.fromCharCode(t);
                t = this.nextChar();
              } while (t >= 0 && !(0, i.isWhiteSpace)(t) && !isSpecial(t));
              return a;
            }
          }, {
            key: "readCharStrings",
            value: function readCharStrings(e, t) {
              return -1 === t ? e : decrypt(e, 4330, t);
            }
          }, {
            key: "extractFontProgram",
            value: function extractFontProgram(e) {
              var t = this.stream,
                a = [],
                r = [],
                i = Object.create(null);
              i.lenIV = 4;
              var n = {
                subrs: [],
                charstrings: [],
                properties: {
                  privateData: i
                }
              };
              var s, o, c, l;
              for (; null !== (s = this.getToken());) if ("/" === s) {
                s = this.getToken();
                switch (s) {
                  case "CharStrings":
                    this.getToken();
                    this.getToken();
                    this.getToken();
                    this.getToken();
                    for (;;) {
                      s = this.getToken();
                      if (null === s || "end" === s) break;
                      if ("/" !== s) continue;
                      var _e417 = this.getToken();
                      o = this.readInt();
                      this.getToken();
                      c = o > 0 ? t.getBytes(o) : new Uint8Array(0);
                      l = n.properties.privateData.lenIV;
                      var _a245 = this.readCharStrings(c, l);
                      this.nextChar();
                      s = this.getToken();
                      "noaccess" === s ? this.getToken() : "/" === s && this.prevChar();
                      r.push({
                        glyph: _e417,
                        encoded: _a245
                      });
                    }
                    break;
                  case "Subrs":
                    this.readInt();
                    this.getToken();
                    for (; "dup" === this.getToken();) {
                      var _e418 = this.readInt();
                      o = this.readInt();
                      this.getToken();
                      c = o > 0 ? t.getBytes(o) : new Uint8Array(0);
                      l = n.properties.privateData.lenIV;
                      var _r195 = this.readCharStrings(c, l);
                      this.nextChar();
                      s = this.getToken();
                      "noaccess" === s && this.getToken();
                      a[_e418] = _r195;
                    }
                    break;
                  case "BlueValues":
                  case "OtherBlues":
                  case "FamilyBlues":
                  case "FamilyOtherBlues":
                    var _e419 = this.readNumberArray();
                    _e419.length > 0 && _e419.length, 0;
                    break;
                  case "StemSnapH":
                  case "StemSnapV":
                    n.properties.privateData[s] = this.readNumberArray();
                    break;
                  case "StdHW":
                  case "StdVW":
                    n.properties.privateData[s] = this.readNumberArray()[0];
                    break;
                  case "BlueShift":
                  case "lenIV":
                  case "BlueFuzz":
                  case "BlueScale":
                  case "LanguageGroup":
                    n.properties.privateData[s] = this.readNumber();
                    break;
                  case "ExpansionFactor":
                    n.properties.privateData[s] = this.readNumber() || .06;
                    break;
                  case "ForceBold":
                    n.properties.privateData[s] = this.readBoolean();
                }
              }
              for (var _i173 = 0, _r196 = r; _i173 < _r196.length; _i173++) {
                var _r196$_i = _r196[_i173],
                  _t294 = _r196$_i.encoded,
                  _i174 = _r196$_i.glyph;
                var _r197 = new Type1CharString(),
                  _s76 = _r197.convert(_t294, a, this.seacAnalysisEnabled);
                var _o62 = _r197.output;
                _s76 && (_o62 = [14]);
                var _c38 = {
                  glyphName: _i174,
                  charstring: _o62,
                  width: _r197.width,
                  lsb: _r197.lsb,
                  seac: _r197.seac
                };
                ".notdef" === _i174 ? n.charstrings.unshift(_c38) : n.charstrings.push(_c38);
                if (e.builtInEncoding) {
                  var _t295 = e.builtInEncoding.indexOf(_i174);
                  _t295 > -1 && void 0 === e.widths[_t295] && _t295 >= e.firstChar && _t295 <= e.lastChar && (e.widths[_t295] = _r197.width);
                }
              }
              return n;
            }
          }, {
            key: "extractFontHeader",
            value: function extractFontHeader(e) {
              var t;
              for (; null !== (t = this.getToken());) if ("/" === t) {
                t = this.getToken();
                switch (t) {
                  case "FontMatrix":
                    var _a246 = this.readNumberArray();
                    e.fontMatrix = _a246;
                    break;
                  case "Encoding":
                    var _i175 = this.getToken();
                    var _n107 = void 0;
                    if (/^\d+$/.test(_i175)) {
                      _n107 = [];
                      var _e420 = 0 | parseInt(_i175, 10);
                      this.getToken();
                      for (var _a247 = 0; _a247 < _e420; _a247++) {
                        t = this.getToken();
                        for (; "dup" !== t && "def" !== t;) {
                          t = this.getToken();
                          if (null === t) return;
                        }
                        if ("def" === t) break;
                        var _e421 = this.readInt();
                        this.getToken();
                        var _a248 = this.getToken();
                        _n107[_e421] = _a248;
                        this.getToken();
                      }
                    } else _n107 = (0, r.getEncoding)(_i175);
                    e.builtInEncoding = _n107;
                    break;
                  case "FontBBox":
                    var _s77 = this.readNumberArray();
                    e.ascent = Math.max(_s77[3], _s77[1]);
                    e.descent = Math.min(_s77[1], _s77[3]);
                    e.ascentScaled = !0;
                }
              }
            }
          }]);
          return Type1Parser;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.Pattern = void 0;
        t.getTilingPatternIR = function getTilingPatternIR(e, t, a) {
          var i = t.getArray("Matrix"),
            n = r.Util.normalizeRect(t.getArray("BBox")),
            s = t.get("XStep"),
            o = t.get("YStep"),
            c = t.get("PaintType"),
            l = t.get("TilingType");
          if (n[2] - n[0] == 0 || n[3] - n[1] == 0) throw new r.FormatError("Invalid getTilingPatternIR /BBox array: [".concat(n, "]."));
          return ["TilingPattern", a, e, i, n, s, o, c, l];
        };
        var r = a(2),
          i = a(5),
          n = a(12),
          s = a(3);
        var o = 2,
          c = 3,
          l = 4,
          h = 5,
          u = 6,
          d = 7;
        t.Pattern = /*#__PURE__*/function () {
          function Pattern() {
            _classCallCheck(this, Pattern);
            (0, r.unreachable)("Cannot initialize Pattern.");
          }
          _createClass(Pattern, null, [{
            key: "parseShading",
            value: function parseShading(e, t, a, n, f) {
              var g = e instanceof i.BaseStream ? e.dict : e,
                p = g.get("ShadingType");
              try {
                switch (p) {
                  case o:
                  case c:
                    return new RadialAxialShading(g, t, a, n, f);
                  case l:
                  case h:
                  case u:
                  case d:
                    return new MeshShading(e, t, a, n, f);
                  default:
                    throw new r.FormatError("Unsupported ShadingType: " + p);
                }
              } catch (e) {
                if (e instanceof s.MissingDataException) throw e;
                (0, r.warn)(e);
                return new DummyShading();
              }
            }
          }]);
          return Pattern;
        }();
        var BaseShading = /*#__PURE__*/function () {
          function BaseShading() {
            _classCallCheck(this, BaseShading);
            this.constructor === BaseShading && (0, r.unreachable)("Cannot initialize BaseShading.");
          }
          _createClass(BaseShading, [{
            key: "getIR",
            value: function getIR() {
              (0, r.unreachable)("Abstract method `getIR` called.");
            }
          }]);
          return BaseShading;
        }();
        _defineProperty(BaseShading, "SMALL_NUMBER", 1e-6);
        var RadialAxialShading = /*#__PURE__*/function (_BaseShading) {
          _inherits(RadialAxialShading, _BaseShading);
          var _super76 = _createSuper(RadialAxialShading);
          function RadialAxialShading(e, t, a, i, s) {
            var _this83;
            _classCallCheck(this, RadialAxialShading);
            _this83 = _super76.call(this);
            _this83.coordsArr = e.getArray("Coords");
            _this83.shadingType = e.get("ShadingType");
            var o = n.ColorSpace.parse({
                cs: e.getRaw("CS") || e.getRaw("ColorSpace"),
                xref: t,
                resources: a,
                pdfFunctionFactory: i,
                localColorSpaceCache: s
              }),
              l = e.getArray("BBox");
            Array.isArray(l) && 4 === l.length ? _this83.bbox = r.Util.normalizeRect(l) : _this83.bbox = null;
            var h = 0,
              u = 1;
            if (e.has("Domain")) {
              var _t296 = e.getArray("Domain");
              h = _t296[0];
              u = _t296[1];
            }
            var d = !1,
              f = !1;
            if (e.has("Extend")) {
              var _t297 = e.getArray("Extend");
              d = _t297[0];
              f = _t297[1];
            }
            if (!(_this83.shadingType !== c || d && f)) {
              var _this83$coordsArr = _slicedToArray(_this83.coordsArr, 6),
                _e422 = _this83$coordsArr[0],
                _t298 = _this83$coordsArr[1],
                _a249 = _this83$coordsArr[2],
                _i176 = _this83$coordsArr[3],
                _n108 = _this83$coordsArr[4],
                _s78 = _this83$coordsArr[5],
                _o63 = Math.hypot(_e422 - _i176, _t298 - _n108);
              _a249 <= _s78 + _o63 && _s78 <= _a249 + _o63 && (0, r.warn)("Unsupported radial gradient.");
            }
            _this83.extendStart = d;
            _this83.extendEnd = f;
            var g = e.getRaw("Function"),
              p = i.createFromArray(g),
              m = (u - h) / 840,
              b = _this83.colorStops = [];
            if (h >= u || m <= 0) {
              (0, r.info)("Bad shading domain.");
              return _possibleConstructorReturn(_this83);
            }
            var y = new Float32Array(o.numComps),
              w = new Float32Array(1);
            var S,
              x = 0;
            w[0] = h;
            p(w, 0, y, 0);
            var C = o.getRgb(y, 0);
            var k = r.Util.makeHexColor(C[0], C[1], C[2]);
            b.push([0, k]);
            var v = 1;
            w[0] = h + m;
            p(w, 0, y, 0);
            var F = o.getRgb(y, 0),
              O = F[0] - C[0] + 1,
              T = F[1] - C[1] + 1,
              M = F[2] - C[2] + 1,
              E = F[0] - C[0] - 1,
              D = F[1] - C[1] - 1,
              N = F[2] - C[2] - 1;
            for (var _e423 = 2; _e423 < 840; _e423++) {
              w[0] = h + _e423 * m;
              p(w, 0, y, 0);
              S = o.getRgb(y, 0);
              var _t299 = _e423 - x;
              O = Math.min(O, (S[0] - C[0] + 1) / _t299);
              T = Math.min(T, (S[1] - C[1] + 1) / _t299);
              M = Math.min(M, (S[2] - C[2] + 1) / _t299);
              E = Math.max(E, (S[0] - C[0] - 1) / _t299);
              D = Math.max(D, (S[1] - C[1] - 1) / _t299);
              N = Math.max(N, (S[2] - C[2] - 1) / _t299);
              if (!(E <= O && D <= T && N <= M)) {
                var _e424 = r.Util.makeHexColor(F[0], F[1], F[2]);
                b.push([v / 840, _e424]);
                O = S[0] - F[0] + 1;
                T = S[1] - F[1] + 1;
                M = S[2] - F[2] + 1;
                E = S[0] - F[0] - 1;
                D = S[1] - F[1] - 1;
                N = S[2] - F[2] - 1;
                x = v;
                C = F;
              }
              v = _e423;
              F = S;
            }
            var R = r.Util.makeHexColor(F[0], F[1], F[2]);
            b.push([1, R]);
            var L = "transparent";
            if (e.has("Background")) {
              S = o.getRgb(e.get("Background"), 0);
              L = r.Util.makeHexColor(S[0], S[1], S[2]);
            }
            if (!d) {
              b.unshift([0, L]);
              b[1][0] += BaseShading.SMALL_NUMBER;
            }
            if (!f) {
              b.at(-1)[0] -= BaseShading.SMALL_NUMBER;
              b.push([1, L]);
            }
            _this83.colorStops = b;
            return _this83;
          }
          _createClass(RadialAxialShading, [{
            key: "getIR",
            value: function getIR() {
              var e = this.coordsArr,
                t = this.shadingType;
              var a, i, n, s, l;
              if (t === o) {
                i = [e[0], e[1]];
                n = [e[2], e[3]];
                s = null;
                l = null;
                a = "axial";
              } else if (t === c) {
                i = [e[0], e[1]];
                n = [e[3], e[4]];
                s = e[2];
                l = e[5];
                a = "radial";
              } else (0, r.unreachable)("getPattern type unknown: ".concat(t));
              return ["RadialAxial", a, this.bbox, this.colorStops, i, n, s, l];
            }
          }]);
          return RadialAxialShading;
        }(BaseShading);
        var MeshStreamReader = /*#__PURE__*/function () {
          function MeshStreamReader(e, t) {
            _classCallCheck(this, MeshStreamReader);
            this.stream = e;
            this.context = t;
            this.buffer = 0;
            this.bufferLength = 0;
            var a = t.numComps;
            this.tmpCompsBuf = new Float32Array(a);
            var r = t.colorSpace.numComps;
            this.tmpCsCompsBuf = t.colorFn ? new Float32Array(r) : this.tmpCompsBuf;
          }
          _createClass(MeshStreamReader, [{
            key: "hasData",
            get: function get() {
              if (this.stream.end) return this.stream.pos < this.stream.end;
              if (this.bufferLength > 0) return !0;
              var e = this.stream.getByte();
              if (e < 0) return !1;
              this.buffer = e;
              this.bufferLength = 8;
              return !0;
            }
          }, {
            key: "readBits",
            value: function readBits(e) {
              var t = this.buffer,
                a = this.bufferLength;
              if (32 === e) {
                if (0 === a) return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;
                t = t << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();
                var _e425 = this.stream.getByte();
                this.buffer = _e425 & (1 << a) - 1;
                return (t << 8 - a | (255 & _e425) >> a) >>> 0;
              }
              if (8 === e && 0 === a) return this.stream.getByte();
              for (; a < e;) {
                t = t << 8 | this.stream.getByte();
                a += 8;
              }
              a -= e;
              this.bufferLength = a;
              this.buffer = t & (1 << a) - 1;
              return t >> a;
            }
          }, {
            key: "align",
            value: function align() {
              this.buffer = 0;
              this.bufferLength = 0;
            }
          }, {
            key: "readFlag",
            value: function readFlag() {
              return this.readBits(this.context.bitsPerFlag);
            }
          }, {
            key: "readCoordinate",
            value: function readCoordinate() {
              var e = this.context.bitsPerCoordinate,
                t = this.readBits(e),
                a = this.readBits(e),
                r = this.context.decode,
                i = e < 32 ? 1 / ((1 << e) - 1) : 2.3283064365386963e-10;
              return [t * i * (r[1] - r[0]) + r[0], a * i * (r[3] - r[2]) + r[2]];
            }
          }, {
            key: "readComponents",
            value: function readComponents() {
              var e = this.context.numComps,
                t = this.context.bitsPerComponent,
                a = t < 32 ? 1 / ((1 << t) - 1) : 2.3283064365386963e-10,
                r = this.context.decode,
                i = this.tmpCompsBuf;
              for (var _n109 = 0, _s79 = 4; _n109 < e; _n109++, _s79 += 2) {
                var _e426 = this.readBits(t);
                i[_n109] = _e426 * a * (r[_s79 + 1] - r[_s79]) + r[_s79];
              }
              var n = this.tmpCsCompsBuf;
              this.context.colorFn && this.context.colorFn(i, 0, n, 0);
              return this.context.colorSpace.getRgb(n, 0);
            }
          }]);
          return MeshStreamReader;
        }();
        var f = function getBClosure() {
          var e = Object.create(null);
          return function (t) {
            return e[t] || (e[t] = function buildB(e) {
              var t = [];
              for (var _a250 = 0; _a250 <= e; _a250++) {
                var _r198 = _a250 / e,
                  _i177 = 1 - _r198;
                t.push(new Float32Array([_i177 * _i177 * _i177, 3 * _r198 * _i177 * _i177, 3 * _r198 * _r198 * _i177, _r198 * _r198 * _r198]));
              }
              return t;
            }(t));
          };
        }();
        var MeshShading = /*#__PURE__*/function (_BaseShading2) {
          _inherits(MeshShading, _BaseShading2);
          var _super77 = _createSuper(MeshShading);
          function MeshShading(e, t, a, s, o) {
            var _this84;
            _classCallCheck(this, MeshShading);
            _this84 = _super77.call(this);
            if (!(e instanceof i.BaseStream)) throw new r.FormatError("Mesh data is not a stream");
            var c = e.dict;
            _this84.shadingType = c.get("ShadingType");
            var f = c.getArray("BBox");
            Array.isArray(f) && 4 === f.length ? _this84.bbox = r.Util.normalizeRect(f) : _this84.bbox = null;
            var g = n.ColorSpace.parse({
              cs: c.getRaw("CS") || c.getRaw("ColorSpace"),
              xref: t,
              resources: a,
              pdfFunctionFactory: s,
              localColorSpaceCache: o
            });
            _this84.background = c.has("Background") ? g.getRgb(c.get("Background"), 0) : null;
            var p = c.getRaw("Function"),
              m = p ? s.createFromArray(p) : null;
            _this84.coords = [];
            _this84.colors = [];
            _this84.figures = [];
            var b = {
                bitsPerCoordinate: c.get("BitsPerCoordinate"),
                bitsPerComponent: c.get("BitsPerComponent"),
                bitsPerFlag: c.get("BitsPerFlag"),
                decode: c.getArray("Decode"),
                colorFn: m,
                colorSpace: g,
                numComps: m ? 1 : g.numComps
              },
              y = new MeshStreamReader(e, b);
            var w = !1;
            switch (_this84.shadingType) {
              case l:
                _this84._decodeType4Shading(y);
                break;
              case h:
                var _e427 = 0 | c.get("VerticesPerRow");
                if (_e427 < 2) throw new r.FormatError("Invalid VerticesPerRow");
                _this84._decodeType5Shading(y, _e427);
                break;
              case u:
                _this84._decodeType6Shading(y);
                w = !0;
                break;
              case d:
                _this84._decodeType7Shading(y);
                w = !0;
                break;
              default:
                (0, r.unreachable)("Unsupported mesh type.");
            }
            if (w) {
              _this84._updateBounds();
              for (var _e428 = 0, _t300 = _this84.figures.length; _e428 < _t300; _e428++) _this84._buildFigureFromPatch(_e428);
            }
            _this84._updateBounds();
            _this84._packData();
            return _this84;
          }
          _createClass(MeshShading, [{
            key: "_decodeType4Shading",
            value: function _decodeType4Shading(e) {
              var t = this.coords,
                a = this.colors,
                i = [],
                n = [];
              var s = 0;
              for (; e.hasData;) {
                var _o64 = e.readFlag(),
                  _c39 = e.readCoordinate(),
                  _l25 = e.readComponents();
                if (0 === s) {
                  if (!(0 <= _o64 && _o64 <= 2)) throw new r.FormatError("Unknown type4 flag");
                  switch (_o64) {
                    case 0:
                      s = 3;
                      break;
                    case 1:
                      n.push(n.at(-2), n.at(-1));
                      s = 1;
                      break;
                    case 2:
                      n.push(n.at(-3), n.at(-1));
                      s = 1;
                  }
                  i.push(_o64);
                }
                n.push(t.length);
                t.push(_c39);
                a.push(_l25);
                s--;
                e.align();
              }
              this.figures.push({
                type: "triangles",
                coords: new Int32Array(n),
                colors: new Int32Array(n)
              });
            }
          }, {
            key: "_decodeType5Shading",
            value: function _decodeType5Shading(e, t) {
              var a = this.coords,
                r = this.colors,
                i = [];
              for (; e.hasData;) {
                var _t301 = e.readCoordinate(),
                  _n110 = e.readComponents();
                i.push(a.length);
                a.push(_t301);
                r.push(_n110);
              }
              this.figures.push({
                type: "lattice",
                coords: new Int32Array(i),
                colors: new Int32Array(i),
                verticesPerRow: t
              });
            }
          }, {
            key: "_decodeType6Shading",
            value: function _decodeType6Shading(e) {
              var t = this.coords,
                a = this.colors,
                i = new Int32Array(16),
                n = new Int32Array(4);
              for (; e.hasData;) {
                var _s80 = e.readFlag();
                if (!(0 <= _s80 && _s80 <= 3)) throw new r.FormatError("Unknown type6 flag");
                var _o65 = t.length;
                for (var _a251 = 0, _r199 = 0 !== _s80 ? 8 : 12; _a251 < _r199; _a251++) t.push(e.readCoordinate());
                var _c40 = a.length;
                for (var _t302 = 0, _r200 = 0 !== _s80 ? 2 : 4; _t302 < _r200; _t302++) a.push(e.readComponents());
                var _l26 = void 0,
                  _h27 = void 0,
                  _u18 = void 0,
                  _d14 = void 0;
                switch (_s80) {
                  case 0:
                    i[12] = _o65 + 3;
                    i[13] = _o65 + 4;
                    i[14] = _o65 + 5;
                    i[15] = _o65 + 6;
                    i[8] = _o65 + 2;
                    i[11] = _o65 + 7;
                    i[4] = _o65 + 1;
                    i[7] = _o65 + 8;
                    i[0] = _o65;
                    i[1] = _o65 + 11;
                    i[2] = _o65 + 10;
                    i[3] = _o65 + 9;
                    n[2] = _c40 + 1;
                    n[3] = _c40 + 2;
                    n[0] = _c40;
                    n[1] = _c40 + 3;
                    break;
                  case 1:
                    _l26 = i[12];
                    _h27 = i[13];
                    _u18 = i[14];
                    _d14 = i[15];
                    i[12] = _d14;
                    i[13] = _o65 + 0;
                    i[14] = _o65 + 1;
                    i[15] = _o65 + 2;
                    i[8] = _u18;
                    i[11] = _o65 + 3;
                    i[4] = _h27;
                    i[7] = _o65 + 4;
                    i[0] = _l26;
                    i[1] = _o65 + 7;
                    i[2] = _o65 + 6;
                    i[3] = _o65 + 5;
                    _l26 = n[2];
                    _h27 = n[3];
                    n[2] = _h27;
                    n[3] = _c40;
                    n[0] = _l26;
                    n[1] = _c40 + 1;
                    break;
                  case 2:
                    _l26 = i[15];
                    _h27 = i[11];
                    i[12] = i[3];
                    i[13] = _o65 + 0;
                    i[14] = _o65 + 1;
                    i[15] = _o65 + 2;
                    i[8] = i[7];
                    i[11] = _o65 + 3;
                    i[4] = _h27;
                    i[7] = _o65 + 4;
                    i[0] = _l26;
                    i[1] = _o65 + 7;
                    i[2] = _o65 + 6;
                    i[3] = _o65 + 5;
                    _l26 = n[3];
                    n[2] = n[1];
                    n[3] = _c40;
                    n[0] = _l26;
                    n[1] = _c40 + 1;
                    break;
                  case 3:
                    i[12] = i[0];
                    i[13] = _o65 + 0;
                    i[14] = _o65 + 1;
                    i[15] = _o65 + 2;
                    i[8] = i[1];
                    i[11] = _o65 + 3;
                    i[4] = i[2];
                    i[7] = _o65 + 4;
                    i[0] = i[3];
                    i[1] = _o65 + 7;
                    i[2] = _o65 + 6;
                    i[3] = _o65 + 5;
                    n[2] = n[0];
                    n[3] = _c40;
                    n[0] = n[1];
                    n[1] = _c40 + 1;
                }
                i[5] = t.length;
                t.push([(-4 * t[i[0]][0] - t[i[15]][0] + 6 * (t[i[4]][0] + t[i[1]][0]) - 2 * (t[i[12]][0] + t[i[3]][0]) + 3 * (t[i[13]][0] + t[i[7]][0])) / 9, (-4 * t[i[0]][1] - t[i[15]][1] + 6 * (t[i[4]][1] + t[i[1]][1]) - 2 * (t[i[12]][1] + t[i[3]][1]) + 3 * (t[i[13]][1] + t[i[7]][1])) / 9]);
                i[6] = t.length;
                t.push([(-4 * t[i[3]][0] - t[i[12]][0] + 6 * (t[i[2]][0] + t[i[7]][0]) - 2 * (t[i[0]][0] + t[i[15]][0]) + 3 * (t[i[4]][0] + t[i[14]][0])) / 9, (-4 * t[i[3]][1] - t[i[12]][1] + 6 * (t[i[2]][1] + t[i[7]][1]) - 2 * (t[i[0]][1] + t[i[15]][1]) + 3 * (t[i[4]][1] + t[i[14]][1])) / 9]);
                i[9] = t.length;
                t.push([(-4 * t[i[12]][0] - t[i[3]][0] + 6 * (t[i[8]][0] + t[i[13]][0]) - 2 * (t[i[0]][0] + t[i[15]][0]) + 3 * (t[i[11]][0] + t[i[1]][0])) / 9, (-4 * t[i[12]][1] - t[i[3]][1] + 6 * (t[i[8]][1] + t[i[13]][1]) - 2 * (t[i[0]][1] + t[i[15]][1]) + 3 * (t[i[11]][1] + t[i[1]][1])) / 9]);
                i[10] = t.length;
                t.push([(-4 * t[i[15]][0] - t[i[0]][0] + 6 * (t[i[11]][0] + t[i[14]][0]) - 2 * (t[i[12]][0] + t[i[3]][0]) + 3 * (t[i[2]][0] + t[i[8]][0])) / 9, (-4 * t[i[15]][1] - t[i[0]][1] + 6 * (t[i[11]][1] + t[i[14]][1]) - 2 * (t[i[12]][1] + t[i[3]][1]) + 3 * (t[i[2]][1] + t[i[8]][1])) / 9]);
                this.figures.push({
                  type: "patch",
                  coords: new Int32Array(i),
                  colors: new Int32Array(n)
                });
              }
            }
          }, {
            key: "_decodeType7Shading",
            value: function _decodeType7Shading(e) {
              var t = this.coords,
                a = this.colors,
                i = new Int32Array(16),
                n = new Int32Array(4);
              for (; e.hasData;) {
                var _s81 = e.readFlag();
                if (!(0 <= _s81 && _s81 <= 3)) throw new r.FormatError("Unknown type7 flag");
                var _o66 = t.length;
                for (var _a252 = 0, _r201 = 0 !== _s81 ? 12 : 16; _a252 < _r201; _a252++) t.push(e.readCoordinate());
                var _c41 = a.length;
                for (var _t303 = 0, _r202 = 0 !== _s81 ? 2 : 4; _t303 < _r202; _t303++) a.push(e.readComponents());
                var _l27 = void 0,
                  _h28 = void 0,
                  _u19 = void 0,
                  _d15 = void 0;
                switch (_s81) {
                  case 0:
                    i[12] = _o66 + 3;
                    i[13] = _o66 + 4;
                    i[14] = _o66 + 5;
                    i[15] = _o66 + 6;
                    i[8] = _o66 + 2;
                    i[9] = _o66 + 13;
                    i[10] = _o66 + 14;
                    i[11] = _o66 + 7;
                    i[4] = _o66 + 1;
                    i[5] = _o66 + 12;
                    i[6] = _o66 + 15;
                    i[7] = _o66 + 8;
                    i[0] = _o66;
                    i[1] = _o66 + 11;
                    i[2] = _o66 + 10;
                    i[3] = _o66 + 9;
                    n[2] = _c41 + 1;
                    n[3] = _c41 + 2;
                    n[0] = _c41;
                    n[1] = _c41 + 3;
                    break;
                  case 1:
                    _l27 = i[12];
                    _h28 = i[13];
                    _u19 = i[14];
                    _d15 = i[15];
                    i[12] = _d15;
                    i[13] = _o66 + 0;
                    i[14] = _o66 + 1;
                    i[15] = _o66 + 2;
                    i[8] = _u19;
                    i[9] = _o66 + 9;
                    i[10] = _o66 + 10;
                    i[11] = _o66 + 3;
                    i[4] = _h28;
                    i[5] = _o66 + 8;
                    i[6] = _o66 + 11;
                    i[7] = _o66 + 4;
                    i[0] = _l27;
                    i[1] = _o66 + 7;
                    i[2] = _o66 + 6;
                    i[3] = _o66 + 5;
                    _l27 = n[2];
                    _h28 = n[3];
                    n[2] = _h28;
                    n[3] = _c41;
                    n[0] = _l27;
                    n[1] = _c41 + 1;
                    break;
                  case 2:
                    _l27 = i[15];
                    _h28 = i[11];
                    i[12] = i[3];
                    i[13] = _o66 + 0;
                    i[14] = _o66 + 1;
                    i[15] = _o66 + 2;
                    i[8] = i[7];
                    i[9] = _o66 + 9;
                    i[10] = _o66 + 10;
                    i[11] = _o66 + 3;
                    i[4] = _h28;
                    i[5] = _o66 + 8;
                    i[6] = _o66 + 11;
                    i[7] = _o66 + 4;
                    i[0] = _l27;
                    i[1] = _o66 + 7;
                    i[2] = _o66 + 6;
                    i[3] = _o66 + 5;
                    _l27 = n[3];
                    n[2] = n[1];
                    n[3] = _c41;
                    n[0] = _l27;
                    n[1] = _c41 + 1;
                    break;
                  case 3:
                    i[12] = i[0];
                    i[13] = _o66 + 0;
                    i[14] = _o66 + 1;
                    i[15] = _o66 + 2;
                    i[8] = i[1];
                    i[9] = _o66 + 9;
                    i[10] = _o66 + 10;
                    i[11] = _o66 + 3;
                    i[4] = i[2];
                    i[5] = _o66 + 8;
                    i[6] = _o66 + 11;
                    i[7] = _o66 + 4;
                    i[0] = i[3];
                    i[1] = _o66 + 7;
                    i[2] = _o66 + 6;
                    i[3] = _o66 + 5;
                    n[2] = n[0];
                    n[3] = _c41;
                    n[0] = n[1];
                    n[1] = _c41 + 1;
                }
                this.figures.push({
                  type: "patch",
                  coords: new Int32Array(i),
                  colors: new Int32Array(n)
                });
              }
            }
          }, {
            key: "_buildFigureFromPatch",
            value: function _buildFigureFromPatch(e) {
              var t = this.figures[e];
              (0, r.assert)("patch" === t.type, "Unexpected patch mesh figure");
              var a = this.coords,
                i = this.colors,
                n = t.coords,
                s = t.colors,
                o = Math.min(a[n[0]][0], a[n[3]][0], a[n[12]][0], a[n[15]][0]),
                c = Math.min(a[n[0]][1], a[n[3]][1], a[n[12]][1], a[n[15]][1]),
                l = Math.max(a[n[0]][0], a[n[3]][0], a[n[12]][0], a[n[15]][0]),
                h = Math.max(a[n[0]][1], a[n[3]][1], a[n[12]][1], a[n[15]][1]);
              var u = Math.ceil((l - o) * MeshShading.TRIANGLE_DENSITY / (this.bounds[2] - this.bounds[0]));
              u = Math.max(MeshShading.MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MeshShading.MAX_SPLIT_PATCH_CHUNKS_AMOUNT, u));
              var d = Math.ceil((h - c) * MeshShading.TRIANGLE_DENSITY / (this.bounds[3] - this.bounds[1]));
              d = Math.max(MeshShading.MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MeshShading.MAX_SPLIT_PATCH_CHUNKS_AMOUNT, d));
              var g = u + 1,
                p = new Int32Array((d + 1) * g),
                m = new Int32Array((d + 1) * g);
              var b = 0;
              var y = new Uint8Array(3),
                w = new Uint8Array(3),
                S = i[s[0]],
                x = i[s[1]],
                C = i[s[2]],
                k = i[s[3]],
                v = f(d),
                F = f(u);
              for (var _e429 = 0; _e429 <= d; _e429++) {
                y[0] = (S[0] * (d - _e429) + C[0] * _e429) / d | 0;
                y[1] = (S[1] * (d - _e429) + C[1] * _e429) / d | 0;
                y[2] = (S[2] * (d - _e429) + C[2] * _e429) / d | 0;
                w[0] = (x[0] * (d - _e429) + k[0] * _e429) / d | 0;
                w[1] = (x[1] * (d - _e429) + k[1] * _e429) / d | 0;
                w[2] = (x[2] * (d - _e429) + k[2] * _e429) / d | 0;
                for (var _t304 = 0; _t304 <= u; _t304++, b++) {
                  if (!(0 !== _e429 && _e429 !== d || 0 !== _t304 && _t304 !== u)) continue;
                  var _r203 = 0,
                    _s82 = 0,
                    _o67 = 0;
                  for (var _i178 = 0; _i178 <= 3; _i178++) for (var _c42 = 0; _c42 <= 3; _c42++, _o67++) {
                    var _l28 = v[_e429][_i178] * F[_t304][_c42];
                    _r203 += a[n[_o67]][0] * _l28;
                    _s82 += a[n[_o67]][1] * _l28;
                  }
                  p[b] = a.length;
                  a.push([_r203, _s82]);
                  m[b] = i.length;
                  var _c43 = new Uint8Array(3);
                  _c43[0] = (y[0] * (u - _t304) + w[0] * _t304) / u | 0;
                  _c43[1] = (y[1] * (u - _t304) + w[1] * _t304) / u | 0;
                  _c43[2] = (y[2] * (u - _t304) + w[2] * _t304) / u | 0;
                  i.push(_c43);
                }
              }
              p[0] = n[0];
              m[0] = s[0];
              p[u] = n[3];
              m[u] = s[1];
              p[g * d] = n[12];
              m[g * d] = s[2];
              p[g * d + u] = n[15];
              m[g * d + u] = s[3];
              this.figures[e] = {
                type: "lattice",
                coords: p,
                colors: m,
                verticesPerRow: g
              };
            }
          }, {
            key: "_updateBounds",
            value: function _updateBounds() {
              var e = this.coords[0][0],
                t = this.coords[0][1],
                a = e,
                r = t;
              for (var _i179 = 1, _n111 = this.coords.length; _i179 < _n111; _i179++) {
                var _n112 = this.coords[_i179][0],
                  _s83 = this.coords[_i179][1];
                e = e > _n112 ? _n112 : e;
                t = t > _s83 ? _s83 : t;
                a = a < _n112 ? _n112 : a;
                r = r < _s83 ? _s83 : r;
              }
              this.bounds = [e, t, a, r];
            }
          }, {
            key: "_packData",
            value: function _packData() {
              var e, t, a, r;
              var i = this.coords,
                n = new Float32Array(2 * i.length);
              for (e = 0, a = 0, t = i.length; e < t; e++) {
                var _t305 = i[e];
                n[a++] = _t305[0];
                n[a++] = _t305[1];
              }
              this.coords = n;
              var s = this.colors,
                o = new Uint8Array(3 * s.length);
              for (e = 0, a = 0, t = s.length; e < t; e++) {
                var _t306 = s[e];
                o[a++] = _t306[0];
                o[a++] = _t306[1];
                o[a++] = _t306[2];
              }
              this.colors = o;
              var c = this.figures;
              for (e = 0, t = c.length; e < t; e++) {
                var _t307 = c[e],
                  _i180 = _t307.coords,
                  _n113 = _t307.colors;
                for (a = 0, r = _i180.length; a < r; a++) {
                  _i180[a] *= 2;
                  _n113[a] *= 3;
                }
              }
            }
          }, {
            key: "getIR",
            value: function getIR() {
              return ["Mesh", this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.bbox, this.background];
            }
          }]);
          return MeshShading;
        }(BaseShading);
        _defineProperty(MeshShading, "MIN_SPLIT_PATCH_CHUNKS_AMOUNT", 3);
        _defineProperty(MeshShading, "MAX_SPLIT_PATCH_CHUNKS_AMOUNT", 20);
        _defineProperty(MeshShading, "TRIANGLE_DENSITY", 20);
        var DummyShading = /*#__PURE__*/function (_BaseShading3) {
          _inherits(DummyShading, _BaseShading3);
          var _super78 = _createSuper(DummyShading);
          function DummyShading() {
            _classCallCheck(this, DummyShading);
            return _super78.apply(this, arguments);
          }
          _createClass(DummyShading, [{
            key: "getIR",
            value: function getIR() {
              return ["Dummy"];
            }
          }]);
          return DummyShading;
        }(BaseShading);
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.getXfaFontDict = function getXfaFontDict(e) {
          var t = function getXfaFontWidths(e) {
              var t = getXfaFontName(e);
              if (!t) return null;
              var a = t.baseWidths,
                r = t.baseMapping,
                i = t.factors;
              var n;
              n = i ? a.map(function (e, t) {
                return e * i[t];
              }) : a;
              var s,
                o = -2;
              var c = [];
              var _iterator115 = _createForOfIteratorHelper(r.map(function (e, t) {
                  return [e, t];
                }).sort(function (_ref74, _ref75) {
                  var _ref76 = _slicedToArray(_ref74, 1),
                    e = _ref76[0];
                  var _ref77 = _slicedToArray(_ref75, 1),
                    t = _ref77[0];
                  return e - t;
                })),
                _step115;
              try {
                for (_iterator115.s(); !(_step115 = _iterator115.n()).done;) {
                  var _step115$value = _slicedToArray(_step115.value, 2),
                    _e430 = _step115$value[0],
                    _t308 = _step115$value[1];
                  if (-1 !== _e430) if (_e430 === o + 1) {
                    s.push(n[_t308]);
                    o += 1;
                  } else {
                    o = _e430;
                    s = [n[_t308]];
                    c.push(_e430, s);
                  }
                }
              } catch (err) {
                _iterator115.e(err);
              } finally {
                _iterator115.f();
              }
              return c;
            }(e),
            a = new i.Dict(null);
          a.set("BaseFont", i.Name.get(e));
          a.set("Type", i.Name.get("Font"));
          a.set("Subtype", i.Name.get("CIDFontType2"));
          a.set("Encoding", i.Name.get("Identity-H"));
          a.set("CIDToGIDMap", i.Name.get("Identity"));
          a.set("W", t);
          a.set("FirstChar", t[0]);
          a.set("LastChar", t.at(-2) + t.at(-1).length - 1);
          var r = new i.Dict(null);
          a.set("FontDescriptor", r);
          var n = new i.Dict(null);
          n.set("Ordering", "Identity");
          n.set("Registry", "Adobe");
          n.set("Supplement", 0);
          a.set("CIDSystemInfo", n);
          return a;
        };
        t.getXfaFontName = getXfaFontName;
        var r = a(52),
          i = a(4),
          n = a(53),
          s = a(54),
          o = a(55),
          c = a(56),
          l = a(3),
          h = a(38);
        var u = (0, l.getLookupTableFactory)(function (e) {
          e["MyriadPro-Regular"] = e["PdfJS-Fallback-Regular"] = {
            name: "LiberationSans-Regular",
            factors: o.MyriadProRegularFactors,
            baseWidths: s.LiberationSansRegularWidths,
            baseMapping: s.LiberationSansRegularMapping,
            metrics: o.MyriadProRegularMetrics
          };
          e["MyriadPro-Bold"] = e["PdfJS-Fallback-Bold"] = {
            name: "LiberationSans-Bold",
            factors: o.MyriadProBoldFactors,
            baseWidths: s.LiberationSansBoldWidths,
            baseMapping: s.LiberationSansBoldMapping,
            metrics: o.MyriadProBoldMetrics
          };
          e["MyriadPro-It"] = e["MyriadPro-Italic"] = e["PdfJS-Fallback-Italic"] = {
            name: "LiberationSans-Italic",
            factors: o.MyriadProItalicFactors,
            baseWidths: s.LiberationSansItalicWidths,
            baseMapping: s.LiberationSansItalicMapping,
            metrics: o.MyriadProItalicMetrics
          };
          e["MyriadPro-BoldIt"] = e["MyriadPro-BoldItalic"] = e["PdfJS-Fallback-BoldItalic"] = {
            name: "LiberationSans-BoldItalic",
            factors: o.MyriadProBoldItalicFactors,
            baseWidths: s.LiberationSansBoldItalicWidths,
            baseMapping: s.LiberationSansBoldItalicMapping,
            metrics: o.MyriadProBoldItalicMetrics
          };
          e.ArialMT = e.Arial = e["Arial-Regular"] = {
            name: "LiberationSans-Regular",
            baseWidths: s.LiberationSansRegularWidths,
            baseMapping: s.LiberationSansRegularMapping
          };
          e["Arial-BoldMT"] = e["Arial-Bold"] = {
            name: "LiberationSans-Bold",
            baseWidths: s.LiberationSansBoldWidths,
            baseMapping: s.LiberationSansBoldMapping
          };
          e["Arial-ItalicMT"] = e["Arial-Italic"] = {
            name: "LiberationSans-Italic",
            baseWidths: s.LiberationSansItalicWidths,
            baseMapping: s.LiberationSansItalicMapping
          };
          e["Arial-BoldItalicMT"] = e["Arial-BoldItalic"] = {
            name: "LiberationSans-BoldItalic",
            baseWidths: s.LiberationSansBoldItalicWidths,
            baseMapping: s.LiberationSansBoldItalicMapping
          };
          e["Calibri-Regular"] = {
            name: "LiberationSans-Regular",
            factors: r.CalibriRegularFactors,
            baseWidths: s.LiberationSansRegularWidths,
            baseMapping: s.LiberationSansRegularMapping,
            metrics: r.CalibriRegularMetrics
          };
          e["Calibri-Bold"] = {
            name: "LiberationSans-Bold",
            factors: r.CalibriBoldFactors,
            baseWidths: s.LiberationSansBoldWidths,
            baseMapping: s.LiberationSansBoldMapping,
            metrics: r.CalibriBoldMetrics
          };
          e["Calibri-Italic"] = {
            name: "LiberationSans-Italic",
            factors: r.CalibriItalicFactors,
            baseWidths: s.LiberationSansItalicWidths,
            baseMapping: s.LiberationSansItalicMapping,
            metrics: r.CalibriItalicMetrics
          };
          e["Calibri-BoldItalic"] = {
            name: "LiberationSans-BoldItalic",
            factors: r.CalibriBoldItalicFactors,
            baseWidths: s.LiberationSansBoldItalicWidths,
            baseMapping: s.LiberationSansBoldItalicMapping,
            metrics: r.CalibriBoldItalicMetrics
          };
          e["Segoeui-Regular"] = {
            name: "LiberationSans-Regular",
            factors: c.SegoeuiRegularFactors,
            baseWidths: s.LiberationSansRegularWidths,
            baseMapping: s.LiberationSansRegularMapping,
            metrics: c.SegoeuiRegularMetrics
          };
          e["Segoeui-Bold"] = {
            name: "LiberationSans-Bold",
            factors: c.SegoeuiBoldFactors,
            baseWidths: s.LiberationSansBoldWidths,
            baseMapping: s.LiberationSansBoldMapping,
            metrics: c.SegoeuiBoldMetrics
          };
          e["Segoeui-Italic"] = {
            name: "LiberationSans-Italic",
            factors: c.SegoeuiItalicFactors,
            baseWidths: s.LiberationSansItalicWidths,
            baseMapping: s.LiberationSansItalicMapping,
            metrics: c.SegoeuiItalicMetrics
          };
          e["Segoeui-BoldItalic"] = {
            name: "LiberationSans-BoldItalic",
            factors: c.SegoeuiBoldItalicFactors,
            baseWidths: s.LiberationSansBoldItalicWidths,
            baseMapping: s.LiberationSansBoldItalicMapping,
            metrics: c.SegoeuiBoldItalicMetrics
          };
          e["Helvetica-Regular"] = e.Helvetica = {
            name: "LiberationSans-Regular",
            factors: n.HelveticaRegularFactors,
            baseWidths: s.LiberationSansRegularWidths,
            baseMapping: s.LiberationSansRegularMapping,
            metrics: n.HelveticaRegularMetrics
          };
          e["Helvetica-Bold"] = {
            name: "LiberationSans-Bold",
            factors: n.HelveticaBoldFactors,
            baseWidths: s.LiberationSansBoldWidths,
            baseMapping: s.LiberationSansBoldMapping,
            metrics: n.HelveticaBoldMetrics
          };
          e["Helvetica-Italic"] = {
            name: "LiberationSans-Italic",
            factors: n.HelveticaItalicFactors,
            baseWidths: s.LiberationSansItalicWidths,
            baseMapping: s.LiberationSansItalicMapping,
            metrics: n.HelveticaItalicMetrics
          };
          e["Helvetica-BoldItalic"] = {
            name: "LiberationSans-BoldItalic",
            factors: n.HelveticaBoldItalicFactors,
            baseWidths: s.LiberationSansBoldItalicWidths,
            baseMapping: s.LiberationSansBoldItalicMapping,
            metrics: n.HelveticaBoldItalicMetrics
          };
        });
        function getXfaFontName(e) {
          var t = (0, h.normalizeFontName)(e);
          return u()[t];
        }
      }, function (e, t) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.CalibriRegularMetrics = t.CalibriRegularFactors = t.CalibriItalicMetrics = t.CalibriItalicFactors = t.CalibriBoldMetrics = t.CalibriBoldItalicMetrics = t.CalibriBoldItalicFactors = t.CalibriBoldFactors = void 0;
        t.CalibriBoldFactors = [1.3877, 1, 1, 1, .97801, .92482, .89552, .91133, .81988, .97566, .98152, .93548, .93548, 1.2798, .85284, .92794, 1, .96134, 1.54657, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .82845, .82845, .85284, .85284, .85284, .75859, .92138, .83908, .7762, .73293, .87289, .73133, .7514, .81921, .87356, .95958, .59526, .75727, .69225, 1.04924, .9121, .86943, .79795, .88198, .77958, .70864, .81055, .90399, .88653, .96017, .82577, .77892, .78257, .97507, 1.54657, .97507, .85284, .89552, .90176, .88762, .8785, .75241, .8785, .90518, .95015, .77618, .8785, .88401, .91916, .86304, .88401, .91488, .8785, .8801, .8785, .8785, .91343, .7173, 1.04106, .8785, .85075, .95794, .82616, .85162, .79492, .88331, 1.69808, .88331, .85284, .97801, .89552, .91133, .89552, .91133, 1.7801, .89552, 1.24487, 1.13254, 1.12401, .96839, .85284, .68787, .70645, .85592, .90747, 1.01466, 1.0088, .90323, 1, 1.07463, 1, .91056, .75806, 1.19118, .96839, .78864, .82845, .84133, .75859, .83908, .83908, .83908, .83908, .83908, .83908, .77539, .73293, .73133, .73133, .73133, .73133, .95958, .95958, .95958, .95958, .88506, .9121, .86943, .86943, .86943, .86943, .86943, .85284, .87508, .90399, .90399, .90399, .90399, .77892, .79795, .90807, .88762, .88762, .88762, .88762, .88762, .88762, .8715, .75241, .90518, .90518, .90518, .90518, .88401, .88401, .88401, .88401, .8785, .8785, .8801, .8801, .8801, .8801, .8801, .90747, .89049, .8785, .8785, .8785, .8785, .85162, .8785, .85162, .83908, .88762, .83908, .88762, .83908, .88762, .73293, .75241, .73293, .75241, .73293, .75241, .73293, .75241, .87289, .83016, .88506, .93125, .73133, .90518, .73133, .90518, .73133, .90518, .73133, .90518, .73133, .90518, .81921, .77618, .81921, .77618, .81921, .77618, 1, 1, .87356, .8785, .91075, .89608, .95958, .88401, .95958, .88401, .95958, .88401, .95958, .88401, .95958, .88401, .76229, .90167, .59526, .91916, 1, 1, .86304, .69225, .88401, 1, 1, .70424, .79468, .91926, .88175, .70823, .94903, .9121, .8785, 1, 1, .9121, .8785, .87802, .88656, .8785, .86943, .8801, .86943, .8801, .86943, .8801, .87402, .89291, .77958, .91343, 1, 1, .77958, .91343, .70864, .7173, .70864, .7173, .70864, .7173, .70864, .7173, 1, 1, .81055, .75841, .81055, 1.06452, .90399, .8785, .90399, .8785, .90399, .8785, .90399, .8785, .90399, .8785, .90399, .8785, .96017, .95794, .77892, .85162, .77892, .78257, .79492, .78257, .79492, .78257, .79492, .9297, .56892, .83908, .88762, .77539, .8715, .87508, .89049, 1, 1, .81055, 1.04106, 1.20528, 1.20528, 1, 1.15543, .70674, .98387, .94721, 1.33431, 1.45894, .95161, 1.06303, .83908, .80352, .57184, .6965, .56289, .82001, .56029, .81235, 1.02988, .83908, .7762, .68156, .80367, .73133, .78257, .87356, .86943, .95958, .75727, .89019, 1.04924, .9121, .7648, .86943, .87356, .79795, .78275, .81055, .77892, .9762, .82577, .99819, .84896, .95958, .77892, .96108, 1.01407, .89049, 1.02988, .94211, .96108, .8936, .84021, .87842, .96399, .79109, .89049, 1.00813, 1.02988, .86077, .87445, .92099, .84723, .86513, .8801, .75638, .85714, .78216, .79586, .87965, .94211, .97747, .78287, .97926, .84971, 1.02988, .94211, .8801, .94211, .84971, .73133, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .90264, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .90518, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .90548, 1, 1, 1, 1, 1, 1, .96017, .95794, .96017, .95794, .96017, .95794, .77892, .85162, 1, 1, .89552, .90527, 1, .90363, .92794, .92794, .92794, .92794, .87012, .87012, .87012, .89552, .89552, 1.42259, .71143, 1.06152, 1, 1, 1.03372, 1.03372, .97171, 1.4956, 2.2807, .93835, .83406, .91133, .84107, .91133, 1, 1, 1, .72021, 1, 1.23108, .83489, .88525, .88525, .81499, .90527, 1.81055, .90527, 1.81055, 1.31006, 1.53711, .94434, 1.08696, 1, .95018, .77192, .85284, .90747, 1.17534, .69825, .9716, 1.37077, .90747, .90747, .85356, .90747, .90747, 1.44947, .85284, .8941, .8941, .70572, .8, .70572, .70572, .70572, .70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .99862, .99862, 1, 1, 1, 1, 1, 1.08004, .91027, 1, 1, 1, .99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .90727, .90727, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.CalibriBoldMetrics = {
          lineHeight: 1.2207,
          lineGap: .2207
        };
        t.CalibriBoldItalicFactors = [1.3877, 1, 1, 1, .97801, .92482, .89552, .91133, .81988, .97566, .98152, .93548, .93548, 1.2798, .85284, .92794, 1, .96134, 1.56239, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .82845, .82845, .85284, .85284, .85284, .75859, .92138, .83908, .7762, .71805, .87289, .73133, .7514, .81921, .87356, .95958, .59526, .75727, .69225, 1.04924, .90872, .85938, .79795, .87068, .77958, .69766, .81055, .90399, .88653, .96068, .82577, .77892, .78257, .97507, 1.529, .97507, .85284, .89552, .90176, .94908, .86411, .74012, .86411, .88323, .95015, .86411, .86331, .88401, .91916, .86304, .88401, .9039, .86331, .86331, .86411, .86411, .90464, .70852, 1.04106, .86331, .84372, .95794, .82616, .84548, .79492, .88331, 1.69808, .88331, .85284, .97801, .89552, .91133, .89552, .91133, 1.7801, .89552, 1.24487, 1.13254, 1.19129, .96839, .85284, .68787, .70645, .85592, .90747, 1.01466, 1.0088, .90323, 1, 1.07463, 1, .91056, .75806, 1.19118, .96839, .78864, .82845, .84133, .75859, .83908, .83908, .83908, .83908, .83908, .83908, .77539, .71805, .73133, .73133, .73133, .73133, .95958, .95958, .95958, .95958, .88506, .90872, .85938, .85938, .85938, .85938, .85938, .85284, .87068, .90399, .90399, .90399, .90399, .77892, .79795, .90807, .94908, .94908, .94908, .94908, .94908, .94908, .85887, .74012, .88323, .88323, .88323, .88323, .88401, .88401, .88401, .88401, .8785, .86331, .86331, .86331, .86331, .86331, .86331, .90747, .89049, .86331, .86331, .86331, .86331, .84548, .86411, .84548, .83908, .94908, .83908, .94908, .83908, .94908, .71805, .74012, .71805, .74012, .71805, .74012, .71805, .74012, .87289, .79538, .88506, .92726, .73133, .88323, .73133, .88323, .73133, .88323, .73133, .88323, .73133, .88323, .81921, .86411, .81921, .86411, .81921, .86411, 1, 1, .87356, .86331, .91075, .8777, .95958, .88401, .95958, .88401, .95958, .88401, .95958, .88401, .95958, .88401, .76467, .90167, .59526, .91916, 1, 1, .86304, .69225, .88401, 1, 1, .70424, .77312, .91926, .88175, .70823, .94903, .90872, .86331, 1, 1, .90872, .86331, .86906, .88116, .86331, .85938, .86331, .85938, .86331, .85938, .86331, .87402, .86549, .77958, .90464, 1, 1, .77958, .90464, .69766, .70852, .69766, .70852, .69766, .70852, .69766, .70852, 1, 1, .81055, .75841, .81055, 1.06452, .90399, .86331, .90399, .86331, .90399, .86331, .90399, .86331, .90399, .86331, .90399, .86331, .96068, .95794, .77892, .84548, .77892, .78257, .79492, .78257, .79492, .78257, .79492, .9297, .56892, .83908, .94908, .77539, .85887, .87068, .89049, 1, 1, .81055, 1.04106, 1.20528, 1.20528, 1, 1.15543, .70088, .98387, .94721, 1.33431, 1.45894, .95161, 1.48387, .83908, .80352, .57118, .6965, .56347, .79179, .55853, .80346, 1.02988, .83908, .7762, .67174, .86036, .73133, .78257, .87356, .86441, .95958, .75727, .89019, 1.04924, .90872, .74889, .85938, .87891, .79795, .7957, .81055, .77892, .97447, .82577, .97466, .87179, .95958, .77892, .94252, .95612, .8753, 1.02988, .92733, .94252, .87411, .84021, .8728, .95612, .74081, .8753, 1.02189, 1.02988, .84814, .87445, .91822, .84723, .85668, .86331, .81344, .87581, .76422, .82046, .96057, .92733, .99375, .78022, .95452, .86015, 1.02988, .92733, .86331, .92733, .86015, .73133, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .90631, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .88323, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .85174, 1, 1, 1, 1, 1, 1, .96068, .95794, .96068, .95794, .96068, .95794, .77892, .84548, 1, 1, .89552, .90527, 1, .90363, .92794, .92794, .92794, .89807, .87012, .87012, .87012, .89552, .89552, 1.42259, .71094, 1.06152, 1, 1, 1.03372, 1.03372, .97171, 1.4956, 2.2807, .92972, .83406, .91133, .83326, .91133, 1, 1, 1, .72021, 1, 1.23108, .83489, .88525, .88525, .81499, .90616, 1.81055, .90527, 1.81055, 1.3107, 1.53711, .94434, 1.08696, 1, .95018, .77192, .85284, .90747, 1.17534, .69825, .9716, 1.37077, .90747, .90747, .85356, .90747, .90747, 1.44947, .85284, .8941, .8941, .70572, .8, .70572, .70572, .70572, .70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .99862, .99862, 1, 1, 1, 1, 1, 1.08004, .91027, 1, 1, 1, .99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .90727, .90727, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.CalibriBoldItalicMetrics = {
          lineHeight: 1.2207,
          lineGap: .2207
        };
        t.CalibriItalicFactors = [1.3877, 1, 1, 1, 1.17223, 1.1293, .89552, .91133, .80395, 1.02269, 1.15601, .91056, .91056, 1.2798, .85284, .89807, 1, .90861, 1.39543, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .96309, .96309, .85284, .85284, .85284, .83319, .88071, .8675, .81552, .72346, .85193, .73206, .7522, .81105, .86275, .90685, .6377, .77892, .75593, 1.02638, .89249, .84118, .77452, .85374, .75186, .67789, .79776, .88844, .85066, .94309, .77818, .7306, .76659, 1.10369, 1.38313, 1.10369, 1.06139, .89552, .8739, .9245, .9245, .83203, .9245, .85865, 1.09842, .9245, .9245, 1.03297, 1.07692, .90918, 1.03297, .94959, .9245, .92274, .9245, .9245, 1.02933, .77832, 1.20562, .9245, .8916, .98986, .86621, .89453, .79004, .94152, 1.77256, .94152, .85284, .97801, .89552, .91133, .89552, .91133, 1.91729, .89552, 1.17889, 1.13254, 1.16359, .92098, .85284, .68787, .71353, .84737, .90747, 1.0088, 1.0044, .87683, 1, 1.09091, 1, .92229, .739, 1.15642, .92098, .76288, .80504, .80972, .75859, .8675, .8675, .8675, .8675, .8675, .8675, .76318, .72346, .73206, .73206, .73206, .73206, .90685, .90685, .90685, .90685, .86477, .89249, .84118, .84118, .84118, .84118, .84118, .85284, .84557, .88844, .88844, .88844, .88844, .7306, .77452, .86331, .9245, .9245, .9245, .9245, .9245, .9245, .84843, .83203, .85865, .85865, .85865, .85865, .82601, .82601, .82601, .82601, .94469, .9245, .92274, .92274, .92274, .92274, .92274, .90747, .86651, .9245, .9245, .9245, .9245, .89453, .9245, .89453, .8675, .9245, .8675, .9245, .8675, .9245, .72346, .83203, .72346, .83203, .72346, .83203, .72346, .83203, .85193, .8875, .86477, .99034, .73206, .85865, .73206, .85865, .73206, .85865, .73206, .85865, .73206, .85865, .81105, .9245, .81105, .9245, .81105, .9245, 1, 1, .86275, .9245, .90872, .93591, .90685, .82601, .90685, .82601, .90685, .82601, .90685, 1.03297, .90685, .82601, .77896, 1.05611, .6377, 1.07692, 1, 1, .90918, .75593, 1.03297, 1, 1, .76032, .9375, .98156, .93407, .77261, 1.11429, .89249, .9245, 1, 1, .89249, .9245, .92534, .86698, .9245, .84118, .92274, .84118, .92274, .84118, .92274, .8667, .86291, .75186, 1.02933, 1, 1, .75186, 1.02933, .67789, .77832, .67789, .77832, .67789, .77832, .67789, .77832, 1, 1, .79776, .97655, .79776, 1.23023, .88844, .9245, .88844, .9245, .88844, .9245, .88844, .9245, .88844, .9245, .88844, .9245, .94309, .98986, .7306, .89453, .7306, .76659, .79004, .76659, .79004, .76659, .79004, 1.09231, .54873, .8675, .9245, .76318, .84843, .84557, .86651, 1, 1, .79776, 1.20562, 1.18622, 1.18622, 1, 1.1437, .67009, .96334, .93695, 1.35191, 1.40909, .95161, 1.48387, .8675, .90861, .6192, .7363, .64824, .82411, .56321, .85696, 1.23516, .8675, .81552, .7286, .84134, .73206, .76659, .86275, .84369, .90685, .77892, .85871, 1.02638, .89249, .75828, .84118, .85984, .77452, .76466, .79776, .7306, .90782, .77818, .903, .87291, .90685, .7306, .99058, 1.03667, .94635, 1.23516, .9849, .99058, .92393, .8916, .942, 1.03667, .75026, .94635, 1.0297, 1.23516, .90918, .94048, .98217, .89746, .84153, .92274, .82507, .88832, .84438, .88178, 1.03525, .9849, 1.00225, .78086, .97248, .89404, 1.23516, .9849, .92274, .9849, .89404, .73206, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .89693, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .85865, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .90933, 1, 1, 1, 1, 1, 1, .94309, .98986, .94309, .98986, .94309, .98986, .7306, .89453, 1, 1, .89552, .90527, 1, .90186, 1.12308, 1.12308, 1.12308, 1.12308, 1.2566, 1.2566, 1.2566, .89552, .89552, 1.42259, .68994, 1.03809, 1, 1, 1.0176, 1.0176, 1.11523, 1.4956, 2.01462, .97858, .82616, .91133, .83437, .91133, 1, 1, 1, .70508, 1, 1.23108, .79801, .84426, .84426, .774, .90572, 1.81055, .90749, 1.81055, 1.28809, 1.55469, .94434, 1.07806, 1, .97094, .7589, .85284, .90747, 1.19658, .69825, .97622, 1.33512, .90747, .90747, .85284, .90747, .90747, 1.44947, .85284, .8941, .8941, .70572, .8, .70572, .70572, .70572, .70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .99862, .99862, 1, 1, 1, 1, 1, 1.0336, .91027, 1, 1, 1, .99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05859, 1.05859, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.CalibriItalicMetrics = {
          lineHeight: 1.2207,
          lineGap: .2207
        };
        t.CalibriRegularFactors = [1.3877, 1, 1, 1, 1.17223, 1.1293, .89552, .91133, .80395, 1.02269, 1.15601, .91056, .91056, 1.2798, .85284, .89807, 1, .90861, 1.39016, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .91133, .96309, .96309, .85284, .85284, .85284, .83319, .88071, .8675, .81552, .73834, .85193, .73206, .7522, .81105, .86275, .90685, .6377, .77892, .75593, 1.02638, .89385, .85122, .77452, .86503, .75186, .68887, .79776, .88844, .85066, .94258, .77818, .7306, .76659, 1.10369, 1.39016, 1.10369, 1.06139, .89552, .8739, .86128, .94469, .8457, .94469, .89464, 1.09842, .84636, .94469, 1.03297, 1.07692, .90918, 1.03297, .95897, .94469, .9482, .94469, .94469, 1.04692, .78223, 1.20562, .94469, .90332, .98986, .86621, .90527, .79004, .94152, 1.77256, .94152, .85284, .97801, .89552, .91133, .89552, .91133, 1.91729, .89552, 1.17889, 1.13254, 1.08707, .92098, .85284, .68787, .71353, .84737, .90747, 1.0088, 1.0044, .87683, 1, 1.09091, 1, .92229, .739, 1.15642, .92098, .76288, .80504, .80972, .75859, .8675, .8675, .8675, .8675, .8675, .8675, .76318, .73834, .73206, .73206, .73206, .73206, .90685, .90685, .90685, .90685, .86477, .89385, .85122, .85122, .85122, .85122, .85122, .85284, .85311, .88844, .88844, .88844, .88844, .7306, .77452, .86331, .86128, .86128, .86128, .86128, .86128, .86128, .8693, .8457, .89464, .89464, .89464, .89464, .82601, .82601, .82601, .82601, .94469, .94469, .9482, .9482, .9482, .9482, .9482, .90747, .86651, .94469, .94469, .94469, .94469, .90527, .94469, .90527, .8675, .86128, .8675, .86128, .8675, .86128, .73834, .8457, .73834, .8457, .73834, .8457, .73834, .8457, .85193, .92454, .86477, .9921, .73206, .89464, .73206, .89464, .73206, .89464, .73206, .89464, .73206, .89464, .81105, .84636, .81105, .84636, .81105, .84636, 1, 1, .86275, .94469, .90872, .95786, .90685, .82601, .90685, .82601, .90685, .82601, .90685, 1.03297, .90685, .82601, .77741, 1.05611, .6377, 1.07692, 1, 1, .90918, .75593, 1.03297, 1, 1, .76032, .90452, .98156, 1.11842, .77261, 1.11429, .89385, .94469, 1, 1, .89385, .94469, .95877, .86901, .94469, .85122, .9482, .85122, .9482, .85122, .9482, .8667, .90016, .75186, 1.04692, 1, 1, .75186, 1.04692, .68887, .78223, .68887, .78223, .68887, .78223, .68887, .78223, 1, 1, .79776, .92188, .79776, 1.23023, .88844, .94469, .88844, .94469, .88844, .94469, .88844, .94469, .88844, .94469, .88844, .94469, .94258, .98986, .7306, .90527, .7306, .76659, .79004, .76659, .79004, .76659, .79004, 1.09231, .54873, .8675, .86128, .76318, .8693, .85311, .86651, 1, 1, .79776, 1.20562, 1.18622, 1.18622, 1, 1.1437, .67742, .96334, .93695, 1.35191, 1.40909, .95161, 1.48387, .86686, .90861, .62267, .74359, .65649, .85498, .56963, .88254, 1.23516, .8675, .81552, .75443, .84503, .73206, .76659, .86275, .85122, .90685, .77892, .85746, 1.02638, .89385, .75657, .85122, .86275, .77452, .74171, .79776, .7306, .95165, .77818, .89772, .88831, .90685, .7306, .98142, 1.02191, .96576, 1.23516, .99018, .98142, .9236, .89258, .94035, 1.02191, .78848, .96576, .9561, 1.23516, .90918, .92578, .95424, .89746, .83969, .9482, .80113, .89442, .85208, .86155, .98022, .99018, 1.00452, .81209, .99247, .89181, 1.23516, .99018, .9482, .99018, .89181, .73206, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .88844, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .89464, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .96766, 1, 1, 1, 1, 1, 1, .94258, .98986, .94258, .98986, .94258, .98986, .7306, .90527, 1, 1, .89552, .90527, 1, .90186, 1.12308, 1.12308, 1.12308, 1.12308, 1.2566, 1.2566, 1.2566, .89552, .89552, 1.42259, .69043, 1.03809, 1, 1, 1.0176, 1.0176, 1.11523, 1.4956, 2.01462, .99331, .82616, .91133, .84286, .91133, 1, 1, 1, .70508, 1, 1.23108, .79801, .84426, .84426, .774, .90527, 1.81055, .90527, 1.81055, 1.28809, 1.55469, .94434, 1.07806, 1, .97094, .7589, .85284, .90747, 1.19658, .69825, .97622, 1.33512, .90747, .90747, .85356, .90747, .90747, 1.44947, .85284, .8941, .8941, .70572, .8, .70572, .70572, .70572, .70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .99862, .99862, 1, 1, 1, 1, 1, 1.0336, .91027, 1, 1, 1, .99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05859, 1.05859, 1, 1, 1, 1.07185, .99413, .96334, 1.08065, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.CalibriRegularMetrics = {
          lineHeight: 1.2207,
          lineGap: .2207
        };
      }, function (e, t) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.HelveticaRegularMetrics = t.HelveticaRegularFactors = t.HelveticaItalicMetrics = t.HelveticaItalicFactors = t.HelveticaBoldMetrics = t.HelveticaBoldItalicMetrics = t.HelveticaBoldItalicFactors = t.HelveticaBoldFactors = void 0;
        t.HelveticaBoldFactors = [.76116, 1, 1, 1.0006, .99998, .99974, .99973, .99973, .99982, .99977, 1.00087, .99998, .99998, .99959, 1.00003, 1.0006, .99998, 1.0006, 1.0006, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99998, 1, 1.00003, 1.00003, 1.00003, 1.00026, .9999, .99977, .99977, .99977, .99977, 1.00001, 1.00026, 1.00022, .99977, 1.0006, .99973, .99977, 1.00026, .99999, .99977, 1.00022, 1.00001, 1.00022, .99977, 1.00001, 1.00026, .99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, .99998, 1.0006, .99998, 1.00003, .99973, .99998, .99973, 1.00026, .99973, 1.00026, .99973, .99998, 1.00026, 1.00026, 1.0006, 1.0006, .99973, 1.0006, .99982, 1.00026, 1.00026, 1.00026, 1.00026, .99959, .99973, .99998, 1.00026, .99973, 1.00022, .99973, .99973, 1, .99959, 1.00077, .99959, 1.00003, .99998, .99973, .99973, .99973, .99973, 1.00077, .99973, .99998, 1.00025, .99968, .99973, 1.00003, 1.00025, .60299, 1.00024, 1.06409, 1, 1, .99998, 1, .99973, 1.0006, .99998, 1, .99936, .99973, 1.00002, 1.00002, 1.00002, 1.00026, .99977, .99977, .99977, .99977, .99977, .99977, 1, .99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, .99977, .99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, .99977, .99977, .99977, .99977, 1.00001, 1.00001, 1.00026, .99973, .99973, .99973, .99973, .99973, .99973, .99982, .99973, .99973, .99973, .99973, .99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.06409, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, .99973, 1.00026, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, 1.03374, .99977, 1.00026, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, .99977, 1.00026, .99977, 1.00026, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.00042, .99973, .99973, 1.0006, .99977, .99973, .99973, 1.00026, 1.0006, 1.00026, 1.0006, 1.00026, 1.03828, 1.00026, .99999, 1.00026, 1.0006, .99977, 1.00026, .99977, 1.00026, .99977, 1.00026, .9993, .9998, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1, 1.00016, .99977, .99959, .99977, .99959, .99977, .99959, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00026, .99998, 1.00026, .8121, 1.00026, .99998, .99977, 1.00026, .99977, 1.00026, .99977, 1.00026, .99977, 1.00026, .99977, 1.00026, .99977, 1.00026, 1.00016, 1.00022, 1.00001, .99973, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 1.0006, .99973, .99977, .99973, 1, .99982, 1.00022, 1.00026, 1.00001, .99973, 1.00026, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, 1.00034, .99977, 1, .99997, 1.00026, 1.00078, 1.00036, .99973, 1.00013, 1.0006, .99977, .99977, .99988, .85148, 1.00001, 1.00026, .99977, 1.00022, 1.0006, .99977, 1.00001, .99999, .99977, 1.00069, 1.00022, .99977, 1.00001, .99984, 1.00026, 1.00001, 1.00024, 1.00001, .9999, 1, 1.0006, 1.00001, 1.00041, .99962, 1.00026, 1.0006, .99995, 1.00041, .99942, .99973, .99927, 1.00082, .99902, 1.00026, 1.00087, 1.0006, 1.00069, .99973, .99867, .99973, .9993, 1.00026, 1.00049, 1.00056, 1, .99988, .99935, .99995, .99954, 1.00055, .99945, 1.00032, 1.0006, .99995, 1.00026, .99995, 1.00032, 1.00001, 1.00008, .99971, 1.00019, .9994, 1.00001, 1.0006, 1.00044, .99973, 1.00023, 1.00047, 1, .99942, .99561, .99989, 1.00035, .99977, 1.00035, .99977, 1.00019, .99944, 1.00001, 1.00021, .99926, 1.00035, 1.00035, .99942, 1.00048, .99999, .99977, 1.00022, 1.00035, 1.00001, .99977, 1.00026, .99989, 1.00057, 1.00001, .99936, 1.00052, 1.00012, .99996, 1.00043, 1, 1.00035, .9994, .99976, 1.00035, .99973, 1.00052, 1.00041, 1.00119, 1.00037, .99973, 1.00002, .99986, 1.00041, 1.00041, .99902, .9996, 1.00034, .99999, 1.00026, .99999, 1.00026, .99973, 1.00052, .99973, 1, .99973, 1.00041, 1.00075, .9994, 1.0003, .99999, 1, 1.00041, .99955, 1, .99915, .99973, .99973, 1.00026, 1.00119, .99955, .99973, 1.0006, .99911, 1.0006, 1.00026, .99972, 1.00026, .99902, 1.00041, .99973, .99999, 1, 1, 1.00038, 1.0005, 1.00016, 1.00022, 1.00016, 1.00022, 1.00016, 1.00022, 1.00001, .99973, 1, 1, .99973, 1, 1, .99955, 1.0006, 1.0006, 1.0006, 1.0006, 1, 1, 1, .99973, .99973, .99972, 1, 1, 1.00106, .99999, .99998, .99998, .99999, .99998, 1.66475, 1, .99973, .99973, 1.00023, .99973, .99971, 1.00047, 1.00023, 1, .99991, .99984, 1.00002, 1.00002, 1.00002, 1.00002, 1, 1, 1, 1, 1, 1, 1, .99972, 1, 1.20985, 1.39713, 1.00003, 1.00031, 1.00015, 1, .99561, 1.00027, 1.00031, 1.00031, .99915, 1.00031, 1.00031, .99999, 1.00003, .99999, .99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, .99999, 1, .99861, .99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, .99972, .99999, .99999, .99999, .99999, 1.40483, 1, .99977, 1.00054, 1, 1, .99953, .99962, 1.00042, .9995, 1, 1, 1, 1, 1, 1, 1, 1, .99998, .99998, .99998, .99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.HelveticaBoldMetrics = {
          lineHeight: 1.2,
          lineGap: .2
        };
        t.HelveticaBoldItalicFactors = [.76116, 1, 1, 1.0006, .99998, .99974, .99973, .99973, .99982, .99977, 1.00087, .99998, .99998, .99959, 1.00003, 1.0006, .99998, 1.0006, 1.0006, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99998, 1, 1.00003, 1.00003, 1.00003, 1.00026, .9999, .99977, .99977, .99977, .99977, 1.00001, 1.00026, 1.00022, .99977, 1.0006, .99973, .99977, 1.00026, .99999, .99977, 1.00022, 1.00001, 1.00022, .99977, 1.00001, 1.00026, .99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, .99998, 1.0006, .99998, 1.00003, .99973, .99998, .99973, 1.00026, .99973, 1.00026, .99973, .99998, 1.00026, 1.00026, 1.0006, 1.0006, .99973, 1.0006, .99982, 1.00026, 1.00026, 1.00026, 1.00026, .99959, .99973, .99998, 1.00026, .99973, 1.00022, .99973, .99973, 1, .99959, 1.00077, .99959, 1.00003, .99998, .99973, .99973, .99973, .99973, 1.00077, .99973, .99998, 1.00025, .99968, .99973, 1.00003, 1.00025, .60299, 1.00024, 1.06409, 1, 1, .99998, 1, .99973, 1.0006, .99998, 1, .99936, .99973, 1.00002, 1.00002, 1.00002, 1.00026, .99977, .99977, .99977, .99977, .99977, .99977, 1, .99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, .99977, .99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, .99977, .99977, .99977, .99977, 1.00001, 1.00001, 1.00026, .99973, .99973, .99973, .99973, .99973, .99973, .99982, .99973, .99973, .99973, .99973, .99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.06409, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, .99973, 1.00026, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, 1.0044, .99977, 1.00026, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, .99977, 1.00026, .99977, 1.00026, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, .99971, .99973, .99973, 1.0006, .99977, .99973, .99973, 1.00026, 1.0006, 1.00026, 1.0006, 1.00026, 1.01011, 1.00026, .99999, 1.00026, 1.0006, .99977, 1.00026, .99977, 1.00026, .99977, 1.00026, .9993, .9998, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1, 1.00016, .99977, .99959, .99977, .99959, .99977, .99959, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00026, .99998, 1.00026, .8121, 1.00026, .99998, .99977, 1.00026, .99977, 1.00026, .99977, 1.00026, .99977, 1.00026, .99977, 1.00026, .99977, 1.00026, 1.00016, 1.00022, 1.00001, .99973, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 1.0006, .99973, .99977, .99973, 1, .99982, 1.00022, 1.00026, 1.00001, .99973, 1.00026, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99977, 1, 1, 1.00026, .99969, .99972, .99981, .9998, 1.0006, .99977, .99977, 1.00022, .91155, 1.00001, 1.00026, .99977, 1.00022, 1.0006, .99977, 1.00001, .99999, .99977, .99966, 1.00022, 1.00032, 1.00001, .99944, 1.00026, 1.00001, .99968, 1.00001, 1.00047, 1, 1.0006, 1.00001, .99981, 1.00101, 1.00026, 1.0006, .99948, .99981, 1.00064, .99973, .99942, 1.00101, 1.00061, 1.00026, 1.00069, 1.0006, 1.00014, .99973, 1.01322, .99973, 1.00065, 1.00026, 1.00012, .99923, 1, 1.00064, 1.00076, .99948, 1.00055, 1.00063, 1.00007, .99943, 1.0006, .99948, 1.00026, .99948, .99943, 1.00001, 1.00001, 1.00029, 1.00038, 1.00035, 1.00001, 1.0006, 1.0006, .99973, .99978, 1.00001, 1.00057, .99989, .99967, .99964, .99967, .99977, .99999, .99977, 1.00038, .99977, 1.00001, .99973, 1.00066, .99967, .99967, 1.00041, .99998, .99999, .99977, 1.00022, .99967, 1.00001, .99977, 1.00026, .99964, 1.00031, 1.00001, .99999, .99999, 1, 1.00023, 1, 1, .99999, 1.00035, 1.00001, .99999, .99973, .99977, .99999, 1.00058, .99973, .99973, .99955, .9995, 1.00026, 1.00026, 1.00032, .99989, 1.00034, .99999, 1.00026, 1.00026, 1.00026, .99973, .45998, .99973, 1.00026, .99973, 1.00001, .99999, .99982, .99994, .99996, 1, 1.00042, 1.00044, 1.00029, 1.00023, .99973, .99973, 1.00026, .99949, 1.00002, .99973, 1.0006, 1.0006, 1.0006, .99975, 1.00026, 1.00026, 1.00032, .98685, .99973, 1.00026, 1, 1, .99966, 1.00044, 1.00016, 1.00022, 1.00016, 1.00022, 1.00016, 1.00022, 1.00001, .99973, 1, 1, .99973, 1, 1, .99955, 1.0006, 1.0006, 1.0006, 1.0006, 1, 1, 1, .99973, .99973, .99972, 1, 1, 1.00106, .99999, .99998, .99998, .99999, .99998, 1.66475, 1, .99973, .99973, 1, .99973, .99971, .99978, 1, 1, .99991, .99984, 1.00002, 1.00002, 1.00002, 1.00002, 1.00098, 1, 1, 1, 1.00049, 1, 1, .99972, 1, 1.20985, 1.39713, 1.00003, 1.00031, 1.00015, 1, .99561, 1.00027, 1.00031, 1.00031, .99915, 1.00031, 1.00031, .99999, 1.00003, .99999, .99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, .99999, 1, .99861, .99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, .99972, .99999, .99999, .99999, .99999, 1.40483, 1, .99977, 1.00054, 1, 1, .99953, .99962, 1.00042, .9995, 1, 1, 1, 1, 1, 1, 1, 1, .99998, .99998, .99998, .99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.HelveticaBoldItalicMetrics = {
          lineHeight: 1.35,
          lineGap: .2
        };
        t.HelveticaItalicFactors = [.76116, 1, 1, 1.0006, 1.0006, 1.00006, .99973, .99973, .99982, 1.00001, 1.00043, .99998, .99998, .99959, 1.00003, 1.0006, .99998, 1.0006, 1.0006, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99973, 1.0006, 1, 1.00003, 1.00003, 1.00003, .99973, .99987, 1.00001, 1.00001, .99977, .99977, 1.00001, 1.00026, 1.00022, .99977, 1.0006, 1, 1.00001, .99973, .99999, .99977, 1.00022, 1.00001, 1.00022, .99977, 1.00001, 1.00026, .99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 1.0006, 1.0006, 1.0006, .99949, .99973, .99998, .99973, .99973, 1, .99973, .99973, 1.0006, .99973, .99973, .99924, .99924, 1, .99924, .99999, .99973, .99973, .99973, .99973, .99998, 1, 1.0006, .99973, 1, .99977, 1, 1, 1, 1.00005, 1.0009, 1.00005, 1.00003, .99998, .99973, .99973, .99973, .99973, 1.0009, .99973, .99998, 1.00025, .99968, .99973, 1.00003, 1.00025, .60299, 1.00024, 1.06409, 1, 1, .99998, 1, .9998, 1.0006, .99998, 1, .99936, .99973, 1.00002, 1.00002, 1.00002, 1.00026, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1, .99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, .99977, .99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, .99977, .99977, .99977, .99977, 1.00001, 1.00001, 1.00026, .99973, .99973, .99973, .99973, .99973, .99973, .99982, 1, .99973, .99973, .99973, .99973, 1.0006, 1.0006, 1.0006, 1.0006, .99973, .99973, .99973, .99973, .99973, .99973, .99973, 1.06409, 1.00026, .99973, .99973, .99973, .99973, 1, .99973, 1, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, .99977, 1, .99977, 1, .99977, 1, .99977, 1, .99977, 1.0288, .99977, .99973, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00022, .99973, 1.00022, .99973, 1.00022, .99973, 1.00022, .99973, .99977, .99973, .99977, .99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, .99924, 1.0006, 1.0006, .99946, 1.00034, 1, .99924, 1.00001, 1, 1, .99973, .99924, .99973, .99924, .99973, 1.06311, .99973, 1.00024, .99973, .99924, .99977, .99973, .99977, .99973, .99977, .99973, 1.00041, .9998, .99973, 1.00022, .99973, 1.00022, .99973, 1.00022, .99973, 1, 1.00016, .99977, .99998, .99977, .99998, .99977, .99998, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00026, 1.0006, 1.00026, .89547, 1.00026, 1.0006, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, 1.00016, .99977, 1.00001, 1, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, .99924, .99973, 1.00001, .99973, 1, .99982, 1.00022, 1.00026, 1.00001, 1, 1.00026, 1.0006, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, 1.00001, 1, 1.00054, .99977, 1.00084, 1.00007, .99973, 1.00013, .99924, 1.00001, 1.00001, .99945, .91221, 1.00001, 1.00026, .99977, 1.00022, 1.0006, 1.00001, 1.00001, .99999, .99977, .99933, 1.00022, 1.00054, 1.00001, 1.00065, 1.00026, 1.00001, 1.0001, 1.00001, 1.00052, 1, 1.0006, 1.00001, .99945, .99897, .99968, .99924, 1.00036, .99945, .99949, 1, 1.0006, .99897, .99918, .99968, .99911, .99924, 1, .99962, 1.01487, 1, 1.0005, .99973, 1.00012, 1.00043, 1, .99995, .99994, 1.00036, .99947, 1.00019, 1.00063, 1.00025, .99924, 1.00036, .99973, 1.00036, 1.00025, 1.00001, 1.00001, 1.00027, 1.0001, 1.00068, 1.00001, 1.0006, 1.0006, 1, 1.00008, .99957, .99972, .9994, .99954, .99975, 1.00051, 1.00001, 1.00019, 1.00001, 1.0001, .99986, 1.00001, 1.00001, 1.00038, .99954, .99954, .9994, 1.00066, .99999, .99977, 1.00022, 1.00054, 1.00001, .99977, 1.00026, .99975, 1.0001, 1.00001, .99993, .9995, .99955, 1.00016, .99978, .99974, 1.00019, 1.00022, .99955, 1.00053, .99973, 1.00089, 1.00005, .99967, 1.00048, .99973, 1.00002, 1.00034, .99973, .99973, .99964, 1.00006, 1.00066, .99947, .99973, .98894, .99973, 1, .44898, 1, .99946, 1, 1.00039, 1.00082, .99991, .99991, .99985, 1.00022, 1.00023, 1.00061, 1.00006, .99966, .99973, .99973, .99973, 1.00019, 1.0008, 1, .99924, .99924, .99924, .99983, 1.00044, .99973, .99964, .98332, 1, .99973, 1, 1, .99962, .99895, 1.00016, .99977, 1.00016, .99977, 1.00016, .99977, 1.00001, 1, 1, 1, .99973, 1, 1, .99955, .99924, .99924, .99924, .99924, .99998, .99998, .99998, .99973, .99973, .99972, 1, 1, 1.00267, .99999, .99998, .99998, 1, .99998, 1.66475, 1, .99973, .99973, 1.00023, .99973, 1.00423, .99925, .99999, 1, .99991, .99984, 1.00002, 1.00002, 1.00002, 1.00002, 1.00049, 1, 1.00245, 1, 1, 1, 1, .96329, 1, 1.20985, 1.39713, 1.00003, .8254, 1.00015, 1, 1.00035, 1.00027, 1.00031, 1.00031, 1.00003, 1.00031, 1.00031, .99999, 1.00003, .99999, .99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, .99999, 1, .99861, .99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, .95317, .99999, .99999, .99999, .99999, 1.40483, 1, .99977, 1.00054, 1, 1, .99953, .99962, 1.00042, .9995, 1, 1, 1, 1, 1, 1, 1, 1, .99998, .99998, .99998, .99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.HelveticaItalicMetrics = {
          lineHeight: 1.35,
          lineGap: .2
        };
        t.HelveticaRegularFactors = [.76116, 1, 1, 1.0006, 1.0006, 1.00006, .99973, .99973, .99982, 1.00001, 1.00043, .99998, .99998, .99959, 1.00003, 1.0006, .99998, 1.0006, 1.0006, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99973, .99973, 1.0006, 1, 1.00003, 1.00003, 1.00003, .99973, .99987, 1.00001, 1.00001, .99977, .99977, 1.00001, 1.00026, 1.00022, .99977, 1.0006, 1, 1.00001, .99973, .99999, .99977, 1.00022, 1.00001, 1.00022, .99977, 1.00001, 1.00026, .99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 1.0006, 1.0006, 1.0006, .99949, .99973, .99998, .99973, .99973, 1, .99973, .99973, 1.0006, .99973, .99973, .99924, .99924, 1, .99924, .99999, .99973, .99973, .99973, .99973, .99998, 1, 1.0006, .99973, 1, .99977, 1, 1, 1, 1.00005, 1.0009, 1.00005, 1.00003, .99998, .99973, .99973, .99973, .99973, 1.0009, .99973, .99998, 1.00025, .99968, .99973, 1.00003, 1.00025, .60299, 1.00024, 1.06409, 1, 1, .99998, 1, .9998, 1.0006, .99998, 1, .99936, .99973, 1.00002, 1.00002, 1.00002, 1.00026, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1, .99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, .99977, .99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, .99977, .99977, .99977, .99977, 1.00001, 1.00001, 1.00026, .99973, .99973, .99973, .99973, .99973, .99973, .99982, 1, .99973, .99973, .99973, .99973, 1.0006, 1.0006, 1.0006, 1.0006, .99973, .99973, .99973, .99973, .99973, .99973, .99973, 1.06409, 1.00026, .99973, .99973, .99973, .99973, 1, .99973, 1, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, .99977, 1, .99977, 1, .99977, 1, .99977, 1, .99977, 1.04596, .99977, .99973, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00001, .99973, 1.00022, .99973, 1.00022, .99973, 1.00022, .99973, 1.00022, .99973, .99977, .99973, .99977, .99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, .99924, 1.0006, 1.0006, 1.00019, 1.00034, 1, .99924, 1.00001, 1, 1, .99973, .99924, .99973, .99924, .99973, 1.02572, .99973, 1.00005, .99973, .99924, .99977, .99973, .99977, .99973, .99977, .99973, .99999, .9998, .99973, 1.00022, .99973, 1.00022, .99973, 1.00022, .99973, 1, 1.00016, .99977, .99998, .99977, .99998, .99977, .99998, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00026, 1.0006, 1.00026, .84533, 1.00026, 1.0006, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, .99977, .99973, 1.00016, .99977, 1.00001, 1, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, .99924, .99973, 1.00001, .99973, 1, .99982, 1.00022, 1.00026, 1.00001, 1, 1.00026, 1.0006, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99998, .99928, 1, .99977, 1.00013, 1.00055, .99947, .99945, .99941, .99924, 1.00001, 1.00001, 1.0004, .91621, 1.00001, 1.00026, .99977, 1.00022, 1.0006, 1.00001, 1.00005, .99999, .99977, 1.00015, 1.00022, .99977, 1.00001, .99973, 1.00026, 1.00001, 1.00019, 1.00001, .99946, 1, 1.0006, 1.00001, .99978, 1.00045, .99973, .99924, 1.00023, .99978, .99966, 1, 1.00065, 1.00045, 1.00019, .99973, .99973, .99924, 1, 1, .96499, 1, 1.00055, .99973, 1.00008, 1.00027, 1, .9997, .99995, 1.00023, .99933, 1.00019, 1.00015, 1.00031, .99924, 1.00023, .99973, 1.00023, 1.00031, 1.00001, .99928, 1.00029, 1.00092, 1.00035, 1.00001, 1.0006, 1.0006, 1, .99988, .99975, 1, 1.00082, .99561, .9996, 1.00035, 1.00001, .99962, 1.00001, 1.00092, .99964, 1.00001, .99963, .99999, 1.00035, 1.00035, 1.00082, .99962, .99999, .99977, 1.00022, 1.00035, 1.00001, .99977, 1.00026, .9996, .99967, 1.00001, 1.00034, 1.00074, 1.00054, 1.00053, 1.00063, .99971, .99962, 1.00035, .99975, .99977, .99973, 1.00043, .99953, 1.0007, .99915, .99973, 1.00008, .99892, 1.00073, 1.00073, 1.00114, .99915, 1.00073, .99955, .99973, 1.00092, .99973, 1, .99998, 1, 1.0003, 1, 1.00043, 1.00001, .99969, 1.0003, 1, 1.00035, 1.00001, .9995, 1, 1.00092, .99973, .99973, .99973, 1.0007, .9995, 1, .99924, 1.0006, .99924, .99972, 1.00062, .99973, 1.00114, 1.00073, 1, .99955, 1, 1, 1.00047, .99968, 1.00016, .99977, 1.00016, .99977, 1.00016, .99977, 1.00001, 1, 1, 1, .99973, 1, 1, .99955, .99924, .99924, .99924, .99924, .99998, .99998, .99998, .99973, .99973, .99972, 1, 1, 1.00267, .99999, .99998, .99998, 1, .99998, 1.66475, 1, .99973, .99973, 1.00023, .99973, .99971, .99925, 1.00023, 1, .99991, .99984, 1.00002, 1.00002, 1.00002, 1.00002, 1, 1, 1, 1, 1, 1, 1, .96329, 1, 1.20985, 1.39713, 1.00003, .8254, 1.00015, 1, 1.00035, 1.00027, 1.00031, 1.00031, .99915, 1.00031, 1.00031, .99999, 1.00003, .99999, .99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, .99999, 1, .99861, .99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, .95317, .99999, .99999, .99999, .99999, 1.40483, 1, .99977, 1.00054, 1, 1, .99953, .99962, 1.00042, .9995, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.HelveticaRegularMetrics = {
          lineHeight: 1.2,
          lineGap: .2
        };
      }, function (e, t) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.LiberationSansRegularWidths = t.LiberationSansRegularMapping = t.LiberationSansItalicWidths = t.LiberationSansItalicMapping = t.LiberationSansBoldWidths = t.LiberationSansBoldMapping = t.LiberationSansBoldItalicWidths = t.LiberationSansBoldItalicMapping = void 0;
        t.LiberationSansBoldWidths = [365, 0, 333, 278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584, 584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 556, 278, 333, 333, 365, 556, 834, 834, 834, 611, 722, 722, 722, 722, 722, 722, 1e3, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278, 278, 278, 611, 611, 611, 611, 611, 611, 611, 549, 611, 611, 611, 611, 611, 556, 611, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 719, 722, 611, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 611, 778, 611, 778, 611, 778, 611, 722, 611, 722, 611, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 785, 556, 556, 278, 722, 556, 556, 611, 278, 611, 278, 611, 385, 611, 479, 611, 278, 722, 611, 722, 611, 722, 611, 708, 723, 611, 778, 611, 778, 611, 778, 611, 1e3, 944, 722, 389, 722, 389, 722, 389, 667, 556, 667, 556, 667, 556, 667, 556, 611, 333, 611, 479, 611, 333, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 944, 778, 667, 556, 667, 611, 500, 611, 500, 611, 500, 278, 556, 722, 556, 1e3, 889, 778, 611, 667, 556, 611, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 465, 722, 333, 853, 906, 474, 825, 927, 838, 278, 722, 722, 601, 719, 667, 611, 722, 778, 278, 722, 667, 833, 722, 644, 778, 722, 667, 600, 611, 667, 821, 667, 809, 802, 278, 667, 615, 451, 611, 278, 582, 615, 610, 556, 606, 475, 460, 611, 541, 278, 558, 556, 612, 556, 445, 611, 766, 619, 520, 684, 446, 582, 715, 576, 753, 845, 278, 582, 611, 582, 845, 667, 669, 885, 567, 711, 667, 278, 276, 556, 1094, 1062, 875, 610, 722, 622, 719, 722, 719, 722, 567, 712, 667, 904, 626, 719, 719, 610, 702, 833, 722, 778, 719, 667, 722, 611, 622, 854, 667, 730, 703, 1005, 1019, 870, 979, 719, 711, 1031, 719, 556, 618, 615, 417, 635, 556, 709, 497, 615, 615, 500, 635, 740, 604, 611, 604, 611, 556, 490, 556, 875, 556, 615, 581, 833, 844, 729, 854, 615, 552, 854, 583, 556, 556, 611, 417, 552, 556, 278, 281, 278, 969, 906, 611, 500, 615, 556, 604, 778, 611, 487, 447, 944, 778, 944, 778, 944, 778, 667, 556, 333, 333, 556, 1e3, 1e3, 552, 278, 278, 278, 278, 500, 500, 500, 556, 556, 350, 1e3, 1e3, 240, 479, 333, 333, 604, 333, 167, 396, 556, 556, 1094, 556, 885, 489, 1115, 1e3, 768, 600, 834, 834, 834, 834, 1e3, 500, 1e3, 500, 1e3, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 722, 274, 549, 549, 583, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1e3, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 611, 611, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 333, 333, 333, 333, 333, 333, 333, 333];
        t.LiberationSansBoldMapping = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
        t.LiberationSansBoldItalicWidths = [365, 0, 333, 278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584, 584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 556, 278, 333, 333, 365, 556, 834, 834, 834, 611, 722, 722, 722, 722, 722, 722, 1e3, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278, 278, 278, 611, 611, 611, 611, 611, 611, 611, 549, 611, 611, 611, 611, 611, 556, 611, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 740, 722, 611, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 611, 778, 611, 778, 611, 778, 611, 722, 611, 722, 611, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 782, 556, 556, 278, 722, 556, 556, 611, 278, 611, 278, 611, 396, 611, 479, 611, 278, 722, 611, 722, 611, 722, 611, 708, 723, 611, 778, 611, 778, 611, 778, 611, 1e3, 944, 722, 389, 722, 389, 722, 389, 667, 556, 667, 556, 667, 556, 667, 556, 611, 333, 611, 479, 611, 333, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 944, 778, 667, 556, 667, 611, 500, 611, 500, 611, 500, 278, 556, 722, 556, 1e3, 889, 778, 611, 667, 556, 611, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 722, 333, 854, 906, 473, 844, 930, 847, 278, 722, 722, 610, 671, 667, 611, 722, 778, 278, 722, 667, 833, 722, 657, 778, 718, 667, 590, 611, 667, 822, 667, 829, 781, 278, 667, 620, 479, 611, 278, 591, 620, 621, 556, 610, 479, 492, 611, 558, 278, 566, 556, 603, 556, 450, 611, 712, 605, 532, 664, 409, 591, 704, 578, 773, 834, 278, 591, 611, 591, 834, 667, 667, 886, 614, 719, 667, 278, 278, 556, 1094, 1042, 854, 622, 719, 677, 719, 722, 708, 722, 614, 722, 667, 927, 643, 719, 719, 615, 687, 833, 722, 778, 719, 667, 722, 611, 677, 781, 667, 729, 708, 979, 989, 854, 1e3, 708, 719, 1042, 729, 556, 619, 604, 534, 618, 556, 736, 510, 611, 611, 507, 622, 740, 604, 611, 611, 611, 556, 889, 556, 885, 556, 646, 583, 889, 935, 707, 854, 594, 552, 865, 589, 556, 556, 611, 469, 563, 556, 278, 278, 278, 969, 906, 611, 507, 619, 556, 611, 778, 611, 575, 467, 944, 778, 944, 778, 944, 778, 667, 556, 333, 333, 556, 1e3, 1e3, 552, 278, 278, 278, 278, 500, 500, 500, 556, 556, 350, 1e3, 1e3, 240, 479, 333, 333, 604, 333, 167, 396, 556, 556, 1104, 556, 885, 516, 1146, 1e3, 768, 600, 834, 834, 834, 834, 999, 500, 1e3, 500, 1e3, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 722, 274, 549, 549, 583, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1e3, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 611, 611, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 333, 333, 333, 333, 333, 333, 333, 333];
        t.LiberationSansBoldItalicMapping = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
        t.LiberationSansItalicWidths = [365, 0, 333, 278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584, 584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 537, 278, 333, 333, 365, 556, 834, 834, 834, 611, 667, 667, 667, 667, 667, 667, 1e3, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278, 278, 278, 556, 556, 556, 556, 556, 556, 556, 549, 611, 556, 556, 556, 556, 500, 556, 500, 667, 556, 667, 556, 667, 556, 722, 500, 722, 500, 722, 500, 722, 500, 722, 625, 722, 556, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 556, 778, 556, 778, 556, 778, 556, 722, 556, 722, 556, 278, 278, 278, 278, 278, 278, 278, 222, 278, 278, 733, 444, 500, 222, 667, 500, 500, 556, 222, 556, 222, 556, 281, 556, 400, 556, 222, 722, 556, 722, 556, 722, 556, 615, 723, 556, 778, 556, 778, 556, 778, 556, 1e3, 944, 722, 333, 722, 333, 722, 333, 667, 500, 667, 500, 667, 500, 667, 500, 611, 278, 611, 354, 611, 278, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 944, 722, 667, 500, 667, 611, 500, 611, 500, 611, 500, 222, 556, 667, 556, 1e3, 889, 778, 611, 667, 500, 611, 278, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 667, 278, 789, 846, 389, 794, 865, 775, 222, 667, 667, 570, 671, 667, 611, 722, 778, 278, 667, 667, 833, 722, 648, 778, 725, 667, 600, 611, 667, 837, 667, 831, 761, 278, 667, 570, 439, 555, 222, 550, 570, 571, 500, 556, 439, 463, 555, 542, 222, 500, 492, 548, 500, 447, 556, 670, 573, 486, 603, 374, 550, 652, 546, 728, 779, 222, 550, 556, 550, 779, 667, 667, 843, 544, 708, 667, 278, 278, 500, 1066, 982, 844, 589, 715, 639, 724, 667, 651, 667, 544, 704, 667, 917, 614, 715, 715, 589, 686, 833, 722, 778, 725, 667, 722, 611, 639, 795, 667, 727, 673, 920, 923, 805, 886, 651, 694, 1022, 682, 556, 562, 522, 493, 553, 556, 688, 465, 556, 556, 472, 564, 686, 550, 556, 556, 556, 500, 833, 500, 835, 500, 572, 518, 830, 851, 621, 736, 526, 492, 752, 534, 556, 556, 556, 378, 496, 500, 222, 222, 222, 910, 828, 556, 472, 565, 500, 556, 778, 556, 492, 339, 944, 722, 944, 722, 944, 722, 667, 500, 333, 333, 556, 1e3, 1e3, 552, 222, 222, 222, 222, 333, 333, 333, 556, 556, 350, 1e3, 1e3, 188, 354, 333, 333, 500, 333, 167, 365, 556, 556, 1094, 556, 885, 323, 1083, 1e3, 768, 600, 834, 834, 834, 834, 1e3, 500, 998, 500, 1e3, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 719, 274, 549, 549, 584, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1e3, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 500, 500, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 294, 294, 324, 324, 316, 328, 398, 285];
        t.LiberationSansItalicMapping = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
        t.LiberationSansRegularWidths = [365, 0, 333, 278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584, 584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 537, 278, 333, 333, 365, 556, 834, 834, 834, 611, 667, 667, 667, 667, 667, 667, 1e3, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278, 278, 278, 556, 556, 556, 556, 556, 556, 556, 549, 611, 556, 556, 556, 556, 500, 556, 500, 667, 556, 667, 556, 667, 556, 722, 500, 722, 500, 722, 500, 722, 500, 722, 615, 722, 556, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 556, 778, 556, 778, 556, 778, 556, 722, 556, 722, 556, 278, 278, 278, 278, 278, 278, 278, 222, 278, 278, 735, 444, 500, 222, 667, 500, 500, 556, 222, 556, 222, 556, 292, 556, 334, 556, 222, 722, 556, 722, 556, 722, 556, 604, 723, 556, 778, 556, 778, 556, 778, 556, 1e3, 944, 722, 333, 722, 333, 722, 333, 667, 500, 667, 500, 667, 500, 667, 500, 611, 278, 611, 375, 611, 278, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 944, 722, 667, 500, 667, 611, 500, 611, 500, 611, 500, 222, 556, 667, 556, 1e3, 889, 778, 611, 667, 500, 611, 278, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 667, 278, 784, 838, 384, 774, 855, 752, 222, 667, 667, 551, 668, 667, 611, 722, 778, 278, 667, 668, 833, 722, 650, 778, 722, 667, 618, 611, 667, 798, 667, 835, 748, 278, 667, 578, 446, 556, 222, 547, 578, 575, 500, 557, 446, 441, 556, 556, 222, 500, 500, 576, 500, 448, 556, 690, 569, 482, 617, 395, 547, 648, 525, 713, 781, 222, 547, 556, 547, 781, 667, 667, 865, 542, 719, 667, 278, 278, 500, 1057, 1010, 854, 583, 722, 635, 719, 667, 656, 667, 542, 677, 667, 923, 604, 719, 719, 583, 656, 833, 722, 778, 719, 667, 722, 611, 635, 760, 667, 740, 667, 917, 938, 792, 885, 656, 719, 1010, 722, 556, 573, 531, 365, 583, 556, 669, 458, 559, 559, 438, 583, 688, 552, 556, 542, 556, 500, 458, 500, 823, 500, 573, 521, 802, 823, 625, 719, 521, 510, 750, 542, 556, 556, 556, 365, 510, 500, 222, 278, 222, 906, 812, 556, 438, 559, 500, 552, 778, 556, 489, 411, 944, 722, 944, 722, 944, 722, 667, 500, 333, 333, 556, 1e3, 1e3, 552, 222, 222, 222, 222, 333, 333, 333, 556, 556, 350, 1e3, 1e3, 188, 354, 333, 333, 500, 333, 167, 365, 556, 556, 1094, 556, 885, 323, 1073, 1e3, 768, 600, 834, 834, 834, 834, 1e3, 500, 1e3, 500, 1e3, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 719, 274, 549, 549, 583, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1e3, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 500, 500, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 294, 294, 324, 324, 316, 328, 398, 285];
        t.LiberationSansRegularMapping = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
      }, function (e, t) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.MyriadProRegularMetrics = t.MyriadProRegularFactors = t.MyriadProItalicMetrics = t.MyriadProItalicFactors = t.MyriadProBoldMetrics = t.MyriadProBoldItalicMetrics = t.MyriadProBoldItalicFactors = t.MyriadProBoldFactors = void 0;
        t.MyriadProBoldFactors = [1.36898, 1, 1, .72706, .80479, .83734, .98894, .99793, .9897, .93884, .86209, .94292, .94292, 1.16661, 1.02058, .93582, .96694, .93582, 1.19137, .99793, .99793, .99793, .99793, .99793, .99793, .99793, .99793, .99793, .99793, .78076, .78076, 1.02058, 1.02058, 1.02058, .72851, .78966, .90838, .83637, .82391, .96376, .80061, .86275, .8768, .95407, 1.0258, .73901, .85022, .83655, 1.0156, .95546, .92179, .87107, .92179, .82114, .8096, .89713, .94438, .95353, .94083, .91905, .90406, .9446, .94292, 1.18777, .94292, 1.02058, .89903, .90088, .94938, .97898, .81093, .97571, .94938, 1.024, .9577, .95933, .98621, 1.0474, .97455, .98981, .9672, .95933, .9446, .97898, .97407, .97646, .78036, 1.10208, .95442, .95298, .97579, .9332, .94039, .938, .80687, 1.01149, .80687, 1.02058, .80479, .99793, .99793, .99793, .99793, 1.01149, 1.00872, .90088, .91882, 1.0213, .8361, 1.02058, .62295, .54324, .89022, 1.08595, 1, 1, .90088, 1, .97455, .93582, .90088, 1, 1.05686, .8361, .99642, .99642, .99642, .72851, .90838, .90838, .90838, .90838, .90838, .90838, .868, .82391, .80061, .80061, .80061, .80061, 1.0258, 1.0258, 1.0258, 1.0258, .97484, .95546, .92179, .92179, .92179, .92179, .92179, 1.02058, .92179, .94438, .94438, .94438, .94438, .90406, .86958, .98225, .94938, .94938, .94938, .94938, .94938, .94938, .9031, .81093, .94938, .94938, .94938, .94938, .98621, .98621, .98621, .98621, .93969, .95933, .9446, .9446, .9446, .9446, .9446, 1.08595, .9446, .95442, .95442, .95442, .95442, .94039, .97898, .94039, .90838, .94938, .90838, .94938, .90838, .94938, .82391, .81093, .82391, .81093, .82391, .81093, .82391, .81093, .96376, .84313, .97484, .97571, .80061, .94938, .80061, .94938, .80061, .94938, .80061, .94938, .80061, .94938, .8768, .9577, .8768, .9577, .8768, .9577, 1, 1, .95407, .95933, .97069, .95933, 1.0258, .98621, 1.0258, .98621, 1.0258, .98621, 1.0258, .98621, 1.0258, .98621, .887, 1.01591, .73901, 1.0474, 1, 1, .97455, .83655, .98981, 1, 1, .83655, .73977, .83655, .73903, .84638, 1.033, .95546, .95933, 1, 1, .95546, .95933, .8271, .95417, .95933, .92179, .9446, .92179, .9446, .92179, .9446, .936, .91964, .82114, .97646, 1, 1, .82114, .97646, .8096, .78036, .8096, .78036, 1, 1, .8096, .78036, 1, 1, .89713, .77452, .89713, 1.10208, .94438, .95442, .94438, .95442, .94438, .95442, .94438, .95442, .94438, .95442, .94438, .95442, .94083, .97579, .90406, .94039, .90406, .9446, .938, .9446, .938, .9446, .938, 1, .99793, .90838, .94938, .868, .9031, .92179, .9446, 1, 1, .89713, 1.10208, .90088, .90088, .90088, .90088, .90088, .90088, .90088, .90088, .90088, .90989, .9358, .91945, .83181, .75261, .87992, .82976, .96034, .83689, .97268, 1.0078, .90838, .83637, .8019, .90157, .80061, .9446, .95407, .92436, 1.0258, .85022, .97153, 1.0156, .95546, .89192, .92179, .92361, .87107, .96318, .89713, .93704, .95638, .91905, .91709, .92796, 1.0258, .93704, .94836, 1.0373, .95933, 1.0078, .95871, .94836, .96174, .92601, .9498, .98607, .95776, .95933, 1.05453, 1.0078, .98275, .9314, .95617, .91701, 1.05993, .9446, .78367, .9553, 1, .86832, 1.0128, .95871, .99394, .87548, .96361, .86774, 1.0078, .95871, .9446, .95871, .86774, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .94083, .97579, .94083, .97579, .94083, .97579, .90406, .94039, .96694, 1, .89903, 1, 1, 1, .93582, .93582, .93582, 1, .908, .908, .918, .94219, .94219, .96544, 1, 1.285, 1, 1, .81079, .81079, 1, 1, .74854, 1, 1, 1, 1, .99793, 1, 1, 1, .65, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.17173, 1, .80535, .76169, 1.02058, 1.0732, 1.05486, 1, 1, 1.30692, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.16161, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.MyriadProBoldMetrics = {
          lineHeight: 1.2,
          lineGap: .2
        };
        t.MyriadProBoldItalicFactors = [1.36898, 1, 1, .66227, .80779, .81625, .97276, .97276, .97733, .92222, .83266, .94292, .94292, 1.16148, 1.02058, .93582, .96694, .93582, 1.17337, .97276, .97276, .97276, .97276, .97276, .97276, .97276, .97276, .97276, .97276, .78076, .78076, 1.02058, 1.02058, 1.02058, .71541, .76813, .85576, .80591, .80729, .94299, .77512, .83655, .86523, .92222, .98621, .71743, .81698, .79726, .98558, .92222, .90637, .83809, .90637, .80729, .76463, .86275, .90699, .91605, .9154, .85308, .85458, .90531, .94292, 1.21296, .94292, 1.02058, .89903, 1.18616, .99613, .91677, .78216, .91677, .90083, .98796, .9135, .92168, .95381, .98981, .95298, .95381, .93459, .92168, .91513, .92004, .91677, .95077, .748, 1.04502, .91677, .92061, .94236, .89544, .89364, .9, .80687, .8578, .80687, 1.02058, .80779, .97276, .97276, .97276, .97276, .8578, .99973, 1.18616, .91339, 1.08074, .82891, 1.02058, .55509, .71526, .89022, 1.08595, 1, 1, 1.18616, 1, .96736, .93582, 1.18616, 1, 1.04864, .82711, .99043, .99043, .99043, .71541, .85576, .85576, .85576, .85576, .85576, .85576, .845, .80729, .77512, .77512, .77512, .77512, .98621, .98621, .98621, .98621, .95961, .92222, .90637, .90637, .90637, .90637, .90637, 1.02058, .90251, .90699, .90699, .90699, .90699, .85458, .83659, .94951, .99613, .99613, .99613, .99613, .99613, .99613, .85811, .78216, .90083, .90083, .90083, .90083, .95381, .95381, .95381, .95381, .9135, .92168, .91513, .91513, .91513, .91513, .91513, 1.08595, .91677, .91677, .91677, .91677, .91677, .89364, .92332, .89364, .85576, .99613, .85576, .99613, .85576, .99613, .80729, .78216, .80729, .78216, .80729, .78216, .80729, .78216, .94299, .76783, .95961, .91677, .77512, .90083, .77512, .90083, .77512, .90083, .77512, .90083, .77512, .90083, .86523, .9135, .86523, .9135, .86523, .9135, 1, 1, .92222, .92168, .92222, .92168, .98621, .95381, .98621, .95381, .98621, .95381, .98621, .95381, .98621, .95381, .86036, .97096, .71743, .98981, 1, 1, .95298, .79726, .95381, 1, 1, .79726, .6894, .79726, .74321, .81691, 1.0006, .92222, .92168, 1, 1, .92222, .92168, .79464, .92098, .92168, .90637, .91513, .90637, .91513, .90637, .91513, .909, .87514, .80729, .95077, 1, 1, .80729, .95077, .76463, .748, .76463, .748, 1, 1, .76463, .748, 1, 1, .86275, .72651, .86275, 1.04502, .90699, .91677, .90699, .91677, .90699, .91677, .90699, .91677, .90699, .91677, .90699, .91677, .9154, .94236, .85458, .89364, .85458, .90531, .9, .90531, .9, .90531, .9, 1, .97276, .85576, .99613, .845, .85811, .90251, .91677, 1, 1, .86275, 1.04502, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.00899, 1.30628, .85576, .80178, .66862, .7927, .69323, .88127, .72459, .89711, .95381, .85576, .80591, .7805, .94729, .77512, .90531, .92222, .90637, .98621, .81698, .92655, .98558, .92222, .85359, .90637, .90976, .83809, .94523, .86275, .83509, .93157, .85308, .83392, .92346, .98621, .83509, .92886, .91324, .92168, .95381, .90646, .92886, .90557, .86847, .90276, .91324, .86842, .92168, .99531, .95381, .9224, .85408, .92699, .86847, 1.0051, .91513, .80487, .93481, 1, .88159, 1.05214, .90646, .97355, .81539, .89398, .85923, .95381, .90646, .91513, .90646, .85923, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .9154, .94236, .9154, .94236, .9154, .94236, .85458, .89364, .96694, 1, .89903, 1, 1, 1, .91782, .91782, .91782, 1, .896, .896, .896, .9332, .9332, .95973, 1, 1.26, 1, 1, .80479, .80178, 1, 1, .85633, 1, 1, 1, 1, .97276, 1, 1, 1, .698, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.14542, 1, .79199, .78694, 1.02058, 1.03493, 1.05486, 1, 1, 1.23026, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.20006, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.MyriadProBoldItalicMetrics = {
          lineHeight: 1.2,
          lineGap: .2
        };
        t.MyriadProItalicFactors = [1.36898, 1, 1, .65507, .84943, .85639, .88465, .88465, .86936, .88307, .86948, .85283, .85283, 1.06383, 1.02058, .75945, .9219, .75945, 1.17337, .88465, .88465, .88465, .88465, .88465, .88465, .88465, .88465, .88465, .88465, .75945, .75945, 1.02058, 1.02058, 1.02058, .69046, .70926, .85158, .77812, .76852, .89591, .70466, .76125, .80094, .86822, .83864, .728, .77212, .79475, .93637, .87514, .8588, .76013, .8588, .72421, .69866, .77598, .85991, .80811, .87832, .78112, .77512, .8562, 1.0222, 1.18417, 1.0222, 1.27014, .89903, 1.15012, .93859, .94399, .846, .94399, .81453, 1.0186, .94219, .96017, 1.03075, 1.02175, .912, 1.03075, .96998, .96017, .93859, .94399, .94399, .95493, .746, 1.12658, .94578, .91, .979, .882, .882, .83, .85034, .83537, .85034, 1.02058, .70869, .88465, .88465, .88465, .88465, .83537, .90083, 1.15012, .9161, .94565, .73541, 1.02058, .53609, .69353, .79519, 1.08595, 1, 1, 1.15012, 1, .91974, .75945, 1.15012, 1, .9446, .73361, .9005, .9005, .9005, .62864, .85158, .85158, .85158, .85158, .85158, .85158, .773, .76852, .70466, .70466, .70466, .70466, .83864, .83864, .83864, .83864, .90561, .87514, .8588, .8588, .8588, .8588, .8588, 1.02058, .85751, .85991, .85991, .85991, .85991, .77512, .76013, .88075, .93859, .93859, .93859, .93859, .93859, .93859, .8075, .846, .81453, .81453, .81453, .81453, .82424, .82424, .82424, .82424, .9278, .96017, .93859, .93859, .93859, .93859, .93859, 1.08595, .8562, .94578, .94578, .94578, .94578, .882, .94578, .882, .85158, .93859, .85158, .93859, .85158, .93859, .76852, .846, .76852, .846, .76852, .846, .76852, .846, .89591, .8544, .90561, .94399, .70466, .81453, .70466, .81453, .70466, .81453, .70466, .81453, .70466, .81453, .80094, .94219, .80094, .94219, .80094, .94219, 1, 1, .86822, .96017, .86822, .96017, .83864, .82424, .83864, .82424, .83864, .82424, .83864, 1.03075, .83864, .82424, .81402, 1.02738, .728, 1.02175, 1, 1, .912, .79475, 1.03075, 1, 1, .79475, .83911, .79475, .66266, .80553, 1.06676, .87514, .96017, 1, 1, .87514, .96017, .86865, .87396, .96017, .8588, .93859, .8588, .93859, .8588, .93859, .867, .84759, .72421, .95493, 1, 1, .72421, .95493, .69866, .746, .69866, .746, 1, 1, .69866, .746, 1, 1, .77598, .88417, .77598, 1.12658, .85991, .94578, .85991, .94578, .85991, .94578, .85991, .94578, .85991, .94578, .85991, .94578, .87832, .979, .77512, .882, .77512, .8562, .83, .8562, .83, .8562, .83, 1, .88465, .85158, .93859, .773, .8075, .85751, .8562, 1, 1, .77598, 1.12658, 1.15012, 1.15012, 1.15012, 1.15012, 1.15012, 1.15313, 1.15012, 1.15012, 1.15012, 1.08106, 1.03901, .85158, .77025, .62264, .7646, .65351, .86026, .69461, .89947, 1.03075, .85158, .77812, .76449, .88836, .70466, .8562, .86822, .8588, .83864, .77212, .85308, .93637, .87514, .82352, .8588, .85701, .76013, .89058, .77598, .8156, .82565, .78112, .77899, .89386, .83864, .8156, .9486, .92388, .96186, 1.03075, .91123, .9486, .93298, .878, .93942, .92388, .84596, .96186, .95119, 1.03075, .922, .88787, .95829, .88, .93559, .93859, .78815, .93758, 1, .89217, 1.03737, .91123, .93969, .77487, .85769, .86799, 1.03075, .91123, .93859, .91123, .86799, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .87832, .979, .87832, .979, .87832, .979, .77512, .882, .9219, 1, .89903, 1, 1, 1, .87321, .87321, .87321, 1, 1.027, 1.027, 1.027, .86847, .86847, .79121, 1, 1.124, 1, 1, .73572, .73572, 1, 1, .85034, 1, 1, 1, 1, .88465, 1, 1, 1, .669, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.04828, 1, .74948, .75187, 1.02058, .98391, 1.02119, 1, 1, 1.06233, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05233, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.MyriadProItalicMetrics = {
          lineHeight: 1.2,
          lineGap: .2
        };
        t.MyriadProRegularFactors = [1.36898, 1, 1, .76305, .82784, .94935, .89364, .92241, .89073, .90706, .98472, .85283, .85283, 1.0664, 1.02058, .74505, .9219, .74505, 1.23456, .92241, .92241, .92241, .92241, .92241, .92241, .92241, .92241, .92241, .92241, .74505, .74505, 1.02058, 1.02058, 1.02058, .73002, .72601, .91755, .8126, .80314, .92222, .73764, .79726, .83051, .90284, .86023, .74, .8126, .84869, .96518, .91115, .8858, .79761, .8858, .74498, .73914, .81363, .89591, .83659, .89633, .85608, .8111, .90531, 1.0222, 1.22736, 1.0222, 1.27014, .89903, .90088, .86667, 1.0231, .896, 1.01411, .90083, 1.05099, 1.00512, .99793, 1.05326, 1.09377, .938, 1.06226, 1.00119, .99793, .98714, 1.0231, 1.01231, .98196, .792, 1.19137, .99074, .962, 1.01915, .926, .942, .856, .85034, .92006, .85034, 1.02058, .69067, .92241, .92241, .92241, .92241, .92006, .9332, .90088, .91882, .93484, .75339, 1.02058, .56866, .54324, .79519, 1.08595, 1, 1, .90088, 1, .95325, .74505, .90088, 1, .97198, .75339, .91009, .91009, .91009, .66466, .91755, .91755, .91755, .91755, .91755, .91755, .788, .80314, .73764, .73764, .73764, .73764, .86023, .86023, .86023, .86023, .92915, .91115, .8858, .8858, .8858, .8858, .8858, 1.02058, .8858, .89591, .89591, .89591, .89591, .8111, .79611, .89713, .86667, .86667, .86667, .86667, .86667, .86667, .86936, .896, .90083, .90083, .90083, .90083, .84224, .84224, .84224, .84224, .97276, .99793, .98714, .98714, .98714, .98714, .98714, 1.08595, .89876, .99074, .99074, .99074, .99074, .942, 1.0231, .942, .91755, .86667, .91755, .86667, .91755, .86667, .80314, .896, .80314, .896, .80314, .896, .80314, .896, .92222, .93372, .92915, 1.01411, .73764, .90083, .73764, .90083, .73764, .90083, .73764, .90083, .73764, .90083, .83051, 1.00512, .83051, 1.00512, .83051, 1.00512, 1, 1, .90284, .99793, .90976, .99793, .86023, .84224, .86023, .84224, .86023, .84224, .86023, 1.05326, .86023, .84224, .82873, 1.07469, .74, 1.09377, 1, 1, .938, .84869, 1.06226, 1, 1, .84869, .83704, .84869, .81441, .85588, 1.08927, .91115, .99793, 1, 1, .91115, .99793, .91887, .90991, .99793, .8858, .98714, .8858, .98714, .8858, .98714, .894, .91434, .74498, .98196, 1, 1, .74498, .98196, .73914, .792, .73914, .792, 1, 1, .73914, .792, 1, 1, .81363, .904, .81363, 1.19137, .89591, .99074, .89591, .99074, .89591, .99074, .89591, .99074, .89591, .99074, .89591, .99074, .89633, 1.01915, .8111, .942, .8111, .90531, .856, .90531, .856, .90531, .856, 1, .92241, .91755, .86667, .788, .86936, .8858, .89876, 1, 1, .81363, 1.19137, .90088, .90088, .90088, .90088, .90088, .90088, .90088, .90088, .90088, .90388, 1.03901, .92138, .78105, .7154, .86169, .80513, .94007, .82528, .98612, 1.06226, .91755, .8126, .81884, .92819, .73764, .90531, .90284, .8858, .86023, .8126, .91172, .96518, .91115, .83089, .8858, .87791, .79761, .89297, .81363, .88157, .89992, .85608, .81992, .94307, .86023, .88157, .95308, .98699, .99793, 1.06226, .95817, .95308, .97358, .928, .98088, .98699, .92761, .99793, .96017, 1.06226, .986, .944, .95978, .938, .96705, .98714, .80442, .98972, 1, .89762, 1.04552, .95817, .99007, .87064, .91879, .88888, 1.06226, .95817, .98714, .95817, .88888, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .89633, 1.01915, .89633, 1.01915, .89633, 1.01915, .8111, .942, .9219, 1, .89903, 1, 1, 1, .93173, .93173, .93173, 1, 1.06304, 1.06304, 1.06904, .89903, .89903, .80549, 1, 1.156, 1, 1, .76575, .76575, 1, 1, .72458, 1, 1, 1, 1, .92241, 1, 1, 1, .619, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.07257, 1, .74705, .71119, 1.02058, 1.024, 1.02119, 1, 1, 1.1536, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05638, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.MyriadProRegularMetrics = {
          lineHeight: 1.2,
          lineGap: .2
        };
      }, function (e, t) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.SegoeuiRegularMetrics = t.SegoeuiRegularFactors = t.SegoeuiItalicMetrics = t.SegoeuiItalicFactors = t.SegoeuiBoldMetrics = t.SegoeuiBoldItalicMetrics = t.SegoeuiBoldItalicFactors = t.SegoeuiBoldFactors = void 0;
        t.SegoeuiBoldFactors = [1.76738, 1, 1, .99297, .9824, 1.04016, 1.06497, 1.03424, .97529, 1.17647, 1.23203, 1.1085, 1.1085, 1.16939, 1.2107, .9754, 1.21408, .9754, 1.59578, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, .81378, .81378, 1.2107, 1.2107, 1.2107, .71703, .97847, .97363, .88776, .8641, 1.02096, .79795, .85132, .914, 1.06085, 1.1406, .8007, .89858, .83693, 1.14889, 1.09398, .97489, .92094, .97489, .90399, .84041, .95923, 1.00135, 1, 1.06467, .98243, .90996, .99361, 1.1085, 1.56942, 1.1085, 1.2107, .74627, .94282, .96752, 1.01519, .86304, 1.01359, .97278, 1.15103, 1.01359, .98561, 1.02285, 1.02285, 1.00527, 1.02285, 1.0302, .99041, 1.0008, 1.01519, 1.01359, 1.02258, .79104, 1.16862, .99041, .97454, 1.02511, .99298, .96752, .95801, .94856, 1.16579, .94856, 1.2107, .9824, 1.03424, 1.03424, 1, 1.03424, 1.16579, .8727, 1.3871, 1.18622, 1.10818, 1.04478, 1.2107, 1.18622, .75155, .94994, 1.28826, 1.21408, 1.21408, .91056, 1, .91572, .9754, .64663, 1.18328, 1.24866, 1.04478, 1.14169, 1.15749, 1.17389, .71703, .97363, .97363, .97363, .97363, .97363, .97363, .93506, .8641, .79795, .79795, .79795, .79795, 1.1406, 1.1406, 1.1406, 1.1406, 1.02096, 1.09398, .97426, .97426, .97426, .97426, .97426, 1.2107, .97489, 1.00135, 1.00135, 1.00135, 1.00135, .90996, .92094, 1.02798, .96752, .96752, .96752, .96752, .96752, .96752, .93136, .86304, .97278, .97278, .97278, .97278, 1.02285, 1.02285, 1.02285, 1.02285, .97122, .99041, 1, 1, 1, 1, 1, 1.28826, 1.0008, .99041, .99041, .99041, .99041, .96752, 1.01519, .96752, .97363, .96752, .97363, .96752, .97363, .96752, .8641, .86304, .8641, .86304, .8641, .86304, .8641, .86304, 1.02096, 1.03057, 1.02096, 1.03517, .79795, .97278, .79795, .97278, .79795, .97278, .79795, .97278, .79795, .97278, .914, 1.01359, .914, 1.01359, .914, 1.01359, 1, 1, 1.06085, .98561, 1.06085, 1.00879, 1.1406, 1.02285, 1.1406, 1.02285, 1.1406, 1.02285, 1.1406, 1.02285, 1.1406, 1.02285, .97138, 1.08692, .8007, 1.02285, 1, 1, 1.00527, .83693, 1.02285, 1, 1, .83693, .9455, .83693, .90418, .83693, 1.13005, 1.09398, .99041, 1, 1, 1.09398, .99041, .96692, 1.09251, .99041, .97489, 1.0008, .97489, 1.0008, .97489, 1.0008, .93994, .97931, .90399, 1.02258, 1, 1, .90399, 1.02258, .84041, .79104, .84041, .79104, .84041, .79104, .84041, .79104, 1, 1, .95923, 1.07034, .95923, 1.16862, 1.00135, .99041, 1.00135, .99041, 1.00135, .99041, 1.00135, .99041, 1.00135, .99041, 1.00135, .99041, 1.06467, 1.02511, .90996, .96752, .90996, .99361, .95801, .99361, .95801, .99361, .95801, 1.07733, 1.03424, .97363, .96752, .93506, .93136, .97489, 1.0008, 1, 1, .95923, 1.16862, 1.15103, 1.15103, 1.01173, 1.03959, .75953, .81378, .79912, 1.15103, 1.21994, .95161, .87815, 1.01149, .81525, .7676, .98167, 1.01134, 1.02546, .84097, 1.03089, 1.18102, .97363, .88776, .85134, .97826, .79795, .99361, 1.06085, .97489, 1.1406, .89858, 1.0388, 1.14889, 1.09398, .86039, .97489, 1.0595, .92094, .94793, .95923, .90996, .99346, .98243, 1.02112, .95493, 1.1406, .90996, 1.03574, 1.02597, 1.0008, 1.18102, 1.06628, 1.03574, 1.0192, 1.01932, 1.00886, .97531, 1.0106, 1.0008, 1.13189, 1.18102, 1.02277, .98683, 1.0016, .99561, 1.07237, 1.0008, .90434, .99921, .93803, .8965, 1.23085, 1.06628, 1.04983, .96268, 1.0499, .98439, 1.18102, 1.06628, 1.0008, 1.06628, .98439, .79795, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.09466, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .97278, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.02065, 1, 1, 1, 1, 1, 1, 1.06467, 1.02511, 1.06467, 1.02511, 1.06467, 1.02511, .90996, .96752, 1, 1.21408, .89903, 1, 1, .75155, 1.04394, 1.04394, 1.04394, 1.04394, .98633, .98633, .98633, .73047, .73047, 1.20642, .91211, 1.25635, 1.222, 1.02956, 1.03372, 1.03372, .96039, 1.24633, 1, 1.12454, .93503, 1.03424, 1.19687, 1.03424, 1, 1, 1, .771, 1, 1, 1.15749, 1.15749, 1.15749, 1.10948, .86279, .94434, .86279, .94434, .86182, 1, 1, 1.16897, 1, .96085, .90137, 1.2107, 1.18416, 1.13973, .69825, .9716, 2.10339, 1.29004, 1.29004, 1.21172, 1.29004, 1.29004, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, .99862, .99862, 1, .87025, .87025, .87025, .87025, 1.18874, 1.42603, 1, 1.42603, 1.42603, .99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.09193, 1.09193, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.SegoeuiBoldMetrics = {
          lineHeight: 1.33008,
          lineGap: 0
        };
        t.SegoeuiBoldItalicFactors = [1.76738, 1, 1, .98946, 1.03959, 1.04016, 1.02809, 1.036, .97639, 1.10953, 1.23203, 1.11144, 1.11144, 1.16939, 1.21237, .9754, 1.21261, .9754, 1.59754, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, .81378, .81378, 1.21237, 1.21237, 1.21237, .73541, .97847, .97363, .89723, .87897, 1.0426, .79429, .85292, .91149, 1.05815, 1.1406, .79631, .90128, .83853, 1.04396, 1.10615, .97552, .94436, .97552, .88641, .80527, .96083, 1.00135, 1, 1.06777, .9817, .91142, .99361, 1.11144, 1.57293, 1.11144, 1.21237, .74627, 1.31818, 1.06585, .97042, .83055, .97042, .93503, 1.1261, .97042, .97922, 1.14236, .94552, 1.01054, 1.14236, 1.02471, .97922, .94165, .97042, .97042, 1.0276, .78929, 1.1261, .97922, .95874, 1.02197, .98507, .96752, .97168, .95107, 1.16579, .95107, 1.21237, 1.03959, 1.036, 1.036, 1, 1.036, 1.16579, .87357, 1.31818, 1.18754, 1.26781, 1.05356, 1.21237, 1.18622, .79487, .94994, 1.29004, 1.24047, 1.24047, 1.31818, 1, .91484, .9754, 1.31818, 1.1349, 1.24866, 1.05356, 1.13934, 1.15574, 1.17389, .73541, .97363, .97363, .97363, .97363, .97363, .97363, .94385, .87897, .79429, .79429, .79429, .79429, 1.1406, 1.1406, 1.1406, 1.1406, 1.0426, 1.10615, .97552, .97552, .97552, .97552, .97552, 1.21237, .97552, 1.00135, 1.00135, 1.00135, 1.00135, .91142, .94436, .98721, 1.06585, 1.06585, 1.06585, 1.06585, 1.06585, 1.06585, .96705, .83055, .93503, .93503, .93503, .93503, 1.14236, 1.14236, 1.14236, 1.14236, .93125, .97922, .94165, .94165, .94165, .94165, .94165, 1.29004, .94165, .97922, .97922, .97922, .97922, .96752, .97042, .96752, .97363, 1.06585, .97363, 1.06585, .97363, 1.06585, .87897, .83055, .87897, .83055, .87897, .83055, .87897, .83055, 1.0426, 1.0033, 1.0426, .97042, .79429, .93503, .79429, .93503, .79429, .93503, .79429, .93503, .79429, .93503, .91149, .97042, .91149, .97042, .91149, .97042, 1, 1, 1.05815, .97922, 1.05815, .97922, 1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236, .97441, 1.04302, .79631, 1.01582, 1, 1, 1.01054, .83853, 1.14236, 1, 1, .83853, 1.09125, .83853, .90418, .83853, 1.19508, 1.10615, .97922, 1, 1, 1.10615, .97922, 1.01034, 1.10466, .97922, .97552, .94165, .97552, .94165, .97552, .94165, .91602, .91981, .88641, 1.0276, 1, 1, .88641, 1.0276, .80527, .78929, .80527, .78929, .80527, .78929, .80527, .78929, 1, 1, .96083, 1.05403, .95923, 1.16862, 1.00135, .97922, 1.00135, .97922, 1.00135, .97922, 1.00135, .97922, 1.00135, .97922, 1.00135, .97922, 1.06777, 1.02197, .91142, .96752, .91142, .99361, .97168, .99361, .97168, .99361, .97168, 1.23199, 1.036, .97363, 1.06585, .94385, .96705, .97552, .94165, 1, 1, .96083, 1.1261, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, .95161, 1.27126, 1.00811, .83284, .77702, .99137, .95253, 1.0347, .86142, 1.07205, 1.14236, .97363, .89723, .86869, 1.09818, .79429, .99361, 1.05815, .97552, 1.1406, .90128, 1.06662, 1.04396, 1.10615, .84918, .97552, 1.04694, .94436, .98015, .96083, .91142, 1.00356, .9817, 1.01945, .98999, 1.1406, .91142, 1.04961, .9898, 1.00639, 1.14236, 1.07514, 1.04961, .99607, 1.02897, 1.008, .9898, .95134, 1.00639, 1.11121, 1.14236, 1.00518, .97981, 1.02186, 1, 1.08578, .94165, .99314, .98387, .93028, .93377, 1.35125, 1.07514, 1.10687, .93491, 1.04232, 1.00351, 1.14236, 1.07514, .94165, 1.07514, 1.00351, .79429, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.09097, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .93503, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .96609, 1, 1, 1, 1, 1, 1, 1.06777, 1.02197, 1.06777, 1.02197, 1.06777, 1.02197, .91142, .96752, 1, 1.21261, .89903, 1, 1, .75155, 1.04745, 1.04745, 1.04745, 1.04394, .98633, .98633, .98633, .72959, .72959, 1.20502, .91406, 1.26514, 1.222, 1.02956, 1.03372, 1.03372, .96039, 1.24633, 1, 1.09125, .93327, 1.03336, 1.16541, 1.036, 1, 1, 1, .771, 1, 1, 1.15574, 1.15574, 1.15574, 1.15574, .86364, .94434, .86279, .94434, .86224, 1, 1, 1.16798, 1, .96085, .90068, 1.21237, 1.18416, 1.13904, .69825, .9716, 2.10339, 1.29004, 1.29004, 1.21339, 1.29004, 1.29004, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, .99862, .99862, 1, .87025, .87025, .87025, .87025, 1.18775, 1.42603, 1, 1.42603, 1.42603, .99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.13269, 1.13269, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.SegoeuiBoldItalicMetrics = {
          lineHeight: 1.33008,
          lineGap: 0
        };
        t.SegoeuiItalicFactors = [1.76738, 1, 1, .98946, 1.14763, 1.05365, 1.06234, .96927, .92586, 1.15373, 1.18414, .91349, .91349, 1.07403, 1.17308, .78383, 1.20088, .78383, 1.42531, .96927, .96927, .96927, .96927, .96927, .96927, .96927, .96927, .96927, .96927, .78383, .78383, 1.17308, 1.17308, 1.17308, .77349, .94565, .94729, .85944, .88506, .9858, .74817, .80016, .88449, .98039, .95782, .69238, .89898, .83231, .98183, 1.03989, .96924, .86237, .96924, .80595, .74524, .86091, .95402, .94143, .98448, .8858, .83089, .93285, 1.0949, 1.39016, 1.0949, 1.45994, .74627, 1.04839, .97454, .97454, .87207, .97454, .87533, 1.06151, .97454, 1.00176, 1.16484, 1.08132, .98047, 1.16484, 1.02989, 1.01054, .96225, .97454, .97454, 1.06598, .79004, 1.16344, 1.00351, .94629, .9973, .91016, .96777, .9043, .91082, .92481, .91082, 1.17308, .95748, .96927, .96927, 1, .96927, .92481, .80597, 1.04839, 1.23393, 1.1781, .9245, 1.17308, 1.20808, .63218, .94261, 1.24822, 1.09971, 1.09971, 1.04839, 1, .85273, .78032, 1.04839, 1.09971, 1.22326, .9245, 1.09836, 1.13525, 1.15222, .70424, .94729, .94729, .94729, .94729, .94729, .94729, .85498, .88506, .74817, .74817, .74817, .74817, .95782, .95782, .95782, .95782, .9858, 1.03989, .96924, .96924, .96924, .96924, .96924, 1.17308, .96924, .95402, .95402, .95402, .95402, .83089, .86237, .88409, .97454, .97454, .97454, .97454, .97454, .97454, .92916, .87207, .87533, .87533, .87533, .87533, .93146, .93146, .93146, .93146, .93854, 1.01054, .96225, .96225, .96225, .96225, .96225, 1.24822, .8761, 1.00351, 1.00351, 1.00351, 1.00351, .96777, .97454, .96777, .94729, .97454, .94729, .97454, .94729, .97454, .88506, .87207, .88506, .87207, .88506, .87207, .88506, .87207, .9858, .95391, .9858, .97454, .74817, .87533, .74817, .87533, .74817, .87533, .74817, .87533, .74817, .87533, .88449, .97454, .88449, .97454, .88449, .97454, 1, 1, .98039, 1.00176, .98039, 1.00176, .95782, .93146, .95782, .93146, .95782, .93146, .95782, 1.16484, .95782, .93146, .84421, 1.12761, .69238, 1.08132, 1, 1, .98047, .83231, 1.16484, 1, 1, .84723, 1.04861, .84723, .78755, .83231, 1.23736, 1.03989, 1.01054, 1, 1, 1.03989, 1.01054, .9857, 1.03849, 1.01054, .96924, .96225, .96924, .96225, .96924, .96225, .92383, .90171, .80595, 1.06598, 1, 1, .80595, 1.06598, .74524, .79004, .74524, .79004, .74524, .79004, .74524, .79004, 1, 1, .86091, 1.02759, .85771, 1.16344, .95402, 1.00351, .95402, 1.00351, .95402, 1.00351, .95402, 1.00351, .95402, 1.00351, .95402, 1.00351, .98448, .9973, .83089, .96777, .83089, .93285, .9043, .93285, .9043, .93285, .9043, 1.31868, .96927, .94729, .97454, .85498, .92916, .96924, .8761, 1, 1, .86091, 1.16344, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, .81965, .81965, .94729, .78032, .71022, .90883, .84171, .99877, .77596, 1.05734, 1.2, .94729, .85944, .82791, .9607, .74817, .93285, .98039, .96924, .95782, .89898, .98316, .98183, 1.03989, .78614, .96924, .97642, .86237, .86075, .86091, .83089, .90082, .8858, .97296, 1.01284, .95782, .83089, 1.0976, 1.04, 1.03342, 1.2, 1.0675, 1.0976, .98205, 1.03809, 1.05097, 1.04, .95364, 1.03342, 1.05401, 1.2, 1.02148, 1.0119, 1.04724, 1.0127, 1.02732, .96225, .8965, .97783, .93574, .94818, 1.30679, 1.0675, 1.11826, .99821, 1.0557, 1.0326, 1.2, 1.0675, .96225, 1.0675, 1.0326, .74817, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.03754, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .87533, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .98705, 1, 1, 1, 1, 1, 1, .98448, .9973, .98448, .9973, .98448, .9973, .83089, .96777, 1, 1.20088, .89903, 1, 1, .75155, .94945, .94945, .94945, .94945, 1.12317, 1.12317, 1.12317, .67603, .67603, 1.15621, .73584, 1.21191, 1.22135, 1.06483, .94868, .94868, .95996, 1.24633, 1, 1.07497, .87709, .96927, 1.01473, .96927, 1, 1, 1, .77295, 1, 1, 1.09836, 1.09836, 1.09836, 1.01522, .86321, .94434, .8649, .94434, .86182, 1, 1, 1.083, 1, .91578, .86438, 1.17308, 1.18416, 1.14589, .69825, .97622, 1.96791, 1.24822, 1.24822, 1.17308, 1.24822, 1.24822, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, .99862, .99862, 1, .87025, .87025, .87025, .87025, 1.17984, 1.42603, 1, 1.42603, 1.42603, .99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.10742, 1.10742, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.SegoeuiItalicMetrics = {
          lineHeight: 1.33008,
          lineGap: 0
        };
        t.SegoeuiRegularFactors = [1.76738, 1, 1, .98594, 1.02285, 1.10454, 1.06234, .96927, .92037, 1.19985, 1.2046, .90616, .90616, 1.07152, 1.1714, .78032, 1.20088, .78032, 1.40246, .96927, .96927, .96927, .96927, .96927, .96927, .96927, .96927, .96927, .96927, .78032, .78032, 1.1714, 1.1714, 1.1714, .80597, .94084, .96706, .85944, .85734, .97093, .75842, .79936, .88198, .9831, .95782, .71387, .86969, .84636, 1.07796, 1.03584, .96924, .83968, .96924, .82826, .79649, .85771, .95132, .93119, .98965, .88433, .8287, .93365, 1.08612, 1.3638, 1.08612, 1.45786, .74627, .80499, .91484, 1.05707, .92383, 1.05882, .9403, 1.12654, 1.05882, 1.01756, 1.09011, 1.09011, .99414, 1.09011, 1.034, 1.01756, 1.05356, 1.05707, 1.05882, 1.04399, .84863, 1.21968, 1.01756, .95801, 1.00068, .91797, .96777, .9043, .90351, .92105, .90351, 1.1714, .85337, .96927, .96927, .99912, .96927, .92105, .80597, 1.2434, 1.20808, 1.05937, .90957, 1.1714, 1.20808, .75155, .94261, 1.24644, 1.09971, 1.09971, .84751, 1, .85273, .78032, .61584, 1.05425, 1.17914, .90957, 1.08665, 1.11593, 1.14169, .73381, .96706, .96706, .96706, .96706, .96706, .96706, .86035, .85734, .75842, .75842, .75842, .75842, .95782, .95782, .95782, .95782, .97093, 1.03584, .96924, .96924, .96924, .96924, .96924, 1.1714, .96924, .95132, .95132, .95132, .95132, .8287, .83968, .89049, .91484, .91484, .91484, .91484, .91484, .91484, .93575, .92383, .9403, .9403, .9403, .9403, .8717, .8717, .8717, .8717, 1.00527, 1.01756, 1.05356, 1.05356, 1.05356, 1.05356, 1.05356, 1.24644, .95923, 1.01756, 1.01756, 1.01756, 1.01756, .96777, 1.05707, .96777, .96706, .91484, .96706, .91484, .96706, .91484, .85734, .92383, .85734, .92383, .85734, .92383, .85734, .92383, .97093, 1.0969, .97093, 1.05882, .75842, .9403, .75842, .9403, .75842, .9403, .75842, .9403, .75842, .9403, .88198, 1.05882, .88198, 1.05882, .88198, 1.05882, 1, 1, .9831, 1.01756, .9831, 1.01756, .95782, .8717, .95782, .8717, .95782, .8717, .95782, 1.09011, .95782, .8717, .84784, 1.11551, .71387, 1.09011, 1, 1, .99414, .84636, 1.09011, 1, 1, .84636, 1.0536, .84636, .94298, .84636, 1.23297, 1.03584, 1.01756, 1, 1, 1.03584, 1.01756, 1.00323, 1.03444, 1.01756, .96924, 1.05356, .96924, 1.05356, .96924, 1.05356, .93066, .98293, .82826, 1.04399, 1, 1, .82826, 1.04399, .79649, .84863, .79649, .84863, .79649, .84863, .79649, .84863, 1, 1, .85771, 1.17318, .85771, 1.21968, .95132, 1.01756, .95132, 1.01756, .95132, 1.01756, .95132, 1.01756, .95132, 1.01756, .95132, 1.01756, .98965, 1.00068, .8287, .96777, .8287, .93365, .9043, .93365, .9043, .93365, .9043, 1.08571, .96927, .96706, .91484, .86035, .93575, .96924, .95923, 1, 1, .85771, 1.21968, 1.11437, 1.11437, .93109, .91202, .60411, .84164, .55572, 1.01173, .97361, .81818, .81818, .96635, .78032, .72727, .92366, .98601, 1.03405, .77968, 1.09799, 1.2, .96706, .85944, .85638, .96491, .75842, .93365, .9831, .96924, .95782, .86969, .94152, 1.07796, 1.03584, .78437, .96924, .98715, .83968, .83491, .85771, .8287, .94492, .88433, .9287, 1.0098, .95782, .8287, 1.0625, .98248, 1.03424, 1.2, 1.01071, 1.0625, .95246, 1.03809, 1.04912, .98248, 1.00221, 1.03424, 1.05443, 1.2, 1.04785, .99609, 1.00169, 1.05176, .99346, 1.05356, .9087, 1.03004, .95542, .93117, 1.23362, 1.01071, 1.07831, 1.02512, 1.05205, 1.03502, 1.2, 1.01071, 1.05356, 1.01071, 1.03502, .75842, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.03719, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, .9403, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.04021, 1, 1, 1, 1, 1, 1, .98965, 1.00068, .98965, 1.00068, .98965, 1.00068, .8287, .96777, 1, 1.20088, .89903, 1, 1, .75155, 1.03077, 1.03077, 1.03077, 1.03077, 1.13196, 1.13196, 1.13196, .67428, .67428, 1.16039, .73291, 1.20996, 1.22135, 1.06483, .94868, .94868, .95996, 1.24633, 1, 1.07497, .87796, .96927, 1.01518, .96927, 1, 1, 1, .77295, 1, 1, 1.10539, 1.10539, 1.11358, 1.06967, .86279, .94434, .86279, .94434, .86182, 1, 1, 1.083, 1, .91578, .86507, 1.1714, 1.18416, 1.14589, .69825, .97622, 1.9697, 1.24822, 1.24822, 1.17238, 1.24822, 1.24822, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, .99862, .99862, 1, .87025, .87025, .87025, .87025, 1.18083, 1.42603, 1, 1.42603, 1.42603, .99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.10938, 1.10938, 1, 1, 1, 1.05425, 1.09971, 1.09971, 1.09971, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        t.SegoeuiRegularMetrics = {
          lineHeight: 1.33008,
          lineGap: 0
        };
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.PostScriptEvaluator = t.PostScriptCompiler = t.PDFFunctionFactory = void 0;
        t.isPDFFunction = function isPDFFunction(e) {
          var t;
          if (e instanceof r.Dict) t = e;else {
            if (!(e instanceof s.BaseStream)) return !1;
            t = e.dict;
          }
          return t.has("FunctionType");
        };
        var r = a(4),
          i = a(2),
          n = a(58),
          s = a(5),
          o = a(59);
        t.PDFFunctionFactory = /*#__PURE__*/function () {
          function PDFFunctionFactory(_ref78) {
            var e = _ref78.xref,
              _ref78$isEvalSupporte = _ref78.isEvalSupported,
              t = _ref78$isEvalSupporte === void 0 ? !0 : _ref78$isEvalSupporte;
            _classCallCheck(this, PDFFunctionFactory);
            this.xref = e;
            this.isEvalSupported = !1 !== t;
          }
          _createClass(PDFFunctionFactory, [{
            key: "create",
            value: function create(e) {
              var t = this.getCached(e);
              if (t) return t;
              var a = PDFFunction.parse({
                xref: this.xref,
                isEvalSupported: this.isEvalSupported,
                fn: e instanceof r.Ref ? this.xref.fetch(e) : e
              });
              this._cache(e, a);
              return a;
            }
          }, {
            key: "createFromArray",
            value: function createFromArray(e) {
              var t = this.getCached(e);
              if (t) return t;
              var a = PDFFunction.parseArray({
                xref: this.xref,
                isEvalSupported: this.isEvalSupported,
                fnObj: e instanceof r.Ref ? this.xref.fetch(e) : e
              });
              this._cache(e, a);
              return a;
            }
          }, {
            key: "getCached",
            value: function getCached(e) {
              var t;
              e instanceof r.Ref ? t = e : e instanceof r.Dict ? t = e.objId : e instanceof s.BaseStream && (t = e.dict && e.dict.objId);
              if (t) {
                var _e431 = this._localFunctionCache.getByRef(t);
                if (_e431) return _e431;
              }
              return null;
            }
          }, {
            key: "_cache",
            value: function _cache(e, t) {
              if (!t) throw new Error('PDFFunctionFactory._cache - expected "parsedFunction" argument.');
              var a;
              e instanceof r.Ref ? a = e : e instanceof r.Dict ? a = e.objId : e instanceof s.BaseStream && (a = e.dict && e.dict.objId);
              a && this._localFunctionCache.set(null, a, t);
            }
          }, {
            key: "_localFunctionCache",
            get: function get() {
              return (0, i.shadow)(this, "_localFunctionCache", new o.LocalFunctionCache());
            }
          }]);
          return PDFFunctionFactory;
        }();
        function toNumberArray(e) {
          if (!Array.isArray(e)) return null;
          var t = e.length;
          for (var _a253 = 0; _a253 < t; _a253++) if ("number" != typeof e[_a253]) {
            var _a254 = new Array(t);
            for (var _r204 = 0; _r204 < t; _r204++) _a254[_r204] = +e[_r204];
            return _a254;
          }
          return e;
        }
        var PDFFunction = /*#__PURE__*/function () {
          function PDFFunction() {
            _classCallCheck(this, PDFFunction);
          }
          _createClass(PDFFunction, null, [{
            key: "getSampleArray",
            value: function getSampleArray(e, t, a, r) {
              var i,
                n,
                s = 1;
              for (i = 0, n = e.length; i < n; i++) s *= e[i];
              s *= t;
              var o = new Array(s);
              var c = 0,
                l = 0;
              var h = 1 / (Math.pow(2, a) - 1),
                u = r.getBytes((s * a + 7) / 8);
              var d = 0;
              for (i = 0; i < s; i++) {
                for (; c < a;) {
                  l <<= 8;
                  l |= u[d++];
                  c += 8;
                }
                c -= a;
                o[i] = (l >> c) * h;
                l &= (1 << c) - 1;
              }
              return o;
            }
          }, {
            key: "parse",
            value: function parse(_ref79) {
              var e = _ref79.xref,
                t = _ref79.isEvalSupported,
                a = _ref79.fn;
              var r = a.dict || a;
              switch (r.get("FunctionType")) {
                case 0:
                  return this.constructSampled({
                    xref: e,
                    isEvalSupported: t,
                    fn: a,
                    dict: r
                  });
                case 1:
                  break;
                case 2:
                  return this.constructInterpolated({
                    xref: e,
                    isEvalSupported: t,
                    dict: r
                  });
                case 3:
                  return this.constructStiched({
                    xref: e,
                    isEvalSupported: t,
                    dict: r
                  });
                case 4:
                  return this.constructPostScript({
                    xref: e,
                    isEvalSupported: t,
                    fn: a,
                    dict: r
                  });
              }
              throw new i.FormatError("Unknown type of function");
            }
          }, {
            key: "parseArray",
            value: function parseArray(_ref80) {
              var e = _ref80.xref,
                t = _ref80.isEvalSupported,
                a = _ref80.fnObj;
              if (!Array.isArray(a)) return this.parse({
                xref: e,
                isEvalSupported: t,
                fn: a
              });
              var r = [];
              var _iterator116 = _createForOfIteratorHelper(a),
                _step116;
              try {
                for (_iterator116.s(); !(_step116 = _iterator116.n()).done;) {
                  var _i181 = _step116.value;
                  r.push(this.parse({
                    xref: e,
                    isEvalSupported: t,
                    fn: e.fetchIfRef(_i181)
                  }));
                }
              } catch (err) {
                _iterator116.e(err);
              } finally {
                _iterator116.f();
              }
              return function (e, t, a, i) {
                for (var _n114 = 0, _s84 = r.length; _n114 < _s84; _n114++) r[_n114](e, t, a, i + _n114);
              };
            }
          }, {
            key: "constructSampled",
            value: function constructSampled(_ref81) {
              var e = _ref81.xref,
                t = _ref81.isEvalSupported,
                a = _ref81.fn,
                r = _ref81.dict;
              function toMultiArray(e) {
                var t = e.length,
                  a = [];
                var r = 0;
                for (var _i182 = 0; _i182 < t; _i182 += 2) a[r++] = [e[_i182], e[_i182 + 1]];
                return a;
              }
              function interpolate(e, t, a, r, i) {
                return r + (i - r) / (a - t) * (e - t);
              }
              var n = toNumberArray(r.getArray("Domain")),
                s = toNumberArray(r.getArray("Range"));
              if (!n || !s) throw new i.FormatError("No domain or range");
              var o = n.length / 2,
                c = s.length / 2;
              n = toMultiArray(n);
              s = toMultiArray(s);
              var l = toNumberArray(r.getArray("Size")),
                h = r.get("BitsPerSample"),
                u = r.get("Order") || 1;
              1 !== u && (0, i.info)("No support for cubic spline interpolation: " + u);
              var d = toNumberArray(r.getArray("Encode"));
              if (d) d = toMultiArray(d);else {
                d = [];
                for (var _e432 = 0; _e432 < o; ++_e432) d.push([0, l[_e432] - 1]);
              }
              var f = toNumberArray(r.getArray("Decode"));
              f = f ? toMultiArray(f) : s;
              var g = this.getSampleArray(l, c, h, a);
              return function constructSampledFn(e, t, a, r) {
                var i = 1 << o,
                  h = new Float64Array(i),
                  u = new Uint32Array(i);
                var p, m;
                for (m = 0; m < i; m++) h[m] = 1;
                var b = c,
                  y = 1;
                for (p = 0; p < o; ++p) {
                  var _a255 = n[p][0],
                    _r205 = n[p][1];
                  var _s85 = interpolate(Math.min(Math.max(e[t + p], _a255), _r205), _a255, _r205, d[p][0], d[p][1]);
                  var _o68 = l[p];
                  _s85 = Math.min(Math.max(_s85, 0), _o68 - 1);
                  var _c44 = _s85 < _o68 - 1 ? Math.floor(_s85) : _s85 - 1,
                    _f18 = _c44 + 1 - _s85,
                    _g18 = _s85 - _c44,
                    w = _c44 * b,
                    S = w + b;
                  for (m = 0; m < i; m++) if (m & y) {
                    h[m] *= _g18;
                    u[m] += S;
                  } else {
                    h[m] *= _f18;
                    u[m] += w;
                  }
                  b *= _o68;
                  y <<= 1;
                }
                for (m = 0; m < c; ++m) {
                  var _e433 = 0;
                  for (p = 0; p < i; p++) _e433 += g[u[p] + m] * h[p];
                  _e433 = interpolate(_e433, 0, 1, f[m][0], f[m][1]);
                  a[r + m] = Math.min(Math.max(_e433, s[m][0]), s[m][1]);
                }
              };
            }
          }, {
            key: "constructInterpolated",
            value: function constructInterpolated(_ref82) {
              var e = _ref82.xref,
                t = _ref82.isEvalSupported,
                a = _ref82.dict;
              var r = toNumberArray(a.getArray("C0")) || [0],
                i = toNumberArray(a.getArray("C1")) || [1],
                n = a.get("N"),
                s = [];
              for (var _e434 = 0, _t309 = r.length; _e434 < _t309; ++_e434) s.push(i[_e434] - r[_e434]);
              var o = s.length;
              return function constructInterpolatedFn(e, t, a, i) {
                var c = 1 === n ? e[t] : Math.pow(e[t], n);
                for (var _e435 = 0; _e435 < o; ++_e435) a[i + _e435] = r[_e435] + c * s[_e435];
              };
            }
          }, {
            key: "constructStiched",
            value: function constructStiched(_ref83) {
              var e = _ref83.xref,
                t = _ref83.isEvalSupported,
                a = _ref83.dict;
              var r = toNumberArray(a.getArray("Domain"));
              if (!r) throw new i.FormatError("No domain");
              if (1 !== r.length / 2) throw new i.FormatError("Bad domain for stiched function");
              var n = [];
              var _iterator117 = _createForOfIteratorHelper(a.get("Functions")),
                _step117;
              try {
                for (_iterator117.s(); !(_step117 = _iterator117.n()).done;) {
                  var _r206 = _step117.value;
                  n.push(this.parse({
                    xref: e,
                    isEvalSupported: t,
                    fn: e.fetchIfRef(_r206)
                  }));
                }
              } catch (err) {
                _iterator117.e(err);
              } finally {
                _iterator117.f();
              }
              var s = toNumberArray(a.getArray("Bounds")),
                o = toNumberArray(a.getArray("Encode")),
                c = new Float32Array(1);
              return function constructStichedFn(e, t, a, i) {
                var l = function constructStichedFromIRClip(e, t, a) {
                    e > a ? e = a : e < t && (e = t);
                    return e;
                  }(e[t], r[0], r[1]),
                  h = s.length;
                var u;
                for (u = 0; u < h && !(l < s[u]); ++u);
                var d = r[0];
                u > 0 && (d = s[u - 1]);
                var f = r[1];
                u < s.length && (f = s[u]);
                var g = o[2 * u],
                  p = o[2 * u + 1];
                c[0] = d === f ? g : g + (l - d) * (p - g) / (f - d);
                n[u](c, 0, a, i);
              };
            }
          }, {
            key: "constructPostScript",
            value: function constructPostScript(_ref84) {
              var e = _ref84.xref,
                t = _ref84.isEvalSupported,
                a = _ref84.fn,
                r = _ref84.dict;
              var s = toNumberArray(r.getArray("Domain")),
                o = toNumberArray(r.getArray("Range"));
              if (!s) throw new i.FormatError("No domain.");
              if (!o) throw new i.FormatError("No range.");
              var c = new n.PostScriptLexer(a),
                l = new n.PostScriptParser(c).parse();
              if (t && i.FeatureTest.isEvalSupported) {
                var _e436 = new PostScriptCompiler().compile(l, s, o);
                if (_e436) return new Function("src", "srcOffset", "dest", "destOffset", _e436);
              }
              (0, i.info)("Unable to compile PS function");
              var h = o.length >> 1,
                u = s.length >> 1,
                d = new PostScriptEvaluator(l),
                f = Object.create(null);
              var g = 8192;
              var p = new Float32Array(u);
              return function constructPostScriptFn(e, t, a, r) {
                var i,
                  n,
                  s = "";
                var c = p;
                for (i = 0; i < u; i++) {
                  n = e[t + i];
                  c[i] = n;
                  s += n + "_";
                }
                var l = f[s];
                if (void 0 !== l) {
                  a.set(l, r);
                  return;
                }
                var m = new Float32Array(h),
                  b = d.execute(c),
                  y = b.length - h;
                for (i = 0; i < h; i++) {
                  n = b[y + i];
                  var _e437 = o[2 * i];
                  if (n < _e437) n = _e437;else {
                    _e437 = o[2 * i + 1];
                    n > _e437 && (n = _e437);
                  }
                  m[i] = n;
                }
                if (g > 0) {
                  g--;
                  f[s] = m;
                }
                a.set(m, r);
              };
            }
          }]);
          return PDFFunction;
        }();
        var PostScriptStack = /*#__PURE__*/function () {
          function PostScriptStack(e) {
            _classCallCheck(this, PostScriptStack);
            this.stack = e ? Array.from(e) : [];
          }
          _createClass(PostScriptStack, [{
            key: "push",
            value: function push(e) {
              if (this.stack.length >= PostScriptStack.MAX_STACK_SIZE) throw new Error("PostScript function stack overflow.");
              this.stack.push(e);
            }
          }, {
            key: "pop",
            value: function pop() {
              if (this.stack.length <= 0) throw new Error("PostScript function stack underflow.");
              return this.stack.pop();
            }
          }, {
            key: "copy",
            value: function copy(e) {
              if (this.stack.length + e >= PostScriptStack.MAX_STACK_SIZE) throw new Error("PostScript function stack overflow.");
              var t = this.stack;
              for (var _a256 = t.length - e, _r207 = e - 1; _r207 >= 0; _r207--, _a256++) t.push(t[_a256]);
            }
          }, {
            key: "index",
            value: function index(e) {
              this.push(this.stack[this.stack.length - e - 1]);
            }
          }, {
            key: "roll",
            value: function roll(e, t) {
              var a = this.stack,
                r = a.length - e,
                i = a.length - 1,
                n = r + (t - Math.floor(t / e) * e);
              for (var _e438 = r, _t310 = i; _e438 < _t310; _e438++, _t310--) {
                var _r208 = a[_e438];
                a[_e438] = a[_t310];
                a[_t310] = _r208;
              }
              for (var _e439 = r, _t311 = n - 1; _e439 < _t311; _e439++, _t311--) {
                var _r209 = a[_e439];
                a[_e439] = a[_t311];
                a[_t311] = _r209;
              }
              for (var _e440 = n, _t312 = i; _e440 < _t312; _e440++, _t312--) {
                var _r210 = a[_e440];
                a[_e440] = a[_t312];
                a[_t312] = _r210;
              }
            }
          }]);
          return PostScriptStack;
        }();
        _defineProperty(PostScriptStack, "MAX_STACK_SIZE", 100);
        var PostScriptEvaluator = /*#__PURE__*/function () {
          function PostScriptEvaluator(e) {
            _classCallCheck(this, PostScriptEvaluator);
            this.operators = e;
          }
          _createClass(PostScriptEvaluator, [{
            key: "execute",
            value: function execute(e) {
              var t = new PostScriptStack(e);
              var a = 0;
              var r = this.operators,
                n = r.length;
              var s, o, c;
              for (; a < n;) {
                s = r[a++];
                if ("number" != typeof s) switch (s) {
                  case "jz":
                    c = t.pop();
                    o = t.pop();
                    o || (a = c);
                    break;
                  case "j":
                    o = t.pop();
                    a = o;
                    break;
                  case "abs":
                    o = t.pop();
                    t.push(Math.abs(o));
                    break;
                  case "add":
                    c = t.pop();
                    o = t.pop();
                    t.push(o + c);
                    break;
                  case "and":
                    c = t.pop();
                    o = t.pop();
                    "boolean" == typeof o && "boolean" == typeof c ? t.push(o && c) : t.push(o & c);
                    break;
                  case "atan":
                    c = t.pop();
                    o = t.pop();
                    o = Math.atan2(o, c) / Math.PI * 180;
                    o < 0 && (o += 360);
                    t.push(o);
                    break;
                  case "bitshift":
                    c = t.pop();
                    o = t.pop();
                    o > 0 ? t.push(o << c) : t.push(o >> c);
                    break;
                  case "ceiling":
                    o = t.pop();
                    t.push(Math.ceil(o));
                    break;
                  case "copy":
                    o = t.pop();
                    t.copy(o);
                    break;
                  case "cos":
                    o = t.pop();
                    t.push(Math.cos(o % 360 / 180 * Math.PI));
                    break;
                  case "cvi":
                    o = 0 | t.pop();
                    t.push(o);
                    break;
                  case "cvr":
                    break;
                  case "div":
                    c = t.pop();
                    o = t.pop();
                    t.push(o / c);
                    break;
                  case "dup":
                    t.copy(1);
                    break;
                  case "eq":
                    c = t.pop();
                    o = t.pop();
                    t.push(o === c);
                    break;
                  case "exch":
                    t.roll(2, 1);
                    break;
                  case "exp":
                    c = t.pop();
                    o = t.pop();
                    t.push(Math.pow(o, c));
                    break;
                  case "false":
                    t.push(!1);
                    break;
                  case "floor":
                    o = t.pop();
                    t.push(Math.floor(o));
                    break;
                  case "ge":
                    c = t.pop();
                    o = t.pop();
                    t.push(o >= c);
                    break;
                  case "gt":
                    c = t.pop();
                    o = t.pop();
                    t.push(o > c);
                    break;
                  case "idiv":
                    c = t.pop();
                    o = t.pop();
                    t.push(o / c | 0);
                    break;
                  case "index":
                    o = t.pop();
                    t.index(o);
                    break;
                  case "le":
                    c = t.pop();
                    o = t.pop();
                    t.push(o <= c);
                    break;
                  case "ln":
                    o = t.pop();
                    t.push(Math.log(o));
                    break;
                  case "log":
                    o = t.pop();
                    t.push(Math.log(o) / Math.LN10);
                    break;
                  case "lt":
                    c = t.pop();
                    o = t.pop();
                    t.push(o < c);
                    break;
                  case "mod":
                    c = t.pop();
                    o = t.pop();
                    t.push(o % c);
                    break;
                  case "mul":
                    c = t.pop();
                    o = t.pop();
                    t.push(o * c);
                    break;
                  case "ne":
                    c = t.pop();
                    o = t.pop();
                    t.push(o !== c);
                    break;
                  case "neg":
                    o = t.pop();
                    t.push(-o);
                    break;
                  case "not":
                    o = t.pop();
                    "boolean" == typeof o ? t.push(!o) : t.push(~o);
                    break;
                  case "or":
                    c = t.pop();
                    o = t.pop();
                    "boolean" == typeof o && "boolean" == typeof c ? t.push(o || c) : t.push(o | c);
                    break;
                  case "pop":
                    t.pop();
                    break;
                  case "roll":
                    c = t.pop();
                    o = t.pop();
                    t.roll(o, c);
                    break;
                  case "round":
                    o = t.pop();
                    t.push(Math.round(o));
                    break;
                  case "sin":
                    o = t.pop();
                    t.push(Math.sin(o % 360 / 180 * Math.PI));
                    break;
                  case "sqrt":
                    o = t.pop();
                    t.push(Math.sqrt(o));
                    break;
                  case "sub":
                    c = t.pop();
                    o = t.pop();
                    t.push(o - c);
                    break;
                  case "true":
                    t.push(!0);
                    break;
                  case "truncate":
                    o = t.pop();
                    o = o < 0 ? Math.ceil(o) : Math.floor(o);
                    t.push(o);
                    break;
                  case "xor":
                    c = t.pop();
                    o = t.pop();
                    "boolean" == typeof o && "boolean" == typeof c ? t.push(o !== c) : t.push(o ^ c);
                    break;
                  default:
                    throw new i.FormatError("Unknown operator ".concat(s));
                } else t.push(s);
              }
              return t.stack;
            }
          }]);
          return PostScriptEvaluator;
        }();
        t.PostScriptEvaluator = PostScriptEvaluator;
        var AstNode = /*#__PURE__*/function () {
          function AstNode(e) {
            _classCallCheck(this, AstNode);
            this.type = e;
          }
          _createClass(AstNode, [{
            key: "visit",
            value: function visit(e) {
              (0, i.unreachable)("abstract method");
            }
          }]);
          return AstNode;
        }();
        var AstArgument = /*#__PURE__*/function (_AstNode) {
          _inherits(AstArgument, _AstNode);
          var _super79 = _createSuper(AstArgument);
          function AstArgument(e, t, a) {
            var _this85;
            _classCallCheck(this, AstArgument);
            _this85 = _super79.call(this, "args");
            _this85.index = e;
            _this85.min = t;
            _this85.max = a;
            return _this85;
          }
          _createClass(AstArgument, [{
            key: "visit",
            value: function visit(e) {
              e.visitArgument(this);
            }
          }]);
          return AstArgument;
        }(AstNode);
        var AstLiteral = /*#__PURE__*/function (_AstNode2) {
          _inherits(AstLiteral, _AstNode2);
          var _super80 = _createSuper(AstLiteral);
          function AstLiteral(e) {
            var _this86;
            _classCallCheck(this, AstLiteral);
            _this86 = _super80.call(this, "literal");
            _this86.number = e;
            _this86.min = e;
            _this86.max = e;
            return _this86;
          }
          _createClass(AstLiteral, [{
            key: "visit",
            value: function visit(e) {
              e.visitLiteral(this);
            }
          }]);
          return AstLiteral;
        }(AstNode);
        var AstBinaryOperation = /*#__PURE__*/function (_AstNode3) {
          _inherits(AstBinaryOperation, _AstNode3);
          var _super81 = _createSuper(AstBinaryOperation);
          function AstBinaryOperation(e, t, a, r, i) {
            var _this87;
            _classCallCheck(this, AstBinaryOperation);
            _this87 = _super81.call(this, "binary");
            _this87.op = e;
            _this87.arg1 = t;
            _this87.arg2 = a;
            _this87.min = r;
            _this87.max = i;
            return _this87;
          }
          _createClass(AstBinaryOperation, [{
            key: "visit",
            value: function visit(e) {
              e.visitBinaryOperation(this);
            }
          }]);
          return AstBinaryOperation;
        }(AstNode);
        var AstMin = /*#__PURE__*/function (_AstNode4) {
          _inherits(AstMin, _AstNode4);
          var _super82 = _createSuper(AstMin);
          function AstMin(e, t) {
            var _this88;
            _classCallCheck(this, AstMin);
            _this88 = _super82.call(this, "max");
            _this88.arg = e;
            _this88.min = e.min;
            _this88.max = t;
            return _this88;
          }
          _createClass(AstMin, [{
            key: "visit",
            value: function visit(e) {
              e.visitMin(this);
            }
          }]);
          return AstMin;
        }(AstNode);
        var AstVariable = /*#__PURE__*/function (_AstNode5) {
          _inherits(AstVariable, _AstNode5);
          var _super83 = _createSuper(AstVariable);
          function AstVariable(e, t, a) {
            var _this89;
            _classCallCheck(this, AstVariable);
            _this89 = _super83.call(this, "var");
            _this89.index = e;
            _this89.min = t;
            _this89.max = a;
            return _this89;
          }
          _createClass(AstVariable, [{
            key: "visit",
            value: function visit(e) {
              e.visitVariable(this);
            }
          }]);
          return AstVariable;
        }(AstNode);
        var AstVariableDefinition = /*#__PURE__*/function (_AstNode6) {
          _inherits(AstVariableDefinition, _AstNode6);
          var _super84 = _createSuper(AstVariableDefinition);
          function AstVariableDefinition(e, t) {
            var _this90;
            _classCallCheck(this, AstVariableDefinition);
            _this90 = _super84.call(this, "definition");
            _this90.variable = e;
            _this90.arg = t;
            return _this90;
          }
          _createClass(AstVariableDefinition, [{
            key: "visit",
            value: function visit(e) {
              e.visitVariableDefinition(this);
            }
          }]);
          return AstVariableDefinition;
        }(AstNode);
        var ExpressionBuilderVisitor = /*#__PURE__*/function () {
          function ExpressionBuilderVisitor() {
            _classCallCheck(this, ExpressionBuilderVisitor);
            this.parts = [];
          }
          _createClass(ExpressionBuilderVisitor, [{
            key: "visitArgument",
            value: function visitArgument(e) {
              this.parts.push("Math.max(", e.min, ", Math.min(", e.max, ", src[srcOffset + ", e.index, "]))");
            }
          }, {
            key: "visitVariable",
            value: function visitVariable(e) {
              this.parts.push("v", e.index);
            }
          }, {
            key: "visitLiteral",
            value: function visitLiteral(e) {
              this.parts.push(e.number);
            }
          }, {
            key: "visitBinaryOperation",
            value: function visitBinaryOperation(e) {
              this.parts.push("(");
              e.arg1.visit(this);
              this.parts.push(" ", e.op, " ");
              e.arg2.visit(this);
              this.parts.push(")");
            }
          }, {
            key: "visitVariableDefinition",
            value: function visitVariableDefinition(e) {
              this.parts.push("var ");
              e.variable.visit(this);
              this.parts.push(" = ");
              e.arg.visit(this);
              this.parts.push(";");
            }
          }, {
            key: "visitMin",
            value: function visitMin(e) {
              this.parts.push("Math.min(");
              e.arg.visit(this);
              this.parts.push(", ", e.max, ")");
            }
          }, {
            key: "toString",
            value: function toString() {
              return this.parts.join("");
            }
          }]);
          return ExpressionBuilderVisitor;
        }();
        function buildAddOperation(e, t) {
          return "literal" === t.type && 0 === t.number ? e : "literal" === e.type && 0 === e.number ? t : "literal" === t.type && "literal" === e.type ? new AstLiteral(e.number + t.number) : new AstBinaryOperation("+", e, t, e.min + t.min, e.max + t.max);
        }
        function buildMulOperation(e, t) {
          if ("literal" === t.type) {
            if (0 === t.number) return new AstLiteral(0);
            if (1 === t.number) return e;
            if ("literal" === e.type) return new AstLiteral(e.number * t.number);
          }
          if ("literal" === e.type) {
            if (0 === e.number) return new AstLiteral(0);
            if (1 === e.number) return t;
          }
          var a = Math.min(e.min * t.min, e.min * t.max, e.max * t.min, e.max * t.max),
            r = Math.max(e.min * t.min, e.min * t.max, e.max * t.min, e.max * t.max);
          return new AstBinaryOperation("*", e, t, a, r);
        }
        function buildSubOperation(e, t) {
          if ("literal" === t.type) {
            if (0 === t.number) return e;
            if ("literal" === e.type) return new AstLiteral(e.number - t.number);
          }
          return "binary" === t.type && "-" === t.op && "literal" === e.type && 1 === e.number && "literal" === t.arg1.type && 1 === t.arg1.number ? t.arg2 : new AstBinaryOperation("-", e, t, e.min - t.max, e.max - t.min);
        }
        function buildMinOperation(e, t) {
          return e.min >= t ? new AstLiteral(t) : e.max <= t ? e : new AstMin(e, t);
        }
        var PostScriptCompiler = /*#__PURE__*/function () {
          function PostScriptCompiler() {
            _classCallCheck(this, PostScriptCompiler);
          }
          _createClass(PostScriptCompiler, [{
            key: "compile",
            value: function compile(e, t, a) {
              var r = [],
                i = [],
                n = t.length >> 1,
                s = a.length >> 1;
              var o,
                c,
                l,
                h,
                u,
                d,
                f,
                g,
                p = 0;
              for (var _e441 = 0; _e441 < n; _e441++) r.push(new AstArgument(_e441, t[2 * _e441], t[2 * _e441 + 1]));
              for (var _t313 = 0, _a257 = e.length; _t313 < _a257; _t313++) {
                g = e[_t313];
                if ("number" != typeof g) switch (g) {
                  case "add":
                    if (r.length < 2) return null;
                    h = r.pop();
                    l = r.pop();
                    r.push(buildAddOperation(l, h));
                    break;
                  case "cvr":
                    if (r.length < 1) return null;
                    break;
                  case "mul":
                    if (r.length < 2) return null;
                    h = r.pop();
                    l = r.pop();
                    r.push(buildMulOperation(l, h));
                    break;
                  case "sub":
                    if (r.length < 2) return null;
                    h = r.pop();
                    l = r.pop();
                    r.push(buildSubOperation(l, h));
                    break;
                  case "exch":
                    if (r.length < 2) return null;
                    u = r.pop();
                    d = r.pop();
                    r.push(u, d);
                    break;
                  case "pop":
                    if (r.length < 1) return null;
                    r.pop();
                    break;
                  case "index":
                    if (r.length < 1) return null;
                    l = r.pop();
                    if ("literal" !== l.type) return null;
                    o = l.number;
                    if (o < 0 || !Number.isInteger(o) || r.length < o) return null;
                    u = r[r.length - o - 1];
                    if ("literal" === u.type || "var" === u.type) {
                      r.push(u);
                      break;
                    }
                    f = new AstVariable(p++, u.min, u.max);
                    r[r.length - o - 1] = f;
                    r.push(f);
                    i.push(new AstVariableDefinition(f, u));
                    break;
                  case "dup":
                    if (r.length < 1) return null;
                    if ("number" == typeof e[_t313 + 1] && "gt" === e[_t313 + 2] && e[_t313 + 3] === _t313 + 7 && "jz" === e[_t313 + 4] && "pop" === e[_t313 + 5] && e[_t313 + 6] === e[_t313 + 1]) {
                      l = r.pop();
                      r.push(buildMinOperation(l, e[_t313 + 1]));
                      _t313 += 6;
                      break;
                    }
                    u = r.at(-1);
                    if ("literal" === u.type || "var" === u.type) {
                      r.push(u);
                      break;
                    }
                    f = new AstVariable(p++, u.min, u.max);
                    r[r.length - 1] = f;
                    r.push(f);
                    i.push(new AstVariableDefinition(f, u));
                    break;
                  case "roll":
                    if (r.length < 2) return null;
                    h = r.pop();
                    l = r.pop();
                    if ("literal" !== h.type || "literal" !== l.type) return null;
                    c = h.number;
                    o = l.number;
                    if (o <= 0 || !Number.isInteger(o) || !Number.isInteger(c) || r.length < o) return null;
                    c = (c % o + o) % o;
                    if (0 === c) break;
                    r.push.apply(r, _toConsumableArray(r.splice(r.length - o, o - c)));
                    break;
                  default:
                    return null;
                } else r.push(new AstLiteral(g));
              }
              if (r.length !== s) return null;
              var m = [];
              for (var _i184 = 0, _i183 = i; _i184 < _i183.length; _i184++) {
                var _e442 = _i183[_i184];
                var _t314 = new ExpressionBuilderVisitor();
                _e442.visit(_t314);
                m.push(_t314.toString());
              }
              for (var _e443 = 0, _t315 = r.length; _e443 < _t315; _e443++) {
                var _t316 = r[_e443],
                  _i185 = new ExpressionBuilderVisitor();
                _t316.visit(_i185);
                var _n115 = a[2 * _e443],
                  _s86 = a[2 * _e443 + 1],
                  _o69 = [_i185.toString()];
                if (_n115 > _t316.min) {
                  _o69.unshift("Math.max(", _n115, ", ");
                  _o69.push(")");
                }
                if (_s86 < _t316.max) {
                  _o69.unshift("Math.min(", _s86, ", ");
                  _o69.push(")");
                }
                _o69.unshift("dest[destOffset + ", _e443, "] = ");
                _o69.push(";");
                m.push(_o69.join(""));
              }
              return m.join("\n");
            }
          }]);
          return PostScriptCompiler;
        }();
        t.PostScriptCompiler = PostScriptCompiler;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.PostScriptParser = t.PostScriptLexer = void 0;
        var r = a(2),
          i = a(4),
          n = a(3);
        t.PostScriptParser = /*#__PURE__*/function () {
          function PostScriptParser(e) {
            _classCallCheck(this, PostScriptParser);
            this.lexer = e;
            this.operators = [];
            this.token = null;
            this.prev = null;
          }
          _createClass(PostScriptParser, [{
            key: "nextToken",
            value: function nextToken() {
              this.prev = this.token;
              this.token = this.lexer.getToken();
            }
          }, {
            key: "accept",
            value: function accept(e) {
              if (this.token.type === e) {
                this.nextToken();
                return !0;
              }
              return !1;
            }
          }, {
            key: "expect",
            value: function expect(e) {
              if (this.accept(e)) return !0;
              throw new r.FormatError("Unexpected symbol: found ".concat(this.token.type, " expected ").concat(e, "."));
            }
          }, {
            key: "parse",
            value: function parse() {
              this.nextToken();
              this.expect(s.LBRACE);
              this.parseBlock();
              this.expect(s.RBRACE);
              return this.operators;
            }
          }, {
            key: "parseBlock",
            value: function parseBlock() {
              for (;;) if (this.accept(s.NUMBER)) this.operators.push(this.prev.value);else if (this.accept(s.OPERATOR)) this.operators.push(this.prev.value);else {
                if (!this.accept(s.LBRACE)) return;
                this.parseCondition();
              }
            }
          }, {
            key: "parseCondition",
            value: function parseCondition() {
              var e = this.operators.length;
              this.operators.push(null, null);
              this.parseBlock();
              this.expect(s.RBRACE);
              if (this.accept(s.IF)) {
                this.operators[e] = this.operators.length;
                this.operators[e + 1] = "jz";
              } else {
                if (!this.accept(s.LBRACE)) throw new r.FormatError("PS Function: error parsing conditional.");
                {
                  var _t317 = this.operators.length;
                  this.operators.push(null, null);
                  var _a258 = this.operators.length;
                  this.parseBlock();
                  this.expect(s.RBRACE);
                  this.expect(s.IFELSE);
                  this.operators[_t317] = this.operators.length;
                  this.operators[_t317 + 1] = "j";
                  this.operators[e] = _a258;
                  this.operators[e + 1] = "jz";
                }
              }
            }
          }]);
          return PostScriptParser;
        }();
        var s = {
          LBRACE: 0,
          RBRACE: 1,
          NUMBER: 2,
          OPERATOR: 3,
          IF: 4,
          IFELSE: 5
        };
        var PostScriptToken = /*#__PURE__*/function () {
          function PostScriptToken(e, t) {
            _classCallCheck(this, PostScriptToken);
            this.type = e;
            this.value = t;
          }
          _createClass(PostScriptToken, null, [{
            key: "opCache",
            get: function get() {
              return (0, r.shadow)(this, "opCache", Object.create(null));
            }
          }, {
            key: "getOperator",
            value: function getOperator(e) {
              var _PostScriptToken$opCa;
              return (_PostScriptToken$opCa = PostScriptToken.opCache)[e] || (_PostScriptToken$opCa[e] = new PostScriptToken(s.OPERATOR, e));
            }
          }, {
            key: "LBRACE",
            get: function get() {
              return (0, r.shadow)(this, "LBRACE", new PostScriptToken(s.LBRACE, "{"));
            }
          }, {
            key: "RBRACE",
            get: function get() {
              return (0, r.shadow)(this, "RBRACE", new PostScriptToken(s.RBRACE, "}"));
            }
          }, {
            key: "IF",
            get: function get() {
              return (0, r.shadow)(this, "IF", new PostScriptToken(s.IF, "IF"));
            }
          }, {
            key: "IFELSE",
            get: function get() {
              return (0, r.shadow)(this, "IFELSE", new PostScriptToken(s.IFELSE, "IFELSE"));
            }
          }]);
          return PostScriptToken;
        }();
        t.PostScriptLexer = /*#__PURE__*/function () {
          function PostScriptLexer(e) {
            _classCallCheck(this, PostScriptLexer);
            this.stream = e;
            this.nextChar();
            this.strBuf = [];
          }
          _createClass(PostScriptLexer, [{
            key: "nextChar",
            value: function nextChar() {
              return this.currentChar = this.stream.getByte();
            }
          }, {
            key: "getToken",
            value: function getToken() {
              var e = !1,
                t = this.currentChar;
              for (;;) {
                if (t < 0) return i.EOF;
                if (e) 10 !== t && 13 !== t || (e = !1);else if (37 === t) e = !0;else if (!(0, n.isWhiteSpace)(t)) break;
                t = this.nextChar();
              }
              switch (0 | t) {
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 43:
                case 45:
                case 46:
                  return new PostScriptToken(s.NUMBER, this.getNumber());
                case 123:
                  this.nextChar();
                  return PostScriptToken.LBRACE;
                case 125:
                  this.nextChar();
                  return PostScriptToken.RBRACE;
              }
              var a = this.strBuf;
              a.length = 0;
              a[0] = String.fromCharCode(t);
              for (; (t = this.nextChar()) >= 0 && (t >= 65 && t <= 90 || t >= 97 && t <= 122);) a.push(String.fromCharCode(t));
              var r = a.join("");
              switch (r.toLowerCase()) {
                case "if":
                  return PostScriptToken.IF;
                case "ifelse":
                  return PostScriptToken.IFELSE;
                default:
                  return PostScriptToken.getOperator(r);
              }
            }
          }, {
            key: "getNumber",
            value: function getNumber() {
              var e = this.currentChar;
              var t = this.strBuf;
              t.length = 0;
              t[0] = String.fromCharCode(e);
              for (; (e = this.nextChar()) >= 0 && (e >= 48 && e <= 57 || 45 === e || 46 === e);) t.push(String.fromCharCode(e));
              var a = parseFloat(t.join(""));
              if (isNaN(a)) throw new r.FormatError("Invalid floating point number: ".concat(a));
              return a;
            }
          }]);
          return PostScriptLexer;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.RegionalImageCache = t.LocalTilingPatternCache = t.LocalImageCache = t.LocalGStateCache = t.LocalFunctionCache = t.LocalColorSpaceCache = t.GlobalImageCache = void 0;
        var r = a(2),
          i = a(4);
        var BaseLocalCache = /*#__PURE__*/function () {
          function BaseLocalCache(e) {
            _classCallCheck(this, BaseLocalCache);
            this.constructor === BaseLocalCache && (0, r.unreachable)("Cannot initialize BaseLocalCache.");
            this._onlyRefs = !0 === (e && e.onlyRefs);
            if (!this._onlyRefs) {
              this._nameRefMap = new Map();
              this._imageMap = new Map();
            }
            this._imageCache = new i.RefSetCache();
          }
          _createClass(BaseLocalCache, [{
            key: "getByName",
            value: function getByName(e) {
              this._onlyRefs && (0, r.unreachable)("Should not call `getByName` method.");
              var t = this._nameRefMap.get(e);
              return t ? this.getByRef(t) : this._imageMap.get(e) || null;
            }
          }, {
            key: "getByRef",
            value: function getByRef(e) {
              return this._imageCache.get(e) || null;
            }
          }, {
            key: "set",
            value: function set(e, t, a) {
              (0, r.unreachable)("Abstract method `set` called.");
            }
          }]);
          return BaseLocalCache;
        }();
        t.LocalImageCache = /*#__PURE__*/function (_BaseLocalCache) {
          _inherits(LocalImageCache, _BaseLocalCache);
          var _super85 = _createSuper(LocalImageCache);
          function LocalImageCache() {
            _classCallCheck(this, LocalImageCache);
            return _super85.apply(this, arguments);
          }
          _createClass(LocalImageCache, [{
            key: "set",
            value: function set(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              var a = arguments.length > 2 ? arguments[2] : undefined;
              if ("string" != typeof e) throw new Error('LocalImageCache.set - expected "name" argument.');
              if (t) {
                if (this._imageCache.has(t)) return;
                this._nameRefMap.set(e, t);
                this._imageCache.put(t, a);
              } else this._imageMap.has(e) || this._imageMap.set(e, a);
            }
          }]);
          return LocalImageCache;
        }(BaseLocalCache);
        t.LocalColorSpaceCache = /*#__PURE__*/function (_BaseLocalCache2) {
          _inherits(LocalColorSpaceCache, _BaseLocalCache2);
          var _super86 = _createSuper(LocalColorSpaceCache);
          function LocalColorSpaceCache() {
            _classCallCheck(this, LocalColorSpaceCache);
            return _super86.apply(this, arguments);
          }
          _createClass(LocalColorSpaceCache, [{
            key: "set",
            value: function set() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              var a = arguments.length > 2 ? arguments[2] : undefined;
              if ("string" != typeof e && !t) throw new Error('LocalColorSpaceCache.set - expected "name" and/or "ref" argument.');
              if (t) {
                if (this._imageCache.has(t)) return;
                null !== e && this._nameRefMap.set(e, t);
                this._imageCache.put(t, a);
              } else this._imageMap.has(e) || this._imageMap.set(e, a);
            }
          }]);
          return LocalColorSpaceCache;
        }(BaseLocalCache);
        t.LocalFunctionCache = /*#__PURE__*/function (_BaseLocalCache3) {
          _inherits(LocalFunctionCache, _BaseLocalCache3);
          var _super87 = _createSuper(LocalFunctionCache);
          function LocalFunctionCache(e) {
            _classCallCheck(this, LocalFunctionCache);
            return _super87.call(this, {
              onlyRefs: !0
            });
          }
          _createClass(LocalFunctionCache, [{
            key: "set",
            value: function set() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
              var t = arguments.length > 1 ? arguments[1] : undefined;
              var a = arguments.length > 2 ? arguments[2] : undefined;
              if (!t) throw new Error('LocalFunctionCache.set - expected "ref" argument.');
              this._imageCache.has(t) || this._imageCache.put(t, a);
            }
          }]);
          return LocalFunctionCache;
        }(BaseLocalCache);
        t.LocalGStateCache = /*#__PURE__*/function (_BaseLocalCache4) {
          _inherits(LocalGStateCache, _BaseLocalCache4);
          var _super88 = _createSuper(LocalGStateCache);
          function LocalGStateCache() {
            _classCallCheck(this, LocalGStateCache);
            return _super88.apply(this, arguments);
          }
          _createClass(LocalGStateCache, [{
            key: "set",
            value: function set(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              var a = arguments.length > 2 ? arguments[2] : undefined;
              if ("string" != typeof e) throw new Error('LocalGStateCache.set - expected "name" argument.');
              if (t) {
                if (this._imageCache.has(t)) return;
                this._nameRefMap.set(e, t);
                this._imageCache.put(t, a);
              } else this._imageMap.has(e) || this._imageMap.set(e, a);
            }
          }]);
          return LocalGStateCache;
        }(BaseLocalCache);
        t.LocalTilingPatternCache = /*#__PURE__*/function (_BaseLocalCache5) {
          _inherits(LocalTilingPatternCache, _BaseLocalCache5);
          var _super89 = _createSuper(LocalTilingPatternCache);
          function LocalTilingPatternCache(e) {
            _classCallCheck(this, LocalTilingPatternCache);
            return _super89.call(this, {
              onlyRefs: !0
            });
          }
          _createClass(LocalTilingPatternCache, [{
            key: "set",
            value: function set() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
              var t = arguments.length > 1 ? arguments[1] : undefined;
              var a = arguments.length > 2 ? arguments[2] : undefined;
              if (!t) throw new Error('LocalTilingPatternCache.set - expected "ref" argument.');
              this._imageCache.has(t) || this._imageCache.put(t, a);
            }
          }]);
          return LocalTilingPatternCache;
        }(BaseLocalCache);
        t.RegionalImageCache = /*#__PURE__*/function (_BaseLocalCache6) {
          _inherits(RegionalImageCache, _BaseLocalCache6);
          var _super90 = _createSuper(RegionalImageCache);
          function RegionalImageCache(e) {
            _classCallCheck(this, RegionalImageCache);
            return _super90.call(this, {
              onlyRefs: !0
            });
          }
          _createClass(RegionalImageCache, [{
            key: "set",
            value: function set() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
              var t = arguments.length > 1 ? arguments[1] : undefined;
              var a = arguments.length > 2 ? arguments[2] : undefined;
              if (!t) throw new Error('RegionalImageCache.set - expected "ref" argument.');
              this._imageCache.has(t) || this._imageCache.put(t, a);
            }
          }]);
          return RegionalImageCache;
        }(BaseLocalCache);
        var GlobalImageCache = /*#__PURE__*/function () {
          function GlobalImageCache() {
            _classCallCheck(this, GlobalImageCache);
            this._refCache = new i.RefSetCache();
            this._imageCache = new i.RefSetCache();
          }
          _createClass(GlobalImageCache, [{
            key: "_byteSize",
            get: function get() {
              var e = 0;
              var _iterator118 = _createForOfIteratorHelper(this._imageCache),
                _step118;
              try {
                for (_iterator118.s(); !(_step118 = _iterator118.n()).done;) {
                  var _t318 = _step118.value;
                  e += _t318.byteSize;
                }
              } catch (err) {
                _iterator118.e(err);
              } finally {
                _iterator118.f();
              }
              return e;
            }
          }, {
            key: "_cacheLimitReached",
            get: function get() {
              return !(this._imageCache.size < GlobalImageCache.MIN_IMAGES_TO_CACHE) && !(this._byteSize < GlobalImageCache.MAX_BYTE_SIZE);
            }
          }, {
            key: "shouldCache",
            value: function shouldCache(e, t) {
              var a = this._refCache.get(e);
              if (!a) {
                a = new Set();
                this._refCache.put(e, a);
              }
              a.add(t);
              return !(a.size < GlobalImageCache.NUM_PAGES_THRESHOLD) && !(!this._imageCache.has(e) && this._cacheLimitReached);
            }
          }, {
            key: "addByteSize",
            value: function addByteSize(e, t) {
              var a = this._imageCache.get(e);
              a && (a.byteSize || (a.byteSize = t));
            }
          }, {
            key: "getData",
            value: function getData(e, t) {
              var a = this._refCache.get(e);
              if (!a) return null;
              if (a.size < GlobalImageCache.NUM_PAGES_THRESHOLD) return null;
              var r = this._imageCache.get(e);
              if (!r) return null;
              a.add(t);
              return r;
            }
          }, {
            key: "setData",
            value: function setData(e, t) {
              if (!this._refCache.has(e)) throw new Error('GlobalImageCache.setData - expected "shouldCache" to have been called.');
              this._imageCache.has(e) || (this._cacheLimitReached ? (0, r.warn)("GlobalImageCache.setData - cache limit reached.") : this._imageCache.put(e, t));
            }
          }, {
            key: "clear",
            value: function clear() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              e || this._refCache.clear();
              this._imageCache.clear();
            }
          }]);
          return GlobalImageCache;
        }();
        _defineProperty(GlobalImageCache, "NUM_PAGES_THRESHOLD", 2);
        _defineProperty(GlobalImageCache, "MIN_IMAGES_TO_CACHE", 10);
        _defineProperty(GlobalImageCache, "MAX_BYTE_SIZE", 5 * r.MAX_IMAGE_SIZE_TO_CACHE);
        t.GlobalImageCache = GlobalImageCache;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.bidi = function bidi(e) {
          var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
          var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
          var c = !0;
          var l = e.length;
          if (0 === l || a) return createBidiText(e, c, a);
          s.length = l;
          o.length = l;
          var h,
            u,
            d = 0;
          for (h = 0; h < l; ++h) {
            s[h] = e.charAt(h);
            var _t319 = e.charCodeAt(h);
            var _a259 = "L";
            if (_t319 <= 255) _a259 = i[_t319];else if (1424 <= _t319 && _t319 <= 1524) _a259 = "R";else if (1536 <= _t319 && _t319 <= 1791) {
              _a259 = n[255 & _t319];
              _a259 || (0, r.warn)("Bidi: invalid Unicode character " + _t319.toString(16));
            } else (1792 <= _t319 && _t319 <= 2220 || 64336 <= _t319 && _t319 <= 65023 || 65136 <= _t319 && _t319 <= 65279) && (_a259 = "AL");
            "R" !== _a259 && "AL" !== _a259 && "AN" !== _a259 || d++;
            o[h] = _a259;
          }
          if (0 === d) {
            c = !0;
            return createBidiText(e, c);
          }
          if (-1 === t) if (d / l < .3 && l > 4) {
            c = !0;
            t = 0;
          } else {
            c = !1;
            t = 1;
          }
          var f = [];
          for (h = 0; h < l; ++h) f[h] = t;
          var g = isOdd(t) ? "R" : "L",
            p = g,
            m = p;
          var b,
            y = p;
          for (h = 0; h < l; ++h) "NSM" === o[h] ? o[h] = y : y = o[h];
          y = p;
          for (h = 0; h < l; ++h) {
            b = o[h];
            "EN" === b ? o[h] = "AL" === y ? "AN" : "EN" : "R" !== b && "L" !== b && "AL" !== b || (y = b);
          }
          for (h = 0; h < l; ++h) {
            b = o[h];
            "AL" === b && (o[h] = "R");
          }
          for (h = 1; h < l - 1; ++h) {
            "ES" === o[h] && "EN" === o[h - 1] && "EN" === o[h + 1] && (o[h] = "EN");
            "CS" !== o[h] || "EN" !== o[h - 1] && "AN" !== o[h - 1] || o[h + 1] !== o[h - 1] || (o[h] = o[h - 1]);
          }
          for (h = 0; h < l; ++h) if ("EN" === o[h]) {
            for (var _e444 = h - 1; _e444 >= 0 && "ET" === o[_e444]; --_e444) o[_e444] = "EN";
            for (var _e445 = h + 1; _e445 < l && "ET" === o[_e445]; ++_e445) o[_e445] = "EN";
          }
          for (h = 0; h < l; ++h) {
            b = o[h];
            "WS" !== b && "ES" !== b && "ET" !== b && "CS" !== b || (o[h] = "ON");
          }
          y = p;
          for (h = 0; h < l; ++h) {
            b = o[h];
            "EN" === b ? o[h] = "L" === y ? "L" : "EN" : "R" !== b && "L" !== b || (y = b);
          }
          for (h = 0; h < l; ++h) if ("ON" === o[h]) {
            var _e446 = findUnequal(o, h + 1, "ON");
            var _t320 = p;
            h > 0 && (_t320 = o[h - 1]);
            var _a260 = m;
            _e446 + 1 < l && (_a260 = o[_e446 + 1]);
            "L" !== _t320 && (_t320 = "R");
            "L" !== _a260 && (_a260 = "R");
            _t320 === _a260 && setValues(o, h, _e446, _t320);
            h = _e446 - 1;
          }
          for (h = 0; h < l; ++h) "ON" === o[h] && (o[h] = g);
          for (h = 0; h < l; ++h) {
            b = o[h];
            isEven(f[h]) ? "R" === b ? f[h] += 1 : "AN" !== b && "EN" !== b || (f[h] += 2) : "L" !== b && "AN" !== b && "EN" !== b || (f[h] += 1);
          }
          var w,
            S = -1,
            x = 99;
          for (h = 0, u = f.length; h < u; ++h) {
            w = f[h];
            S < w && (S = w);
            x > w && isOdd(w) && (x = w);
          }
          for (w = S; w >= x; --w) {
            var _e447 = -1;
            for (h = 0, u = f.length; h < u; ++h) if (f[h] < w) {
              if (_e447 >= 0) {
                reverseValues(s, _e447, h);
                _e447 = -1;
              }
            } else _e447 < 0 && (_e447 = h);
            _e447 >= 0 && reverseValues(s, _e447, f.length);
          }
          for (h = 0, u = s.length; h < u; ++h) {
            var _e448 = s[h];
            "<" !== _e448 && ">" !== _e448 || (s[h] = "");
          }
          return createBidiText(s.join(""), c);
        };
        var r = a(2);
        var i = ["BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "S", "B", "S", "WS", "B", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "B", "B", "B", "S", "WS", "ON", "ON", "ET", "ET", "ET", "ON", "ON", "ON", "ON", "ON", "ES", "CS", "ES", "CS", "CS", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "CS", "ON", "ON", "ON", "ON", "ON", "ON", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "ON", "ON", "ON", "ON", "ON", "ON", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "ON", "ON", "ON", "ON", "BN", "BN", "BN", "BN", "BN", "BN", "B", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "CS", "ON", "ET", "ET", "ET", "ET", "ON", "ON", "ON", "ON", "L", "ON", "ON", "BN", "ON", "ON", "ET", "ET", "EN", "EN", "ON", "L", "ON", "ON", "ON", "EN", "L", "ON", "ON", "ON", "ON", "ON", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "ON", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "ON", "L", "L", "L", "L", "L", "L", "L", "L"],
          n = ["AN", "AN", "AN", "AN", "AN", "AN", "ON", "ON", "AL", "ET", "ET", "AL", "CS", "AL", "ON", "ON", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "ET", "AN", "AN", "AL", "AL", "AL", "NSM", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AN", "ON", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "NSM", "NSM", "ON", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "AL", "AL", "AL", "AL", "AL", "AL"];
        function isOdd(e) {
          return 0 != (1 & e);
        }
        function isEven(e) {
          return 0 == (1 & e);
        }
        function findUnequal(e, t, a) {
          var r, i;
          for (r = t, i = e.length; r < i; ++r) if (e[r] !== a) return r;
          return r;
        }
        function setValues(e, t, a, r) {
          for (var _i186 = t; _i186 < a; ++_i186) e[_i186] = r;
        }
        function reverseValues(e, t, a) {
          for (var _r211 = t, _i187 = a - 1; _r211 < _i187; ++_r211, --_i187) {
            var _t321 = e[_r211];
            e[_r211] = e[_i187];
            e[_i187] = _t321;
          }
        }
        function createBidiText(e, t) {
          var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
          var r = "ltr";
          a ? r = "ttb" : t || (r = "rtl");
          return {
            str: e,
            dir: r
          };
        }
        var s = [],
          o = [];
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.ImageResizer = void 0;
        var r = a(2);
        var ImageResizer = /*#__PURE__*/function () {
          function ImageResizer(e, t) {
            _classCallCheck(this, ImageResizer);
            this._imgData = e;
            this._isMask = t;
          }
          _createClass(ImageResizer, [{
            key: "_createImage",
            value: function () {
              var _createImage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee52() {
                var e, t, a, r, i, n, s, o, c, l, h, u, d, f, g, p, _iterator119, _step119, _e449, _t322, _a261, _r212;
                return _regeneratorRuntime().wrap(function _callee52$(_context53) {
                  while (1) switch (_context53.prev = _context53.next) {
                    case 0:
                      e = this._encodeBMP(), t = new Blob([e.buffer], {
                        type: "image/bmp"
                      }), a = createImageBitmap(t), r = ImageResizer.MAX_AREA, i = ImageResizer.MAX_DIM, n = this._imgData, s = n.width, o = n.height, c = Math.max(s / i, o / i, Math.sqrt(s * o / r)), l = Math.max(c, 2), h = Math.round(10 * (c + 1.25)) / 10 / l, u = Math.floor(Math.log2(h)), d = new Array(u + 2).fill(2);
                      d[0] = l;
                      d.splice(-1, 1, h / (1 << u));
                      f = s;
                      g = o;
                      _context53.next = 7;
                      return a;
                    case 7:
                      p = _context53.sent;
                      _iterator119 = _createForOfIteratorHelper(d);
                      try {
                        for (_iterator119.s(); !(_step119 = _iterator119.n()).done;) {
                          _e449 = _step119.value;
                          _t322 = f, _a261 = g;
                          f = Math.floor(f / _e449) - 1;
                          g = Math.floor(g / _e449) - 1;
                          _r212 = new OffscreenCanvas(f, g);
                          _r212.getContext("2d").drawImage(p, 0, 0, _t322, _a261, 0, 0, f, g);
                          p = _r212.transferToImageBitmap();
                        }
                      } catch (err) {
                        _iterator119.e(err);
                      } finally {
                        _iterator119.f();
                      }
                      n.data = null;
                      n.bitmap = p;
                      n.width = f;
                      n.height = g;
                      return _context53.abrupt("return", n);
                    case 15:
                    case "end":
                      return _context53.stop();
                  }
                }, _callee52, this);
              }));
              function _createImage() {
                return _createImage2.apply(this, arguments);
              }
              return _createImage;
            }()
          }, {
            key: "_encodeBMP",
            value: function _encodeBMP() {
              var _this$_imgData = this._imgData,
                e = _this$_imgData.width,
                t = _this$_imgData.height,
                a = _this$_imgData.kind;
              var i,
                n = this._imgData.data,
                s = new Uint8Array(0),
                o = s,
                c = 0;
              switch (a) {
                case r.ImageKind.GRAYSCALE_1BPP:
                  {
                    i = 1;
                    s = new Uint8Array(this._isMask ? [255, 255, 255, 255, 0, 0, 0, 0] : [0, 0, 0, 0, 255, 255, 255, 255]);
                    var _a262 = e + 7 >> 3,
                      _r213 = _a262 + 3 & -4;
                    if (_a262 !== _r213) {
                      var _e450 = new Uint8Array(_r213 * t);
                      var _i188 = 0;
                      for (var _s87 = 0, _o70 = t * _a262; _s87 < _o70; _s87 += _a262, _i188 += _r213) _e450.set(n.subarray(_s87, _s87 + _a262), _i188);
                      n = _e450;
                    }
                    break;
                  }
                case r.ImageKind.RGB_24BPP:
                  i = 24;
                  if (3 & e) {
                    var _a263 = 3 * e,
                      _r214 = _a263 + 3 & -4,
                      _i189 = _r214 - _a263,
                      _s88 = new Uint8Array(_r214 * t);
                    var _o71 = 0;
                    for (var _e451 = 0, _r215 = t * _a263; _e451 < _r215; _e451 += _a263) {
                      var _t323 = n.subarray(_e451, _e451 + _a263);
                      for (var _e452 = 0; _e452 < _a263; _e452 += 3) {
                        _s88[_o71++] = _t323[_e452 + 2];
                        _s88[_o71++] = _t323[_e452 + 1];
                        _s88[_o71++] = _t323[_e452];
                      }
                      _o71 += _i189;
                    }
                    n = _s88;
                  } else for (var _e453 = 0, _t324 = n.length; _e453 < _t324; _e453 += 3) {
                    var _t325 = n[_e453];
                    n[_e453] = n[_e453 + 2];
                    n[_e453 + 2] = _t325;
                  }
                  break;
                case r.ImageKind.RGBA_32BPP:
                  i = 32;
                  c = 3;
                  o = new Uint8Array(68);
                  var _a264 = new DataView(o.buffer);
                  if (r.FeatureTest.isLittleEndian) {
                    _a264.setUint32(0, 255, !0);
                    _a264.setUint32(4, 65280, !0);
                    _a264.setUint32(8, 16711680, !0);
                    _a264.setUint32(12, 4278190080, !0);
                  } else {
                    _a264.setUint32(0, 4278190080, !0);
                    _a264.setUint32(4, 16711680, !0);
                    _a264.setUint32(8, 65280, !0);
                    _a264.setUint32(12, 255, !0);
                  }
                  break;
                default:
                  throw new Error("invalid format");
              }
              var l = 0;
              var h = 40 + o.length,
                u = 14 + h + s.length + n.length,
                d = new Uint8Array(u),
                f = new DataView(d.buffer);
              f.setUint16(l, 19778, !0);
              l += 2;
              f.setUint32(l, u, !0);
              l += 4;
              f.setUint32(l, 0, !0);
              l += 4;
              f.setUint32(l, 14 + h + s.length, !0);
              l += 4;
              f.setUint32(l, h, !0);
              l += 4;
              f.setInt32(l, e, !0);
              l += 4;
              f.setInt32(l, -t, !0);
              l += 4;
              f.setUint16(l, 1, !0);
              l += 2;
              f.setUint16(l, i, !0);
              l += 2;
              f.setUint32(l, c, !0);
              l += 4;
              f.setUint32(l, 0, !0);
              l += 4;
              f.setInt32(l, 0, !0);
              l += 4;
              f.setInt32(l, 0, !0);
              l += 4;
              f.setUint32(l, s.length / 4, !0);
              l += 4;
              f.setUint32(l, 0, !0);
              l += 4;
              d.set(o, l);
              l += o.length;
              d.set(s, l);
              l += s.length;
              d.set(n, l);
              return d;
            }
          }], [{
            key: "needsToBeResized",
            value: function needsToBeResized(e, t) {
              if (e <= this._goodSquareLength && t <= this._goodSquareLength) return !1;
              var a = this.MAX_DIM;
              if (e > a || t > a) return !0;
              var r = e * t;
              if (this._hasMaxArea) return r > this.MAX_AREA;
              if (r < Math.pow(this._goodSquareLength, 2)) return !1;
              if (this._areGoodDims(e, t)) {
                this._goodSquareLength = Math.max(this._goodSquareLength, Math.floor(Math.sqrt(e * t)));
                return !1;
              }
              this._goodSquareLength = this._guessMax(this._goodSquareLength, a, 128, 0);
              return r > (this.MAX_AREA = Math.pow(this._goodSquareLength, 2));
            }
          }, {
            key: "MAX_DIM",
            get: function get() {
              return (0, r.shadow)(this, "MAX_DIM", this._guessMax(2048, 65537, 0, 1));
            }
          }, {
            key: "MAX_AREA",
            get: function get() {
              this._hasMaxArea = !0;
              return (0, r.shadow)(this, "MAX_AREA", Math.pow(this._guessMax(ImageResizer._goodSquareLength, this.MAX_DIM, 128, 0), 2));
            },
            set: function set(e) {
              if (e >= 0) {
                this._hasMaxArea = !0;
                (0, r.shadow)(this, "MAX_AREA", e);
              }
            }
          }, {
            key: "setMaxArea",
            value: function setMaxArea(e) {
              this._hasMaxArea || (this.MAX_AREA = e >> 2);
            }
          }, {
            key: "_areGoodDims",
            value: function _areGoodDims(e, t) {
              try {
                var _a265 = new OffscreenCanvas(e, t),
                  _r216 = _a265.getContext("2d");
                _r216.fillRect(0, 0, 1, 1);
                var _i190 = _r216.getImageData(0, 0, 1, 1).data[3];
                _a265.width = _a265.height = 1;
                return 0 !== _i190;
              } catch (e) {
                return !1;
              }
            }
          }, {
            key: "_guessMax",
            value: function _guessMax(e, t, a, r) {
              for (; e + a + 1 < t;) {
                var _a266 = Math.floor((e + t) / 2),
                  _i191 = r || _a266;
                this._areGoodDims(_a266, _i191) ? e = _a266 : t = _a266;
              }
              return e;
            }
          }, {
            key: "createImage",
            value: function () {
              var _createImage3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee53(e) {
                var t,
                  _args54 = arguments;
                return _regeneratorRuntime().wrap(function _callee53$(_context54) {
                  while (1) switch (_context54.prev = _context54.next) {
                    case 0:
                      t = _args54.length > 1 && _args54[1] !== undefined ? _args54[1] : !1;
                      return _context54.abrupt("return", new ImageResizer(e, t)._createImage());
                    case 2:
                    case "end":
                      return _context54.stop();
                  }
                }, _callee53);
              }));
              function createImage(_x121) {
                return _createImage3.apply(this, arguments);
              }
              return createImage;
            }()
          }]);
          return ImageResizer;
        }();
        t.ImageResizer = ImageResizer;
        ImageResizer._goodSquareLength = 2048;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.MurmurHash3_64 = void 0;
        var r = a(2);
        var i = 3285377520,
          n = 4294901760,
          s = 65535;
        t.MurmurHash3_64 = /*#__PURE__*/function () {
          function MurmurHash3_64(e) {
            _classCallCheck(this, MurmurHash3_64);
            this.h1 = e ? 4294967295 & e : i;
            this.h2 = e ? 4294967295 & e : i;
          }
          _createClass(MurmurHash3_64, [{
            key: "update",
            value: function update(e) {
              var t, a;
              if ("string" == typeof e) {
                t = new Uint8Array(2 * e.length);
                a = 0;
                for (var _r217 = 0, _i192 = e.length; _r217 < _i192; _r217++) {
                  var _i193 = e.charCodeAt(_r217);
                  if (_i193 <= 255) t[a++] = _i193;else {
                    t[a++] = _i193 >>> 8;
                    t[a++] = 255 & _i193;
                  }
                }
              } else {
                if (!(0, r.isArrayBuffer)(e)) throw new Error("Wrong data format in MurmurHash3_64_update. Input must be a string or array.");
                t = e.slice();
                a = t.byteLength;
              }
              var i = a >> 2,
                o = a - 4 * i,
                c = new Uint32Array(t.buffer, 0, i);
              var l = 0,
                h = 0,
                u = this.h1,
                d = this.h2;
              var f = 3432918353,
                g = 461845907,
                p = 11601,
                m = 13715;
              for (var _e454 = 0; _e454 < i; _e454++) if (1 & _e454) {
                l = c[_e454];
                l = l * f & n | l * p & s;
                l = l << 15 | l >>> 17;
                l = l * g & n | l * m & s;
                u ^= l;
                u = u << 13 | u >>> 19;
                u = 5 * u + 3864292196;
              } else {
                h = c[_e454];
                h = h * f & n | h * p & s;
                h = h << 15 | h >>> 17;
                h = h * g & n | h * m & s;
                d ^= h;
                d = d << 13 | d >>> 19;
                d = 5 * d + 3864292196;
              }
              l = 0;
              switch (o) {
                case 3:
                  l ^= t[4 * i + 2] << 16;
                case 2:
                  l ^= t[4 * i + 1] << 8;
                case 1:
                  l ^= t[4 * i];
                  l = l * f & n | l * p & s;
                  l = l << 15 | l >>> 17;
                  l = l * g & n | l * m & s;
                  1 & i ? u ^= l : d ^= l;
              }
              this.h1 = u;
              this.h2 = d;
            }
          }, {
            key: "hexdigest",
            value: function hexdigest() {
              var e = this.h1,
                t = this.h2;
              e ^= t >>> 1;
              e = 3981806797 * e & n | 36045 * e & s;
              t = 4283543511 * t & n | (2950163797 * (t << 16 | e >>> 16) & n) >>> 16;
              e ^= t >>> 1;
              e = 444984403 * e & n | 60499 * e & s;
              t = 3301882366 * t & n | (3120437893 * (t << 16 | e >>> 16) & n) >>> 16;
              e ^= t >>> 1;
              return (e >>> 0).toString(16).padStart(8, "0") + (t >>> 0).toString(16).padStart(8, "0");
            }
          }]);
          return MurmurHash3_64;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.OperatorList = void 0;
        var r = a(2);
        function addState(e, t, a, r, i) {
          var n = e;
          for (var _e455 = 0, _a267 = t.length - 1; _e455 < _a267; _e455++) {
            var _n116;
            var _a268 = t[_e455];
            n = (_n116 = n)[_a268] || (_n116[_a268] = []);
          }
          n[t.at(-1)] = {
            checkFn: a,
            iterateFn: r,
            processFn: i
          };
        }
        var i = [];
        addState(i, [r.OPS.save, r.OPS.transform, r.OPS.paintInlineImageXObject, r.OPS.restore], null, function iterateInlineImageGroup(e, t) {
          var a = e.fnArray,
            i = (t - (e.iCurr - 3)) % 4;
          switch (i) {
            case 0:
              return a[t] === r.OPS.save;
            case 1:
              return a[t] === r.OPS.transform;
            case 2:
              return a[t] === r.OPS.paintInlineImageXObject;
            case 3:
              return a[t] === r.OPS.restore;
          }
          throw new Error("iterateInlineImageGroup - invalid pos: ".concat(i));
        }, function foundInlineImageGroup(e, t) {
          var a = e.fnArray,
            i = e.argsArray,
            n = e.iCurr,
            s = n - 3,
            o = n - 2,
            c = n - 1,
            l = Math.min(Math.floor((t - s) / 4), 200);
          if (l < 10) return t - (t - s) % 4;
          var h = 0;
          var u = [];
          var d = 0,
            f = 1,
            g = 1;
          for (var _e456 = 0; _e456 < l; _e456++) {
            var _t326 = i[o + (_e456 << 2)],
              _a269 = i[c + (_e456 << 2)][0];
            if (f + _a269.width > 1e3) {
              h = Math.max(h, f);
              g += d + 2;
              f = 0;
              d = 0;
            }
            u.push({
              transform: _t326,
              x: f,
              y: g,
              w: _a269.width,
              h: _a269.height
            });
            f += _a269.width + 2;
            d = Math.max(d, _a269.height);
          }
          var p = Math.max(h, f) + 1,
            m = g + d + 1,
            b = new Uint8Array(p * m * 4),
            y = p << 2;
          for (var _e457 = 0; _e457 < l; _e457++) {
            var _t327 = i[c + (_e457 << 2)][0].data,
              _a270 = u[_e457].w << 2;
            var _r218 = 0,
              _n117 = u[_e457].x + u[_e457].y * p << 2;
            b.set(_t327.subarray(0, _a270), _n117 - y);
            for (var _i194 = 0, _s89 = u[_e457].h; _i194 < _s89; _i194++) {
              b.set(_t327.subarray(_r218, _r218 + _a270), _n117);
              _r218 += _a270;
              _n117 += y;
            }
            b.set(_t327.subarray(_r218 - _a270, _r218), _n117);
            for (; _n117 >= 0;) {
              _t327[_n117 - 4] = _t327[_n117];
              _t327[_n117 - 3] = _t327[_n117 + 1];
              _t327[_n117 - 2] = _t327[_n117 + 2];
              _t327[_n117 - 1] = _t327[_n117 + 3];
              _t327[_n117 + _a270] = _t327[_n117 + _a270 - 4];
              _t327[_n117 + _a270 + 1] = _t327[_n117 + _a270 - 3];
              _t327[_n117 + _a270 + 2] = _t327[_n117 + _a270 - 2];
              _t327[_n117 + _a270 + 3] = _t327[_n117 + _a270 - 1];
              _n117 -= y;
            }
          }
          var w = {
            width: p,
            height: m
          };
          if (e.isOffscreenCanvasSupported) {
            var _e458 = new OffscreenCanvas(p, m);
            _e458.getContext("2d").putImageData(new ImageData(new Uint8ClampedArray(b.buffer), p, m), 0, 0);
            w.bitmap = _e458.transferToImageBitmap();
            w.data = null;
          } else {
            w.kind = r.ImageKind.RGBA_32BPP;
            w.data = b;
          }
          a.splice(s, 4 * l, r.OPS.paintInlineImageXObjectGroup);
          i.splice(s, 4 * l, [w, u]);
          return s + 1;
        });
        addState(i, [r.OPS.save, r.OPS.transform, r.OPS.paintImageMaskXObject, r.OPS.restore], null, function iterateImageMaskGroup(e, t) {
          var a = e.fnArray,
            i = (t - (e.iCurr - 3)) % 4;
          switch (i) {
            case 0:
              return a[t] === r.OPS.save;
            case 1:
              return a[t] === r.OPS.transform;
            case 2:
              return a[t] === r.OPS.paintImageMaskXObject;
            case 3:
              return a[t] === r.OPS.restore;
          }
          throw new Error("iterateImageMaskGroup - invalid pos: ".concat(i));
        }, function foundImageMaskGroup(e, t) {
          var a = e.fnArray,
            i = e.argsArray,
            n = e.iCurr,
            s = n - 3,
            o = n - 2,
            c = n - 1;
          var l = Math.floor((t - s) / 4);
          if (l < 10) return t - (t - s) % 4;
          var h,
            u,
            d = !1;
          var f = i[c][0],
            g = i[o][0],
            p = i[o][1],
            m = i[o][2],
            b = i[o][3];
          if (p === m) {
            d = !0;
            h = o + 4;
            var _e459 = c + 4;
            for (var _t328 = 1; _t328 < l; _t328++, h += 4, _e459 += 4) {
              u = i[h];
              if (i[_e459][0] !== f || u[0] !== g || u[1] !== p || u[2] !== m || u[3] !== b) {
                _t328 < 10 ? d = !1 : l = _t328;
                break;
              }
            }
          }
          if (d) {
            l = Math.min(l, 1e3);
            var _e460 = new Float32Array(2 * l);
            h = o;
            for (var _t329 = 0; _t329 < l; _t329++, h += 4) {
              u = i[h];
              _e460[_t329 << 1] = u[4];
              _e460[1 + (_t329 << 1)] = u[5];
            }
            a.splice(s, 4 * l, r.OPS.paintImageMaskXObjectRepeat);
            i.splice(s, 4 * l, [f, g, p, m, b, _e460]);
          } else {
            l = Math.min(l, 100);
            var _e461 = [];
            for (var _t330 = 0; _t330 < l; _t330++) {
              u = i[o + (_t330 << 2)];
              var _a271 = i[c + (_t330 << 2)][0];
              _e461.push({
                data: _a271.data,
                width: _a271.width,
                height: _a271.height,
                interpolate: _a271.interpolate,
                count: _a271.count,
                transform: u
              });
            }
            a.splice(s, 4 * l, r.OPS.paintImageMaskXObjectGroup);
            i.splice(s, 4 * l, [_e461]);
          }
          return s + 1;
        });
        addState(i, [r.OPS.save, r.OPS.transform, r.OPS.paintImageXObject, r.OPS.restore], function (e) {
          var t = e.argsArray,
            a = e.iCurr - 2;
          return 0 === t[a][1] && 0 === t[a][2];
        }, function iterateImageGroup(e, t) {
          var a = e.fnArray,
            i = e.argsArray,
            n = (t - (e.iCurr - 3)) % 4;
          switch (n) {
            case 0:
              return a[t] === r.OPS.save;
            case 1:
              if (a[t] !== r.OPS.transform) return !1;
              var _n118 = e.iCurr - 2,
                _s90 = i[_n118][0],
                _o72 = i[_n118][3];
              return i[t][0] === _s90 && 0 === i[t][1] && 0 === i[t][2] && i[t][3] === _o72;
            case 2:
              if (a[t] !== r.OPS.paintImageXObject) return !1;
              var _c45 = i[e.iCurr - 1][0];
              return i[t][0] === _c45;
            case 3:
              return a[t] === r.OPS.restore;
          }
          throw new Error("iterateImageGroup - invalid pos: ".concat(n));
        }, function (e, t) {
          var a = e.fnArray,
            i = e.argsArray,
            n = e.iCurr,
            s = n - 3,
            o = n - 2,
            c = i[n - 1][0],
            l = i[o][0],
            h = i[o][3],
            u = Math.min(Math.floor((t - s) / 4), 1e3);
          if (u < 3) return t - (t - s) % 4;
          var d = new Float32Array(2 * u);
          var f = o;
          for (var _e462 = 0; _e462 < u; _e462++, f += 4) {
            var _t331 = i[f];
            d[_e462 << 1] = _t331[4];
            d[1 + (_e462 << 1)] = _t331[5];
          }
          var g = [c, l, h, d];
          a.splice(s, 4 * u, r.OPS.paintImageXObjectRepeat);
          i.splice(s, 4 * u, g);
          return s + 1;
        });
        addState(i, [r.OPS.beginText, r.OPS.setFont, r.OPS.setTextMatrix, r.OPS.showText, r.OPS.endText], null, function iterateShowTextGroup(e, t) {
          var a = e.fnArray,
            i = e.argsArray,
            n = (t - (e.iCurr - 4)) % 5;
          switch (n) {
            case 0:
              return a[t] === r.OPS.beginText;
            case 1:
              return a[t] === r.OPS.setFont;
            case 2:
              return a[t] === r.OPS.setTextMatrix;
            case 3:
              if (a[t] !== r.OPS.showText) return !1;
              var _n119 = e.iCurr - 3,
                _s91 = i[_n119][0],
                _o73 = i[_n119][1];
              return i[t][0] === _s91 && i[t][1] === _o73;
            case 4:
              return a[t] === r.OPS.endText;
          }
          throw new Error("iterateShowTextGroup - invalid pos: ".concat(n));
        }, function (e, t) {
          var a = e.fnArray,
            r = e.argsArray,
            i = e.iCurr,
            n = i - 4,
            s = i - 3,
            o = i - 2,
            c = i - 1,
            l = i,
            h = r[s][0],
            u = r[s][1];
          var d = Math.min(Math.floor((t - n) / 5), 1e3);
          if (d < 3) return t - (t - n) % 5;
          var f = n;
          if (n >= 4 && a[n - 4] === a[s] && a[n - 3] === a[o] && a[n - 2] === a[c] && a[n - 1] === a[l] && r[n - 4][0] === h && r[n - 4][1] === u) {
            d++;
            f -= 5;
          }
          var g = f + 4;
          for (var _e463 = 1; _e463 < d; _e463++) {
            a.splice(g, 3);
            r.splice(g, 3);
            g += 2;
          }
          return g + 1;
        });
        var NullOptimizer = /*#__PURE__*/function () {
          function NullOptimizer(e) {
            _classCallCheck(this, NullOptimizer);
            this.queue = e;
          }
          _createClass(NullOptimizer, [{
            key: "_optimize",
            value: function _optimize() {}
          }, {
            key: "push",
            value: function push(e, t) {
              this.queue.fnArray.push(e);
              this.queue.argsArray.push(t);
              this._optimize();
            }
          }, {
            key: "flush",
            value: function flush() {}
          }, {
            key: "reset",
            value: function reset() {}
          }]);
          return NullOptimizer;
        }();
        var QueueOptimizer = /*#__PURE__*/function (_NullOptimizer) {
          _inherits(QueueOptimizer, _NullOptimizer);
          var _super91 = _createSuper(QueueOptimizer);
          function QueueOptimizer(e) {
            var _this91;
            _classCallCheck(this, QueueOptimizer);
            _this91 = _super91.call(this, e);
            _this91.state = null;
            _this91.context = {
              iCurr: 0,
              fnArray: e.fnArray,
              argsArray: e.argsArray,
              isOffscreenCanvasSupported: !1
            };
            _this91.match = null;
            _this91.lastProcessed = 0;
            return _this91;
          }
          _createClass(QueueOptimizer, [{
            key: "isOffscreenCanvasSupported",
            set: function set(e) {
              this.context.isOffscreenCanvasSupported = e;
            }
          }, {
            key: "_optimize",
            value: function _optimize() {
              var e = this.queue.fnArray;
              var t = this.lastProcessed,
                a = e.length,
                r = this.state,
                n = this.match;
              if (!r && !n && t + 1 === a && !i[e[t]]) {
                this.lastProcessed = a;
                return;
              }
              var s = this.context;
              for (; t < a;) {
                if (n) {
                  if ((0, n.iterateFn)(s, t)) {
                    t++;
                    continue;
                  }
                  t = (0, n.processFn)(s, t + 1);
                  a = e.length;
                  n = null;
                  r = null;
                  if (t >= a) break;
                }
                r = (r || i)[e[t]];
                if (r && !Array.isArray(r)) {
                  s.iCurr = t;
                  t++;
                  if (!r.checkFn || (0, r.checkFn)(s)) {
                    n = r;
                    r = null;
                  } else r = null;
                } else t++;
              }
              this.state = r;
              this.match = n;
              this.lastProcessed = t;
            }
          }, {
            key: "flush",
            value: function flush() {
              for (; this.match;) {
                var _e464 = this.queue.fnArray.length;
                this.lastProcessed = (0, this.match.processFn)(this.context, _e464);
                this.match = null;
                this.state = null;
                this._optimize();
              }
            }
          }, {
            key: "reset",
            value: function reset() {
              this.state = null;
              this.match = null;
              this.lastProcessed = 0;
            }
          }]);
          return QueueOptimizer;
        }(NullOptimizer);
        var OperatorList = /*#__PURE__*/function () {
          function OperatorList() {
            var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
            var t = arguments.length > 1 ? arguments[1] : undefined;
            _classCallCheck(this, OperatorList);
            this._streamSink = t;
            this.fnArray = [];
            this.argsArray = [];
            !t || e & r.RenderingIntentFlag.OPLIST ? this.optimizer = new NullOptimizer(this) : this.optimizer = new QueueOptimizer(this);
            this.dependencies = new Set();
            this._totalLength = 0;
            this.weight = 0;
            this._resolved = t ? null : Promise.resolve();
          }
          _createClass(OperatorList, [{
            key: "isOffscreenCanvasSupported",
            set: function set(e) {
              this.optimizer.isOffscreenCanvasSupported = e;
            }
          }, {
            key: "length",
            get: function get() {
              return this.argsArray.length;
            }
          }, {
            key: "ready",
            get: function get() {
              return this._resolved || this._streamSink.ready;
            }
          }, {
            key: "totalLength",
            get: function get() {
              return this._totalLength + this.length;
            }
          }, {
            key: "addOp",
            value: function addOp(e, t) {
              this.optimizer.push(e, t);
              this.weight++;
              this._streamSink && (this.weight >= OperatorList.CHUNK_SIZE || this.weight >= OperatorList.CHUNK_SIZE_ABOUT && (e === r.OPS.restore || e === r.OPS.endText)) && this.flush();
            }
          }, {
            key: "addImageOps",
            value: function addImageOps(e, t, a) {
              void 0 !== a && this.addOp(r.OPS.beginMarkedContentProps, ["OC", a]);
              this.addOp(e, t);
              void 0 !== a && this.addOp(r.OPS.endMarkedContent, []);
            }
          }, {
            key: "addDependency",
            value: function addDependency(e) {
              if (!this.dependencies.has(e)) {
                this.dependencies.add(e);
                this.addOp(r.OPS.dependency, [e]);
              }
            }
          }, {
            key: "addDependencies",
            value: function addDependencies(e) {
              var _iterator120 = _createForOfIteratorHelper(e),
                _step120;
              try {
                for (_iterator120.s(); !(_step120 = _iterator120.n()).done;) {
                  var _t332 = _step120.value;
                  this.addDependency(_t332);
                }
              } catch (err) {
                _iterator120.e(err);
              } finally {
                _iterator120.f();
              }
            }
          }, {
            key: "addOpList",
            value: function addOpList(e) {
              if (e instanceof OperatorList) {
                var _iterator121 = _createForOfIteratorHelper(e.dependencies),
                  _step121;
                try {
                  for (_iterator121.s(); !(_step121 = _iterator121.n()).done;) {
                    var _t334 = _step121.value;
                    this.dependencies.add(_t334);
                  }
                } catch (err) {
                  _iterator121.e(err);
                } finally {
                  _iterator121.f();
                }
                for (var _t333 = 0, _a272 = e.length; _t333 < _a272; _t333++) this.addOp(e.fnArray[_t333], e.argsArray[_t333]);
              } else (0, r.warn)('addOpList - ignoring invalid "opList" parameter.');
            }
          }, {
            key: "getIR",
            value: function getIR() {
              return {
                fnArray: this.fnArray,
                argsArray: this.argsArray,
                length: this.length
              };
            }
          }, {
            key: "_transfers",
            get: function get() {
              var e = [],
                t = this.fnArray,
                a = this.argsArray,
                i = this.length;
              for (var _n120 = 0; _n120 < i; _n120++) switch (t[_n120]) {
                case r.OPS.paintInlineImageXObject:
                case r.OPS.paintInlineImageXObjectGroup:
                case r.OPS.paintImageMaskXObject:
                  var _t335 = a[_n120][0];
                  !_t335.cached && _t335.data && _t335.data.buffer instanceof ArrayBuffer && e.push(_t335.data.buffer);
              }
              return e;
            }
          }, {
            key: "flush",
            value: function flush() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              this.optimizer.flush();
              var a = this.length;
              this._totalLength += a;
              this._streamSink.enqueue({
                fnArray: this.fnArray,
                argsArray: this.argsArray,
                lastChunk: e,
                separateAnnots: t,
                length: a
              }, 1, this._transfers);
              this.dependencies.clear();
              this.fnArray.length = 0;
              this.argsArray.length = 0;
              this.weight = 0;
              this.optimizer.reset();
            }
          }]);
          return OperatorList;
        }();
        _defineProperty(OperatorList, "CHUNK_SIZE", 1e3);
        _defineProperty(OperatorList, "CHUNK_SIZE_ABOUT", OperatorList.CHUNK_SIZE - 5);
        t.OperatorList = OperatorList;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.PDFImage = void 0;
        var r = a(2),
          i = a(28),
          n = a(5),
          s = a(12),
          o = a(18),
          c = a(61),
          l = a(26),
          h = a(30),
          u = a(4);
        function decodeAndClamp(e, t, a, r) {
          (e = t + e * a) < 0 ? e = 0 : e > r && (e = r);
          return e;
        }
        function resizeImageMask(e, t, a, r, i, n) {
          var s = i * n;
          var o;
          o = t <= 8 ? new Uint8Array(s) : t <= 16 ? new Uint16Array(s) : new Uint32Array(s);
          var c = a / i,
            l = r / n;
          var h,
            u,
            d,
            f,
            g = 0;
          var p = new Uint16Array(i),
            m = a;
          for (h = 0; h < i; h++) p[h] = Math.floor(h * c);
          for (h = 0; h < n; h++) {
            d = Math.floor(h * l) * m;
            for (u = 0; u < i; u++) {
              f = d + p[u];
              o[g++] = e[f];
            }
          }
          return o;
        }
        var PDFImage = /*#__PURE__*/function () {
          function PDFImage(_ref85) {
            var e = _ref85.xref,
              t = _ref85.res,
              a = _ref85.image,
              _ref85$isInline = _ref85.isInline,
              i = _ref85$isInline === void 0 ? !1 : _ref85$isInline,
              _ref85$smask = _ref85.smask,
              o = _ref85$smask === void 0 ? null : _ref85$smask,
              _ref85$mask = _ref85.mask,
              c = _ref85$mask === void 0 ? null : _ref85$mask,
              _ref85$isMask = _ref85.isMask,
              l = _ref85$isMask === void 0 ? !1 : _ref85$isMask,
              d = _ref85.pdfFunctionFactory,
              f = _ref85.localColorSpaceCache;
            _classCallCheck(this, PDFImage);
            this.image = a;
            var g = a.dict,
              p = g.get("F", "Filter");
            var m;
            if (p instanceof u.Name) m = p.name;else if (Array.isArray(p)) {
              var _t336 = e.fetchIfRef(p[0]);
              _t336 instanceof u.Name && (m = _t336.name);
            }
            switch (m) {
              case "JPXDecode":
                var _e465 = new h.JpxImage();
                _e465.parseImageProperties(a.stream);
                a.stream.reset();
                a.width = _e465.width;
                a.height = _e465.height;
                a.bitsPerComponent = _e465.bitsPerComponent;
                a.numComps = _e465.componentsCount;
                break;
              case "JBIG2Decode":
                a.bitsPerComponent = 1;
                a.numComps = 1;
            }
            var b = g.get("W", "Width"),
              y = g.get("H", "Height");
            if (Number.isInteger(a.width) && a.width > 0 && Number.isInteger(a.height) && a.height > 0 && (a.width !== b || a.height !== y)) {
              (0, r.warn)("PDFImage - using the Width/Height of the image data, rather than the image dictionary.");
              b = a.width;
              y = a.height;
            }
            if (b < 1 || y < 1) throw new r.FormatError("Invalid image width: ".concat(b, " or height: ").concat(y));
            this.width = b;
            this.height = y;
            this.interpolate = g.get("I", "Interpolate");
            this.imageMask = g.get("IM", "ImageMask") || !1;
            this.matte = g.get("Matte") || !1;
            var w = a.bitsPerComponent;
            if (!w) {
              w = g.get("BPC", "BitsPerComponent");
              if (!w) {
                if (!this.imageMask) throw new r.FormatError("Bits per component missing in image: ".concat(this.imageMask));
                w = 1;
              }
            }
            this.bpc = w;
            if (!this.imageMask) {
              var _n121 = g.getRaw("CS") || g.getRaw("ColorSpace");
              if (!_n121) {
                (0, r.info)("JPX images (which do not require color spaces)");
                switch (a.numComps) {
                  case 1:
                    _n121 = u.Name.get("DeviceGray");
                    break;
                  case 3:
                    _n121 = u.Name.get("DeviceRGB");
                    break;
                  case 4:
                    _n121 = u.Name.get("DeviceCMYK");
                    break;
                  default:
                    throw new Error("JPX images with ".concat(a.numComps, " color components not supported."));
                }
              }
              this.colorSpace = s.ColorSpace.parse({
                cs: _n121,
                xref: e,
                resources: i ? t : null,
                pdfFunctionFactory: d,
                localColorSpaceCache: f
              });
              this.numComps = this.colorSpace.numComps;
            }
            this.decode = g.getArray("D", "Decode");
            this.needsDecode = !1;
            if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode, w) || l && !s.ColorSpace.isDefaultDecode(this.decode, 1))) {
              this.needsDecode = !0;
              var _e466 = (1 << w) - 1;
              this.decodeCoefficients = [];
              this.decodeAddends = [];
              var _t337 = this.colorSpace && "Indexed" === this.colorSpace.name;
              for (var _a273 = 0, _r219 = 0; _a273 < this.decode.length; _a273 += 2, ++_r219) {
                var _i195 = this.decode[_a273],
                  _n122 = this.decode[_a273 + 1];
                this.decodeCoefficients[_r219] = _t337 ? (_n122 - _i195) / _e466 : _n122 - _i195;
                this.decodeAddends[_r219] = _t337 ? _i195 : _e466 * _i195;
              }
            }
            if (o) this.smask = new PDFImage({
              xref: e,
              res: t,
              image: o,
              isInline: i,
              pdfFunctionFactory: d,
              localColorSpaceCache: f
            });else if (c) if (c instanceof n.BaseStream) {
              c.dict.get("IM", "ImageMask") ? this.mask = new PDFImage({
                xref: e,
                res: t,
                image: c,
                isInline: i,
                isMask: !0,
                pdfFunctionFactory: d,
                localColorSpaceCache: f
              }) : (0, r.warn)("Ignoring /Mask in image without /ImageMask.");
            } else this.mask = c;
          }
          _createClass(PDFImage, [{
            key: "drawWidth",
            get: function get() {
              return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);
            }
          }, {
            key: "drawHeight",
            get: function get() {
              return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);
            }
          }, {
            key: "decodeBuffer",
            value: function decodeBuffer(e) {
              var t = this.bpc,
                a = this.numComps,
                r = this.decodeAddends,
                i = this.decodeCoefficients,
                n = (1 << t) - 1;
              var s, o;
              if (1 === t) {
                for (s = 0, o = e.length; s < o; s++) e[s] = +!e[s];
                return;
              }
              var c = 0;
              for (s = 0, o = this.width * this.height; s < o; s++) for (var _t338 = 0; _t338 < a; _t338++) {
                e[c] = decodeAndClamp(e[c], r[_t338], i[_t338], n);
                c++;
              }
            }
          }, {
            key: "getComponents",
            value: function getComponents(e) {
              var t = this.bpc;
              if (8 === t) return e;
              var a = this.width,
                r = this.height,
                i = this.numComps,
                n = a * r * i;
              var s,
                o = 0;
              s = t <= 8 ? new Uint8Array(n) : t <= 16 ? new Uint16Array(n) : new Uint32Array(n);
              var c = a * i,
                l = (1 << t) - 1;
              var h,
                u,
                d = 0;
              if (1 === t) {
                var _t339, _a274, _i196;
                for (var _n123 = 0; _n123 < r; _n123++) {
                  _a274 = d + (-8 & c);
                  _i196 = d + c;
                  for (; d < _a274;) {
                    u = e[o++];
                    s[d] = u >> 7 & 1;
                    s[d + 1] = u >> 6 & 1;
                    s[d + 2] = u >> 5 & 1;
                    s[d + 3] = u >> 4 & 1;
                    s[d + 4] = u >> 3 & 1;
                    s[d + 5] = u >> 2 & 1;
                    s[d + 6] = u >> 1 & 1;
                    s[d + 7] = 1 & u;
                    d += 8;
                  }
                  if (d < _i196) {
                    u = e[o++];
                    _t339 = 128;
                    for (; d < _i196;) {
                      s[d++] = +!!(u & _t339);
                      _t339 >>= 1;
                    }
                  }
                }
              } else {
                var _a275 = 0;
                u = 0;
                for (d = 0, h = n; d < h; ++d) {
                  if (d % c == 0) {
                    u = 0;
                    _a275 = 0;
                  }
                  for (; _a275 < t;) {
                    u = u << 8 | e[o++];
                    _a275 += 8;
                  }
                  var _r220 = _a275 - t;
                  var _i197 = u >> _r220;
                  _i197 < 0 ? _i197 = 0 : _i197 > l && (_i197 = l);
                  s[d] = _i197;
                  u &= (1 << _r220) - 1;
                  _a275 = _r220;
                }
              }
              return s;
            }
          }, {
            key: "fillOpacity",
            value: function fillOpacity(e, t, a, i, n) {
              var s = this.smask,
                o = this.mask;
              var c, l, h, u, d, f;
              if (s) {
                l = s.width;
                h = s.height;
                c = new Uint8ClampedArray(l * h);
                s.fillGrayBuffer(c);
                l === t && h === a || (c = resizeImageMask(c, s.bpc, l, h, t, a));
              } else if (o) if (o instanceof PDFImage) {
                l = o.width;
                h = o.height;
                c = new Uint8ClampedArray(l * h);
                o.numComps = 1;
                o.fillGrayBuffer(c);
                for (u = 0, d = l * h; u < d; ++u) c[u] = 255 - c[u];
                l === t && h === a || (c = resizeImageMask(c, o.bpc, l, h, t, a));
              } else {
                if (!Array.isArray(o)) throw new r.FormatError("Unknown mask format.");
                {
                  c = new Uint8ClampedArray(t * a);
                  var _e467 = this.numComps;
                  for (u = 0, d = t * a; u < d; ++u) {
                    var _t340 = 0;
                    var _a276 = u * _e467;
                    for (f = 0; f < _e467; ++f) {
                      var _e468 = n[_a276 + f],
                        _r221 = 2 * f;
                      if (_e468 < o[_r221] || _e468 > o[_r221 + 1]) {
                        _t340 = 255;
                        break;
                      }
                    }
                    c[u] = _t340;
                  }
                }
              }
              if (c) for (u = 0, f = 3, d = t * i; u < d; ++u, f += 4) e[f] = c[u];else for (u = 0, f = 3, d = t * i; u < d; ++u, f += 4) e[f] = 255;
            }
          }, {
            key: "undoPreblend",
            value: function undoPreblend(e, t, a) {
              var r = this.smask && this.smask.matte;
              if (!r) return;
              var i = this.colorSpace.getRgb(r, 0),
                n = i[0],
                s = i[1],
                o = i[2],
                c = t * a * 4;
              for (var _t341 = 0; _t341 < c; _t341 += 4) {
                var _a277 = e[_t341 + 3];
                if (0 === _a277) {
                  e[_t341] = 255;
                  e[_t341 + 1] = 255;
                  e[_t341 + 2] = 255;
                  continue;
                }
                var _r222 = 255 / _a277;
                e[_t341] = (e[_t341] - n) * _r222 + n;
                e[_t341 + 1] = (e[_t341 + 1] - s) * _r222 + s;
                e[_t341 + 2] = (e[_t341 + 2] - o) * _r222 + o;
              }
            }
          }, {
            key: "createImageData",
            value: function () {
              var _createImageData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee54() {
                var e,
                  t,
                  a,
                  i,
                  n,
                  s,
                  o,
                  h,
                  u,
                  d,
                  f,
                  _e469,
                  _s92,
                  _t342,
                  _e470,
                  _a278,
                  _e471,
                  _t343,
                  _t344,
                  g,
                  p,
                  m,
                  b,
                  y,
                  w,
                  S,
                  x,
                  C,
                  _args55 = arguments;
                return _regeneratorRuntime().wrap(function _callee54$(_context55) {
                  while (1) switch (_context55.prev = _context55.next) {
                    case 0:
                      e = _args55.length > 0 && _args55[0] !== undefined ? _args55[0] : !1;
                      t = _args55.length > 1 && _args55[1] !== undefined ? _args55[1] : !1;
                      a = this.drawWidth, i = this.drawHeight, n = {
                        width: a,
                        height: i,
                        interpolate: this.interpolate,
                        kind: 0,
                        data: null
                      }, s = this.numComps, o = this.width, h = this.height, u = this.bpc, d = o * s * u + 7 >> 3, f = t && c.ImageResizer.needsToBeResized(a, i);
                      if (e) {
                        _context55.next = 39;
                        break;
                      }
                      "DeviceGray" === this.colorSpace.name && 1 === u ? _e469 = r.ImageKind.GRAYSCALE_1BPP : "DeviceRGB" !== this.colorSpace.name || 8 !== u || this.needsDecode || (_e469 = r.ImageKind.RGB_24BPP);
                      if (!(_e469 && !this.smask && !this.mask && a === o && i === h)) {
                        _context55.next = 13;
                        break;
                      }
                      _s92 = this.getImageBytes(h * d, {});
                      if (!t) {
                        _context55.next = 9;
                        break;
                      }
                      return _context55.abrupt("return", f ? c.ImageResizer.createImage({
                        data: _s92,
                        kind: _e469,
                        width: a,
                        height: i,
                        interpolate: this.interpolate
                      }, this.needsDecode) : this.createBitmap(_e469, o, h, _s92));
                    case 9:
                      n.kind = _e469;
                      n.data = _s92;
                      if (this.needsDecode) {
                        (0, r.assert)(_e469 === r.ImageKind.GRAYSCALE_1BPP, "PDFImage.createImageData: The image must be grayscale.");
                        _t342 = n.data;
                        for (_e470 = 0, _a278 = _t342.length; _e470 < _a278; _e470++) _t342[_e470] ^= 255;
                      }
                      return _context55.abrupt("return", n);
                    case 13:
                      if (!(this.image instanceof l.JpegStream && !this.smask && !this.mask && !this.needsDecode)) {
                        _context55.next = 39;
                        break;
                      }
                      _e471 = h * d;
                      if (!(t && !f)) {
                        _context55.next = 32;
                        break;
                      }
                      _t343 = !1;
                      _context55.t0 = this.colorSpace.name;
                      _context55.next = _context55.t0 === "DeviceGray" ? 20 : _context55.t0 === "DeviceRGB" ? 23 : _context55.t0 === "DeviceCMYK" ? 26 : 27;
                      break;
                    case 20:
                      _e471 *= 4;
                      _t343 = !0;
                      return _context55.abrupt("break", 27);
                    case 23:
                      _e471 = _e471 / 3 * 4;
                      _t343 = !0;
                      return _context55.abrupt("break", 27);
                    case 26:
                      _t343 = !0;
                    case 27:
                      if (!_t343) {
                        _context55.next = 30;
                        break;
                      }
                      _t344 = this.getImageBytes(_e471, {
                        drawWidth: a,
                        drawHeight: i,
                        forceRGBA: !0
                      });
                      return _context55.abrupt("return", this.createBitmap(r.ImageKind.RGBA_32BPP, a, i, _t344));
                    case 30:
                      _context55.next = 39;
                      break;
                    case 32:
                      _context55.t1 = this.colorSpace.name;
                      _context55.next = _context55.t1 === "DeviceGray" ? 35 : _context55.t1 === "DeviceRGB" ? 36 : _context55.t1 === "DeviceCMYK" ? 36 : 39;
                      break;
                    case 35:
                      _e471 *= 3;
                    case 36:
                      n.kind = r.ImageKind.RGB_24BPP;
                      n.data = this.getImageBytes(_e471, {
                        drawWidth: a,
                        drawHeight: i,
                        forceRGB: !0
                      });
                      return _context55.abrupt("return", f ? c.ImageResizer.createImage(n) : n);
                    case 39:
                      g = this.getImageBytes(h * d, {
                        internal: !0
                      }), p = 0 | g.length / d * i / h, m = this.getComponents(g);
                      if (t && !f) {
                        w = new OffscreenCanvas(a, i);
                        S = w.getContext("2d");
                        x = S.createImageData(a, i);
                        C = x.data;
                      }
                      n.kind = r.ImageKind.RGBA_32BPP;
                      if (e || this.smask || this.mask) {
                        t && !f || (C = new Uint8ClampedArray(a * i * 4));
                        b = 1;
                        y = !0;
                        this.fillOpacity(C, a, i, p, m);
                      } else {
                        if (!t || f) {
                          n.kind = r.ImageKind.RGB_24BPP;
                          C = new Uint8ClampedArray(a * i * 3);
                          b = 0;
                        } else {
                          new Uint32Array(C.buffer).fill(r.FeatureTest.isLittleEndian ? 4278190080 : 255);
                          b = 1;
                        }
                        y = !1;
                      }
                      this.needsDecode && this.decodeBuffer(m);
                      this.colorSpace.fillRgb(C, o, h, a, i, p, u, m, b);
                      y && this.undoPreblend(C, a, p);
                      if (!(t && !f)) {
                        _context55.next = 49;
                        break;
                      }
                      S.putImageData(x, 0, 0);
                      return _context55.abrupt("return", {
                        data: null,
                        width: a,
                        height: i,
                        bitmap: w.transferToImageBitmap(),
                        interpolate: this.interpolate
                      });
                    case 49:
                      n.data = C;
                      return _context55.abrupt("return", f ? c.ImageResizer.createImage(n) : n);
                    case 51:
                    case "end":
                      return _context55.stop();
                  }
                }, _callee54, this);
              }));
              function createImageData() {
                return _createImageData.apply(this, arguments);
              }
              return createImageData;
            }()
          }, {
            key: "fillGrayBuffer",
            value: function fillGrayBuffer(e) {
              var t = this.numComps;
              if (1 !== t) throw new r.FormatError("Reading gray scale from a color image: ".concat(t));
              var a = this.width,
                i = this.height,
                n = this.bpc,
                s = a * t * n + 7 >> 3,
                o = this.getImageBytes(i * s, {
                  internal: !0
                }),
                c = this.getComponents(o);
              var l, h;
              if (1 === n) {
                h = a * i;
                if (this.needsDecode) for (l = 0; l < h; ++l) e[l] = c[l] - 1 & 255;else for (l = 0; l < h; ++l) e[l] = 255 & -c[l];
                return;
              }
              this.needsDecode && this.decodeBuffer(c);
              h = a * i;
              var u = 255 / ((1 << n) - 1);
              for (l = 0; l < h; ++l) e[l] = u * c[l];
            }
          }, {
            key: "createBitmap",
            value: function createBitmap(e, t, a, n) {
              var s = new OffscreenCanvas(t, a),
                o = s.getContext("2d");
              var c;
              if (e === r.ImageKind.RGBA_32BPP) c = new ImageData(n, t, a);else {
                c = o.createImageData(t, a);
                (0, i.convertToRGBA)({
                  kind: e,
                  src: n,
                  dest: new Uint32Array(c.data.buffer),
                  width: t,
                  height: a,
                  inverseDecode: this.needsDecode
                });
              }
              o.putImageData(c, 0, 0);
              return {
                data: null,
                width: t,
                height: a,
                bitmap: s.transferToImageBitmap(),
                interpolate: this.interpolate
              };
            }
          }, {
            key: "getImageBytes",
            value: function getImageBytes(e, _ref86) {
              var t = _ref86.drawWidth,
                a = _ref86.drawHeight,
                _ref86$forceRGBA = _ref86.forceRGBA,
                i = _ref86$forceRGBA === void 0 ? !1 : _ref86$forceRGBA,
                _ref86$forceRGB = _ref86.forceRGB,
                n = _ref86$forceRGB === void 0 ? !1 : _ref86$forceRGB,
                _ref86$internal = _ref86.internal,
                s = _ref86$internal === void 0 ? !1 : _ref86$internal;
              this.image.reset();
              this.image.drawWidth = t || this.width;
              this.image.drawHeight = a || this.height;
              this.image.forceRGBA = !!i;
              this.image.forceRGB = !!n;
              var c = this.image.getBytes(e);
              if (s || this.image instanceof o.DecodeStream) return c;
              (0, r.assert)(c instanceof Uint8Array, 'PDFImage.getImageBytes: Unsupported "imageBytes" type.');
              return new Uint8Array(c);
            }
          }], [{
            key: "buildImage",
            value: function () {
              var _buildImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee55(_ref87) {
                var e, t, a, _ref87$isInline, i, s, o, c, l, h, u, d;
                return _regeneratorRuntime().wrap(function _callee55$(_context56) {
                  while (1) switch (_context56.prev = _context56.next) {
                    case 0:
                      e = _ref87.xref, t = _ref87.res, a = _ref87.image, _ref87$isInline = _ref87.isInline, i = _ref87$isInline === void 0 ? !1 : _ref87$isInline, s = _ref87.pdfFunctionFactory, o = _ref87.localColorSpaceCache;
                      c = a;
                      l = null, h = null;
                      u = a.dict.get("SMask"), d = a.dict.get("Mask");
                      u ? u instanceof n.BaseStream ? l = u : (0, r.warn)("Unsupported /SMask format.") : d && (d instanceof n.BaseStream || Array.isArray(d) ? h = d : (0, r.warn)("Unsupported /Mask format."));
                      return _context56.abrupt("return", new PDFImage({
                        xref: e,
                        res: t,
                        image: c,
                        isInline: i,
                        smask: l,
                        mask: h,
                        pdfFunctionFactory: s,
                        localColorSpaceCache: o
                      }));
                    case 6:
                    case "end":
                      return _context56.stop();
                  }
                }, _callee55);
              }));
              function buildImage(_x122) {
                return _buildImage.apply(this, arguments);
              }
              return buildImage;
            }()
          }, {
            key: "createRawMask",
            value: function createRawMask(_ref88) {
              var e = _ref88.imgArray,
                t = _ref88.width,
                a = _ref88.height,
                r = _ref88.imageIsFromDecodeStream,
                i = _ref88.inverseDecode,
                n = _ref88.interpolate;
              var s = (t + 7 >> 3) * a,
                o = e.byteLength;
              var c, l;
              if (!r || i && !(s === o)) {
                if (i) {
                  c = new Uint8Array(s);
                  c.set(e);
                  c.fill(255, o);
                } else c = new Uint8Array(e);
              } else c = e;
              if (i) for (l = 0; l < o; l++) c[l] ^= 255;
              return {
                data: c,
                width: t,
                height: a,
                interpolate: n
              };
            }
          }, {
            key: "createMask",
            value: function () {
              var _createMask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee56(_ref89) {
                var e, t, a, n, s, o, _ref89$isOffscreenCan, l, h, _n124, _n125, _l29, _h29;
                return _regeneratorRuntime().wrap(function _callee56$(_context57) {
                  while (1) switch (_context57.prev = _context57.next) {
                    case 0:
                      e = _ref89.imgArray, t = _ref89.width, a = _ref89.height, n = _ref89.imageIsFromDecodeStream, s = _ref89.inverseDecode, o = _ref89.interpolate, _ref89$isOffscreenCan = _ref89.isOffscreenCanvasSupported, l = _ref89$isOffscreenCan === void 0 ? !1 : _ref89$isOffscreenCan;
                      h = 1 === t && 1 === a && s === (0 === e.length || !!(128 & e[0]));
                      if (!h) {
                        _context57.next = 4;
                        break;
                      }
                      return _context57.abrupt("return", {
                        isSingleOpaquePixel: h
                      });
                    case 4:
                      if (!l) {
                        _context57.next = 13;
                        break;
                      }
                      if (!c.ImageResizer.needsToBeResized(t, a)) {
                        _context57.next = 9;
                        break;
                      }
                      _n124 = new Uint8ClampedArray(t * a * 4);
                      (0, i.convertBlackAndWhiteToRGBA)({
                        src: e,
                        dest: _n124,
                        width: t,
                        height: a,
                        nonBlackColor: 0,
                        inverseDecode: s
                      });
                      return _context57.abrupt("return", c.ImageResizer.createImage({
                        kind: r.ImageKind.RGBA_32BPP,
                        data: _n124,
                        width: t,
                        height: a,
                        interpolate: o
                      }));
                    case 9:
                      _n125 = new OffscreenCanvas(t, a), _l29 = _n125.getContext("2d"), _h29 = _l29.createImageData(t, a);
                      (0, i.convertBlackAndWhiteToRGBA)({
                        src: e,
                        dest: _h29.data,
                        width: t,
                        height: a,
                        nonBlackColor: 0,
                        inverseDecode: s
                      });
                      _l29.putImageData(_h29, 0, 0);
                      return _context57.abrupt("return", {
                        data: null,
                        width: t,
                        height: a,
                        interpolate: o,
                        bitmap: _n125.transferToImageBitmap()
                      });
                    case 13:
                      return _context57.abrupt("return", this.createRawMask({
                        imgArray: e,
                        width: t,
                        height: a,
                        inverseDecode: s,
                        imageIsFromDecodeStream: n,
                        interpolate: o
                      }));
                    case 14:
                    case "end":
                      return _context57.stop();
                  }
                }, _callee56, this);
              }));
              function createMask(_x123) {
                return _createMask.apply(this, arguments);
              }
              return createMask;
            }()
          }]);
          return PDFImage;
        }();
        t.PDFImage = PDFImage;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.incrementalUpdate = function incrementalUpdate(_ref90) {
          var e = _ref90.originalData,
            t = _ref90.xrefInfo,
            a = _ref90.newRefs,
            _ref90$xref = _ref90.xref,
            o = _ref90$xref === void 0 ? null : _ref90$xref,
            _ref90$hasXfa = _ref90.hasXfa,
            l = _ref90$hasXfa === void 0 ? !1 : _ref90$hasXfa,
            _ref90$xfaDatasetsRef = _ref90.xfaDatasetsRef,
            h = _ref90$xfaDatasetsRef === void 0 ? null : _ref90$xfaDatasetsRef,
            _ref90$hasXfaDatasets = _ref90.hasXfaDatasetsEntry,
            u = _ref90$hasXfaDatasets === void 0 ? !1 : _ref90$hasXfaDatasets,
            d = _ref90.needAppearances,
            _ref90$acroFormRef = _ref90.acroFormRef,
            f = _ref90$acroFormRef === void 0 ? null : _ref90$acroFormRef,
            _ref90$acroForm = _ref90.acroForm,
            g = _ref90$acroForm === void 0 ? null : _ref90$acroForm,
            _ref90$xfaData = _ref90.xfaData,
            p = _ref90$xfaData === void 0 ? null : _ref90$xfaData;
          !function updateAcroform(_ref91) {
            var e = _ref91.xref,
              t = _ref91.acroForm,
              a = _ref91.acroFormRef,
              n = _ref91.hasXfa,
              s = _ref91.hasXfaDatasetsEntry,
              o = _ref91.xfaDatasetsRef,
              c = _ref91.needAppearances,
              l = _ref91.newRefs;
            !n || s || o || (0, r.warn)("XFA - Cannot save it");
            if (!(c || n && o)) return;
            var h = new i.Dict(e);
            var _iterator122 = _createForOfIteratorHelper(t.getKeys()),
              _step122;
            try {
              for (_iterator122.s(); !(_step122 = _iterator122.n()).done;) {
                var _e473 = _step122.value;
                h.set(_e473, t.getRaw(_e473));
              }
            } catch (err) {
              _iterator122.e(err);
            } finally {
              _iterator122.f();
            }
            if (n && !s) {
              var _e472 = t.get("XFA").slice();
              _e472.splice(2, 0, "datasets");
              _e472.splice(3, 0, o);
              h.set("XFA", _e472);
            }
            c && h.set("NeedAppearances", !0);
            var u = e.encrypt;
            var d = null;
            u && (d = u.createCipherTransform(a.num, a.gen));
            var f = [];
            writeObject(a, h, f, d);
            l.push({
              ref: a,
              data: f.join("")
            });
          }({
            xref: o,
            acroForm: g,
            acroFormRef: f,
            hasXfa: l,
            hasXfaDatasetsEntry: u,
            xfaDatasetsRef: h,
            needAppearances: d,
            newRefs: a
          });
          l && function updateXFA(_ref92) {
            var e = _ref92.xfaData,
              t = _ref92.xfaDatasetsRef,
              a = _ref92.newRefs,
              i = _ref92.xref;
            if (null === e) {
              e = function writeXFADataForAcroform(e, t) {
                var a = new s.SimpleXMLParser({
                  hasAttributes: !0
                }).parseFromString(e);
                var _iterator123 = _createForOfIteratorHelper(t),
                  _step123;
                try {
                  for (_iterator123.s(); !(_step123 = _iterator123.n()).done;) {
                    var _e474 = _step123.value.xfa;
                    if (!_e474) continue;
                    var _t345 = _e474.path,
                      _i198 = _e474.value;
                    if (!_t345) continue;
                    var _o74 = (0, n.parseXFAPath)(_t345);
                    var _c46 = a.documentElement.searchNode(_o74, 0);
                    !_c46 && _o74.length > 1 && (_c46 = a.documentElement.searchNode([_o74.at(-1)], 0));
                    _c46 ? Array.isArray(_i198) ? _c46.childNodes = _i198.map(function (e) {
                      return new s.SimpleDOMNode("value", e);
                    }) : _c46.childNodes = [new s.SimpleDOMNode("#text", _i198)] : (0, r.warn)("Node not found for path: ".concat(_t345));
                  }
                } catch (err) {
                  _iterator123.e(err);
                } finally {
                  _iterator123.f();
                }
                var i = [];
                a.documentElement.dump(i);
                return i.join("");
              }(i.fetchIfRef(t).getString(), a);
            }
            var o = i.encrypt;
            if (o) {
              e = o.createCipherTransform(t.num, t.gen).encryptString(e);
            }
            var c = "".concat(t.num, " ").concat(t.gen, " obj\n<< /Type /EmbeddedFile /Length ").concat(e.length, ">>\nstream\n") + e + "\nendstream\nendobj\n";
            a.push({
              ref: t,
              data: c
            });
          }({
            xfaData: p,
            xfaDatasetsRef: h,
            newRefs: a,
            xref: o
          });
          var m = new i.Dict(null),
            b = t.newRef;
          var y, w;
          var S = e.at(-1);
          if (10 === S || 13 === S) {
            y = [];
            w = e.length;
          } else {
            y = ["\n"];
            w = e.length + 1;
          }
          m.set("Size", b.num + 1);
          m.set("Prev", t.startXRef);
          m.set("Type", i.Name.get("XRef"));
          null !== t.rootRef && m.set("Root", t.rootRef);
          null !== t.infoRef && m.set("Info", t.infoRef);
          null !== t.encryptRef && m.set("Encrypt", t.encryptRef);
          a.push({
            ref: b,
            data: ""
          });
          a = a.sort(function (e, t) {
            return e.ref.num - t.ref.num;
          });
          var x = [[0, 1, 65535]],
            C = [0, 1];
          var k = 0;
          var _iterator124 = _createForOfIteratorHelper(a),
            _step124;
          try {
            for (_iterator124.s(); !(_step124 = _iterator124.n()).done;) {
              var _step124$value = _step124.value,
                _e479 = _step124$value.ref,
                _t347 = _step124$value.data;
              k = Math.max(k, w);
              x.push([1, w, Math.min(_e479.gen, 65535)]);
              w += _t347.length;
              C.push(_e479.num, 1);
              y.push(_t347);
            }
          } catch (err) {
            _iterator124.e(err);
          } finally {
            _iterator124.f();
          }
          m.set("Index", C);
          if (Array.isArray(t.fileIds) && t.fileIds.length > 0) {
            var _e475 = function computeMD5(e, t) {
              var a = Math.floor(Date.now() / 1e3),
                i = t.filename || "",
                n = [a.toString(), i, e.toString()];
              var s = n.reduce(function (e, t) {
                return e + t.length;
              }, 0);
              for (var _i199 = 0, _Object$values = Object.values(t.info); _i199 < _Object$values.length; _i199++) {
                var _e476 = _Object$values[_i199];
                n.push(_e476);
                s += _e476.length;
              }
              var o = new Uint8Array(s);
              var l = 0;
              for (var _i200 = 0, _n126 = n; _i200 < _n126.length; _i200++) {
                var _e477 = _n126[_i200];
                writeString(_e477, l, o);
                l += _e477.length;
              }
              return (0, r.bytesToString)((0, c.calculateMD5)(o));
            }(w, t);
            m.set("ID", [t.fileIds[0], _e475]);
          }
          var v = [1, Math.ceil(Math.log2(k) / 8), 2],
            F = (v[0] + v[1] + v[2]) * x.length;
          m.set("W", v);
          m.set("Length", F);
          y.push("".concat(b.num, " ").concat(b.gen, " obj\n"));
          writeDict(m, y, null);
          y.push(" stream\n");
          var O = y.reduce(function (e, t) {
              return e + t.length;
            }, 0),
            T = "\nendstream\nendobj\nstartxref\n".concat(w, "\n%%EOF\n"),
            M = new Uint8Array(e.length + O + F + T.length);
          M.set(e);
          var E = e.length;
          var _iterator125 = _createForOfIteratorHelper(y),
            _step125;
          try {
            for (_iterator125.s(); !(_step125 = _iterator125.n()).done;) {
              var _e480 = _step125.value;
              writeString(_e480, E, M);
              E += _e480.length;
            }
          } catch (err) {
            _iterator125.e(err);
          } finally {
            _iterator125.f();
          }
          for (var _i201 = 0, _x124 = x; _i201 < _x124.length; _i201++) {
            var _x124$_i = _slicedToArray(_x124[_i201], 3),
              _e478 = _x124$_i[0],
              _t346 = _x124$_i[1],
              _a279 = _x124$_i[2];
            E = writeInt(_e478, v[0], E, M);
            E = writeInt(_t346, v[1], E, M);
            E = writeInt(_a279, v[2], E, M);
          }
          writeString(T, E, M);
          return M;
        };
        t.writeDict = writeDict;
        t.writeObject = writeObject;
        var r = a(2),
          i = a(4),
          n = a(3),
          s = a(66),
          o = a(5),
          c = a(67);
        function writeObject(e, t, a, r) {
          a.push("".concat(e.num, " ").concat(e.gen, " obj\n"));
          t instanceof i.Dict ? writeDict(t, a, r) : t instanceof o.BaseStream && writeStream(t, a, r);
          a.push("\nendobj\n");
        }
        function writeDict(e, t, a) {
          t.push("<<");
          var _iterator126 = _createForOfIteratorHelper(e.getKeys()),
            _step126;
          try {
            for (_iterator126.s(); !(_step126 = _iterator126.n()).done;) {
              var _r223 = _step126.value;
              t.push(" /".concat((0, n.escapePDFName)(_r223), " "));
              writeValue(e.getRaw(_r223), t, a);
            }
          } catch (err) {
            _iterator126.e(err);
          } finally {
            _iterator126.f();
          }
          t.push(">>");
        }
        function writeStream(e, t, a) {
          var r = e.getString();
          null !== a && (r = a.encryptString(r));
          e.dict.set("Length", r.length);
          writeDict(e.dict, t, a);
          t.push(" stream\n", r, "\nendstream");
        }
        function writeValue(e, t, a) {
          if (e instanceof i.Name) t.push("/".concat((0, n.escapePDFName)(e.name)));else if (e instanceof i.Ref) t.push("".concat(e.num, " ").concat(e.gen, " R"));else if (Array.isArray(e)) !function writeArray(e, t, a) {
            t.push("[");
            var r = !0;
            var _iterator127 = _createForOfIteratorHelper(e),
              _step127;
            try {
              for (_iterator127.s(); !(_step127 = _iterator127.n()).done;) {
                var _i202 = _step127.value;
                r ? r = !1 : t.push(" ");
                writeValue(_i202, t, a);
              }
            } catch (err) {
              _iterator127.e(err);
            } finally {
              _iterator127.f();
            }
            t.push("]");
          }(e, t, a);else if ("string" == typeof e) {
            null !== a && (e = a.encryptString(e));
            t.push("(".concat((0, n.escapeString)(e), ")"));
          } else "number" == typeof e ? t.push((0, n.numberToString)(e)) : "boolean" == typeof e ? t.push(e.toString()) : e instanceof i.Dict ? writeDict(e, t, a) : e instanceof o.BaseStream ? writeStream(e, t, a) : null === e ? t.push("null") : (0, r.warn)("Unhandled value in writer: ".concat(typeof e, ", please file a bug."));
        }
        function writeInt(e, t, a, r) {
          for (var _i203 = t + a - 1; _i203 > a - 1; _i203--) {
            r[_i203] = 255 & e;
            e >>= 8;
          }
          return a + t;
        }
        function writeString(e, t, a) {
          for (var _r224 = 0, _i204 = e.length; _r224 < _i204; _r224++) a[t + _r224] = 255 & e.charCodeAt(_r224);
        }
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.XMLParserErrorCode = t.XMLParserBase = t.SimpleXMLParser = t.SimpleDOMNode = void 0;
        var r = a(3);
        var i = {
          NoError: 0,
          EndOfDocument: -1,
          UnterminatedCdat: -2,
          UnterminatedXmlDeclaration: -3,
          UnterminatedDoctypeDeclaration: -4,
          UnterminatedComment: -5,
          MalformedElement: -6,
          OutOfMemory: -7,
          UnterminatedAttributeValue: -8,
          UnterminatedElement: -9,
          ElementNeverBegun: -10
        };
        t.XMLParserErrorCode = i;
        function isWhitespace(e, t) {
          var a = e[t];
          return " " === a || "\n" === a || "\r" === a || "\t" === a;
        }
        var XMLParserBase = /*#__PURE__*/function () {
          function XMLParserBase() {
            _classCallCheck(this, XMLParserBase);
          }
          _createClass(XMLParserBase, [{
            key: "_resolveEntities",
            value: function _resolveEntities(e) {
              var _this92 = this;
              return e.replaceAll(/&([^;]+);/g, function (e, t) {
                if ("#x" === t.substring(0, 2)) return String.fromCodePoint(parseInt(t.substring(2), 16));
                if ("#" === t.substring(0, 1)) return String.fromCodePoint(parseInt(t.substring(1), 10));
                switch (t) {
                  case "lt":
                    return "<";
                  case "gt":
                    return ">";
                  case "amp":
                    return "&";
                  case "quot":
                    return '"';
                  case "apos":
                    return "'";
                }
                return _this92.onResolveEntity(t);
              });
            }
          }, {
            key: "_parseContent",
            value: function _parseContent(e, t) {
              var a = [];
              var r = t;
              function skipWs() {
                for (; r < e.length && isWhitespace(e, r);) ++r;
              }
              for (; r < e.length && !isWhitespace(e, r) && ">" !== e[r] && "/" !== e[r];) ++r;
              var i = e.substring(t, r);
              skipWs();
              for (; r < e.length && ">" !== e[r] && "/" !== e[r] && "?" !== e[r];) {
                skipWs();
                var _t348 = "",
                  _i205 = "";
                for (; r < e.length && !isWhitespace(e, r) && "=" !== e[r];) {
                  _t348 += e[r];
                  ++r;
                }
                skipWs();
                if ("=" !== e[r]) return null;
                ++r;
                skipWs();
                var _n127 = e[r];
                if ('"' !== _n127 && "'" !== _n127) return null;
                var _s93 = e.indexOf(_n127, ++r);
                if (_s93 < 0) return null;
                _i205 = e.substring(r, _s93);
                a.push({
                  name: _t348,
                  value: this._resolveEntities(_i205)
                });
                r = _s93 + 1;
                skipWs();
              }
              return {
                name: i,
                attributes: a,
                parsed: r - t
              };
            }
          }, {
            key: "_parseProcessingInstruction",
            value: function _parseProcessingInstruction(e, t) {
              var a = t;
              for (; a < e.length && !isWhitespace(e, a) && ">" !== e[a] && "?" !== e[a] && "/" !== e[a];) ++a;
              var r = e.substring(t, a);
              !function skipWs() {
                for (; a < e.length && isWhitespace(e, a);) ++a;
              }();
              var i = a;
              for (; a < e.length && ("?" !== e[a] || ">" !== e[a + 1]);) ++a;
              return {
                name: r,
                value: e.substring(i, a),
                parsed: a - t
              };
            }
          }, {
            key: "parseXml",
            value: function parseXml(e) {
              var t = 0;
              for (; t < e.length;) {
                var _a280 = t;
                if ("<" === e[t]) {
                  ++_a280;
                  var _t349 = void 0;
                  switch (e[_a280]) {
                    case "/":
                      ++_a280;
                      _t349 = e.indexOf(">", _a280);
                      if (_t349 < 0) {
                        this.onError(i.UnterminatedElement);
                        return;
                      }
                      this.onEndElement(e.substring(_a280, _t349));
                      _a280 = _t349 + 1;
                      break;
                    case "?":
                      ++_a280;
                      var _r225 = this._parseProcessingInstruction(e, _a280);
                      if ("?>" !== e.substring(_a280 + _r225.parsed, _a280 + _r225.parsed + 2)) {
                        this.onError(i.UnterminatedXmlDeclaration);
                        return;
                      }
                      this.onPi(_r225.name, _r225.value);
                      _a280 += _r225.parsed + 2;
                      break;
                    case "!":
                      if ("--" === e.substring(_a280 + 1, _a280 + 3)) {
                        _t349 = e.indexOf("--\x3e", _a280 + 3);
                        if (_t349 < 0) {
                          this.onError(i.UnterminatedComment);
                          return;
                        }
                        this.onComment(e.substring(_a280 + 3, _t349));
                        _a280 = _t349 + 3;
                      } else if ("[CDATA[" === e.substring(_a280 + 1, _a280 + 8)) {
                        _t349 = e.indexOf("]]>", _a280 + 8);
                        if (_t349 < 0) {
                          this.onError(i.UnterminatedCdat);
                          return;
                        }
                        this.onCdata(e.substring(_a280 + 8, _t349));
                        _a280 = _t349 + 3;
                      } else {
                        if ("DOCTYPE" !== e.substring(_a280 + 1, _a280 + 8)) {
                          this.onError(i.MalformedElement);
                          return;
                        }
                        {
                          var _r226 = e.indexOf("[", _a280 + 8);
                          var _n128 = !1;
                          _t349 = e.indexOf(">", _a280 + 8);
                          if (_t349 < 0) {
                            this.onError(i.UnterminatedDoctypeDeclaration);
                            return;
                          }
                          if (_r226 > 0 && _t349 > _r226) {
                            _t349 = e.indexOf("]>", _a280 + 8);
                            if (_t349 < 0) {
                              this.onError(i.UnterminatedDoctypeDeclaration);
                              return;
                            }
                            _n128 = !0;
                          }
                          var _s94 = e.substring(_a280 + 8, _t349 + (_n128 ? 1 : 0));
                          this.onDoctype(_s94);
                          _a280 = _t349 + (_n128 ? 2 : 1);
                        }
                      }
                      break;
                    default:
                      var _n129 = this._parseContent(e, _a280);
                      if (null === _n129) {
                        this.onError(i.MalformedElement);
                        return;
                      }
                      var _s95 = !1;
                      if ("/>" === e.substring(_a280 + _n129.parsed, _a280 + _n129.parsed + 2)) _s95 = !0;else if (">" !== e.substring(_a280 + _n129.parsed, _a280 + _n129.parsed + 1)) {
                        this.onError(i.UnterminatedElement);
                        return;
                      }
                      this.onBeginElement(_n129.name, _n129.attributes, _s95);
                      _a280 += _n129.parsed + (_s95 ? 2 : 1);
                  }
                } else {
                  for (; _a280 < e.length && "<" !== e[_a280];) _a280++;
                  var _r227 = e.substring(t, _a280);
                  this.onText(this._resolveEntities(_r227));
                }
                t = _a280;
              }
            }
          }, {
            key: "onResolveEntity",
            value: function onResolveEntity(e) {
              return "&".concat(e, ";");
            }
          }, {
            key: "onPi",
            value: function onPi(e, t) {}
          }, {
            key: "onComment",
            value: function onComment(e) {}
          }, {
            key: "onCdata",
            value: function onCdata(e) {}
          }, {
            key: "onDoctype",
            value: function onDoctype(e) {}
          }, {
            key: "onText",
            value: function onText(e) {}
          }, {
            key: "onBeginElement",
            value: function onBeginElement(e, t, a) {}
          }, {
            key: "onEndElement",
            value: function onEndElement(e) {}
          }, {
            key: "onError",
            value: function onError(e) {}
          }]);
          return XMLParserBase;
        }();
        t.XMLParserBase = XMLParserBase;
        var SimpleDOMNode = /*#__PURE__*/function () {
          function SimpleDOMNode(e, t) {
            _classCallCheck(this, SimpleDOMNode);
            this.nodeName = e;
            this.nodeValue = t;
            Object.defineProperty(this, "parentNode", {
              value: null,
              writable: !0
            });
          }
          _createClass(SimpleDOMNode, [{
            key: "firstChild",
            get: function get() {
              return this.childNodes && this.childNodes[0];
            }
          }, {
            key: "nextSibling",
            get: function get() {
              var e = this.parentNode.childNodes;
              if (!e) return;
              var t = e.indexOf(this);
              return -1 !== t ? e[t + 1] : void 0;
            }
          }, {
            key: "textContent",
            get: function get() {
              return this.childNodes ? this.childNodes.map(function (e) {
                return e.textContent;
              }).join("") : this.nodeValue || "";
            }
          }, {
            key: "children",
            get: function get() {
              return this.childNodes || [];
            }
          }, {
            key: "hasChildNodes",
            value: function hasChildNodes() {
              return this.childNodes && this.childNodes.length > 0;
            }
          }, {
            key: "searchNode",
            value: function searchNode(e, t) {
              if (t >= e.length) return this;
              var a = e[t],
                r = [];
              var i = this;
              for (;;) {
                if (a.name === i.nodeName) {
                  if (0 !== a.pos) {
                    if (0 === r.length) return null;
                    {
                      var _r$pop = r.pop(),
                        _r$pop2 = _slicedToArray(_r$pop, 1),
                        _n130 = _r$pop2[0];
                      var _s96 = 0;
                      var _iterator128 = _createForOfIteratorHelper(_n130.childNodes),
                        _step128;
                      try {
                        for (_iterator128.s(); !(_step128 = _iterator128.n()).done;) {
                          var _r228 = _step128.value;
                          if (a.name === _r228.nodeName) {
                            if (_s96 === a.pos) return _r228.searchNode(e, t + 1);
                            _s96++;
                          }
                        }
                      } catch (err) {
                        _iterator128.e(err);
                      } finally {
                        _iterator128.f();
                      }
                      return i.searchNode(e, t + 1);
                    }
                  }
                  {
                    var _a281 = i.searchNode(e, t + 1);
                    if (null !== _a281) return _a281;
                  }
                }
                if (i.childNodes && 0 !== i.childNodes.length) {
                  r.push([i, 0]);
                  i = i.childNodes[0];
                } else {
                  if (0 === r.length) return null;
                  for (; 0 !== r.length;) {
                    var _r$pop3 = r.pop(),
                      _r$pop4 = _slicedToArray(_r$pop3, 2),
                      _e481 = _r$pop4[0],
                      _t350 = _r$pop4[1],
                      _a282 = _t350 + 1;
                    if (_a282 < _e481.childNodes.length) {
                      r.push([_e481, _a282]);
                      i = _e481.childNodes[_a282];
                      break;
                    }
                  }
                  if (0 === r.length) return null;
                }
              }
            }
          }, {
            key: "dump",
            value: function dump(e) {
              if ("#text" !== this.nodeName) {
                e.push("<".concat(this.nodeName));
                if (this.attributes) {
                  var _iterator129 = _createForOfIteratorHelper(this.attributes),
                    _step129;
                  try {
                    for (_iterator129.s(); !(_step129 = _iterator129.n()).done;) {
                      var _t351 = _step129.value;
                      e.push(" ".concat(_t351.name, "=\"").concat((0, r.encodeToXmlString)(_t351.value), "\""));
                    }
                  } catch (err) {
                    _iterator129.e(err);
                  } finally {
                    _iterator129.f();
                  }
                }
                if (this.hasChildNodes()) {
                  e.push(">");
                  var _iterator130 = _createForOfIteratorHelper(this.childNodes),
                    _step130;
                  try {
                    for (_iterator130.s(); !(_step130 = _iterator130.n()).done;) {
                      var _t352 = _step130.value;
                      _t352.dump(e);
                    }
                  } catch (err) {
                    _iterator130.e(err);
                  } finally {
                    _iterator130.f();
                  }
                  e.push("</".concat(this.nodeName, ">"));
                } else this.nodeValue ? e.push(">".concat((0, r.encodeToXmlString)(this.nodeValue), "</").concat(this.nodeName, ">")) : e.push("/>");
              } else e.push((0, r.encodeToXmlString)(this.nodeValue));
            }
          }]);
          return SimpleDOMNode;
        }();
        t.SimpleDOMNode = SimpleDOMNode;
        t.SimpleXMLParser = /*#__PURE__*/function (_XMLParserBase) {
          _inherits(SimpleXMLParser, _XMLParserBase);
          var _super92 = _createSuper(SimpleXMLParser);
          function SimpleXMLParser(_ref93) {
            var _this93;
            var _ref93$hasAttributes = _ref93.hasAttributes,
              e = _ref93$hasAttributes === void 0 ? !1 : _ref93$hasAttributes,
              _ref93$lowerCaseName = _ref93.lowerCaseName,
              t = _ref93$lowerCaseName === void 0 ? !1 : _ref93$lowerCaseName;
            _classCallCheck(this, SimpleXMLParser);
            _this93 = _super92.call(this);
            _this93._currentFragment = null;
            _this93._stack = null;
            _this93._errorCode = i.NoError;
            _this93._hasAttributes = e;
            _this93._lowerCaseName = t;
            return _this93;
          }
          _createClass(SimpleXMLParser, [{
            key: "parseFromString",
            value: function parseFromString(e) {
              this._currentFragment = [];
              this._stack = [];
              this._errorCode = i.NoError;
              this.parseXml(e);
              if (this._errorCode !== i.NoError) return;
              var _this$_currentFragmen = _slicedToArray(this._currentFragment, 1),
                t = _this$_currentFragmen[0];
              return t ? {
                documentElement: t
              } : void 0;
            }
          }, {
            key: "onText",
            value: function onText(e) {
              if (function isWhitespaceString(e) {
                for (var _t353 = 0, _a283 = e.length; _t353 < _a283; _t353++) if (!isWhitespace(e, _t353)) return !1;
                return !0;
              }(e)) return;
              var t = new SimpleDOMNode("#text", e);
              this._currentFragment.push(t);
            }
          }, {
            key: "onCdata",
            value: function onCdata(e) {
              var t = new SimpleDOMNode("#text", e);
              this._currentFragment.push(t);
            }
          }, {
            key: "onBeginElement",
            value: function onBeginElement(e, t, a) {
              this._lowerCaseName && (e = e.toLowerCase());
              var r = new SimpleDOMNode(e);
              r.childNodes = [];
              this._hasAttributes && (r.attributes = t);
              this._currentFragment.push(r);
              if (!a) {
                this._stack.push(this._currentFragment);
                this._currentFragment = r.childNodes;
              }
            }
          }, {
            key: "onEndElement",
            value: function onEndElement(e) {
              this._currentFragment = this._stack.pop() || [];
              var t = this._currentFragment.at(-1);
              if (!t) return null;
              var _iterator131 = _createForOfIteratorHelper(t.childNodes),
                _step131;
              try {
                for (_iterator131.s(); !(_step131 = _iterator131.n()).done;) {
                  var _e482 = _step131.value;
                  _e482.parentNode = t;
                }
              } catch (err) {
                _iterator131.e(err);
              } finally {
                _iterator131.f();
              }
              return t;
            }
          }, {
            key: "onError",
            value: function onError(e) {
              this._errorCode = e;
            }
          }]);
          return SimpleXMLParser;
        }(XMLParserBase);
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.calculateSHA256 = t.calculateMD5 = t.PDF20 = t.PDF17 = t.CipherTransformFactory = t.ARCFourCipher = t.AES256Cipher = t.AES128Cipher = void 0;
        t.calculateSHA384 = calculateSHA384;
        t.calculateSHA512 = void 0;
        var r = a(2),
          i = a(4),
          n = a(68);
        var ARCFourCipher = /*#__PURE__*/function () {
          function ARCFourCipher(e) {
            _classCallCheck(this, ARCFourCipher);
            this.a = 0;
            this.b = 0;
            var t = new Uint8Array(256),
              a = e.length;
            for (var _e483 = 0; _e483 < 256; ++_e483) t[_e483] = _e483;
            for (var _r229 = 0, _i206 = 0; _r229 < 256; ++_r229) {
              var _n131 = t[_r229];
              _i206 = _i206 + _n131 + e[_r229 % a] & 255;
              t[_r229] = t[_i206];
              t[_i206] = _n131;
            }
            this.s = t;
          }
          _createClass(ARCFourCipher, [{
            key: "encryptBlock",
            value: function encryptBlock(e) {
              var t = this.a,
                a = this.b;
              var r = this.s,
                i = e.length,
                n = new Uint8Array(i);
              for (var _s97 = 0; _s97 < i; ++_s97) {
                t = t + 1 & 255;
                var _i207 = r[t];
                a = a + _i207 & 255;
                var _o75 = r[a];
                r[t] = _o75;
                r[a] = _i207;
                n[_s97] = e[_s97] ^ r[_i207 + _o75 & 255];
              }
              this.a = t;
              this.b = a;
              return n;
            }
          }, {
            key: "decryptBlock",
            value: function decryptBlock(e) {
              return this.encryptBlock(e);
            }
          }, {
            key: "encrypt",
            value: function encrypt(e) {
              return this.encryptBlock(e);
            }
          }]);
          return ARCFourCipher;
        }();
        t.ARCFourCipher = ARCFourCipher;
        var s = function calculateMD5Closure() {
          var e = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]),
            t = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);
          return function hash(a, r, i) {
            var n = 1732584193,
              s = -271733879,
              o = -1732584194,
              c = 271733878;
            var l = i + 72 & -64,
              h = new Uint8Array(l);
            var u, d;
            for (u = 0; u < i; ++u) h[u] = a[r++];
            h[u++] = 128;
            var f = l - 8;
            for (; u < f;) h[u++] = 0;
            h[u++] = i << 3 & 255;
            h[u++] = i >> 5 & 255;
            h[u++] = i >> 13 & 255;
            h[u++] = i >> 21 & 255;
            h[u++] = i >>> 29 & 255;
            h[u++] = 0;
            h[u++] = 0;
            h[u++] = 0;
            var g = new Int32Array(16);
            for (u = 0; u < l;) {
              for (d = 0; d < 16; ++d, u += 4) g[d] = h[u] | h[u + 1] << 8 | h[u + 2] << 16 | h[u + 3] << 24;
              var _a284 = void 0,
                _r230 = void 0,
                _i208 = n,
                _l30 = s,
                _f19 = o,
                _p13 = c;
              for (d = 0; d < 64; ++d) {
                if (d < 16) {
                  _a284 = _l30 & _f19 | ~_l30 & _p13;
                  _r230 = d;
                } else if (d < 32) {
                  _a284 = _p13 & _l30 | ~_p13 & _f19;
                  _r230 = 5 * d + 1 & 15;
                } else if (d < 48) {
                  _a284 = _l30 ^ _f19 ^ _p13;
                  _r230 = 3 * d + 5 & 15;
                } else {
                  _a284 = _f19 ^ (_l30 | ~_p13);
                  _r230 = 7 * d & 15;
                }
                var _n132 = _p13,
                  _s98 = _i208 + _a284 + t[d] + g[_r230] | 0,
                  _o76 = e[d];
                _p13 = _f19;
                _f19 = _l30;
                _l30 = _l30 + (_s98 << _o76 | _s98 >>> 32 - _o76) | 0;
                _i208 = _n132;
              }
              n = n + _i208 | 0;
              s = s + _l30 | 0;
              o = o + _f19 | 0;
              c = c + _p13 | 0;
            }
            return new Uint8Array([255 & n, n >> 8 & 255, n >> 16 & 255, n >>> 24 & 255, 255 & s, s >> 8 & 255, s >> 16 & 255, s >>> 24 & 255, 255 & o, o >> 8 & 255, o >> 16 & 255, o >>> 24 & 255, 255 & c, c >> 8 & 255, c >> 16 & 255, c >>> 24 & 255]);
          };
        }();
        t.calculateMD5 = s;
        var Word64 = /*#__PURE__*/function () {
          function Word64(e, t) {
            _classCallCheck(this, Word64);
            this.high = 0 | e;
            this.low = 0 | t;
          }
          _createClass(Word64, [{
            key: "and",
            value: function and(e) {
              this.high &= e.high;
              this.low &= e.low;
            }
          }, {
            key: "xor",
            value: function xor(e) {
              this.high ^= e.high;
              this.low ^= e.low;
            }
          }, {
            key: "or",
            value: function or(e) {
              this.high |= e.high;
              this.low |= e.low;
            }
          }, {
            key: "shiftRight",
            value: function shiftRight(e) {
              if (e >= 32) {
                this.low = this.high >>> e - 32 | 0;
                this.high = 0;
              } else {
                this.low = this.low >>> e | this.high << 32 - e;
                this.high = this.high >>> e | 0;
              }
            }
          }, {
            key: "shiftLeft",
            value: function shiftLeft(e) {
              if (e >= 32) {
                this.high = this.low << e - 32;
                this.low = 0;
              } else {
                this.high = this.high << e | this.low >>> 32 - e;
                this.low <<= e;
              }
            }
          }, {
            key: "rotateRight",
            value: function rotateRight(e) {
              var t, a;
              if (32 & e) {
                a = this.low;
                t = this.high;
              } else {
                t = this.low;
                a = this.high;
              }
              e &= 31;
              this.low = t >>> e | a << 32 - e;
              this.high = a >>> e | t << 32 - e;
            }
          }, {
            key: "not",
            value: function not() {
              this.high = ~this.high;
              this.low = ~this.low;
            }
          }, {
            key: "add",
            value: function add(e) {
              var t = (this.low >>> 0) + (e.low >>> 0);
              var a = (this.high >>> 0) + (e.high >>> 0);
              t > 4294967295 && (a += 1);
              this.low = 0 | t;
              this.high = 0 | a;
            }
          }, {
            key: "copyTo",
            value: function copyTo(e, t) {
              e[t] = this.high >>> 24 & 255;
              e[t + 1] = this.high >> 16 & 255;
              e[t + 2] = this.high >> 8 & 255;
              e[t + 3] = 255 & this.high;
              e[t + 4] = this.low >>> 24 & 255;
              e[t + 5] = this.low >> 16 & 255;
              e[t + 6] = this.low >> 8 & 255;
              e[t + 7] = 255 & this.low;
            }
          }, {
            key: "assign",
            value: function assign(e) {
              this.high = e.high;
              this.low = e.low;
            }
          }]);
          return Word64;
        }();
        var o = function calculateSHA256Closure() {
          function rotr(e, t) {
            return e >>> t | e << 32 - t;
          }
          function ch(e, t, a) {
            return e & t ^ ~e & a;
          }
          function maj(e, t, a) {
            return e & t ^ e & a ^ t & a;
          }
          function sigma(e) {
            return rotr(e, 2) ^ rotr(e, 13) ^ rotr(e, 22);
          }
          function sigmaPrime(e) {
            return rotr(e, 6) ^ rotr(e, 11) ^ rotr(e, 25);
          }
          function littleSigma(e) {
            return rotr(e, 7) ^ rotr(e, 18) ^ e >>> 3;
          }
          var e = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
          return function hash(t, a, r) {
            var i = 1779033703,
              n = 3144134277,
              s = 1013904242,
              o = 2773480762,
              c = 1359893119,
              l = 2600822924,
              h = 528734635,
              u = 1541459225;
            var d = 64 * Math.ceil((r + 9) / 64),
              f = new Uint8Array(d);
            var g, p;
            for (g = 0; g < r; ++g) f[g] = t[a++];
            f[g++] = 128;
            var m = d - 8;
            for (; g < m;) f[g++] = 0;
            f[g++] = 0;
            f[g++] = 0;
            f[g++] = 0;
            f[g++] = r >>> 29 & 255;
            f[g++] = r >> 21 & 255;
            f[g++] = r >> 13 & 255;
            f[g++] = r >> 5 & 255;
            f[g++] = r << 3 & 255;
            var b = new Uint32Array(64);
            for (g = 0; g < d;) {
              for (p = 0; p < 16; ++p) {
                b[p] = f[g] << 24 | f[g + 1] << 16 | f[g + 2] << 8 | f[g + 3];
                g += 4;
              }
              for (p = 16; p < 64; ++p) b[p] = (rotr(y = b[p - 2], 17) ^ rotr(y, 19) ^ y >>> 10) + b[p - 7] + littleSigma(b[p - 15]) + b[p - 16] | 0;
              var _t354 = void 0,
                _a285 = void 0,
                _r231 = i,
                _d16 = n,
                _m6 = s,
                w = o,
                S = c,
                x = l,
                C = h,
                k = u;
              for (p = 0; p < 64; ++p) {
                _t354 = k + sigmaPrime(S) + ch(S, x, C) + e[p] + b[p];
                _a285 = sigma(_r231) + maj(_r231, _d16, _m6);
                k = C;
                C = x;
                x = S;
                S = w + _t354 | 0;
                w = _m6;
                _m6 = _d16;
                _d16 = _r231;
                _r231 = _t354 + _a285 | 0;
              }
              i = i + _r231 | 0;
              n = n + _d16 | 0;
              s = s + _m6 | 0;
              o = o + w | 0;
              c = c + S | 0;
              l = l + x | 0;
              h = h + C | 0;
              u = u + k | 0;
            }
            var y;
            return new Uint8Array([i >> 24 & 255, i >> 16 & 255, i >> 8 & 255, 255 & i, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n, s >> 24 & 255, s >> 16 & 255, s >> 8 & 255, 255 & s, o >> 24 & 255, o >> 16 & 255, o >> 8 & 255, 255 & o, c >> 24 & 255, c >> 16 & 255, c >> 8 & 255, 255 & c, l >> 24 & 255, l >> 16 & 255, l >> 8 & 255, 255 & l, h >> 24 & 255, h >> 16 & 255, h >> 8 & 255, 255 & h, u >> 24 & 255, u >> 16 & 255, u >> 8 & 255, 255 & u]);
          };
        }();
        t.calculateSHA256 = o;
        var c = function calculateSHA512Closure() {
          function ch(e, t, a, r, i) {
            e.assign(t);
            e.and(a);
            i.assign(t);
            i.not();
            i.and(r);
            e.xor(i);
          }
          function maj(e, t, a, r, i) {
            e.assign(t);
            e.and(a);
            i.assign(t);
            i.and(r);
            e.xor(i);
            i.assign(a);
            i.and(r);
            e.xor(i);
          }
          function sigma(e, t, a) {
            e.assign(t);
            e.rotateRight(28);
            a.assign(t);
            a.rotateRight(34);
            e.xor(a);
            a.assign(t);
            a.rotateRight(39);
            e.xor(a);
          }
          function sigmaPrime(e, t, a) {
            e.assign(t);
            e.rotateRight(14);
            a.assign(t);
            a.rotateRight(18);
            e.xor(a);
            a.assign(t);
            a.rotateRight(41);
            e.xor(a);
          }
          function littleSigma(e, t, a) {
            e.assign(t);
            e.rotateRight(1);
            a.assign(t);
            a.rotateRight(8);
            e.xor(a);
            a.assign(t);
            a.shiftRight(7);
            e.xor(a);
          }
          function littleSigmaPrime(e, t, a) {
            e.assign(t);
            e.rotateRight(19);
            a.assign(t);
            a.rotateRight(61);
            e.xor(a);
            a.assign(t);
            a.shiftRight(6);
            e.xor(a);
          }
          var e = [new Word64(1116352408, 3609767458), new Word64(1899447441, 602891725), new Word64(3049323471, 3964484399), new Word64(3921009573, 2173295548), new Word64(961987163, 4081628472), new Word64(1508970993, 3053834265), new Word64(2453635748, 2937671579), new Word64(2870763221, 3664609560), new Word64(3624381080, 2734883394), new Word64(310598401, 1164996542), new Word64(607225278, 1323610764), new Word64(1426881987, 3590304994), new Word64(1925078388, 4068182383), new Word64(2162078206, 991336113), new Word64(2614888103, 633803317), new Word64(3248222580, 3479774868), new Word64(3835390401, 2666613458), new Word64(4022224774, 944711139), new Word64(264347078, 2341262773), new Word64(604807628, 2007800933), new Word64(770255983, 1495990901), new Word64(1249150122, 1856431235), new Word64(1555081692, 3175218132), new Word64(1996064986, 2198950837), new Word64(2554220882, 3999719339), new Word64(2821834349, 766784016), new Word64(2952996808, 2566594879), new Word64(3210313671, 3203337956), new Word64(3336571891, 1034457026), new Word64(3584528711, 2466948901), new Word64(113926993, 3758326383), new Word64(338241895, 168717936), new Word64(666307205, 1188179964), new Word64(773529912, 1546045734), new Word64(1294757372, 1522805485), new Word64(1396182291, 2643833823), new Word64(1695183700, 2343527390), new Word64(1986661051, 1014477480), new Word64(2177026350, 1206759142), new Word64(2456956037, 344077627), new Word64(2730485921, 1290863460), new Word64(2820302411, 3158454273), new Word64(3259730800, 3505952657), new Word64(3345764771, 106217008), new Word64(3516065817, 3606008344), new Word64(3600352804, 1432725776), new Word64(4094571909, 1467031594), new Word64(275423344, 851169720), new Word64(430227734, 3100823752), new Word64(506948616, 1363258195), new Word64(659060556, 3750685593), new Word64(883997877, 3785050280), new Word64(958139571, 3318307427), new Word64(1322822218, 3812723403), new Word64(1537002063, 2003034995), new Word64(1747873779, 3602036899), new Word64(1955562222, 1575990012), new Word64(2024104815, 1125592928), new Word64(2227730452, 2716904306), new Word64(2361852424, 442776044), new Word64(2428436474, 593698344), new Word64(2756734187, 3733110249), new Word64(3204031479, 2999351573), new Word64(3329325298, 3815920427), new Word64(3391569614, 3928383900), new Word64(3515267271, 566280711), new Word64(3940187606, 3454069534), new Word64(4118630271, 4000239992), new Word64(116418474, 1914138554), new Word64(174292421, 2731055270), new Word64(289380356, 3203993006), new Word64(460393269, 320620315), new Word64(685471733, 587496836), new Word64(852142971, 1086792851), new Word64(1017036298, 365543100), new Word64(1126000580, 2618297676), new Word64(1288033470, 3409855158), new Word64(1501505948, 4234509866), new Word64(1607167915, 987167468), new Word64(1816402316, 1246189591)];
          return function hash(t, a, r) {
            var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;
            var n, s, o, c, l, h, u, d;
            if (i) {
              n = new Word64(3418070365, 3238371032);
              s = new Word64(1654270250, 914150663);
              o = new Word64(2438529370, 812702999);
              c = new Word64(355462360, 4144912697);
              l = new Word64(1731405415, 4290775857);
              h = new Word64(2394180231, 1750603025);
              u = new Word64(3675008525, 1694076839);
              d = new Word64(1203062813, 3204075428);
            } else {
              n = new Word64(1779033703, 4089235720);
              s = new Word64(3144134277, 2227873595);
              o = new Word64(1013904242, 4271175723);
              c = new Word64(2773480762, 1595750129);
              l = new Word64(1359893119, 2917565137);
              h = new Word64(2600822924, 725511199);
              u = new Word64(528734635, 4215389547);
              d = new Word64(1541459225, 327033209);
            }
            var f = 128 * Math.ceil((r + 17) / 128),
              g = new Uint8Array(f);
            var p, m;
            for (p = 0; p < r; ++p) g[p] = t[a++];
            g[p++] = 128;
            var b = f - 16;
            for (; p < b;) g[p++] = 0;
            g[p++] = 0;
            g[p++] = 0;
            g[p++] = 0;
            g[p++] = 0;
            g[p++] = 0;
            g[p++] = 0;
            g[p++] = 0;
            g[p++] = 0;
            g[p++] = 0;
            g[p++] = 0;
            g[p++] = 0;
            g[p++] = r >>> 29 & 255;
            g[p++] = r >> 21 & 255;
            g[p++] = r >> 13 & 255;
            g[p++] = r >> 5 & 255;
            g[p++] = r << 3 & 255;
            var y = new Array(80);
            for (p = 0; p < 80; p++) y[p] = new Word64(0, 0);
            var w = new Word64(0, 0),
              S = new Word64(0, 0),
              x = new Word64(0, 0),
              C = new Word64(0, 0),
              k = new Word64(0, 0),
              v = new Word64(0, 0),
              F = new Word64(0, 0),
              O = new Word64(0, 0);
            var T = new Word64(0, 0),
              M = new Word64(0, 0),
              E = new Word64(0, 0),
              D = new Word64(0, 0);
            var N, R;
            for (p = 0; p < f;) {
              for (m = 0; m < 16; ++m) {
                y[m].high = g[p] << 24 | g[p + 1] << 16 | g[p + 2] << 8 | g[p + 3];
                y[m].low = g[p + 4] << 24 | g[p + 5] << 16 | g[p + 6] << 8 | g[p + 7];
                p += 8;
              }
              for (m = 16; m < 80; ++m) {
                N = y[m];
                littleSigmaPrime(N, y[m - 2], D);
                N.add(y[m - 7]);
                littleSigma(E, y[m - 15], D);
                N.add(E);
                N.add(y[m - 16]);
              }
              w.assign(n);
              S.assign(s);
              x.assign(o);
              C.assign(c);
              k.assign(l);
              v.assign(h);
              F.assign(u);
              O.assign(d);
              for (m = 0; m < 80; ++m) {
                T.assign(O);
                sigmaPrime(E, k, D);
                T.add(E);
                ch(E, k, v, F, D);
                T.add(E);
                T.add(e[m]);
                T.add(y[m]);
                sigma(M, w, D);
                maj(E, w, S, x, D);
                M.add(E);
                N = O;
                O = F;
                F = v;
                v = k;
                C.add(T);
                k = C;
                C = x;
                x = S;
                S = w;
                N.assign(T);
                N.add(M);
                w = N;
              }
              n.add(w);
              s.add(S);
              o.add(x);
              c.add(C);
              l.add(k);
              h.add(v);
              u.add(F);
              d.add(O);
            }
            if (i) {
              R = new Uint8Array(48);
              n.copyTo(R, 0);
              s.copyTo(R, 8);
              o.copyTo(R, 16);
              c.copyTo(R, 24);
              l.copyTo(R, 32);
              h.copyTo(R, 40);
            } else {
              R = new Uint8Array(64);
              n.copyTo(R, 0);
              s.copyTo(R, 8);
              o.copyTo(R, 16);
              c.copyTo(R, 24);
              l.copyTo(R, 32);
              h.copyTo(R, 40);
              u.copyTo(R, 48);
              d.copyTo(R, 56);
            }
            return R;
          };
        }();
        t.calculateSHA512 = c;
        function calculateSHA384(e, t, a) {
          return c(e, t, a, !0);
        }
        var NullCipher = /*#__PURE__*/function () {
          function NullCipher() {
            _classCallCheck(this, NullCipher);
          }
          _createClass(NullCipher, [{
            key: "decryptBlock",
            value: function decryptBlock(e) {
              return e;
            }
          }, {
            key: "encrypt",
            value: function encrypt(e) {
              return e;
            }
          }]);
          return NullCipher;
        }();
        var AESBaseCipher = /*#__PURE__*/function () {
          function AESBaseCipher() {
            _classCallCheck(this, AESBaseCipher);
            this.constructor === AESBaseCipher && (0, r.unreachable)("Cannot initialize AESBaseCipher.");
            this._s = new Uint8Array([99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22]);
            this._inv_s = new Uint8Array([82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]);
            this._mix = new Uint32Array([0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795]);
            this._mixCol = new Uint8Array(256);
            for (var _e484 = 0; _e484 < 256; _e484++) this._mixCol[_e484] = _e484 < 128 ? _e484 << 1 : _e484 << 1 ^ 27;
            this.buffer = new Uint8Array(16);
            this.bufferPosition = 0;
          }
          _createClass(AESBaseCipher, [{
            key: "_expandKey",
            value: function _expandKey(e) {
              (0, r.unreachable)("Cannot call `_expandKey` on the base class");
            }
          }, {
            key: "_decrypt",
            value: function _decrypt(e, t) {
              var a, r, i;
              var n = new Uint8Array(16);
              n.set(e);
              for (var _e485 = 0, _a286 = this._keySize; _e485 < 16; ++_e485, ++_a286) n[_e485] ^= t[_a286];
              for (var _e486 = this._cyclesOfRepetition - 1; _e486 >= 1; --_e486) {
                a = n[13];
                n[13] = n[9];
                n[9] = n[5];
                n[5] = n[1];
                n[1] = a;
                a = n[14];
                r = n[10];
                n[14] = n[6];
                n[10] = n[2];
                n[6] = a;
                n[2] = r;
                a = n[15];
                r = n[11];
                i = n[7];
                n[15] = n[3];
                n[11] = a;
                n[7] = r;
                n[3] = i;
                for (var _e487 = 0; _e487 < 16; ++_e487) n[_e487] = this._inv_s[n[_e487]];
                for (var _a287 = 0, _r232 = 16 * _e486; _a287 < 16; ++_a287, ++_r232) n[_a287] ^= t[_r232];
                for (var _e488 = 0; _e488 < 16; _e488 += 4) {
                  var _t355 = this._mix[n[_e488]],
                    _r233 = this._mix[n[_e488 + 1]],
                    _i209 = this._mix[n[_e488 + 2]],
                    _s99 = this._mix[n[_e488 + 3]];
                  a = _t355 ^ _r233 >>> 8 ^ _r233 << 24 ^ _i209 >>> 16 ^ _i209 << 16 ^ _s99 >>> 24 ^ _s99 << 8;
                  n[_e488] = a >>> 24 & 255;
                  n[_e488 + 1] = a >> 16 & 255;
                  n[_e488 + 2] = a >> 8 & 255;
                  n[_e488 + 3] = 255 & a;
                }
              }
              a = n[13];
              n[13] = n[9];
              n[9] = n[5];
              n[5] = n[1];
              n[1] = a;
              a = n[14];
              r = n[10];
              n[14] = n[6];
              n[10] = n[2];
              n[6] = a;
              n[2] = r;
              a = n[15];
              r = n[11];
              i = n[7];
              n[15] = n[3];
              n[11] = a;
              n[7] = r;
              n[3] = i;
              for (var _e489 = 0; _e489 < 16; ++_e489) {
                n[_e489] = this._inv_s[n[_e489]];
                n[_e489] ^= t[_e489];
              }
              return n;
            }
          }, {
            key: "_encrypt",
            value: function _encrypt(e, t) {
              var a = this._s;
              var r, i, n;
              var s = new Uint8Array(16);
              s.set(e);
              for (var _e490 = 0; _e490 < 16; ++_e490) s[_e490] ^= t[_e490];
              for (var _e491 = 1; _e491 < this._cyclesOfRepetition; _e491++) {
                for (var _e492 = 0; _e492 < 16; ++_e492) s[_e492] = a[s[_e492]];
                n = s[1];
                s[1] = s[5];
                s[5] = s[9];
                s[9] = s[13];
                s[13] = n;
                n = s[2];
                i = s[6];
                s[2] = s[10];
                s[6] = s[14];
                s[10] = n;
                s[14] = i;
                n = s[3];
                i = s[7];
                r = s[11];
                s[3] = s[15];
                s[7] = n;
                s[11] = i;
                s[15] = r;
                for (var _e493 = 0; _e493 < 16; _e493 += 4) {
                  var _t356 = s[_e493 + 0],
                    _a288 = s[_e493 + 1],
                    _i210 = s[_e493 + 2],
                    _n133 = s[_e493 + 3];
                  r = _t356 ^ _a288 ^ _i210 ^ _n133;
                  s[_e493 + 0] ^= r ^ this._mixCol[_t356 ^ _a288];
                  s[_e493 + 1] ^= r ^ this._mixCol[_a288 ^ _i210];
                  s[_e493 + 2] ^= r ^ this._mixCol[_i210 ^ _n133];
                  s[_e493 + 3] ^= r ^ this._mixCol[_n133 ^ _t356];
                }
                for (var _a289 = 0, _r234 = 16 * _e491; _a289 < 16; ++_a289, ++_r234) s[_a289] ^= t[_r234];
              }
              for (var _e494 = 0; _e494 < 16; ++_e494) s[_e494] = a[s[_e494]];
              n = s[1];
              s[1] = s[5];
              s[5] = s[9];
              s[9] = s[13];
              s[13] = n;
              n = s[2];
              i = s[6];
              s[2] = s[10];
              s[6] = s[14];
              s[10] = n;
              s[14] = i;
              n = s[3];
              i = s[7];
              r = s[11];
              s[3] = s[15];
              s[7] = n;
              s[11] = i;
              s[15] = r;
              for (var _e495 = 0, _a290 = this._keySize; _e495 < 16; ++_e495, ++_a290) s[_e495] ^= t[_a290];
              return s;
            }
          }, {
            key: "_decryptBlock2",
            value: function _decryptBlock2(e, t) {
              var a = e.length;
              var r = this.buffer,
                i = this.bufferPosition;
              var n = [];
              var s = this.iv;
              for (var _t357 = 0; _t357 < a; ++_t357) {
                r[i] = e[_t357];
                ++i;
                if (i < 16) continue;
                var _a291 = this._decrypt(r, this._key);
                for (var _e496 = 0; _e496 < 16; ++_e496) _a291[_e496] ^= s[_e496];
                s = r;
                n.push(_a291);
                r = new Uint8Array(16);
                i = 0;
              }
              this.buffer = r;
              this.bufferLength = i;
              this.iv = s;
              if (0 === n.length) return new Uint8Array(0);
              var o = 16 * n.length;
              if (t) {
                var _e497 = n.at(-1);
                var _t358 = _e497[15];
                if (_t358 <= 16) {
                  for (var _a292 = 15, _r235 = 16 - _t358; _a292 >= _r235; --_a292) if (_e497[_a292] !== _t358) {
                    _t358 = 0;
                    break;
                  }
                  o -= _t358;
                  n[n.length - 1] = _e497.subarray(0, 16 - _t358);
                }
              }
              var c = new Uint8Array(o);
              for (var _e498 = 0, _t359 = 0, _a293 = n.length; _e498 < _a293; ++_e498, _t359 += 16) c.set(n[_e498], _t359);
              return c;
            }
          }, {
            key: "decryptBlock",
            value: function decryptBlock(e, t) {
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
              var r = e.length,
                i = this.buffer;
              var n = this.bufferPosition;
              if (a) this.iv = a;else {
                for (var _t360 = 0; n < 16 && _t360 < r; ++_t360, ++n) i[n] = e[_t360];
                if (n < 16) {
                  this.bufferLength = n;
                  return new Uint8Array(0);
                }
                this.iv = i;
                e = e.subarray(16);
              }
              this.buffer = new Uint8Array(16);
              this.bufferLength = 0;
              this.decryptBlock = this._decryptBlock2;
              return this.decryptBlock(e, t);
            }
          }, {
            key: "encrypt",
            value: function encrypt(e, t) {
              var a = e.length;
              var r = this.buffer,
                i = this.bufferPosition;
              var n = [];
              t || (t = new Uint8Array(16));
              for (var _s100 = 0; _s100 < a; ++_s100) {
                r[i] = e[_s100];
                ++i;
                if (i < 16) continue;
                for (var _e499 = 0; _e499 < 16; ++_e499) r[_e499] ^= t[_e499];
                var _a294 = this._encrypt(r, this._key);
                t = _a294;
                n.push(_a294);
                r = new Uint8Array(16);
                i = 0;
              }
              this.buffer = r;
              this.bufferLength = i;
              this.iv = t;
              if (0 === n.length) return new Uint8Array(0);
              var s = 16 * n.length,
                o = new Uint8Array(s);
              for (var _e500 = 0, _t361 = 0, _a295 = n.length; _e500 < _a295; ++_e500, _t361 += 16) o.set(n[_e500], _t361);
              return o;
            }
          }]);
          return AESBaseCipher;
        }();
        var AES128Cipher = /*#__PURE__*/function (_AESBaseCipher) {
          _inherits(AES128Cipher, _AESBaseCipher);
          var _super93 = _createSuper(AES128Cipher);
          function AES128Cipher(e) {
            var _this94;
            _classCallCheck(this, AES128Cipher);
            _this94 = _super93.call(this);
            _this94._cyclesOfRepetition = 10;
            _this94._keySize = 160;
            _this94._rcon = new Uint8Array([141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141]);
            _this94._key = _this94._expandKey(e);
            return _this94;
          }
          _createClass(AES128Cipher, [{
            key: "_expandKey",
            value: function _expandKey(e) {
              var t = this._s,
                a = this._rcon,
                r = new Uint8Array(176);
              r.set(e);
              for (var _e501 = 16, _i211 = 1; _e501 < 176; ++_i211) {
                var _n134 = r[_e501 - 3],
                  _s101 = r[_e501 - 2],
                  _o77 = r[_e501 - 1],
                  _c47 = r[_e501 - 4];
                _n134 = t[_n134];
                _s101 = t[_s101];
                _o77 = t[_o77];
                _c47 = t[_c47];
                _n134 ^= a[_i211];
                for (var _t362 = 0; _t362 < 4; ++_t362) {
                  r[_e501] = _n134 ^= r[_e501 - 16];
                  _e501++;
                  r[_e501] = _s101 ^= r[_e501 - 16];
                  _e501++;
                  r[_e501] = _o77 ^= r[_e501 - 16];
                  _e501++;
                  r[_e501] = _c47 ^= r[_e501 - 16];
                  _e501++;
                }
              }
              return r;
            }
          }]);
          return AES128Cipher;
        }(AESBaseCipher);
        t.AES128Cipher = AES128Cipher;
        var AES256Cipher = /*#__PURE__*/function (_AESBaseCipher2) {
          _inherits(AES256Cipher, _AESBaseCipher2);
          var _super94 = _createSuper(AES256Cipher);
          function AES256Cipher(e) {
            var _this95;
            _classCallCheck(this, AES256Cipher);
            _this95 = _super94.call(this);
            _this95._cyclesOfRepetition = 14;
            _this95._keySize = 224;
            _this95._key = _this95._expandKey(e);
            return _this95;
          }
          _createClass(AES256Cipher, [{
            key: "_expandKey",
            value: function _expandKey(e) {
              var t = this._s,
                a = new Uint8Array(240);
              a.set(e);
              var r,
                i,
                n,
                s,
                o = 1;
              for (var _e502 = 32, _c48 = 1; _e502 < 240; ++_c48) {
                if (_e502 % 32 == 16) {
                  r = t[r];
                  i = t[i];
                  n = t[n];
                  s = t[s];
                } else if (_e502 % 32 == 0) {
                  r = a[_e502 - 3];
                  i = a[_e502 - 2];
                  n = a[_e502 - 1];
                  s = a[_e502 - 4];
                  r = t[r];
                  i = t[i];
                  n = t[n];
                  s = t[s];
                  r ^= o;
                  (o <<= 1) >= 256 && (o = 255 & (27 ^ o));
                }
                for (var _t363 = 0; _t363 < 4; ++_t363) {
                  a[_e502] = r ^= a[_e502 - 32];
                  _e502++;
                  a[_e502] = i ^= a[_e502 - 32];
                  _e502++;
                  a[_e502] = n ^= a[_e502 - 32];
                  _e502++;
                  a[_e502] = s ^= a[_e502 - 32];
                  _e502++;
                }
              }
              return a;
            }
          }]);
          return AES256Cipher;
        }(AESBaseCipher);
        t.AES256Cipher = AES256Cipher;
        var PDF17 = /*#__PURE__*/function () {
          function PDF17() {
            _classCallCheck(this, PDF17);
          }
          _createClass(PDF17, [{
            key: "checkOwnerPassword",
            value: function checkOwnerPassword(e, t, a, i) {
              var n = new Uint8Array(e.length + 56);
              n.set(e, 0);
              n.set(t, e.length);
              n.set(a, e.length + t.length);
              var s = o(n, 0, n.length);
              return (0, r.isArrayEqual)(s, i);
            }
          }, {
            key: "checkUserPassword",
            value: function checkUserPassword(e, t, a) {
              var i = new Uint8Array(e.length + 8);
              i.set(e, 0);
              i.set(t, e.length);
              var n = o(i, 0, i.length);
              return (0, r.isArrayEqual)(n, a);
            }
          }, {
            key: "getOwnerKey",
            value: function getOwnerKey(e, t, a, r) {
              var i = new Uint8Array(e.length + 56);
              i.set(e, 0);
              i.set(t, e.length);
              i.set(a, e.length + t.length);
              var n = o(i, 0, i.length);
              return new AES256Cipher(n).decryptBlock(r, !1, new Uint8Array(16));
            }
          }, {
            key: "getUserKey",
            value: function getUserKey(e, t, a) {
              var r = new Uint8Array(e.length + 8);
              r.set(e, 0);
              r.set(t, e.length);
              var i = o(r, 0, r.length);
              return new AES256Cipher(i).decryptBlock(a, !1, new Uint8Array(16));
            }
          }]);
          return PDF17;
        }();
        t.PDF17 = PDF17;
        var PDF20 = /*#__PURE__*/function () {
          function PDF20() {
            _classCallCheck(this, PDF20);
          }
          _createClass(PDF20, [{
            key: "_hash",
            value: function _hash(e, t, a) {
              var r = o(t, 0, t.length).subarray(0, 32),
                i = [0],
                n = 0;
              for (; n < 64 || i.at(-1) > n - 32;) {
                var _t364 = e.length + r.length + a.length,
                  _s102 = new Uint8Array(_t364);
                var _l31 = 0;
                _s102.set(e, _l31);
                _l31 += e.length;
                _s102.set(r, _l31);
                _l31 += r.length;
                _s102.set(a, _l31);
                var _h30 = new Uint8Array(64 * _t364);
                for (var _e503 = 0, _a296 = 0; _e503 < 64; _e503++, _a296 += _t364) _h30.set(_s102, _a296);
                i = new AES128Cipher(r.subarray(0, 16)).encrypt(_h30, r.subarray(16, 32));
                var u = i.slice(0, 16).reduce(function (e, t) {
                  return e + t;
                }, 0) % 3;
                0 === u ? r = o(i, 0, i.length) : 1 === u ? r = calculateSHA384(i, 0, i.length) : 2 === u && (r = c(i, 0, i.length));
                n++;
              }
              return r.subarray(0, 32);
            }
          }, {
            key: "checkOwnerPassword",
            value: function checkOwnerPassword(e, t, a, i) {
              var n = new Uint8Array(e.length + 56);
              n.set(e, 0);
              n.set(t, e.length);
              n.set(a, e.length + t.length);
              var s = this._hash(e, n, a);
              return (0, r.isArrayEqual)(s, i);
            }
          }, {
            key: "checkUserPassword",
            value: function checkUserPassword(e, t, a) {
              var i = new Uint8Array(e.length + 8);
              i.set(e, 0);
              i.set(t, e.length);
              var n = this._hash(e, i, []);
              return (0, r.isArrayEqual)(n, a);
            }
          }, {
            key: "getOwnerKey",
            value: function getOwnerKey(e, t, a, r) {
              var i = new Uint8Array(e.length + 56);
              i.set(e, 0);
              i.set(t, e.length);
              i.set(a, e.length + t.length);
              var n = this._hash(e, i, a);
              return new AES256Cipher(n).decryptBlock(r, !1, new Uint8Array(16));
            }
          }, {
            key: "getUserKey",
            value: function getUserKey(e, t, a) {
              var r = new Uint8Array(e.length + 8);
              r.set(e, 0);
              r.set(t, e.length);
              var i = this._hash(e, r, []);
              return new AES256Cipher(i).decryptBlock(a, !1, new Uint8Array(16));
            }
          }]);
          return PDF20;
        }();
        t.PDF20 = PDF20;
        var CipherTransform = /*#__PURE__*/function () {
          function CipherTransform(e, t) {
            _classCallCheck(this, CipherTransform);
            this.StringCipherConstructor = e;
            this.StreamCipherConstructor = t;
          }
          _createClass(CipherTransform, [{
            key: "createStream",
            value: function createStream(e, t) {
              var a = new this.StreamCipherConstructor();
              return new n.DecryptStream(e, t, function cipherTransformDecryptStream(e, t) {
                return a.decryptBlock(e, t);
              });
            }
          }, {
            key: "decryptString",
            value: function decryptString(e) {
              var t = new this.StringCipherConstructor();
              var a = (0, r.stringToBytes)(e);
              a = t.decryptBlock(a, !0);
              return (0, r.bytesToString)(a);
            }
          }, {
            key: "encryptString",
            value: function encryptString(e) {
              var t = new this.StringCipherConstructor();
              if (t instanceof AESBaseCipher) {
                var _a297 = 16 - e.length % 16;
                e += String.fromCharCode(_a297).repeat(_a297);
                var _i212 = new Uint8Array(16);
                if ("undefined" != typeof crypto) crypto.getRandomValues(_i212);else for (var _e504 = 0; _e504 < 16; _e504++) _i212[_e504] = Math.floor(256 * Math.random());
                var _n135 = (0, r.stringToBytes)(e);
                _n135 = t.encrypt(_n135, _i212);
                var _s103 = new Uint8Array(16 + _n135.length);
                _s103.set(_i212);
                _s103.set(_n135, 16);
                return (0, r.bytesToString)(_s103);
              }
              var a = (0, r.stringToBytes)(e);
              a = t.encrypt(a);
              return (0, r.bytesToString)(a);
            }
          }]);
          return CipherTransform;
        }();
        var l = function CipherTransformFactoryClosure() {
          var e = new Uint8Array([40, 191, 78, 94, 78, 117, 138, 65, 100, 0, 78, 86, 255, 250, 1, 8, 46, 46, 0, 182, 208, 104, 62, 128, 47, 12, 169, 254, 100, 83, 105, 122]);
          function prepareKeyData(t, a, r, i, n, o, c, l) {
            var h = 40 + r.length + t.length,
              u = new Uint8Array(h);
            var d,
              f,
              g = 0;
            if (a) {
              f = Math.min(32, a.length);
              for (; g < f; ++g) u[g] = a[g];
            }
            d = 0;
            for (; g < 32;) u[g++] = e[d++];
            for (d = 0, f = r.length; d < f; ++d) u[g++] = r[d];
            u[g++] = 255 & n;
            u[g++] = n >> 8 & 255;
            u[g++] = n >> 16 & 255;
            u[g++] = n >>> 24 & 255;
            for (d = 0, f = t.length; d < f; ++d) u[g++] = t[d];
            if (o >= 4 && !l) {
              u[g++] = 255;
              u[g++] = 255;
              u[g++] = 255;
              u[g++] = 255;
            }
            var p = s(u, 0, g);
            var m = c >> 3;
            if (o >= 3) for (d = 0; d < 50; ++d) p = s(p, 0, m);
            var b = p.subarray(0, m);
            var y, w;
            if (o >= 3) {
              for (g = 0; g < 32; ++g) u[g] = e[g];
              for (d = 0, f = t.length; d < f; ++d) u[g++] = t[d];
              y = new ARCFourCipher(b);
              w = y.encryptBlock(s(u, 0, g));
              f = b.length;
              var _a298 = new Uint8Array(f);
              for (d = 1; d <= 19; ++d) {
                for (var _e505 = 0; _e505 < f; ++_e505) _a298[_e505] = b[_e505] ^ d;
                y = new ARCFourCipher(_a298);
                w = y.encryptBlock(w);
              }
              for (d = 0, f = w.length; d < f; ++d) if (i[d] !== w[d]) return null;
            } else {
              y = new ARCFourCipher(b);
              w = y.encryptBlock(e);
              for (d = 0, f = w.length; d < f; ++d) if (i[d] !== w[d]) return null;
            }
            return b;
          }
          var t = i.Name.get("Identity");
          function buildObjectKey(e, t, a) {
            var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;
            var i = new Uint8Array(a.length + 9),
              n = a.length;
            var o;
            for (o = 0; o < n; ++o) i[o] = a[o];
            i[o++] = 255 & e;
            i[o++] = e >> 8 & 255;
            i[o++] = e >> 16 & 255;
            i[o++] = 255 & t;
            i[o++] = t >> 8 & 255;
            if (r) {
              i[o++] = 115;
              i[o++] = 65;
              i[o++] = 108;
              i[o++] = 84;
            }
            return s(i, 0, o).subarray(0, Math.min(a.length + 5, 16));
          }
          function buildCipherConstructor(e, t, a, n, s) {
            if (!(t instanceof i.Name)) throw new r.FormatError("Invalid crypt filter name.");
            var o = e.get(t.name);
            var c;
            null != o && (c = o.get("CFM"));
            if (!c || "None" === c.name) return function cipherTransformFactoryBuildCipherConstructorNone() {
              return new NullCipher();
            };
            if ("V2" === c.name) return function cipherTransformFactoryBuildCipherConstructorV2() {
              return new ARCFourCipher(buildObjectKey(a, n, s, !1));
            };
            if ("AESV2" === c.name) return function cipherTransformFactoryBuildCipherConstructorAESV2() {
              return new AES128Cipher(buildObjectKey(a, n, s, !0));
            };
            if ("AESV3" === c.name) return function cipherTransformFactoryBuildCipherConstructorAESV3() {
              return new AES256Cipher(s);
            };
            throw new r.FormatError("Unknown crypto method");
          }
          return /*#__PURE__*/function () {
            function CipherTransformFactory(a, n, o) {
              _classCallCheck(this, CipherTransformFactory);
              var c = a.get("Filter");
              if (!(0, i.isName)(c, "Standard")) throw new r.FormatError("unknown encryption method");
              this.filterName = c.name;
              this.dict = a;
              var l = a.get("V");
              if (!Number.isInteger(l) || 1 !== l && 2 !== l && 4 !== l && 5 !== l) throw new r.FormatError("unsupported encryption algorithm");
              this.algorithm = l;
              var h = a.get("Length");
              if (!h) if (l <= 3) h = 40;else {
                var _e506 = a.get("CF"),
                  _t365 = a.get("StmF");
                if (_e506 instanceof i.Dict && _t365 instanceof i.Name) {
                  _e506.suppressEncryption = !0;
                  var _a299 = _e506.get(_t365.name);
                  h = _a299 && _a299.get("Length") || 128;
                  h < 40 && (h <<= 3);
                }
              }
              if (!Number.isInteger(h) || h < 40 || h % 8 != 0) throw new r.FormatError("invalid key length");
              var u = (0, r.stringToBytes)(a.get("O")),
                d = (0, r.stringToBytes)(a.get("U")),
                f = u.subarray(0, 32),
                g = d.subarray(0, 32),
                p = a.get("P"),
                m = a.get("R"),
                b = (4 === l || 5 === l) && !1 !== a.get("EncryptMetadata");
              this.encryptMetadata = b;
              var y = (0, r.stringToBytes)(n);
              var w, S;
              if (o) {
                if (6 === m) try {
                  o = (0, r.utf8StringToString)(o);
                } catch (e) {
                  (0, r.warn)("CipherTransformFactory: Unable to convert UTF8 encoded password.");
                }
                w = (0, r.stringToBytes)(o);
              }
              if (5 !== l) S = prepareKeyData(y, w, f, g, p, m, h, b);else {
                var _e507 = u.subarray(32, 40),
                  _t366 = u.subarray(40, 48),
                  _i213 = d.subarray(0, 48),
                  _n136 = d.subarray(32, 40),
                  _s104 = d.subarray(40, 48),
                  _o78 = (0, r.stringToBytes)(a.get("OE")),
                  _c49 = (0, r.stringToBytes)(a.get("UE"));
                (0, r.stringToBytes)(a.get("Perms"));
                S = function createEncryptionKey20(e, t, a, r, i, n, s, o, c, l, h, u) {
                  if (t) {
                    var _e508 = Math.min(127, t.length);
                    t = t.subarray(0, _e508);
                  } else t = [];
                  var d;
                  d = 6 === e ? new PDF20() : new PDF17();
                  return d.checkUserPassword(t, o, s) ? d.getUserKey(t, c, h) : t.length && d.checkOwnerPassword(t, r, n, a) ? d.getOwnerKey(t, i, n, l) : null;
                }(m, w, f, _e507, _t366, _i213, g, _n136, _s104, _o78, _c49);
              }
              if (!S && !o) throw new r.PasswordException("No password given", r.PasswordResponses.NEED_PASSWORD);
              if (!S && o) {
                var _t367 = function decodeUserPassword(t, a, r, i) {
                  var n = new Uint8Array(32);
                  var o = 0;
                  var c = Math.min(32, t.length);
                  for (; o < c; ++o) n[o] = t[o];
                  var l = 0;
                  for (; o < 32;) n[o++] = e[l++];
                  var h = s(n, 0, o);
                  var u = i >> 3;
                  if (r >= 3) for (l = 0; l < 50; ++l) h = s(h, 0, h.length);
                  var d, f;
                  if (r >= 3) {
                    f = a;
                    var _e509 = new Uint8Array(u);
                    for (l = 19; l >= 0; l--) {
                      for (var _t368 = 0; _t368 < u; ++_t368) _e509[_t368] = h[_t368] ^ l;
                      d = new ARCFourCipher(_e509);
                      f = d.encryptBlock(f);
                    }
                  } else {
                    d = new ARCFourCipher(h.subarray(0, u));
                    f = d.encryptBlock(a);
                  }
                  return f;
                }(w, f, m, h);
                S = prepareKeyData(y, _t367, f, g, p, m, h, b);
              }
              if (!S) throw new r.PasswordException("Incorrect Password", r.PasswordResponses.INCORRECT_PASSWORD);
              this.encryptionKey = S;
              if (l >= 4) {
                var _e510 = a.get("CF");
                _e510 instanceof i.Dict && (_e510.suppressEncryption = !0);
                this.cf = _e510;
                this.stmf = a.get("StmF") || t;
                this.strf = a.get("StrF") || t;
                this.eff = a.get("EFF") || this.stmf;
              }
            }
            _createClass(CipherTransformFactory, [{
              key: "createCipherTransform",
              value: function createCipherTransform(e, t) {
                if (4 === this.algorithm || 5 === this.algorithm) return new CipherTransform(buildCipherConstructor(this.cf, this.strf, e, t, this.encryptionKey), buildCipherConstructor(this.cf, this.stmf, e, t, this.encryptionKey));
                var a = buildObjectKey(e, t, this.encryptionKey, !1),
                  r = function buildCipherCipherConstructor() {
                    return new ARCFourCipher(a);
                  };
                return new CipherTransform(r, r);
              }
            }]);
            return CipherTransformFactory;
          }();
        }();
        t.CipherTransformFactory = l;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.DecryptStream = void 0;
        var r = a(18);
        var DecryptStream = /*#__PURE__*/function (_r$DecodeStream9) {
          _inherits(DecryptStream, _r$DecodeStream9);
          var _super95 = _createSuper(DecryptStream);
          function DecryptStream(e, t, a) {
            var _this96;
            _classCallCheck(this, DecryptStream);
            _this96 = _super95.call(this, t);
            _this96.str = e;
            _this96.dict = e.dict;
            _this96.decrypt = a;
            _this96.nextChunk = null;
            _this96.initialized = !1;
            return _this96;
          }
          _createClass(DecryptStream, [{
            key: "readBlock",
            value: function readBlock() {
              var e;
              if (this.initialized) e = this.nextChunk;else {
                e = this.str.getBytes(512);
                this.initialized = !0;
              }
              if (!e || 0 === e.length) {
                this.eof = !0;
                return;
              }
              this.nextChunk = this.str.getBytes(512);
              var t = this.nextChunk && this.nextChunk.length > 0;
              e = (0, this.decrypt)(e, !t);
              var a = this.bufferLength,
                r = a + e.length;
              this.ensureBuffer(r).set(e, a);
              this.bufferLength = r;
            }
          }]);
          return DecryptStream;
        }(r.DecodeStream);
        t.DecryptStream = DecryptStream;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.Catalog = void 0;
        var r = a(3),
          i = a(2),
          n = a(4),
          s = a(70),
          o = a(5),
          c = a(71),
          l = a(12),
          h = a(72),
          u = a(59),
          d = a(73),
          f = a(74);
        function fetchDestination(e) {
          e instanceof n.Dict && (e = e.get("D"));
          return Array.isArray(e) ? e : null;
        }
        var Catalog = /*#__PURE__*/function () {
          function Catalog(e, t) {
            _classCallCheck(this, Catalog);
            this.pdfManager = e;
            this.xref = t;
            this._catDict = t.getCatalogObj();
            if (!(this._catDict instanceof n.Dict)) throw new i.FormatError("Catalog object is not a dictionary.");
            this.toplevelPagesDict;
            this._actualNumPages = null;
            this.fontCache = new n.RefSetCache();
            this.builtInCMapCache = new Map();
            this.standardFontDataCache = new Map();
            this.globalImageCache = new u.GlobalImageCache();
            this.pageKidsCountCache = new n.RefSetCache();
            this.pageIndexCache = new n.RefSetCache();
            this.nonBlendModesSet = new n.RefSet();
          }
          _createClass(Catalog, [{
            key: "version",
            get: function get() {
              var e = this._catDict.get("Version");
              if (e instanceof n.Name) {
                if (r.PDF_VERSION_REGEXP.test(e.name)) return (0, i.shadow)(this, "version", e.name);
                (0, i.warn)("Invalid PDF catalog version: ".concat(e.name));
              }
              return (0, i.shadow)(this, "version", null);
            }
          }, {
            key: "lang",
            get: function get() {
              var e = this._catDict.get("Lang");
              return (0, i.shadow)(this, "lang", "string" == typeof e ? (0, i.stringToPDFString)(e) : null);
            }
          }, {
            key: "needsRendering",
            get: function get() {
              var e = this._catDict.get("NeedsRendering");
              return (0, i.shadow)(this, "needsRendering", "boolean" == typeof e && e);
            }
          }, {
            key: "collection",
            get: function get() {
              var e = null;
              try {
                var _t369 = this._catDict.get("Collection");
                _t369 instanceof n.Dict && _t369.size > 0 && (e = _t369);
              } catch (e) {
                if (e instanceof r.MissingDataException) throw e;
                (0, i.info)("Cannot fetch Collection entry; assuming no collection is present.");
              }
              return (0, i.shadow)(this, "collection", e);
            }
          }, {
            key: "acroForm",
            get: function get() {
              var e = null;
              try {
                var _t370 = this._catDict.get("AcroForm");
                _t370 instanceof n.Dict && _t370.size > 0 && (e = _t370);
              } catch (e) {
                if (e instanceof r.MissingDataException) throw e;
                (0, i.info)("Cannot fetch AcroForm entry; assuming no forms are present.");
              }
              return (0, i.shadow)(this, "acroForm", e);
            }
          }, {
            key: "acroFormRef",
            get: function get() {
              var e = this._catDict.getRaw("AcroForm");
              return (0, i.shadow)(this, "acroFormRef", e instanceof n.Ref ? e : null);
            }
          }, {
            key: "metadata",
            get: function get() {
              var e = this._catDict.getRaw("Metadata");
              if (!(e instanceof n.Ref)) return (0, i.shadow)(this, "metadata", null);
              var t = null;
              try {
                var _a300 = !(this.xref.encrypt && this.xref.encrypt.encryptMetadata),
                  _r236 = this.xref.fetch(e, _a300);
                if (_r236 instanceof o.BaseStream && _r236.dict instanceof n.Dict) {
                  var _e511 = _r236.dict.get("Type"),
                    _a301 = _r236.dict.get("Subtype");
                  if ((0, n.isName)(_e511, "Metadata") && (0, n.isName)(_a301, "XML")) {
                    var _e512 = (0, i.stringToUTF8String)(_r236.getString());
                    _e512 && (t = new d.MetadataParser(_e512).serializable);
                  }
                }
              } catch (e) {
                if (e instanceof r.MissingDataException) throw e;
                (0, i.info)("Skipping invalid Metadata: \"".concat(e, "\"."));
              }
              return (0, i.shadow)(this, "metadata", t);
            }
          }, {
            key: "markInfo",
            get: function get() {
              var e = null;
              try {
                e = this._readMarkInfo();
              } catch (e) {
                if (e instanceof r.MissingDataException) throw e;
                (0, i.warn)("Unable to read mark info.");
              }
              return (0, i.shadow)(this, "markInfo", e);
            }
          }, {
            key: "_readMarkInfo",
            value: function _readMarkInfo() {
              var e = this._catDict.get("MarkInfo");
              if (!(e instanceof n.Dict)) return null;
              var t = {
                Marked: !1,
                UserProperties: !1,
                Suspects: !1
              };
              for (var _a302 in t) {
                var _r237 = e.get(_a302);
                "boolean" == typeof _r237 && (t[_a302] = _r237);
              }
              return t;
            }
          }, {
            key: "structTreeRoot",
            get: function get() {
              var e = null;
              try {
                e = this._readStructTreeRoot();
              } catch (e) {
                if (e instanceof r.MissingDataException) throw e;
                (0, i.warn)("Unable read to structTreeRoot info.");
              }
              return (0, i.shadow)(this, "structTreeRoot", e);
            }
          }, {
            key: "_readStructTreeRoot",
            value: function _readStructTreeRoot() {
              var e = this._catDict.get("StructTreeRoot");
              if (!(e instanceof n.Dict)) return null;
              var t = new f.StructTreeRoot(e);
              t.init();
              return t;
            }
          }, {
            key: "toplevelPagesDict",
            get: function get() {
              var e = this._catDict.get("Pages");
              if (!(e instanceof n.Dict)) throw new i.FormatError("Invalid top-level pages dictionary.");
              return (0, i.shadow)(this, "toplevelPagesDict", e);
            }
          }, {
            key: "documentOutline",
            get: function get() {
              var e = null;
              try {
                e = this._readDocumentOutline();
              } catch (e) {
                if (e instanceof r.MissingDataException) throw e;
                (0, i.warn)("Unable to read document outline.");
              }
              return (0, i.shadow)(this, "documentOutline", e);
            }
          }, {
            key: "_readDocumentOutline",
            value: function _readDocumentOutline() {
              var e = this._catDict.get("Outlines");
              if (!(e instanceof n.Dict)) return null;
              e = e.getRaw("First");
              if (!(e instanceof n.Ref)) return null;
              var t = {
                  items: []
                },
                a = [{
                  obj: e,
                  parent: t
                }],
                r = new n.RefSet();
              r.put(e);
              var s = this.xref,
                o = new Uint8ClampedArray(3);
              for (; a.length > 0;) {
                var _t371 = a.shift(),
                  _c50 = s.fetchIfRef(_t371.obj);
                if (null === _c50) continue;
                if (!_c50.has("Title")) throw new i.FormatError("Invalid outline item encountered.");
                var _h31 = {
                  url: null,
                  dest: null,
                  action: null
                };
                Catalog.parseDestDictionary({
                  destDict: _c50,
                  resultObj: _h31,
                  docBaseUrl: this.pdfManager.docBaseUrl,
                  docAttachments: this.attachments
                });
                var _u20 = _c50.get("Title"),
                  _d17 = _c50.get("F") || 0,
                  _f20 = _c50.getArray("C"),
                  _g19 = _c50.get("Count");
                var _p14 = o;
                !Array.isArray(_f20) || 3 !== _f20.length || 0 === _f20[0] && 0 === _f20[1] && 0 === _f20[2] || (_p14 = l.ColorSpace.singletons.rgb.getRgb(_f20, 0));
                var m = {
                  action: _h31.action,
                  attachment: _h31.attachment,
                  dest: _h31.dest,
                  url: _h31.url,
                  unsafeUrl: _h31.unsafeUrl,
                  newWindow: _h31.newWindow,
                  setOCGState: _h31.setOCGState,
                  title: (0, i.stringToPDFString)(_u20),
                  color: _p14,
                  count: Number.isInteger(_g19) ? _g19 : void 0,
                  bold: !!(2 & _d17),
                  italic: !!(1 & _d17),
                  items: []
                };
                _t371.parent.items.push(m);
                e = _c50.getRaw("First");
                if (e instanceof n.Ref && !r.has(e)) {
                  a.push({
                    obj: e,
                    parent: m
                  });
                  r.put(e);
                }
                e = _c50.getRaw("Next");
                if (e instanceof n.Ref && !r.has(e)) {
                  a.push({
                    obj: e,
                    parent: _t371.parent
                  });
                  r.put(e);
                }
              }
              return t.items.length > 0 ? t.items : null;
            }
          }, {
            key: "permissions",
            get: function get() {
              var e = null;
              try {
                e = this._readPermissions();
              } catch (e) {
                if (e instanceof r.MissingDataException) throw e;
                (0, i.warn)("Unable to read permissions.");
              }
              return (0, i.shadow)(this, "permissions", e);
            }
          }, {
            key: "_readPermissions",
            value: function _readPermissions() {
              var e = this.xref.trailer.get("Encrypt");
              if (!(e instanceof n.Dict)) return null;
              var t = e.get("P");
              if ("number" != typeof t) return null;
              t += Math.pow(2, 32);
              var a = [];
              for (var _e513 in i.PermissionFlag) {
                var _r238 = i.PermissionFlag[_e513];
                t & _r238 && a.push(_r238);
              }
              return a;
            }
          }, {
            key: "optionalContentConfig",
            get: function get() {
              var e = null;
              try {
                var _t372 = this._catDict.get("OCProperties");
                if (!_t372) return (0, i.shadow)(this, "optionalContentConfig", null);
                var _a303 = _t372.get("D");
                if (!_a303) return (0, i.shadow)(this, "optionalContentConfig", null);
                var _r239 = _t372.get("OCGs");
                if (!Array.isArray(_r239)) return (0, i.shadow)(this, "optionalContentConfig", null);
                var _s105 = [],
                  _o79 = [];
                var _iterator132 = _createForOfIteratorHelper(_r239),
                  _step132;
                try {
                  for (_iterator132.s(); !(_step132 = _iterator132.n()).done;) {
                    var _e514 = _step132.value;
                    if (!(_e514 instanceof n.Ref)) continue;
                    _o79.push(_e514);
                    var _t373 = this.xref.fetchIfRef(_e514);
                    _s105.push({
                      id: _e514.toString(),
                      name: "string" == typeof _t373.get("Name") ? (0, i.stringToPDFString)(_t373.get("Name")) : null,
                      intent: "string" == typeof _t373.get("Intent") ? (0, i.stringToPDFString)(_t373.get("Intent")) : null
                    });
                  }
                } catch (err) {
                  _iterator132.e(err);
                } finally {
                  _iterator132.f();
                }
                e = this._readOptionalContentConfig(_a303, _o79);
                e.groups = _s105;
              } catch (e) {
                if (e instanceof r.MissingDataException) throw e;
                (0, i.warn)("Unable to read optional content config: ".concat(e));
              }
              return (0, i.shadow)(this, "optionalContentConfig", e);
            }
          }, {
            key: "_readOptionalContentConfig",
            value: function _readOptionalContentConfig(e, t) {
              function parseOnOff(e) {
                var a = [];
                if (Array.isArray(e)) {
                  var _iterator133 = _createForOfIteratorHelper(e),
                    _step133;
                  try {
                    for (_iterator133.s(); !(_step133 = _iterator133.n()).done;) {
                      var _r240 = _step133.value;
                      _r240 instanceof n.Ref && t.includes(_r240) && a.push(_r240.toString());
                    }
                  } catch (err) {
                    _iterator133.e(err);
                  } finally {
                    _iterator133.f();
                  }
                }
                return a;
              }
              function parseOrder(e) {
                var a = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
                if (!Array.isArray(e)) return null;
                var i = [];
                var _iterator134 = _createForOfIteratorHelper(e),
                  _step134;
                try {
                  for (_iterator134.s(); !(_step134 = _iterator134.n()).done;) {
                    var _s106 = _step134.value;
                    if (_s106 instanceof n.Ref && t.includes(_s106)) {
                      r.put(_s106);
                      i.push(_s106.toString());
                      continue;
                    }
                    var _e515 = parseNestedOrder(_s106, a);
                    _e515 && i.push(_e515);
                  }
                } catch (err) {
                  _iterator134.e(err);
                } finally {
                  _iterator134.f();
                }
                if (a > 0) return i;
                var s = [];
                var _iterator135 = _createForOfIteratorHelper(t),
                  _step135;
                try {
                  for (_iterator135.s(); !(_step135 = _iterator135.n()).done;) {
                    var _e516 = _step135.value;
                    r.has(_e516) || s.push(_e516.toString());
                  }
                } catch (err) {
                  _iterator135.e(err);
                } finally {
                  _iterator135.f();
                }
                s.length && i.push({
                  name: null,
                  order: s
                });
                return i;
              }
              function parseNestedOrder(e, t) {
                if (++t > s) {
                  (0, i.warn)("parseNestedOrder - reached MAX_NESTED_LEVELS.");
                  return null;
                }
                var r = a.fetchIfRef(e);
                if (!Array.isArray(r)) return null;
                var n = a.fetchIfRef(r[0]);
                if ("string" != typeof n) return null;
                var o = parseOrder(r.slice(1), t);
                return o && o.length ? {
                  name: (0, i.stringToPDFString)(n),
                  order: o
                } : null;
              }
              var a = this.xref,
                r = new n.RefSet(),
                s = 10;
              return {
                name: "string" == typeof e.get("Name") ? (0, i.stringToPDFString)(e.get("Name")) : null,
                creator: "string" == typeof e.get("Creator") ? (0, i.stringToPDFString)(e.get("Creator")) : null,
                baseState: e.get("BaseState") instanceof n.Name ? e.get("BaseState").name : null,
                on: parseOnOff(e.get("ON")),
                off: parseOnOff(e.get("OFF")),
                order: parseOrder(e.get("Order")),
                groups: null
              };
            }
          }, {
            key: "setActualNumPages",
            value: function setActualNumPages() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
              this._actualNumPages = e;
            }
          }, {
            key: "hasActualNumPages",
            get: function get() {
              return null !== this._actualNumPages;
            }
          }, {
            key: "_pagesCount",
            get: function get() {
              var e = this.toplevelPagesDict.get("Count");
              if (!Number.isInteger(e)) throw new i.FormatError("Page count in top-level pages dictionary is not an integer.");
              return (0, i.shadow)(this, "_pagesCount", e);
            }
          }, {
            key: "numPages",
            get: function get() {
              return this.hasActualNumPages ? this._actualNumPages : this._pagesCount;
            }
          }, {
            key: "destinations",
            get: function get() {
              var e = this._readDests(),
                t = Object.create(null);
              if (e instanceof s.NameTree) {
                var _iterator136 = _createForOfIteratorHelper(e.getAll()),
                  _step136;
                try {
                  for (_iterator136.s(); !(_step136 = _iterator136.n()).done;) {
                    var _step136$value = _slicedToArray(_step136.value, 2),
                      _a304 = _step136$value[0],
                      _r241 = _step136$value[1];
                    var _e517 = fetchDestination(_r241);
                    _e517 && (t[(0, i.stringToPDFString)(_a304)] = _e517);
                  }
                } catch (err) {
                  _iterator136.e(err);
                } finally {
                  _iterator136.f();
                }
              } else e instanceof n.Dict && e.forEach(function (e, a) {
                var r = fetchDestination(a);
                r && (t[e] = r);
              });
              return (0, i.shadow)(this, "destinations", t);
            }
          }, {
            key: "getDestination",
            value: function getDestination(e) {
              var t = this._readDests();
              if (t instanceof s.NameTree) {
                var _a305 = fetchDestination(t.get(e));
                if (_a305) return _a305;
                var _r242 = this.destinations[e];
                if (_r242) {
                  (0, i.warn)("Found \"".concat(e, "\" at an incorrect position in the NameTree."));
                  return _r242;
                }
              } else if (t instanceof n.Dict) {
                var _a306 = fetchDestination(t.get(e));
                if (_a306) return _a306;
              }
              return null;
            }
          }, {
            key: "_readDests",
            value: function _readDests() {
              var e = this._catDict.get("Names");
              return e && e.has("Dests") ? new s.NameTree(e.getRaw("Dests"), this.xref) : this._catDict.has("Dests") ? this._catDict.get("Dests") : void 0;
            }
          }, {
            key: "pageLabels",
            get: function get() {
              var e = null;
              try {
                e = this._readPageLabels();
              } catch (e) {
                if (e instanceof r.MissingDataException) throw e;
                (0, i.warn)("Unable to read page labels.");
              }
              return (0, i.shadow)(this, "pageLabels", e);
            }
          }, {
            key: "_readPageLabels",
            value: function _readPageLabels() {
              var e = this._catDict.getRaw("PageLabels");
              if (!e) return null;
              var t = new Array(this.numPages);
              var a = null,
                o = "";
              var c = new s.NumberTree(e, this.xref).getAll();
              var l = "",
                h = 1;
              for (var _e518 = 0, _s107 = this.numPages; _e518 < _s107; _e518++) {
                var _s108 = c.get(_e518);
                if (void 0 !== _s108) {
                  if (!(_s108 instanceof n.Dict)) throw new i.FormatError("PageLabel is not a dictionary.");
                  if (_s108.has("Type") && !(0, n.isName)(_s108.get("Type"), "PageLabel")) throw new i.FormatError("Invalid type in PageLabel dictionary.");
                  if (_s108.has("S")) {
                    var _e519 = _s108.get("S");
                    if (!(_e519 instanceof n.Name)) throw new i.FormatError("Invalid style in PageLabel dictionary.");
                    a = _e519.name;
                  } else a = null;
                  if (_s108.has("P")) {
                    var _e520 = _s108.get("P");
                    if ("string" != typeof _e520) throw new i.FormatError("Invalid prefix in PageLabel dictionary.");
                    o = (0, i.stringToPDFString)(_e520);
                  } else o = "";
                  if (_s108.has("St")) {
                    var _e521 = _s108.get("St");
                    if (!(Number.isInteger(_e521) && _e521 >= 1)) throw new i.FormatError("Invalid start in PageLabel dictionary.");
                    h = _e521;
                  } else h = 1;
                }
                switch (a) {
                  case "D":
                    l = h;
                    break;
                  case "R":
                  case "r":
                    l = (0, r.toRomanNumerals)(h, "r" === a);
                    break;
                  case "A":
                  case "a":
                    var _e522 = 26,
                      _t374 = "a" === a ? 97 : 65,
                      _n137 = h - 1;
                    l = String.fromCharCode(_t374 + _n137 % _e522).repeat(Math.floor(_n137 / _e522) + 1);
                    break;
                  default:
                    if (a) throw new i.FormatError("Invalid style \"".concat(a, "\" in PageLabel dictionary."));
                    l = "";
                }
                t[_e518] = o + l;
                h++;
              }
              return t;
            }
          }, {
            key: "pageLayout",
            get: function get() {
              var e = this._catDict.get("PageLayout");
              var t = "";
              if (e instanceof n.Name) switch (e.name) {
                case "SinglePage":
                case "OneColumn":
                case "TwoColumnLeft":
                case "TwoColumnRight":
                case "TwoPageLeft":
                case "TwoPageRight":
                  t = e.name;
              }
              return (0, i.shadow)(this, "pageLayout", t);
            }
          }, {
            key: "pageMode",
            get: function get() {
              var e = this._catDict.get("PageMode");
              var t = "UseNone";
              if (e instanceof n.Name) switch (e.name) {
                case "UseNone":
                case "UseOutlines":
                case "UseThumbs":
                case "FullScreen":
                case "UseOC":
                case "UseAttachments":
                  t = e.name;
              }
              return (0, i.shadow)(this, "pageMode", t);
            }
          }, {
            key: "viewerPreferences",
            get: function get() {
              var _this97 = this;
              var e = this._catDict.get("ViewerPreferences");
              if (!(e instanceof n.Dict)) return (0, i.shadow)(this, "viewerPreferences", null);
              var t = null;
              var _iterator137 = _createForOfIteratorHelper(e.getKeys()),
                _step137;
              try {
                for (_iterator137.s(); !(_step137 = _iterator137.n()).done;) {
                  var _a307 = _step137.value;
                  var _r243 = e.get(_a307);
                  var _s109 = void 0;
                  switch (_a307) {
                    case "HideToolbar":
                    case "HideMenubar":
                    case "HideWindowUI":
                    case "FitWindow":
                    case "CenterWindow":
                    case "DisplayDocTitle":
                    case "PickTrayByPDFSize":
                      "boolean" == typeof _r243 && (_s109 = _r243);
                      break;
                    case "NonFullScreenPageMode":
                      if (_r243 instanceof n.Name) switch (_r243.name) {
                        case "UseNone":
                        case "UseOutlines":
                        case "UseThumbs":
                        case "UseOC":
                          _s109 = _r243.name;
                          break;
                        default:
                          _s109 = "UseNone";
                      }
                      break;
                    case "Direction":
                      if (_r243 instanceof n.Name) switch (_r243.name) {
                        case "L2R":
                        case "R2L":
                          _s109 = _r243.name;
                          break;
                        default:
                          _s109 = "L2R";
                      }
                      break;
                    case "ViewArea":
                    case "ViewClip":
                    case "PrintArea":
                    case "PrintClip":
                      if (_r243 instanceof n.Name) switch (_r243.name) {
                        case "MediaBox":
                        case "CropBox":
                        case "BleedBox":
                        case "TrimBox":
                        case "ArtBox":
                          _s109 = _r243.name;
                          break;
                        default:
                          _s109 = "CropBox";
                      }
                      break;
                    case "PrintScaling":
                      if (_r243 instanceof n.Name) switch (_r243.name) {
                        case "None":
                        case "AppDefault":
                          _s109 = _r243.name;
                          break;
                        default:
                          _s109 = "AppDefault";
                      }
                      break;
                    case "Duplex":
                      if (_r243 instanceof n.Name) switch (_r243.name) {
                        case "Simplex":
                        case "DuplexFlipShortEdge":
                        case "DuplexFlipLongEdge":
                          _s109 = _r243.name;
                          break;
                        default:
                          _s109 = "None";
                      }
                      break;
                    case "PrintPageRange":
                      if (Array.isArray(_r243) && _r243.length % 2 == 0) {
                        _r243.every(function (e, t, a) {
                          return Number.isInteger(e) && e > 0 && (0 === t || e >= a[t - 1]) && e <= _this97.numPages;
                        }) && (_s109 = _r243);
                      }
                      break;
                    case "NumCopies":
                      Number.isInteger(_r243) && _r243 > 0 && (_s109 = _r243);
                      break;
                    default:
                      (0, i.warn)("Ignoring non-standard key in ViewerPreferences: ".concat(_a307, "."));
                      continue;
                  }
                  if (void 0 !== _s109) {
                    t || (t = Object.create(null));
                    t[_a307] = _s109;
                  } else (0, i.warn)("Bad value, for key \"".concat(_a307, "\", in ViewerPreferences: ").concat(_r243, "."));
                }
              } catch (err) {
                _iterator137.e(err);
              } finally {
                _iterator137.f();
              }
              return (0, i.shadow)(this, "viewerPreferences", t);
            }
          }, {
            key: "openAction",
            get: function get() {
              var e = this._catDict.get("OpenAction"),
                t = Object.create(null);
              if (e instanceof n.Dict) {
                var _a308 = new n.Dict(this.xref);
                _a308.set("A", e);
                var _r244 = {
                  url: null,
                  dest: null,
                  action: null
                };
                Catalog.parseDestDictionary({
                  destDict: _a308,
                  resultObj: _r244
                });
                Array.isArray(_r244.dest) ? t.dest = _r244.dest : _r244.action && (t.action = _r244.action);
              } else Array.isArray(e) && (t.dest = e);
              return (0, i.shadow)(this, "openAction", (0, i.objectSize)(t) > 0 ? t : null);
            }
          }, {
            key: "attachments",
            get: function get() {
              var e = this._catDict.get("Names");
              var t = null;
              if (e instanceof n.Dict && e.has("EmbeddedFiles")) {
                var _a309 = new s.NameTree(e.getRaw("EmbeddedFiles"), this.xref);
                var _iterator138 = _createForOfIteratorHelper(_a309.getAll()),
                  _step138;
                try {
                  for (_iterator138.s(); !(_step138 = _iterator138.n()).done;) {
                    var _step138$value = _slicedToArray(_step138.value, 2),
                      _e523 = _step138$value[0],
                      _r245 = _step138$value[1];
                    var _a310 = new h.FileSpec(_r245, this.xref);
                    t || (t = Object.create(null));
                    t[(0, i.stringToPDFString)(_e523)] = _a310.serializable;
                  }
                } catch (err) {
                  _iterator138.e(err);
                } finally {
                  _iterator138.f();
                }
              }
              return (0, i.shadow)(this, "attachments", t);
            }
          }, {
            key: "xfaImages",
            get: function get() {
              var e = this._catDict.get("Names");
              var t = null;
              if (e instanceof n.Dict && e.has("XFAImages")) {
                var _a311 = new s.NameTree(e.getRaw("XFAImages"), this.xref);
                var _iterator139 = _createForOfIteratorHelper(_a311.getAll()),
                  _step139;
                try {
                  for (_iterator139.s(); !(_step139 = _iterator139.n()).done;) {
                    var _step139$value = _slicedToArray(_step139.value, 2),
                      _e524 = _step139$value[0],
                      _r246 = _step139$value[1];
                    t || (t = new n.Dict(this.xref));
                    t.set((0, i.stringToPDFString)(_e524), _r246);
                  }
                } catch (err) {
                  _iterator139.e(err);
                } finally {
                  _iterator139.f();
                }
              }
              return (0, i.shadow)(this, "xfaImages", t);
            }
          }, {
            key: "_collectJavaScript",
            value: function _collectJavaScript() {
              var e = this._catDict.get("Names");
              var t = null;
              function appendIfJavaScriptDict(e, a) {
                if (!(a instanceof n.Dict)) return;
                if (!(0, n.isName)(a.get("S"), "JavaScript")) return;
                var r = a.get("JS");
                if (r instanceof o.BaseStream) r = r.getString();else if ("string" != typeof r) return;
                r = (0, i.stringToPDFString)(r).replaceAll("\0", "");
                (t || (t = new Map())).set(e, r);
              }
              if (e instanceof n.Dict && e.has("JavaScript")) {
                var _t375 = new s.NameTree(e.getRaw("JavaScript"), this.xref);
                var _iterator140 = _createForOfIteratorHelper(_t375.getAll()),
                  _step140;
                try {
                  for (_iterator140.s(); !(_step140 = _iterator140.n()).done;) {
                    var _step140$value = _slicedToArray(_step140.value, 2),
                      _e525 = _step140$value[0],
                      _a312 = _step140$value[1];
                    appendIfJavaScriptDict((0, i.stringToPDFString)(_e525), _a312);
                  }
                } catch (err) {
                  _iterator140.e(err);
                } finally {
                  _iterator140.f();
                }
              }
              var a = this._catDict.get("OpenAction");
              a && appendIfJavaScriptDict("OpenAction", a);
              return t;
            }
          }, {
            key: "javaScript",
            get: function get() {
              var e = this._collectJavaScript();
              return (0, i.shadow)(this, "javaScript", e ? _toConsumableArray(e.values()) : null);
            }
          }, {
            key: "jsActions",
            get: function get() {
              var e = this._collectJavaScript();
              var t = (0, r.collectActions)(this.xref, this._catDict, i.DocumentActionEventType);
              if (e) {
                t || (t = Object.create(null));
                var _iterator141 = _createForOfIteratorHelper(e),
                  _step141;
                try {
                  for (_iterator141.s(); !(_step141 = _iterator141.n()).done;) {
                    var _step141$value = _slicedToArray(_step141.value, 2),
                      _a313 = _step141$value[0],
                      _r247 = _step141$value[1];
                    _a313 in t ? t[_a313].push(_r247) : t[_a313] = [_r247];
                  }
                } catch (err) {
                  _iterator141.e(err);
                } finally {
                  _iterator141.f();
                }
              }
              return (0, i.shadow)(this, "jsActions", t);
            }
          }, {
            key: "fontFallback",
            value: function () {
              var _fontFallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee57(e, t) {
                var a, _iterator142, _step142, _r248;
                return _regeneratorRuntime().wrap(function _callee57$(_context58) {
                  while (1) switch (_context58.prev = _context58.next) {
                    case 0:
                      _context58.next = 2;
                      return Promise.all(this.fontCache);
                    case 2:
                      a = _context58.sent;
                      _iterator142 = _createForOfIteratorHelper(a);
                      _context58.prev = 4;
                      _iterator142.s();
                    case 6:
                      if ((_step142 = _iterator142.n()).done) {
                        _context58.next = 13;
                        break;
                      }
                      _r248 = _step142.value;
                      if (!(_r248.loadedName === e)) {
                        _context58.next = 11;
                        break;
                      }
                      _r248.fallback(t);
                      return _context58.abrupt("return");
                    case 11:
                      _context58.next = 6;
                      break;
                    case 13:
                      _context58.next = 18;
                      break;
                    case 15:
                      _context58.prev = 15;
                      _context58.t0 = _context58["catch"](4);
                      _iterator142.e(_context58.t0);
                    case 18:
                      _context58.prev = 18;
                      _iterator142.f();
                      return _context58.finish(18);
                    case 21:
                    case "end":
                      return _context58.stop();
                  }
                }, _callee57, this, [[4, 15, 18, 21]]);
              }));
              function fontFallback(_x125, _x126) {
                return _fontFallback.apply(this, arguments);
              }
              return fontFallback;
            }()
          }, {
            key: "cleanup",
            value: function () {
              var _cleanup2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee58() {
                var e,
                  t,
                  _iterator143,
                  _step143,
                  _e526,
                  _args59 = arguments;
                return _regeneratorRuntime().wrap(function _callee58$(_context59) {
                  while (1) switch (_context59.prev = _context59.next) {
                    case 0:
                      e = _args59.length > 0 && _args59[0] !== undefined ? _args59[0] : !1;
                      (0, c.clearGlobalCaches)();
                      this.globalImageCache.clear(e);
                      this.pageKidsCountCache.clear();
                      this.pageIndexCache.clear();
                      this.nonBlendModesSet.clear();
                      _context59.next = 8;
                      return Promise.all(this.fontCache);
                    case 8:
                      t = _context59.sent;
                      _iterator143 = _createForOfIteratorHelper(t);
                      try {
                        for (_iterator143.s(); !(_step143 = _iterator143.n()).done;) {
                          _e526 = _step143.value.dict;
                          delete _e526.cacheKey;
                        }
                      } catch (err) {
                        _iterator143.e(err);
                      } finally {
                        _iterator143.f();
                      }
                      this.fontCache.clear();
                      this.builtInCMapCache.clear();
                      this.standardFontDataCache.clear();
                    case 14:
                    case "end":
                      return _context59.stop();
                  }
                }, _callee58, this);
              }));
              function cleanup() {
                return _cleanup2.apply(this, arguments);
              }
              return cleanup;
            }()
          }, {
            key: "getPageDict",
            value: function () {
              var _getPageDict = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee59(e) {
                var t, a, r, s, o, c, l, _r249, _h32, _u21, _t376, _h33, _u22, _d18, _t377, _e527;
                return _regeneratorRuntime().wrap(function _callee59$(_context60) {
                  while (1) switch (_context60.prev = _context60.next) {
                    case 0:
                      t = [this.toplevelPagesDict], a = new n.RefSet(), r = this._catDict.getRaw("Pages");
                      r instanceof n.Ref && a.put(r);
                      s = this.xref, o = this.pageKidsCountCache, c = this.pageIndexCache;
                      l = 0;
                    case 4:
                      if (!t.length) {
                        _context60.next = 69;
                        break;
                      }
                      _r249 = t.pop();
                      if (!(_r249 instanceof n.Ref)) {
                        _context60.next = 33;
                        break;
                      }
                      _h32 = o.get(_r249);
                      if (!(_h32 >= 0 && l + _h32 <= e)) {
                        _context60.next = 11;
                        break;
                      }
                      l += _h32;
                      return _context60.abrupt("continue", 67);
                    case 11:
                      if (!a.has(_r249)) {
                        _context60.next = 13;
                        break;
                      }
                      throw new i.FormatError("Pages tree contains circular reference.");
                    case 13:
                      a.put(_r249);
                      _context60.next = 16;
                      return s.fetchAsync(_r249);
                    case 16:
                      _u21 = _context60.sent;
                      if (!(_u21 instanceof n.Dict)) {
                        _context60.next = 31;
                        break;
                      }
                      _t376 = _u21.getRaw("Type");
                      _context60.t0 = _t376 instanceof n.Ref;
                      if (!_context60.t0) {
                        _context60.next = 24;
                        break;
                      }
                      _context60.next = 23;
                      return s.fetchAsync(_t376);
                    case 23:
                      _t376 = _context60.sent;
                    case 24:
                      if (!((0, n.isName)(_t376, "Page") || !_u21.has("Kids"))) {
                        _context60.next = 31;
                        break;
                      }
                      o.has(_r249) || o.put(_r249, 1);
                      c.has(_r249) || c.put(_r249, l);
                      if (!(l === e)) {
                        _context60.next = 29;
                        break;
                      }
                      return _context60.abrupt("return", [_u21, _r249]);
                    case 29:
                      l++;
                      return _context60.abrupt("continue", 67);
                    case 31:
                      t.push(_u21);
                      return _context60.abrupt("continue", 67);
                    case 33:
                      if (_r249 instanceof n.Dict) {
                        _context60.next = 35;
                        break;
                      }
                      throw new i.FormatError("Page dictionary kid reference points to wrong type of object.");
                    case 35:
                      _h33 = _r249.objId;
                      _u22 = _r249.getRaw("Count");
                      _context60.t1 = _u22 instanceof n.Ref;
                      if (!_context60.t1) {
                        _context60.next = 42;
                        break;
                      }
                      _context60.next = 41;
                      return s.fetchAsync(_u22);
                    case 41:
                      _u22 = _context60.sent;
                    case 42:
                      if (!(Number.isInteger(_u22) && _u22 >= 0)) {
                        _context60.next = 47;
                        break;
                      }
                      _h33 && !o.has(_h33) && o.put(_h33, _u22);
                      if (!(l + _u22 <= e)) {
                        _context60.next = 47;
                        break;
                      }
                      l += _u22;
                      return _context60.abrupt("continue", 67);
                    case 47:
                      _d18 = _r249.getRaw("Kids");
                      _context60.t2 = _d18 instanceof n.Ref;
                      if (!_context60.t2) {
                        _context60.next = 53;
                        break;
                      }
                      _context60.next = 52;
                      return s.fetchAsync(_d18);
                    case 52:
                      _d18 = _context60.sent;
                    case 53:
                      if (Array.isArray(_d18)) {
                        _context60.next = 66;
                        break;
                      }
                      _t377 = _r249.getRaw("Type");
                      _context60.t3 = _t377 instanceof n.Ref;
                      if (!_context60.t3) {
                        _context60.next = 60;
                        break;
                      }
                      _context60.next = 59;
                      return s.fetchAsync(_t377);
                    case 59:
                      _t377 = _context60.sent;
                    case 60:
                      if (!((0, n.isName)(_t377, "Page") || !_r249.has("Kids"))) {
                        _context60.next = 65;
                        break;
                      }
                      if (!(l === e)) {
                        _context60.next = 63;
                        break;
                      }
                      return _context60.abrupt("return", [_r249, null]);
                    case 63:
                      l++;
                      return _context60.abrupt("continue", 67);
                    case 65:
                      throw new i.FormatError("Page dictionary kids object is not an array.");
                    case 66:
                      for (_e527 = _d18.length - 1; _e527 >= 0; _e527--) t.push(_d18[_e527]);
                    case 67:
                      _context60.next = 4;
                      break;
                    case 69:
                      throw new Error("Page index ".concat(e, " not found."));
                    case 70:
                    case "end":
                      return _context60.stop();
                  }
                }, _callee59, this);
              }));
              function getPageDict(_x127) {
                return _getPageDict.apply(this, arguments);
              }
              return getPageDict;
            }()
          }, {
            key: "getAllPageDicts",
            value: function () {
              var _getAllPageDicts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee60() {
                var e,
                  t,
                  a,
                  s,
                  o,
                  c,
                  l,
                  h,
                  u,
                  addPageDict,
                  addPageError,
                  _e528,
                  _t378,
                  _r250,
                  _o80,
                  _c51,
                  _h34,
                  _u23,
                  _args61 = arguments;
                return _regeneratorRuntime().wrap(function _callee60$(_context61) {
                  while (1) switch (_context61.prev = _context61.next) {
                    case 0:
                      addPageError = function _addPageError(a) {
                        if (a instanceof r.XRefEntryException && !e) throw a;
                        if (e && t && 0 === u) {
                          (0, i.warn)("getAllPageDicts - Skipping invalid first page: \"".concat(a, "\"."));
                          a = n.Dict.empty;
                        }
                        c.set(u++, [a, null]);
                      };
                      addPageDict = function _addPageDict(e, t) {
                        t && !h.has(t) && h.put(t, u);
                        c.set(u++, [e, t]);
                      };
                      e = _args61.length > 0 && _args61[0] !== undefined ? _args61[0] : !1;
                      t = this.pdfManager.evaluatorOptions.ignoreErrors, a = [{
                        currentNode: this.toplevelPagesDict,
                        posInKids: 0
                      }], s = new n.RefSet(), o = this._catDict.getRaw("Pages");
                      o instanceof n.Ref && s.put(o);
                      c = new Map(), l = this.xref, h = this.pageIndexCache;
                      u = 0;
                    case 7:
                      if (!(a.length > 0)) {
                        _context61.next = 66;
                        break;
                      }
                      _e528 = a.at(-1), _t378 = _e528.currentNode, _r250 = _e528.posInKids;
                      _o80 = _t378.getRaw("Kids");
                      if (!(_o80 instanceof n.Ref)) {
                        _context61.next = 21;
                        break;
                      }
                      _context61.prev = 11;
                      _context61.next = 14;
                      return l.fetchAsync(_o80);
                    case 14:
                      _o80 = _context61.sent;
                      _context61.next = 21;
                      break;
                    case 17:
                      _context61.prev = 17;
                      _context61.t0 = _context61["catch"](11);
                      addPageError(_context61.t0);
                      return _context61.abrupt("break", 66);
                    case 21:
                      if (Array.isArray(_o80)) {
                        _context61.next = 24;
                        break;
                      }
                      addPageError(new i.FormatError("Page dictionary kids object is not an array."));
                      return _context61.abrupt("break", 66);
                    case 24:
                      if (!(_r250 >= _o80.length)) {
                        _context61.next = 27;
                        break;
                      }
                      a.pop();
                      return _context61.abrupt("continue", 64);
                    case 27:
                      _c51 = _o80[_r250];
                      _h34 = void 0;
                      if (!(_c51 instanceof n.Ref)) {
                        _context61.next = 46;
                        break;
                      }
                      if (!s.has(_c51)) {
                        _context61.next = 33;
                        break;
                      }
                      addPageError(new i.FormatError("Pages tree contains circular reference."));
                      return _context61.abrupt("break", 66);
                    case 33:
                      s.put(_c51);
                      _context61.prev = 34;
                      _context61.next = 37;
                      return l.fetchAsync(_c51);
                    case 37:
                      _h34 = _context61.sent;
                      _context61.next = 44;
                      break;
                    case 40:
                      _context61.prev = 40;
                      _context61.t1 = _context61["catch"](34);
                      addPageError(_context61.t1);
                      return _context61.abrupt("break", 66);
                    case 44:
                      _context61.next = 47;
                      break;
                    case 46:
                      _h34 = _c51;
                    case 47:
                      if (_h34 instanceof n.Dict) {
                        _context61.next = 50;
                        break;
                      }
                      addPageError(new i.FormatError("Page dictionary kid reference points to wrong type of object."));
                      return _context61.abrupt("break", 66);
                    case 50:
                      _u23 = _h34.getRaw("Type");
                      if (!(_u23 instanceof n.Ref)) {
                        _context61.next = 62;
                        break;
                      }
                      _context61.prev = 52;
                      _context61.next = 55;
                      return l.fetchAsync(_u23);
                    case 55:
                      _u23 = _context61.sent;
                      _context61.next = 62;
                      break;
                    case 58:
                      _context61.prev = 58;
                      _context61.t2 = _context61["catch"](52);
                      addPageError(_context61.t2);
                      return _context61.abrupt("break", 66);
                    case 62:
                      (0, n.isName)(_u23, "Page") || !_h34.has("Kids") ? addPageDict(_h34, _c51 instanceof n.Ref ? _c51 : null) : a.push({
                        currentNode: _h34,
                        posInKids: 0
                      });
                      _e528.posInKids++;
                    case 64:
                      _context61.next = 7;
                      break;
                    case 66:
                      return _context61.abrupt("return", c);
                    case 67:
                    case "end":
                      return _context61.stop();
                  }
                }, _callee60, this, [[11, 17], [34, 40], [52, 58]]);
              }));
              function getAllPageDicts() {
                return _getAllPageDicts.apply(this, arguments);
              }
              return getAllPageDicts;
            }()
          }, {
            key: "getPageIndex",
            value: function getPageIndex(e) {
              var _this98 = this;
              var t = this.pageIndexCache.get(e);
              if (void 0 !== t) return Promise.resolve(t);
              var a = this.xref;
              var r = 0;
              var next = function next(t) {
                return function pagesBeforeRef(t) {
                  var r,
                    s = 0;
                  return a.fetchAsync(t).then(function (a) {
                    if ((0, n.isRefsEqual)(t, e) && !(0, n.isDict)(a, "Page") && !(a instanceof n.Dict && !a.has("Type") && a.has("Contents"))) throw new i.FormatError("The reference does not point to a /Page dictionary.");
                    if (!a) return null;
                    if (!(a instanceof n.Dict)) throw new i.FormatError("Node must be a dictionary.");
                    r = a.getRaw("Parent");
                    return a.getAsync("Parent");
                  }).then(function (e) {
                    if (!e) return null;
                    if (!(e instanceof n.Dict)) throw new i.FormatError("Parent must be a dictionary.");
                    return e.getAsync("Kids");
                  }).then(function (e) {
                    if (!e) return null;
                    var o = [];
                    var c = !1;
                    var _iterator144 = _createForOfIteratorHelper(e),
                      _step144;
                    try {
                      for (_iterator144.s(); !(_step144 = _iterator144.n()).done;) {
                        var _r251 = _step144.value;
                        if (!(_r251 instanceof n.Ref)) throw new i.FormatError("Kid must be a reference.");
                        if ((0, n.isRefsEqual)(_r251, t)) {
                          c = !0;
                          break;
                        }
                        o.push(a.fetchAsync(_r251).then(function (e) {
                          if (!(e instanceof n.Dict)) throw new i.FormatError("Kid node must be a dictionary.");
                          e.has("Count") ? s += e.get("Count") : s++;
                        }));
                      }
                    } catch (err) {
                      _iterator144.e(err);
                    } finally {
                      _iterator144.f();
                    }
                    if (!c) throw new i.FormatError("Kid reference not found in parent's kids.");
                    return Promise.all(o).then(function () {
                      return [s, r];
                    });
                  });
                }(t).then(function (t) {
                  if (!t) {
                    _this98.pageIndexCache.put(e, r);
                    return r;
                  }
                  var _t379 = _slicedToArray(t, 2),
                    a = _t379[0],
                    i = _t379[1];
                  r += a;
                  return next(i);
                });
              };
              return next(e);
            }
          }, {
            key: "baseUrl",
            get: function get() {
              var e = this._catDict.get("URI");
              if (e instanceof n.Dict) {
                var _t380 = e.get("Base");
                if ("string" == typeof _t380) {
                  var _e529 = (0, i.createValidAbsoluteUrl)(_t380, null, {
                    tryConvertEncoding: !0
                  });
                  if (_e529) return (0, i.shadow)(this, "baseUrl", _e529.href);
                }
              }
              return (0, i.shadow)(this, "baseUrl", null);
            }
          }], [{
            key: "parseDestDictionary",
            value: function parseDestDictionary(e) {
              var t = e.destDict;
              if (!(t instanceof n.Dict)) {
                (0, i.warn)("parseDestDictionary: `destDict` must be a dictionary.");
                return;
              }
              var a = e.resultObj;
              if ("object" != typeof a) {
                (0, i.warn)("parseDestDictionary: `resultObj` must be an object.");
                return;
              }
              var s = e.docBaseUrl || null,
                c = e.docAttachments || null;
              var l,
                h,
                u = t.get("A");
              if (!(u instanceof n.Dict)) if (t.has("Dest")) u = t.get("Dest");else {
                u = t.get("AA");
                u instanceof n.Dict && (u.has("D") ? u = u.get("D") : u.has("U") && (u = u.get("U")));
              }
              if (u instanceof n.Dict) {
                var _e530 = u.get("S");
                if (!(_e530 instanceof n.Name)) {
                  (0, i.warn)("parseDestDictionary: Invalid type in Action dictionary.");
                  return;
                }
                var _t381 = _e530.name;
                switch (_t381) {
                  case "ResetForm":
                    var _e531 = u.get("Flags"),
                      _s110 = 0 == (1 & ("number" == typeof _e531 ? _e531 : 0)),
                      _d19 = [],
                      _f21 = [];
                    var _iterator145 = _createForOfIteratorHelper(u.get("Fields") || []),
                      _step145;
                    try {
                      for (_iterator145.s(); !(_step145 = _iterator145.n()).done;) {
                        var _e532 = _step145.value;
                        _e532 instanceof n.Ref ? _f21.push(_e532.toString()) : "string" == typeof _e532 && _d19.push((0, i.stringToPDFString)(_e532));
                      }
                    } catch (err) {
                      _iterator145.e(err);
                    } finally {
                      _iterator145.f();
                    }
                    a.resetForm = {
                      fields: _d19,
                      refs: _f21,
                      include: _s110
                    };
                    break;
                  case "URI":
                    l = u.get("URI");
                    l instanceof n.Name && (l = "/" + l.name);
                    break;
                  case "GoTo":
                    h = u.get("D");
                    break;
                  case "Launch":
                  case "GoToR":
                    var _g20 = u.get("F");
                    _g20 instanceof n.Dict ? l = _g20.get("F") || null : "string" == typeof _g20 && (l = _g20);
                    var _p15 = u.get("D");
                    if (_p15) {
                      _p15 instanceof n.Name && (_p15 = _p15.name);
                      if ("string" == typeof l) {
                        var _e533 = l.split("#")[0];
                        "string" == typeof _p15 ? l = _e533 + "#" + _p15 : Array.isArray(_p15) && (l = _e533 + "#" + JSON.stringify(_p15));
                      }
                    }
                    var m = u.get("NewWindow");
                    "boolean" == typeof m && (a.newWindow = m);
                    break;
                  case "GoToE":
                    var b = u.get("T");
                    var y;
                    if (c && b instanceof n.Dict) {
                      var _e534 = b.get("R"),
                        _t382 = b.get("N");
                      (0, n.isName)(_e534, "C") && "string" == typeof _t382 && (y = c[(0, i.stringToPDFString)(_t382)]);
                    }
                    y ? a.attachment = y : (0, i.warn)('parseDestDictionary - unimplemented "GoToE" action.');
                    break;
                  case "Named":
                    var w = u.get("N");
                    w instanceof n.Name && (a.action = w.name);
                    break;
                  case "SetOCGState":
                    var S = u.get("State"),
                      x = u.get("PreserveRB");
                    if (!Array.isArray(S) || 0 === S.length) break;
                    var C = [];
                    var _iterator146 = _createForOfIteratorHelper(S),
                      _step146;
                    try {
                      for (_iterator146.s(); !(_step146 = _iterator146.n()).done;) {
                        var _e535 = _step146.value;
                        if (_e535 instanceof n.Name) switch (_e535.name) {
                          case "ON":
                          case "OFF":
                          case "Toggle":
                            C.push(_e535.name);
                        } else _e535 instanceof n.Ref && C.push(_e535.toString());
                      }
                    } catch (err) {
                      _iterator146.e(err);
                    } finally {
                      _iterator146.f();
                    }
                    if (C.length !== S.length) break;
                    a.setOCGState = {
                      state: C,
                      preserveRB: "boolean" != typeof x || x
                    };
                    break;
                  case "JavaScript":
                    var k = u.get("JS");
                    var v;
                    k instanceof o.BaseStream ? v = k.getString() : "string" == typeof k && (v = k);
                    var F = v && (0, r.recoverJsURL)((0, i.stringToPDFString)(v));
                    if (F) {
                      l = F.url;
                      a.newWindow = F.newWindow;
                      break;
                    }
                  default:
                    if ("JavaScript" === _t381 || "SubmitForm" === _t381) break;
                    (0, i.warn)("parseDestDictionary - unsupported action: \"".concat(_t381, "\"."));
                }
              } else t.has("Dest") && (h = t.get("Dest"));
              if ("string" == typeof l) {
                var _e536 = (0, i.createValidAbsoluteUrl)(l, s, {
                  addDefaultProtocol: !0,
                  tryConvertEncoding: !0
                });
                _e536 && (a.url = _e536.href);
                a.unsafeUrl = l;
              }
              if (h) {
                h instanceof n.Name && (h = h.name);
                "string" == typeof h ? a.dest = (0, i.stringToPDFString)(h) : Array.isArray(h) && (a.dest = h);
              }
            }
          }]);
          return Catalog;
        }();
        t.Catalog = Catalog;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.NumberTree = t.NameTree = void 0;
        var r = a(4),
          i = a(2);
        var NameOrNumberTree = /*#__PURE__*/function () {
          function NameOrNumberTree(e, t, a) {
            _classCallCheck(this, NameOrNumberTree);
            this.constructor === NameOrNumberTree && (0, i.unreachable)("Cannot initialize NameOrNumberTree.");
            this.root = e;
            this.xref = t;
            this._type = a;
          }
          _createClass(NameOrNumberTree, [{
            key: "getAll",
            value: function getAll() {
              var e = new Map();
              if (!this.root) return e;
              var t = this.xref,
                a = new r.RefSet();
              a.put(this.root);
              var n = [this.root];
              for (; n.length > 0;) {
                var _s111 = t.fetchIfRef(n.shift());
                if (!(_s111 instanceof r.Dict)) continue;
                if (_s111.has("Kids")) {
                  var _e537 = _s111.get("Kids");
                  if (!Array.isArray(_e537)) continue;
                  var _iterator147 = _createForOfIteratorHelper(_e537),
                    _step147;
                  try {
                    for (_iterator147.s(); !(_step147 = _iterator147.n()).done;) {
                      var _t383 = _step147.value;
                      if (a.has(_t383)) throw new i.FormatError("Duplicate entry in \"".concat(this._type, "\" tree."));
                      n.push(_t383);
                      a.put(_t383);
                    }
                  } catch (err) {
                    _iterator147.e(err);
                  } finally {
                    _iterator147.f();
                  }
                  continue;
                }
                var _o81 = _s111.get(this._type);
                if (Array.isArray(_o81)) for (var _a314 = 0, _r252 = _o81.length; _a314 < _r252; _a314 += 2) e.set(t.fetchIfRef(_o81[_a314]), t.fetchIfRef(_o81[_a314 + 1]));
              }
              return e;
            }
          }, {
            key: "get",
            value: function get(e) {
              if (!this.root) return null;
              var t = this.xref;
              var a = t.fetchIfRef(this.root),
                r = 0;
              for (; a.has("Kids");) {
                if (++r > 10) {
                  (0, i.warn)("Search depth limit reached for \"".concat(this._type, "\" tree."));
                  return null;
                }
                var _n138 = a.get("Kids");
                if (!Array.isArray(_n138)) return null;
                var _s112 = 0,
                  _o82 = _n138.length - 1;
                for (; _s112 <= _o82;) {
                  var _r253 = _s112 + _o82 >> 1,
                    _i214 = t.fetchIfRef(_n138[_r253]),
                    _c52 = _i214.get("Limits");
                  if (e < t.fetchIfRef(_c52[0])) _o82 = _r253 - 1;else {
                    if (!(e > t.fetchIfRef(_c52[1]))) {
                      a = _i214;
                      break;
                    }
                    _s112 = _r253 + 1;
                  }
                }
                if (_s112 > _o82) return null;
              }
              var n = a.get(this._type);
              if (Array.isArray(n)) {
                var _a315 = 0,
                  _r254 = n.length - 2;
                for (; _a315 <= _r254;) {
                  var _i215 = _a315 + _r254 >> 1,
                    _s113 = _i215 + (1 & _i215),
                    _o83 = t.fetchIfRef(n[_s113]);
                  if (e < _o83) _r254 = _s113 - 2;else {
                    if (!(e > _o83)) return t.fetchIfRef(n[_s113 + 1]);
                    _a315 = _s113 + 2;
                  }
                }
              }
              return null;
            }
          }]);
          return NameOrNumberTree;
        }();
        t.NameTree = /*#__PURE__*/function (_NameOrNumberTree) {
          _inherits(NameTree, _NameOrNumberTree);
          var _super96 = _createSuper(NameTree);
          function NameTree(e, t) {
            _classCallCheck(this, NameTree);
            return _super96.call(this, e, t, "Names");
          }
          return _createClass(NameTree);
        }(NameOrNumberTree);
        t.NumberTree = /*#__PURE__*/function (_NameOrNumberTree2) {
          _inherits(NumberTree, _NameOrNumberTree2);
          var _super97 = _createSuper(NumberTree);
          function NumberTree(e, t) {
            _classCallCheck(this, NumberTree);
            return _super97.call(this, e, t, "Nums");
          }
          return _createClass(NumberTree);
        }(NameOrNumberTree);
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.clearGlobalCaches = function clearGlobalCaches() {
          (0, r.clearPrimitiveCaches)();
          (0, i.clearUnicodeCaches)();
        };
        var r = a(4),
          i = a(40);
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.FileSpec = void 0;
        var r = a(2),
          i = a(5),
          n = a(4);
        function pickPlatformItem(e) {
          return e.has("UF") ? e.get("UF") : e.has("F") ? e.get("F") : e.has("Unix") ? e.get("Unix") : e.has("Mac") ? e.get("Mac") : e.has("DOS") ? e.get("DOS") : null;
        }
        t.FileSpec = /*#__PURE__*/function () {
          function FileSpec(e, t) {
            _classCallCheck(this, FileSpec);
            if (e instanceof n.Dict) {
              this.xref = t;
              this.root = e;
              e.has("FS") && (this.fs = e.get("FS"));
              this.description = e.has("Desc") ? (0, r.stringToPDFString)(e.get("Desc")) : "";
              e.has("RF") && (0, r.warn)("Related file specifications are not supported");
              this.contentAvailable = !0;
              if (!e.has("EF")) {
                this.contentAvailable = !1;
                (0, r.warn)("Non-embedded file specifications are not supported");
              }
            }
          }
          _createClass(FileSpec, [{
            key: "filename",
            get: function get() {
              if (!this._filename && this.root) {
                var _e538 = pickPlatformItem(this.root) || "unnamed";
                this._filename = (0, r.stringToPDFString)(_e538).replaceAll("\\\\", "\\").replaceAll("\\/", "/").replaceAll("\\", "/");
              }
              return this._filename;
            }
          }, {
            key: "content",
            get: function get() {
              if (!this.contentAvailable) return null;
              !this.contentRef && this.root && (this.contentRef = pickPlatformItem(this.root.get("EF")));
              var e = null;
              if (this.contentRef) {
                var _t384 = this.xref.fetchIfRef(this.contentRef);
                _t384 instanceof i.BaseStream ? e = _t384.getBytes() : (0, r.warn)("Embedded file specification points to non-existing/invalid content");
              } else (0, r.warn)("Embedded file specification does not have a content");
              return e;
            }
          }, {
            key: "serializable",
            get: function get() {
              return {
                filename: this.filename,
                content: this.content
              };
            }
          }]);
          return FileSpec;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.MetadataParser = void 0;
        var r = a(66);
        t.MetadataParser = /*#__PURE__*/function () {
          function MetadataParser(e) {
            _classCallCheck(this, MetadataParser);
            e = this._repair(e);
            var t = new r.SimpleXMLParser({
              lowerCaseName: !0
            }).parseFromString(e);
            this._metadataMap = new Map();
            this._data = e;
            t && this._parse(t);
          }
          _createClass(MetadataParser, [{
            key: "_repair",
            value: function _repair(e) {
              return e.replace(/^[^<]+/, "").replaceAll(/>\\376\\377([^<]+)/g, function (e, t) {
                var a = t.replaceAll(/\\([0-3])([0-7])([0-7])/g, function (e, t, a, r) {
                    return String.fromCharCode(64 * t + 8 * a + 1 * r);
                  }).replaceAll(/&(amp|apos|gt|lt|quot);/g, function (e, t) {
                    switch (t) {
                      case "amp":
                        return "&";
                      case "apos":
                        return "'";
                      case "gt":
                        return ">";
                      case "lt":
                        return "<";
                      case "quot":
                        return '"';
                    }
                    throw new Error("_repair: ".concat(t, " isn't defined."));
                  }),
                  r = [">"];
                for (var _e539 = 0, _t385 = a.length; _e539 < _t385; _e539 += 2) {
                  var _t386 = 256 * a.charCodeAt(_e539) + a.charCodeAt(_e539 + 1);
                  _t386 >= 32 && _t386 < 127 && 60 !== _t386 && 62 !== _t386 && 38 !== _t386 ? r.push(String.fromCharCode(_t386)) : r.push("&#x" + (65536 + _t386).toString(16).substring(1) + ";");
                }
                return r.join("");
              });
            }
          }, {
            key: "_getSequence",
            value: function _getSequence(e) {
              var t = e.nodeName;
              return "rdf:bag" !== t && "rdf:seq" !== t && "rdf:alt" !== t ? null : e.childNodes.filter(function (e) {
                return "rdf:li" === e.nodeName;
              });
            }
          }, {
            key: "_parseArray",
            value: function _parseArray(e) {
              if (!e.hasChildNodes()) return;
              var _e$childNodes = _slicedToArray(e.childNodes, 1),
                t = _e$childNodes[0],
                a = this._getSequence(t) || [];
              this._metadataMap.set(e.nodeName, a.map(function (e) {
                return e.textContent.trim();
              }));
            }
          }, {
            key: "_parse",
            value: function _parse(e) {
              var t = e.documentElement;
              if ("rdf:rdf" !== t.nodeName) {
                t = t.firstChild;
                for (; t && "rdf:rdf" !== t.nodeName;) t = t.nextSibling;
              }
              if (t && "rdf:rdf" === t.nodeName && t.hasChildNodes()) {
                var _iterator148 = _createForOfIteratorHelper(t.childNodes),
                  _step148;
                try {
                  for (_iterator148.s(); !(_step148 = _iterator148.n()).done;) {
                    var _e540 = _step148.value;
                    if ("rdf:description" === _e540.nodeName) {
                      var _iterator149 = _createForOfIteratorHelper(_e540.childNodes),
                        _step149;
                      try {
                        for (_iterator149.s(); !(_step149 = _iterator149.n()).done;) {
                          var _t387 = _step149.value;
                          var _e541 = _t387.nodeName;
                          switch (_e541) {
                            case "#text":
                              continue;
                            case "dc:creator":
                            case "dc:subject":
                              this._parseArray(_t387);
                              continue;
                          }
                          this._metadataMap.set(_e541, _t387.textContent.trim());
                        }
                      } catch (err) {
                        _iterator149.e(err);
                      } finally {
                        _iterator149.f();
                      }
                    }
                  }
                } catch (err) {
                  _iterator148.e(err);
                } finally {
                  _iterator148.f();
                }
              }
            }
          }, {
            key: "serializable",
            get: function get() {
              return {
                parsedData: this._metadataMap,
                rawData: this._data
              };
            }
          }]);
          return MetadataParser;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.StructTreeRoot = t.StructTreePage = void 0;
        var r = a(4),
          i = a(2),
          n = a(70);
        var s = "PAGE_CONTENT",
          o = "STREAM_CONTENT",
          c = "OBJECT",
          l = "ELEMENT";
        t.StructTreeRoot = /*#__PURE__*/function () {
          function StructTreeRoot(e) {
            _classCallCheck(this, StructTreeRoot);
            this.dict = e;
            this.roleMap = new Map();
          }
          _createClass(StructTreeRoot, [{
            key: "init",
            value: function init() {
              this.readRoleMap();
            }
          }, {
            key: "readRoleMap",
            value: function readRoleMap() {
              var _this99 = this;
              var e = this.dict.get("RoleMap");
              e instanceof r.Dict && e.forEach(function (e, t) {
                t instanceof r.Name && _this99.roleMap.set(e, t.name);
              });
            }
          }]);
          return StructTreeRoot;
        }();
        var StructElementNode = /*#__PURE__*/function () {
          function StructElementNode(e, t) {
            _classCallCheck(this, StructElementNode);
            this.tree = e;
            this.dict = t;
            this.kids = [];
            this.parseKids();
          }
          _createClass(StructElementNode, [{
            key: "role",
            get: function get() {
              var e = this.dict.get("S"),
                t = e instanceof r.Name ? e.name : "",
                a = this.tree.root;
              return a.roleMap.has(t) ? a.roleMap.get(t) : t;
            }
          }, {
            key: "parseKids",
            value: function parseKids() {
              var e = null;
              var t = this.dict.getRaw("Pg");
              t instanceof r.Ref && (e = t.toString());
              var a = this.dict.get("K");
              if (Array.isArray(a)) {
                var _iterator150 = _createForOfIteratorHelper(a),
                  _step150;
                try {
                  for (_iterator150.s(); !(_step150 = _iterator150.n()).done;) {
                    var _t388 = _step150.value;
                    var _a316 = this.parseKid(e, _t388);
                    _a316 && this.kids.push(_a316);
                  }
                } catch (err) {
                  _iterator150.e(err);
                } finally {
                  _iterator150.f();
                }
              } else {
                var _t389 = this.parseKid(e, a);
                _t389 && this.kids.push(_t389);
              }
            }
          }, {
            key: "parseKid",
            value: function parseKid(e, t) {
              if (Number.isInteger(t)) return this.tree.pageDict.objId !== e ? null : new StructElement({
                type: s,
                mcid: t,
                pageObjId: e
              });
              var a = null;
              t instanceof r.Ref ? a = this.dict.xref.fetch(t) : t instanceof r.Dict && (a = t);
              if (!a) return null;
              var i = a.getRaw("Pg");
              i instanceof r.Ref && (e = i.toString());
              var n = a.get("Type") instanceof r.Name ? a.get("Type").name : null;
              return "MCR" === n ? this.tree.pageDict.objId !== e ? null : new StructElement({
                type: o,
                refObjId: a.getRaw("Stm") instanceof r.Ref ? a.getRaw("Stm").toString() : null,
                pageObjId: e,
                mcid: a.get("MCID")
              }) : "OBJR" === n ? this.tree.pageDict.objId !== e ? null : new StructElement({
                type: c,
                refObjId: a.getRaw("Obj") instanceof r.Ref ? a.getRaw("Obj").toString() : null,
                pageObjId: e
              }) : new StructElement({
                type: l,
                dict: a
              });
            }
          }]);
          return StructElementNode;
        }();
        var StructElement = /*#__PURE__*/_createClass(function StructElement(_ref94) {
          var e = _ref94.type,
            _ref94$dict = _ref94.dict,
            t = _ref94$dict === void 0 ? null : _ref94$dict,
            _ref94$mcid = _ref94.mcid,
            a = _ref94$mcid === void 0 ? null : _ref94$mcid,
            _ref94$pageObjId = _ref94.pageObjId,
            r = _ref94$pageObjId === void 0 ? null : _ref94$pageObjId,
            _ref94$refObjId = _ref94.refObjId,
            i = _ref94$refObjId === void 0 ? null : _ref94$refObjId;
          _classCallCheck(this, StructElement);
          this.type = e;
          this.dict = t;
          this.mcid = a;
          this.pageObjId = r;
          this.refObjId = i;
          this.parentNode = null;
        });
        t.StructTreePage = /*#__PURE__*/function () {
          function StructTreePage(e, t) {
            _classCallCheck(this, StructTreePage);
            this.root = e;
            this.rootDict = e ? e.dict : null;
            this.pageDict = t;
            this.nodes = [];
          }
          _createClass(StructTreePage, [{
            key: "parse",
            value: function parse() {
              if (!this.root || !this.rootDict) return;
              var e = this.rootDict.get("ParentTree");
              if (!e) return;
              var t = this.pageDict.get("StructParents");
              if (!Number.isInteger(t)) return;
              var a = new n.NumberTree(e, this.rootDict.xref).get(t);
              if (!Array.isArray(a)) return;
              var i = new Map();
              var _iterator151 = _createForOfIteratorHelper(a),
                _step151;
              try {
                for (_iterator151.s(); !(_step151 = _iterator151.n()).done;) {
                  var _e542 = _step151.value;
                  _e542 instanceof r.Ref && this.addNode(this.rootDict.xref.fetch(_e542), i);
                }
              } catch (err) {
                _iterator151.e(err);
              } finally {
                _iterator151.f();
              }
            }
          }, {
            key: "addNode",
            value: function addNode(e, t) {
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
              if (a > 40) {
                (0, i.warn)("StructTree MAX_DEPTH reached.");
                return null;
              }
              if (t.has(e)) return t.get(e);
              var n = new StructElementNode(this, e);
              t.set(e, n);
              var s = e.get("P");
              if (!s || (0, r.isName)(s.get("Type"), "StructTreeRoot")) {
                this.addTopLevelNode(e, n) || t.delete(e);
                return n;
              }
              var o = this.addNode(s, t, a + 1);
              if (!o) return n;
              var c = !1;
              var _iterator152 = _createForOfIteratorHelper(o.kids),
                _step152;
              try {
                for (_iterator152.s(); !(_step152 = _iterator152.n()).done;) {
                  var _t390 = _step152.value;
                  if (_t390.type === l && _t390.dict === e) {
                    _t390.parentNode = n;
                    c = !0;
                  }
                }
              } catch (err) {
                _iterator152.e(err);
              } finally {
                _iterator152.f();
              }
              c || t.delete(e);
              return n;
            }
          }, {
            key: "addTopLevelNode",
            value: function addTopLevelNode(e, t) {
              var a = this.rootDict.get("K");
              if (!a) return !1;
              if (a instanceof r.Dict) {
                if (a.objId !== e.objId) return !1;
                this.nodes[0] = t;
                return !0;
              }
              if (!Array.isArray(a)) return !0;
              var i = !1;
              for (var _r255 = 0; _r255 < a.length; _r255++) {
                var _n139 = a[_r255];
                if (_n139 && _n139.toString() === e.objId) {
                  this.nodes[_r255] = t;
                  i = !0;
                }
              }
              return i;
            }
          }, {
            key: "serializable",
            get: function get() {
              function nodeToSerializable(e, t) {
                var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
                if (a > 40) {
                  (0, i.warn)("StructTree too deep to be fully serialized.");
                  return;
                }
                var r = Object.create(null);
                r.role = e.role;
                r.children = [];
                t.children.push(r);
                var n = e.dict.get("Alt");
                "string" == typeof n && (r.alt = (0, i.stringToPDFString)(n));
                var h = e.dict.get("Lang");
                "string" == typeof h && (r.lang = (0, i.stringToPDFString)(h));
                var _iterator153 = _createForOfIteratorHelper(e.kids),
                  _step153;
                try {
                  for (_iterator153.s(); !(_step153 = _iterator153.n()).done;) {
                    var _t391 = _step153.value;
                    var _e543 = _t391.type === l ? _t391.parentNode : null;
                    _e543 ? nodeToSerializable(_e543, r, a + 1) : _t391.type === s || _t391.type === o ? r.children.push({
                      type: "content",
                      id: "page".concat(_t391.pageObjId, "_mcid").concat(_t391.mcid)
                    }) : _t391.type === c && r.children.push({
                      type: "object",
                      id: _t391.refObjId
                    });
                  }
                } catch (err) {
                  _iterator153.e(err);
                } finally {
                  _iterator153.f();
                }
              }
              var e = Object.create(null);
              e.children = [];
              e.role = "Root";
              var _iterator154 = _createForOfIteratorHelper(this.nodes),
                _step154;
              try {
                for (_iterator154.s(); !(_step154 = _iterator154.n()).done;) {
                  var _t392 = _step154.value;
                  _t392 && nodeToSerializable(_t392, e);
                }
              } catch (err) {
                _iterator154.e(err);
              } finally {
                _iterator154.f();
              }
              return e;
            }
          }]);
          return StructTreePage;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.ObjectLoader = void 0;
        var r = a(4),
          i = a(5),
          n = a(3),
          s = a(2);
        function addChildren(e, t) {
          if (e instanceof r.Dict) e = e.getRawValues();else if (e instanceof i.BaseStream) e = e.dict.getRawValues();else if (!Array.isArray(e)) return;
          var _iterator155 = _createForOfIteratorHelper(e),
            _step155;
          try {
            for (_iterator155.s(); !(_step155 = _iterator155.n()).done;) {
              var _n140 = _step155.value;
              ((a = _n140) instanceof r.Ref || a instanceof r.Dict || a instanceof i.BaseStream || Array.isArray(a)) && t.push(_n140);
            }
          } catch (err) {
            _iterator155.e(err);
          } finally {
            _iterator155.f();
          }
          var a;
        }
        t.ObjectLoader = /*#__PURE__*/function () {
          function ObjectLoader(e, t, a) {
            _classCallCheck(this, ObjectLoader);
            this.dict = e;
            this.keys = t;
            this.xref = a;
            this.refSet = null;
          }
          _createClass(ObjectLoader, [{
            key: "load",
            value: function () {
              var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee61() {
                var e, t, a, _iterator156, _step156, _r256, _e544;
                return _regeneratorRuntime().wrap(function _callee61$(_context62) {
                  while (1) switch (_context62.prev = _context62.next) {
                    case 0:
                      if (!this.xref.stream.isDataLoaded) {
                        _context62.next = 2;
                        break;
                      }
                      return _context62.abrupt("return");
                    case 2:
                      e = this.keys, t = this.dict;
                      this.refSet = new r.RefSet();
                      a = [];
                      _iterator156 = _createForOfIteratorHelper(e);
                      try {
                        for (_iterator156.s(); !(_step156 = _iterator156.n()).done;) {
                          _r256 = _step156.value;
                          _e544 = t.getRaw(_r256);
                          void 0 !== _e544 && a.push(_e544);
                        }
                      } catch (err) {
                        _iterator156.e(err);
                      } finally {
                        _iterator156.f();
                      }
                      return _context62.abrupt("return", this._walk(a));
                    case 8:
                    case "end":
                      return _context62.stop();
                  }
                }, _callee61, this);
              }));
              function load() {
                return _load.apply(this, arguments);
              }
              return load;
            }()
          }, {
            key: "_walk",
            value: function () {
              var _walk2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee62(e) {
                var t, a, _o84, _t393, _e545, _r257, _iterator157, _step157, _t394, _iterator158, _step158, _e546;
                return _regeneratorRuntime().wrap(function _callee62$(_context63) {
                  while (1) switch (_context63.prev = _context63.next) {
                    case 0:
                      t = [], a = [];
                    case 1:
                      if (!e.length) {
                        _context63.next = 24;
                        break;
                      }
                      _o84 = e.pop();
                      if (!(_o84 instanceof r.Ref)) {
                        _context63.next = 20;
                        break;
                      }
                      if (!this.refSet.has(_o84)) {
                        _context63.next = 6;
                        break;
                      }
                      return _context63.abrupt("continue", 22);
                    case 6:
                      _context63.prev = 6;
                      this.refSet.put(_o84);
                      _o84 = this.xref.fetch(_o84);
                      _context63.next = 20;
                      break;
                    case 11:
                      _context63.prev = 11;
                      _context63.t0 = _context63["catch"](6);
                      if (_context63.t0 instanceof n.MissingDataException) {
                        _context63.next = 18;
                        break;
                      }
                      (0, s.warn)("ObjectLoader._walk - requesting all data: \"".concat(_context63.t0, "\"."));
                      this.refSet = null;
                      _t393 = this.xref.stream.manager;
                      return _context63.abrupt("return", _t393.requestAllChunks());
                    case 18:
                      t.push(_o84);
                      a.push({
                        begin: _context63.t0.begin,
                        end: _context63.t0.end
                      });
                    case 20:
                      if (_o84 instanceof i.BaseStream) {
                        _e545 = _o84.getBaseStreams();
                        if (_e545) {
                          _r257 = !1;
                          _iterator157 = _createForOfIteratorHelper(_e545);
                          try {
                            for (_iterator157.s(); !(_step157 = _iterator157.n()).done;) {
                              _t394 = _step157.value;
                              if (!_t394.isDataLoaded) {
                                _r257 = !0;
                                a.push({
                                  begin: _t394.start,
                                  end: _t394.end
                                });
                              }
                            }
                          } catch (err) {
                            _iterator157.e(err);
                          } finally {
                            _iterator157.f();
                          }
                          _r257 && t.push(_o84);
                        }
                      }
                      addChildren(_o84, e);
                    case 22:
                      _context63.next = 1;
                      break;
                    case 24:
                      if (!a.length) {
                        _context63.next = 30;
                        break;
                      }
                      _context63.next = 27;
                      return this.xref.stream.manager.requestRanges(a);
                    case 27:
                      _iterator158 = _createForOfIteratorHelper(t);
                      try {
                        for (_iterator158.s(); !(_step158 = _iterator158.n()).done;) {
                          _e546 = _step158.value;
                          _e546 instanceof r.Ref && this.refSet.remove(_e546);
                        }
                      } catch (err) {
                        _iterator158.e(err);
                      } finally {
                        _iterator158.f();
                      }
                      return _context63.abrupt("return", this._walk(t));
                    case 30:
                      this.refSet = null;
                    case 31:
                    case "end":
                      return _context63.stop();
                  }
                }, _callee62, this, [[6, 11]]);
              }));
              function _walk(_x128) {
                return _walk2.apply(this, arguments);
              }
              return _walk;
            }()
          }]);
          return ObjectLoader;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.XFAFactory = void 0;
        var r = a(77),
          i = a(81),
          n = a(87),
          s = a(85),
          o = a(78),
          c = a(2),
          l = a(88),
          h = a(98);
        var XFAFactory = /*#__PURE__*/function () {
          function XFAFactory(e) {
            _classCallCheck(this, XFAFactory);
            try {
              this.root = new l.XFAParser().parse(XFAFactory._createDocument(e));
              var _t395 = new i.Binder(this.root);
              this.form = _t395.bind();
              this.dataHandler = new n.DataHandler(this.root, _t395.getData());
              this.form[r.$globalData].template = this.form;
            } catch (e) {
              (0, c.warn)("XFA - an error occurred during parsing and binding: ".concat(e));
            }
          }
          _createClass(XFAFactory, [{
            key: "isValid",
            value: function isValid() {
              return this.root && this.form;
            }
          }, {
            key: "_createPagesHelper",
            value: function _createPagesHelper() {
              var e = this.form[r.$toPages]();
              return new Promise(function (t, a) {
                var nextIteration = function nextIteration() {
                  try {
                    var _a317 = e.next();
                    _a317.done ? t(_a317.value) : setTimeout(nextIteration, 0);
                  } catch (e) {
                    a(e);
                  }
                };
                setTimeout(nextIteration, 0);
              });
            }
          }, {
            key: "_createPages",
            value: function () {
              var _createPages2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee63() {
                return _regeneratorRuntime().wrap(function _callee63$(_context64) {
                  while (1) switch (_context64.prev = _context64.next) {
                    case 0:
                      _context64.prev = 0;
                      _context64.next = 3;
                      return this._createPagesHelper();
                    case 3:
                      this.pages = _context64.sent;
                      this.dims = this.pages.children.map(function (e) {
                        var _e$attributes$style = e.attributes.style,
                          t = _e$attributes$style.width,
                          a = _e$attributes$style.height;
                        return [0, 0, parseInt(t), parseInt(a)];
                      });
                      _context64.next = 10;
                      break;
                    case 7:
                      _context64.prev = 7;
                      _context64.t0 = _context64["catch"](0);
                      (0, c.warn)("XFA - an error occurred during layout: ".concat(_context64.t0));
                    case 10:
                    case "end":
                      return _context64.stop();
                  }
                }, _callee63, this, [[0, 7]]);
              }));
              function _createPages() {
                return _createPages2.apply(this, arguments);
              }
              return _createPages;
            }()
          }, {
            key: "getBoundingBox",
            value: function getBoundingBox(e) {
              return this.dims[e];
            }
          }, {
            key: "getNumPages",
            value: function () {
              var _getNumPages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee64() {
                return _regeneratorRuntime().wrap(function _callee64$(_context65) {
                  while (1) switch (_context65.prev = _context65.next) {
                    case 0:
                      _context65.t0 = this.pages;
                      if (_context65.t0) {
                        _context65.next = 4;
                        break;
                      }
                      _context65.next = 4;
                      return this._createPages();
                    case 4:
                      return _context65.abrupt("return", this.dims.length);
                    case 5:
                    case "end":
                      return _context65.stop();
                  }
                }, _callee64, this);
              }));
              function getNumPages() {
                return _getNumPages.apply(this, arguments);
              }
              return getNumPages;
            }()
          }, {
            key: "setImages",
            value: function setImages(e) {
              this.form[r.$globalData].images = e;
            }
          }, {
            key: "setFonts",
            value: function setFonts(e) {
              this.form[r.$globalData].fontFinder = new s.FontFinder(e);
              var t = [];
              var _iterator159 = _createForOfIteratorHelper(this.form[r.$globalData].usedTypefaces),
                _step159;
              try {
                for (_iterator159.s(); !(_step159 = _iterator159.n()).done;) {
                  var _e547 = _step159.value;
                  _e547 = (0, o.stripQuotes)(_e547);
                  this.form[r.$globalData].fontFinder.find(_e547) || t.push(_e547);
                }
              } catch (err) {
                _iterator159.e(err);
              } finally {
                _iterator159.f();
              }
              return t.length > 0 ? t : null;
            }
          }, {
            key: "appendFonts",
            value: function appendFonts(e, t) {
              this.form[r.$globalData].fontFinder.add(e, t);
            }
          }, {
            key: "getPages",
            value: function () {
              var _getPages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee65() {
                var e;
                return _regeneratorRuntime().wrap(function _callee65$(_context66) {
                  while (1) switch (_context66.prev = _context66.next) {
                    case 0:
                      _context66.t0 = this.pages;
                      if (_context66.t0) {
                        _context66.next = 4;
                        break;
                      }
                      _context66.next = 4;
                      return this._createPages();
                    case 4:
                      e = this.pages;
                      this.pages = null;
                      return _context66.abrupt("return", e);
                    case 7:
                    case "end":
                      return _context66.stop();
                  }
                }, _callee65, this);
              }));
              function getPages() {
                return _getPages.apply(this, arguments);
              }
              return getPages;
            }()
          }, {
            key: "serializeData",
            value: function serializeData(e) {
              return this.dataHandler.serialize(e);
            }
          }], [{
            key: "_createDocument",
            value: function _createDocument(e) {
              return e["/xdp:xdp"] ? Object.values(e).join("") : e["xdp:xdp"];
            }
          }, {
            key: "getRichTextAsHtml",
            value: function getRichTextAsHtml(e) {
              if (!e || "string" != typeof e) return null;
              try {
                var _t396 = new l.XFAParser(h.XhtmlNamespace, !0).parse(e);
                if (!["body", "xhtml"].includes(_t396[r.$nodeName])) {
                  var _e548 = h.XhtmlNamespace.body({});
                  _e548[r.$appendChild](_t396);
                  _t396 = _e548;
                }
                var _a318 = _t396[r.$toHTML]();
                if (!_a318.success) return null;
                var _i216 = _a318.html,
                  _n141 = _i216.attributes;
                if (_n141) {
                  _n141.class && (_n141.class = _n141.class.filter(function (e) {
                    return !e.startsWith("xfa");
                  }));
                  _n141.dir = "auto";
                }
                return {
                  html: _i216,
                  str: _t396[r.$text]()
                };
              } catch (e) {
                (0, c.warn)("XFA - an error occurred during parsing of rich text: ".concat(e));
              }
              return null;
            }
          }]);
          return XFAFactory;
        }();
        t.XFAFactory = XFAFactory;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.XmlObject = t.XFAObjectArray = t.XFAObject = t.XFAAttribute = t.StringObject = t.OptionObject = t.Option10 = t.Option01 = t.IntegerObject = t.ContentObject = t.$uid = t.$toStyle = t.$toString = t.$toPages = t.$toHTML = t.$text = t.$tabIndex = t.$setValue = t.$setSetAttributes = t.$setId = t.$searchNode = t.$root = t.$resolvePrototypes = t.$removeChild = t.$pushPara = t.$pushGlyphs = t.$popPara = t.$onText = t.$onChildCheck = t.$onChild = t.$nsAttributes = t.$nodeName = t.$namespaceId = t.$isUsable = t.$isTransparent = t.$isThereMoreWidth = t.$isSplittable = t.$isNsAgnostic = t.$isDescendent = t.$isDataValue = t.$isCDATAXml = t.$isBindable = t.$insertAt = t.$indexOf = t.$ids = t.$hasSettableValue = t.$globalData = t.$getTemplateRoot = t.$getSubformParent = t.$getRealChildrenByNameIt = t.$getParent = t.$getNextPage = t.$getExtra = t.$getDataValue = t.$getContainedChildren = t.$getChildrenByNameIt = t.$getChildrenByName = t.$getChildrenByClass = t.$getChildren = t.$getAvailableSpace = t.$getAttributes = t.$getAttributeIt = t.$flushHTML = t.$finalize = t.$extra = t.$dump = t.$data = t.$content = t.$consumed = t.$clone = t.$cleanup = t.$cleanPage = t.$clean = t.$childrenToHTML = t.$appendChild = t.$addHTML = t.$acceptWhitespace = void 0;
        var r = a(78),
          i = a(2),
          n = a(3),
          s = a(79),
          o = a(80);
        var c = Symbol();
        t.$acceptWhitespace = c;
        var l = Symbol();
        t.$addHTML = l;
        var h = Symbol();
        t.$appendChild = h;
        var u = Symbol();
        t.$childrenToHTML = u;
        var d = Symbol();
        t.$clean = d;
        var f = Symbol();
        t.$cleanPage = f;
        var g = Symbol();
        t.$cleanup = g;
        var p = Symbol();
        t.$clone = p;
        var m = Symbol();
        t.$consumed = m;
        var b = Symbol("content");
        t.$content = b;
        var y = Symbol("data");
        t.$data = y;
        var w = Symbol();
        t.$dump = w;
        var S = Symbol("extra");
        t.$extra = S;
        var x = Symbol();
        t.$finalize = x;
        var C = Symbol();
        t.$flushHTML = C;
        var k = Symbol();
        t.$getAttributeIt = k;
        var v = Symbol();
        t.$getAttributes = v;
        var F = Symbol();
        t.$getAvailableSpace = F;
        var O = Symbol();
        t.$getChildrenByClass = O;
        var T = Symbol();
        t.$getChildrenByName = T;
        var M = Symbol();
        t.$getChildrenByNameIt = M;
        var E = Symbol();
        t.$getDataValue = E;
        var D = Symbol();
        t.$getExtra = D;
        var N = Symbol();
        t.$getRealChildrenByNameIt = N;
        var R = Symbol();
        t.$getChildren = R;
        var L = Symbol();
        t.$getContainedChildren = L;
        var _ = Symbol();
        t.$getNextPage = _;
        var $ = Symbol();
        t.$getSubformParent = $;
        var j = Symbol();
        t.$getParent = j;
        var U = Symbol();
        t.$getTemplateRoot = U;
        var X = Symbol();
        t.$globalData = X;
        var H = Symbol();
        t.$hasSettableValue = H;
        var q = Symbol();
        t.$ids = q;
        var z = Symbol();
        t.$indexOf = z;
        var W = Symbol();
        t.$insertAt = W;
        var G = Symbol();
        t.$isCDATAXml = G;
        var V = Symbol();
        t.$isBindable = V;
        var K = Symbol();
        t.$isDataValue = K;
        var J = Symbol();
        t.$isDescendent = J;
        var Y = Symbol();
        t.$isNsAgnostic = Y;
        var Z = Symbol();
        t.$isSplittable = Z;
        var Q = Symbol();
        t.$isThereMoreWidth = Q;
        var ee = Symbol();
        t.$isTransparent = ee;
        var te = Symbol();
        t.$isUsable = te;
        var ae = Symbol(),
          re = Symbol("namespaceId");
        t.$namespaceId = re;
        var ie = Symbol("nodeName");
        t.$nodeName = ie;
        var ne = Symbol();
        t.$nsAttributes = ne;
        var se = Symbol();
        t.$onChild = se;
        var oe = Symbol();
        t.$onChildCheck = oe;
        var ce = Symbol();
        t.$onText = ce;
        var le = Symbol();
        t.$pushGlyphs = le;
        var he = Symbol();
        t.$popPara = he;
        var ue = Symbol();
        t.$pushPara = ue;
        var de = Symbol();
        t.$removeChild = de;
        var fe = Symbol("root");
        t.$root = fe;
        var ge = Symbol();
        t.$resolvePrototypes = ge;
        var pe = Symbol();
        t.$searchNode = pe;
        var me = Symbol();
        t.$setId = me;
        var be = Symbol();
        t.$setSetAttributes = be;
        var ye = Symbol();
        t.$setValue = ye;
        var we = Symbol();
        t.$tabIndex = we;
        var Se = Symbol();
        t.$text = Se;
        var xe = Symbol();
        t.$toPages = xe;
        var Ae = Symbol();
        t.$toHTML = Ae;
        var Ce = Symbol();
        t.$toString = Ce;
        var ke = Symbol();
        t.$toStyle = ke;
        var ve = Symbol("uid");
        t.$uid = ve;
        var Fe = Symbol(),
          Oe = Symbol(),
          Ie = Symbol(),
          Te = Symbol("_children"),
          Me = Symbol(),
          Pe = Symbol(),
          Ee = Symbol(),
          De = Symbol(),
          Be = Symbol(),
          Ne = Symbol(),
          Re = Symbol(),
          Le = Symbol(),
          _e = Symbol(),
          $e = Symbol("parent"),
          je = Symbol(),
          Ue = Symbol(),
          Xe = Symbol();
        var He = 0;
        var qe = s.NamespaceIds.datasets.id;
        var XFAObject = /*#__PURE__*/function () {
          function XFAObject(e, t) {
            var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
            _classCallCheck(this, XFAObject);
            this[re] = e;
            this[ie] = t;
            this[Re] = a;
            this[$e] = null;
            this[Te] = [];
            this[ve] = "".concat(t).concat(He++);
            this[X] = null;
          }
          _createClass(XFAObject, [{
            key: se,
            value: function value(e) {
              if (!this[Re] || !this[oe](e)) return !1;
              var t = e[ie],
                a = this[t];
              if (!(a instanceof XFAObjectArray)) {
                null !== a && this[de](a);
                this[t] = e;
                this[h](e);
                return !0;
              }
              if (a.push(e)) {
                this[h](e);
                return !0;
              }
              var r = "";
              this.id ? r = " (id: ".concat(this.id, ")") : this.name && (r = " (name: ".concat(this.name, " ").concat(this.h.value, ")"));
              (0, i.warn)("XFA - node \"".concat(this[ie], "\"").concat(r, " has already enough \"").concat(t, "\"!"));
              return !1;
            }
          }, {
            key: oe,
            value: function value(e) {
              return this.hasOwnProperty(e[ie]) && e[re] === this[re];
            }
          }, {
            key: Y,
            value: function value() {
              return !1;
            }
          }, {
            key: c,
            value: function value() {
              return !1;
            }
          }, {
            key: G,
            value: function value() {
              return !1;
            }
          }, {
            key: V,
            value: function value() {
              return !1;
            }
          }, {
            key: he,
            value: function value() {
              this.para && this[U]()[S].paraStack.pop();
            }
          }, {
            key: ue,
            value: function value() {
              this[U]()[S].paraStack.push(this.para);
            }
          }, {
            key: me,
            value: function value(e) {
              this.id && this[re] === s.NamespaceIds.template.id && e.set(this.id, this);
            }
          }, {
            key: U,
            value: function value() {
              return this[X].template;
            }
          }, {
            key: Z,
            value: function value() {
              return !1;
            }
          }, {
            key: Q,
            value: function value() {
              return !1;
            }
          }, {
            key: h,
            value: function value(e) {
              e[$e] = this;
              this[Te].push(e);
              !e[X] && this[X] && (e[X] = this[X]);
            }
          }, {
            key: de,
            value: function value(e) {
              var t = this[Te].indexOf(e);
              this[Te].splice(t, 1);
            }
          }, {
            key: H,
            value: function value() {
              return this.hasOwnProperty("value");
            }
          }, {
            key: ye,
            value: function value(e) {}
          }, {
            key: ce,
            value: function value(e) {}
          }, {
            key: x,
            value: function value() {}
          }, {
            key: d,
            value: function value(e) {
              delete this[Re];
              if (this[g]) {
                e.clean(this[g]);
                delete this[g];
              }
            }
          }, {
            key: z,
            value: function value(e) {
              return this[Te].indexOf(e);
            }
          }, {
            key: W,
            value: function value(e, t) {
              t[$e] = this;
              this[Te].splice(e, 0, t);
              !t[X] && this[X] && (t[X] = this[X]);
            }
          }, {
            key: ee,
            value: function value() {
              return !this.name;
            }
          }, {
            key: ae,
            value: function value() {
              return "";
            }
          }, {
            key: Se,
            value: function value() {
              return 0 === this[Te].length ? this[b] : this[Te].map(function (e) {
                return e[Se]();
              }).join("");
            }
          }, {
            key: Ie,
            get: function get() {
              var e = Object.getPrototypeOf(this);
              if (!e._attributes) {
                var _t397 = e._attributes = new Set();
                var _iterator160 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this)),
                  _step160;
                try {
                  for (_iterator160.s(); !(_step160 = _iterator160.n()).done;) {
                    var _e549 = _step160.value;
                    if (null === this[_e549] || this[_e549] instanceof XFAObject || this[_e549] instanceof XFAObjectArray) break;
                    _t397.add(_e549);
                  }
                } catch (err) {
                  _iterator160.e(err);
                } finally {
                  _iterator160.f();
                }
              }
              return (0, i.shadow)(this, Ie, e._attributes);
            }
          }, {
            key: J,
            value: function value(e) {
              var t = this;
              for (; t;) {
                if (t === e) return !0;
                t = t[j]();
              }
              return !1;
            }
          }, {
            key: j,
            value: function value() {
              return this[$e];
            }
          }, {
            key: $,
            value: function value() {
              return this[j]();
            }
          }, {
            key: R,
            value: function value() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
              return e ? this[e] : this[Te];
            }
          }, {
            key: w,
            value: function value() {
              var e = Object.create(null);
              this[b] && (e.$content = this[b]);
              var _iterator161 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this)),
                _step161;
              try {
                for (_iterator161.s(); !(_step161 = _iterator161.n()).done;) {
                  var _t398 = _step161.value;
                  var _a319 = this[_t398];
                  null !== _a319 && (_a319 instanceof XFAObject ? e[_t398] = _a319[w]() : _a319 instanceof XFAObjectArray ? _a319.isEmpty() || (e[_t398] = _a319.dump()) : e[_t398] = _a319);
                }
              } catch (err) {
                _iterator161.e(err);
              } finally {
                _iterator161.f();
              }
              return e;
            }
          }, {
            key: ke,
            value: function value() {
              return null;
            }
          }, {
            key: Ae,
            value: function value() {
              return r.HTMLResult.EMPTY;
            }
          }, {
            key: L,
            value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {
              var _iterator162, _step162, _e550;
              return _regeneratorRuntime().wrap(function value$(_context67) {
                while (1) switch (_context67.prev = _context67.next) {
                  case 0:
                    _iterator162 = _createForOfIteratorHelper(this[R]());
                    _context67.prev = 1;
                    _iterator162.s();
                  case 3:
                    if ((_step162 = _iterator162.n()).done) {
                      _context67.next = 9;
                      break;
                    }
                    _e550 = _step162.value;
                    _context67.next = 7;
                    return _e550;
                  case 7:
                    _context67.next = 3;
                    break;
                  case 9:
                    _context67.next = 14;
                    break;
                  case 11:
                    _context67.prev = 11;
                    _context67.t0 = _context67["catch"](1);
                    _iterator162.e(_context67.t0);
                  case 14:
                    _context67.prev = 14;
                    _iterator162.f();
                    return _context67.finish(14);
                  case 17:
                  case "end":
                    return _context67.stop();
                }
              }, value, this, [[1, 11, 14, 17]]);
            })
          }, {
            key: De,
            value: /*#__PURE__*/_regeneratorRuntime().mark(function value(e, t) {
              var _iterator163, _step163, _a320, _e551, _t399;
              return _regeneratorRuntime().wrap(function value$(_context68) {
                while (1) switch (_context68.prev = _context68.next) {
                  case 0:
                    _iterator163 = _createForOfIteratorHelper(this[L]());
                    _context68.prev = 1;
                    _iterator163.s();
                  case 3:
                    if ((_step163 = _iterator163.n()).done) {
                      _context68.next = 12;
                      break;
                    }
                    _a320 = _step163.value;
                    if (!(!e || t === e.has(_a320[ie]))) {
                      _context68.next = 10;
                      break;
                    }
                    _e551 = this[F](), _t399 = _a320[Ae](_e551);
                    _t399.success || (this[S].failingNode = _a320);
                    _context68.next = 10;
                    return _t399;
                  case 10:
                    _context68.next = 3;
                    break;
                  case 12:
                    _context68.next = 17;
                    break;
                  case 14:
                    _context68.prev = 14;
                    _context68.t0 = _context68["catch"](1);
                    _iterator163.e(_context68.t0);
                  case 17:
                    _context68.prev = 17;
                    _iterator163.f();
                    return _context68.finish(17);
                  case 20:
                  case "end":
                    return _context68.stop();
                }
              }, value, this, [[1, 14, 17, 20]]);
            })
          }, {
            key: C,
            value: function value() {
              return null;
            }
          }, {
            key: l,
            value: function value(e, t) {
              this[S].children.push(e);
            }
          }, {
            key: F,
            value: function value() {}
          }, {
            key: u,
            value: function value(_ref95) {
              var _ref95$filter = _ref95.filter,
                e = _ref95$filter === void 0 ? null : _ref95$filter,
                _ref95$include = _ref95.include,
                t = _ref95$include === void 0 ? !0 : _ref95$include;
              if (this[S].generator) {
                var _e552 = this[F](),
                  _t400 = this[S].failingNode[Ae](_e552);
                if (!_t400.success) return _t400;
                _t400.html && this[l](_t400.html, _t400.bbox);
                delete this[S].failingNode;
              } else this[S].generator = this[De](e, t);
              for (;;) {
                var _e553 = this[S].generator.next();
                if (_e553.done) break;
                var _t401 = _e553.value;
                if (!_t401.success) return _t401;
                _t401.html && this[l](_t401.html, _t401.bbox);
              }
              this[S].generator = null;
              return r.HTMLResult.EMPTY;
            }
          }, {
            key: be,
            value: function value(e) {
              this[Ue] = new Set(Object.keys(e));
            }
          }, {
            key: Ne,
            value: function value(e) {
              var t = this[Ie],
                a = this[Ue];
              return _toConsumableArray(e).filter(function (e) {
                return t.has(e) && !a.has(e);
              });
            }
          }, {
            key: ge,
            value: function value(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();
              var _iterator164 = _createForOfIteratorHelper(this[Te]),
                _step164;
              try {
                for (_iterator164.s(); !(_step164 = _iterator164.n()).done;) {
                  var _a321 = _step164.value;
                  _a321[je](e, t);
                }
              } catch (err) {
                _iterator164.e(err);
              } finally {
                _iterator164.f();
              }
            }
          }, {
            key: je,
            value: function value(e, t) {
              var a = this[Be](e, t);
              a ? this[Fe](a, e, t) : this[ge](e, t);
            }
          }, {
            key: Be,
            value: function value(e, t) {
              var a = this.use,
                r = this.usehref;
              if (!a && !r) return null;
              var n = null,
                s = null,
                c = null,
                l = a;
              if (r) {
                l = r;
                r.startsWith("#som(") && r.endsWith(")") ? s = r.slice(5, -1) : r.startsWith(".#som(") && r.endsWith(")") ? s = r.slice(6, -1) : r.startsWith("#") ? c = r.slice(1) : r.startsWith(".#") && (c = r.slice(2));
              } else a.startsWith("#") ? c = a.slice(1) : s = a;
              this.use = this.usehref = "";
              if (c) n = e.get(c);else {
                n = (0, o.searchNode)(e.get(fe), this, s, !0, !1);
                n && (n = n[0]);
              }
              if (!n) {
                (0, i.warn)("XFA - Invalid prototype reference: ".concat(l, "."));
                return null;
              }
              if (n[ie] !== this[ie]) {
                (0, i.warn)("XFA - Incompatible prototype: ".concat(n[ie], " !== ").concat(this[ie], "."));
                return null;
              }
              if (t.has(n)) {
                (0, i.warn)("XFA - Cycle detected in prototypes use.");
                return null;
              }
              t.add(n);
              var h = n[Be](e, t);
              h && n[Fe](h, e, t);
              n[ge](e, t);
              t.delete(n);
              return n;
            }
          }, {
            key: Fe,
            value: function value(e, t, a) {
              if (a.has(e)) {
                (0, i.warn)("XFA - Cycle detected in prototypes use.");
                return;
              }
              !this[b] && e[b] && (this[b] = e[b]);
              new Set(a).add(e);
              var _iterator165 = _createForOfIteratorHelper(this[Ne](e[Ue])),
                _step165;
              try {
                for (_iterator165.s(); !(_step165 = _iterator165.n()).done;) {
                  var _t402 = _step165.value;
                  this[_t402] = e[_t402];
                  this[Ue] && this[Ue].add(_t402);
                }
              } catch (err) {
                _iterator165.e(err);
              } finally {
                _iterator165.f();
              }
              var _iterator166 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this)),
                _step166;
              try {
                for (_iterator166.s(); !(_step166 = _iterator166.n()).done;) {
                  var _r258 = _step166.value;
                  if (this[Ie].has(_r258)) continue;
                  var _i217 = this[_r258],
                    _n142 = e[_r258];
                  if (_i217 instanceof XFAObjectArray) {
                    var _iterator167 = _createForOfIteratorHelper(_i217[Te]),
                      _step167;
                    try {
                      for (_iterator167.s(); !(_step167 = _iterator167.n()).done;) {
                        var _e554 = _step167.value;
                        _e554[je](t, a);
                      }
                    } catch (err) {
                      _iterator167.e(err);
                    } finally {
                      _iterator167.f();
                    }
                    for (var _r259 = _i217[Te].length, _s114 = _n142[Te].length; _r259 < _s114; _r259++) {
                      var _n143 = e[Te][_r259][p]();
                      if (!_i217.push(_n143)) break;
                      _n143[$e] = this;
                      this[Te].push(_n143);
                      _n143[je](t, a);
                    }
                  } else if (null === _i217) {
                    if (null !== _n142) {
                      var _e555 = _n142[p]();
                      _e555[$e] = this;
                      this[_r258] = _e555;
                      this[Te].push(_e555);
                      _e555[je](t, a);
                    }
                  } else {
                    _i217[ge](t, a);
                    _n142 && _i217[Fe](_n142, t, a);
                  }
                }
              } catch (err) {
                _iterator166.e(err);
              } finally {
                _iterator166.f();
              }
            }
          }, {
            key: p,
            value: function value() {
              var e = Object.create(Object.getPrototypeOf(this));
              var _iterator168 = _createForOfIteratorHelper(Object.getOwnPropertySymbols(this)),
                _step168;
              try {
                for (_iterator168.s(); !(_step168 = _iterator168.n()).done;) {
                  var _t403 = _step168.value;
                  try {
                    e[_t403] = this[_t403];
                  } catch (a) {
                    (0, i.shadow)(e, _t403, this[_t403]);
                  }
                }
              } catch (err) {
                _iterator168.e(err);
              } finally {
                _iterator168.f();
              }
              e[ve] = "".concat(e[ie]).concat(He++);
              e[Te] = [];
              var _iterator169 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this)),
                _step169;
              try {
                for (_iterator169.s(); !(_step169 = _iterator169.n()).done;) {
                  var _t404 = _step169.value;
                  if (this[Ie].has(_t404)) {
                    e[_t404] = XFAObject[Me](this[_t404]);
                    continue;
                  }
                  var _a322 = this[_t404];
                  e[_t404] = _a322 instanceof XFAObjectArray ? new XFAObjectArray(_a322[Le]) : null;
                }
              } catch (err) {
                _iterator169.e(err);
              } finally {
                _iterator169.f();
              }
              var _iterator170 = _createForOfIteratorHelper(this[Te]),
                _step170;
              try {
                for (_iterator170.s(); !(_step170 = _iterator170.n()).done;) {
                  var _t405 = _step170.value;
                  var _a323 = _t405[ie],
                    _r260 = _t405[p]();
                  e[Te].push(_r260);
                  _r260[$e] = e;
                  null === e[_a323] ? e[_a323] = _r260 : e[_a323][Te].push(_r260);
                }
              } catch (err) {
                _iterator170.e(err);
              } finally {
                _iterator170.f();
              }
              return e;
            }
          }, {
            key: R,
            value: function value() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
              return e ? this[Te].filter(function (t) {
                return t[ie] === e;
              }) : this[Te];
            }
          }, {
            key: O,
            value: function value(e) {
              return this[e];
            }
          }, {
            key: T,
            value: function value(e, t) {
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;
              return Array.from(this[M](e, t, a));
            }
          }, {
            key: M,
            value: function value(e, t) {
              var _this100 = this;
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;
              return /*#__PURE__*/_regeneratorRuntime().mark(function _callee66() {
                var _iterator171, _step171, _a324;
                return _regeneratorRuntime().wrap(function _callee66$(_context69) {
                  while (1) switch (_context69.prev = _context69.next) {
                    case 0:
                      if (!("parent" !== e)) {
                        _context69.next = 33;
                        break;
                      }
                      _iterator171 = _createForOfIteratorHelper(_this100[Te]);
                      _context69.prev = 2;
                      _iterator171.s();
                    case 4:
                      if ((_step171 = _iterator171.n()).done) {
                        _context69.next = 19;
                        break;
                      }
                      _a324 = _step171.value;
                      _context69.t0 = _a324[ie] === e;
                      if (!_context69.t0) {
                        _context69.next = 10;
                        break;
                      }
                      _context69.next = 10;
                      return _a324;
                    case 10:
                      _context69.t1 = _a324.name === e;
                      if (!_context69.t1) {
                        _context69.next = 14;
                        break;
                      }
                      _context69.next = 14;
                      return _a324;
                    case 14:
                      _context69.t2 = t || _a324[ee]();
                      if (!_context69.t2) {
                        _context69.next = 17;
                        break;
                      }
                      return _context69.delegateYield(_a324[M](e, t, !1), "t3", 17);
                    case 17:
                      _context69.next = 4;
                      break;
                    case 19:
                      _context69.next = 24;
                      break;
                    case 21:
                      _context69.prev = 21;
                      _context69.t4 = _context69["catch"](2);
                      _iterator171.e(_context69.t4);
                    case 24:
                      _context69.prev = 24;
                      _iterator171.f();
                      return _context69.finish(24);
                    case 27:
                      _context69.t5 = a && _this100[Ie].has(e);
                      if (!_context69.t5) {
                        _context69.next = 31;
                        break;
                      }
                      _context69.next = 31;
                      return new XFAAttribute(_this100, e, _this100[e]);
                    case 31:
                      _context69.next = 35;
                      break;
                    case 33:
                      _context69.next = 35;
                      return _this100[$e];
                    case 35:
                    case "end":
                      return _context69.stop();
                  }
                }, _callee66, null, [[2, 21, 24, 27]]);
              })();
            }
          }], [{
            key: Me,
            value: function value(e) {
              return Array.isArray(e) ? e.map(function (e) {
                return XFAObject[Me](e);
              }) : "object" == typeof e && null !== e ? Object.assign({}, e) : e;
            }
          }]);
          return XFAObject;
        }();
        t.XFAObject = XFAObject;
        var XFAObjectArray = /*#__PURE__*/function () {
          function XFAObjectArray() {
            var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1 / 0;
            _classCallCheck(this, XFAObjectArray);
            this[Le] = e;
            this[Te] = [];
          }
          _createClass(XFAObjectArray, [{
            key: "push",
            value: function push(e) {
              if (this[Te].length <= this[Le]) {
                this[Te].push(e);
                return !0;
              }
              (0, i.warn)("XFA - node \"".concat(e[ie], "\" accepts no more than ").concat(this[Le], " children"));
              return !1;
            }
          }, {
            key: "isEmpty",
            value: function isEmpty() {
              return 0 === this[Te].length;
            }
          }, {
            key: "dump",
            value: function dump() {
              return 1 === this[Te].length ? this[Te][0][w]() : this[Te].map(function (e) {
                return e[w]();
              });
            }
          }, {
            key: p,
            value: function value() {
              var e = new XFAObjectArray(this[Le]);
              e[Te] = this[Te].map(function (e) {
                return e[p]();
              });
              return e;
            }
          }, {
            key: "children",
            get: function get() {
              return this[Te];
            }
          }, {
            key: "clear",
            value: function clear() {
              this[Te].length = 0;
            }
          }]);
          return XFAObjectArray;
        }();
        t.XFAObjectArray = XFAObjectArray;
        var XFAAttribute = /*#__PURE__*/function () {
          function XFAAttribute(e, t, a) {
            _classCallCheck(this, XFAAttribute);
            this[$e] = e;
            this[ie] = t;
            this[b] = a;
            this[m] = !1;
            this[ve] = "attribute" + He++;
          }
          _createClass(XFAAttribute, [{
            key: j,
            value: function value() {
              return this[$e];
            }
          }, {
            key: K,
            value: function value() {
              return !0;
            }
          }, {
            key: E,
            value: function value() {
              return this[b].trim();
            }
          }, {
            key: ye,
            value: function value(e) {
              e = e.value || "";
              this[b] = e.toString();
            }
          }, {
            key: Se,
            value: function value() {
              return this[b];
            }
          }, {
            key: J,
            value: function value(e) {
              return this[$e] === e || this[$e][J](e);
            }
          }]);
          return XFAAttribute;
        }();
        t.XFAAttribute = XFAAttribute;
        var XmlObject = /*#__PURE__*/function (_XFAObject) {
          _inherits(XmlObject, _XFAObject);
          var _super98 = _createSuper(XmlObject);
          function XmlObject(e, t) {
            var _this101;
            var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            _classCallCheck(this, XmlObject);
            _this101 = _super98.call(this, e, t);
            _this101[b] = "";
            _this101[Pe] = null;
            if ("#text" !== t) {
              var _e556 = new Map();
              _this101[Oe] = _e556;
              for (var _i218 = 0, _Object$entries4 = Object.entries(a); _i218 < _Object$entries4.length; _i218++) {
                var _Object$entries4$_i = _slicedToArray(_Object$entries4[_i218], 2),
                  _t406 = _Object$entries4$_i[0],
                  _r261 = _Object$entries4$_i[1];
                _e556.set(_t406, new XFAAttribute(_assertThisInitialized(_this101), _t406, _r261));
              }
              if (a.hasOwnProperty(ne)) {
                var _e557 = a[ne].xfa.dataNode;
                void 0 !== _e557 && ("dataGroup" === _e557 ? _this101[Pe] = !1 : "dataValue" === _e557 && (_this101[Pe] = !0));
              }
            }
            _this101[m] = !1;
            return _this101;
          }
          _createClass(XmlObject, [{
            key: Ce,
            value: function value(e) {
              var t = this[ie];
              if ("#text" === t) {
                e.push((0, n.encodeToXmlString)(this[b]));
                return;
              }
              var a = (0, i.utf8StringToString)(t),
                r = this[re] === qe ? "xfa:" : "";
              e.push("<".concat(r).concat(a));
              var _iterator172 = _createForOfIteratorHelper(this[Oe].entries()),
                _step172;
              try {
                for (_iterator172.s(); !(_step172 = _iterator172.n()).done;) {
                  var _step172$value = _slicedToArray(_step172.value, 2),
                    _t408 = _step172$value[0],
                    _a325 = _step172$value[1];
                  var _r262 = (0, i.utf8StringToString)(_t408);
                  e.push(" ".concat(_r262, "=\"").concat((0, n.encodeToXmlString)(_a325[b]), "\""));
                }
              } catch (err) {
                _iterator172.e(err);
              } finally {
                _iterator172.f();
              }
              null !== this[Pe] && (this[Pe] ? e.push(' xfa:dataNode="dataValue"') : e.push(' xfa:dataNode="dataGroup"'));
              if (this[b] || 0 !== this[Te].length) {
                e.push(">");
                if (this[b]) "string" == typeof this[b] ? e.push((0, n.encodeToXmlString)(this[b])) : this[b][Ce](e);else {
                  var _iterator173 = _createForOfIteratorHelper(this[Te]),
                    _step173;
                  try {
                    for (_iterator173.s(); !(_step173 = _iterator173.n()).done;) {
                      var _t407 = _step173.value;
                      _t407[Ce](e);
                    }
                  } catch (err) {
                    _iterator173.e(err);
                  } finally {
                    _iterator173.f();
                  }
                }
                e.push("</".concat(r).concat(a, ">"));
              } else e.push("/>");
            }
          }, {
            key: se,
            value: function value(e) {
              if (this[b]) {
                var _e558 = new XmlObject(this[re], "#text");
                this[h](_e558);
                _e558[b] = this[b];
                this[b] = "";
              }
              this[h](e);
              return !0;
            }
          }, {
            key: ce,
            value: function value(e) {
              this[b] += e;
            }
          }, {
            key: x,
            value: function value() {
              if (this[b] && this[Te].length > 0) {
                var _e559 = new XmlObject(this[re], "#text");
                this[h](_e559);
                _e559[b] = this[b];
                delete this[b];
              }
            }
          }, {
            key: Ae,
            value: function value() {
              return "#text" === this[ie] ? r.HTMLResult.success({
                name: "#text",
                value: this[b]
              }) : r.HTMLResult.EMPTY;
            }
          }, {
            key: R,
            value: function value() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
              return e ? this[Te].filter(function (t) {
                return t[ie] === e;
              }) : this[Te];
            }
          }, {
            key: v,
            value: function value() {
              return this[Oe];
            }
          }, {
            key: O,
            value: function value(e) {
              var t = this[Oe].get(e);
              return void 0 !== t ? t : this[R](e);
            }
          }, {
            key: M,
            value: /*#__PURE__*/_regeneratorRuntime().mark(function value(e, t) {
              var a, _iterator174, _step174, _a326;
              return _regeneratorRuntime().wrap(function value$(_context70) {
                while (1) switch (_context70.prev = _context70.next) {
                  case 0:
                    a = this[Oe].get(e);
                    _context70.t0 = a;
                    if (!_context70.t0) {
                      _context70.next = 5;
                      break;
                    }
                    _context70.next = 5;
                    return a;
                  case 5:
                    _iterator174 = _createForOfIteratorHelper(this[Te]);
                    _context70.prev = 6;
                    _iterator174.s();
                  case 8:
                    if ((_step174 = _iterator174.n()).done) {
                      _context70.next = 19;
                      break;
                    }
                    _a326 = _step174.value;
                    _context70.t1 = _a326[ie] === e;
                    if (!_context70.t1) {
                      _context70.next = 14;
                      break;
                    }
                    _context70.next = 14;
                    return _a326;
                  case 14:
                    _context70.t2 = t;
                    if (!_context70.t2) {
                      _context70.next = 17;
                      break;
                    }
                    return _context70.delegateYield(_a326[M](e, t), "t3", 17);
                  case 17:
                    _context70.next = 8;
                    break;
                  case 19:
                    _context70.next = 24;
                    break;
                  case 21:
                    _context70.prev = 21;
                    _context70.t4 = _context70["catch"](6);
                    _iterator174.e(_context70.t4);
                  case 24:
                    _context70.prev = 24;
                    _iterator174.f();
                    return _context70.finish(24);
                  case 27:
                  case "end":
                    return _context70.stop();
                }
              }, value, this, [[6, 21, 24, 27]]);
            })
          }, {
            key: k,
            value: /*#__PURE__*/_regeneratorRuntime().mark(function value(e, t) {
              var a, _iterator175, _step175, _a327;
              return _regeneratorRuntime().wrap(function value$(_context71) {
                while (1) switch (_context71.prev = _context71.next) {
                  case 0:
                    a = this[Oe].get(e);
                    _context71.t0 = !a || t && a[m];
                    if (_context71.t0) {
                      _context71.next = 5;
                      break;
                    }
                    _context71.next = 5;
                    return a;
                  case 5:
                    _iterator175 = _createForOfIteratorHelper(this[Te]);
                    _context71.prev = 6;
                    _iterator175.s();
                  case 8:
                    if ((_step175 = _iterator175.n()).done) {
                      _context71.next = 13;
                      break;
                    }
                    _a327 = _step175.value;
                    return _context71.delegateYield(_a327[k](e, t), "t1", 11);
                  case 11:
                    _context71.next = 8;
                    break;
                  case 13:
                    _context71.next = 18;
                    break;
                  case 15:
                    _context71.prev = 15;
                    _context71.t2 = _context71["catch"](6);
                    _iterator175.e(_context71.t2);
                  case 18:
                    _context71.prev = 18;
                    _iterator175.f();
                    return _context71.finish(18);
                  case 21:
                  case "end":
                    return _context71.stop();
                }
              }, value, this, [[6, 15, 18, 21]]);
            })
          }, {
            key: N,
            value: /*#__PURE__*/_regeneratorRuntime().mark(function value(e, t, a) {
              var _iterator176, _step176, _r263;
              return _regeneratorRuntime().wrap(function value$(_context72) {
                while (1) switch (_context72.prev = _context72.next) {
                  case 0:
                    _iterator176 = _createForOfIteratorHelper(this[Te]);
                    _context72.prev = 1;
                    _iterator176.s();
                  case 3:
                    if ((_step176 = _iterator176.n()).done) {
                      _context72.next = 14;
                      break;
                    }
                    _r263 = _step176.value;
                    _context72.t0 = _r263[ie] !== e || a && _r263[m];
                    if (_context72.t0) {
                      _context72.next = 9;
                      break;
                    }
                    _context72.next = 9;
                    return _r263;
                  case 9:
                    _context72.t1 = t;
                    if (!_context72.t1) {
                      _context72.next = 12;
                      break;
                    }
                    return _context72.delegateYield(_r263[N](e, t, a), "t2", 12);
                  case 12:
                    _context72.next = 3;
                    break;
                  case 14:
                    _context72.next = 19;
                    break;
                  case 16:
                    _context72.prev = 16;
                    _context72.t3 = _context72["catch"](1);
                    _iterator176.e(_context72.t3);
                  case 19:
                    _context72.prev = 19;
                    _iterator176.f();
                    return _context72.finish(19);
                  case 22:
                  case "end":
                    return _context72.stop();
                }
              }, value, this, [[1, 16, 19, 22]]);
            })
          }, {
            key: K,
            value: function value() {
              return null === this[Pe] ? 0 === this[Te].length || this[Te][0][re] === s.NamespaceIds.xhtml.id : this[Pe];
            }
          }, {
            key: E,
            value: function value() {
              return null === this[Pe] ? 0 === this[Te].length ? this[b].trim() : this[Te][0][re] === s.NamespaceIds.xhtml.id ? this[Te][0][Se]().trim() : null : this[b].trim();
            }
          }, {
            key: ye,
            value: function value(e) {
              e = e.value || "";
              this[b] = e.toString();
            }
          }, {
            key: w,
            value: function value() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              var t = Object.create(null);
              e && (t.$ns = this[re]);
              this[b] && (t.$content = this[b]);
              t.$name = this[ie];
              t.children = [];
              var _iterator177 = _createForOfIteratorHelper(this[Te]),
                _step177;
              try {
                for (_iterator177.s(); !(_step177 = _iterator177.n()).done;) {
                  var _a328 = _step177.value;
                  t.children.push(_a328[w](e));
                }
              } catch (err) {
                _iterator177.e(err);
              } finally {
                _iterator177.f();
              }
              t.attributes = Object.create(null);
              var _iterator178 = _createForOfIteratorHelper(this[Oe]),
                _step178;
              try {
                for (_iterator178.s(); !(_step178 = _iterator178.n()).done;) {
                  var _step178$value = _slicedToArray(_step178.value, 2),
                    _e560 = _step178$value[0],
                    _a329 = _step178$value[1];
                  t.attributes[_e560] = _a329[b];
                }
              } catch (err) {
                _iterator178.e(err);
              } finally {
                _iterator178.f();
              }
              return t;
            }
          }]);
          return XmlObject;
        }(XFAObject);
        t.XmlObject = XmlObject;
        var ContentObject = /*#__PURE__*/function (_XFAObject2) {
          _inherits(ContentObject, _XFAObject2);
          var _super99 = _createSuper(ContentObject);
          function ContentObject(e, t) {
            var _this102;
            _classCallCheck(this, ContentObject);
            _this102 = _super99.call(this, e, t);
            _this102[b] = "";
            return _this102;
          }
          _createClass(ContentObject, [{
            key: ce,
            value: function value(e) {
              this[b] += e;
            }
          }, {
            key: x,
            value: function value() {}
          }]);
          return ContentObject;
        }(XFAObject);
        t.ContentObject = ContentObject;
        t.OptionObject = /*#__PURE__*/function (_ContentObject) {
          _inherits(OptionObject, _ContentObject);
          var _super100 = _createSuper(OptionObject);
          function OptionObject(e, t, a) {
            var _this103;
            _classCallCheck(this, OptionObject);
            _this103 = _super100.call(this, e, t);
            _this103[_e] = a;
            return _this103;
          }
          _createClass(OptionObject, [{
            key: x,
            value: function value() {
              var _this104 = this;
              this[b] = (0, r.getKeyword)({
                data: this[b],
                defaultValue: this[_e][0],
                validate: function validate(e) {
                  return _this104[_e].includes(e);
                }
              });
            }
          }, {
            key: d,
            value: function value(e) {
              _get(_getPrototypeOf(OptionObject.prototype), d, this).call(this, e);
              delete this[_e];
            }
          }]);
          return OptionObject;
        }(ContentObject);
        t.StringObject = /*#__PURE__*/function (_ContentObject2) {
          _inherits(StringObject, _ContentObject2);
          var _super101 = _createSuper(StringObject);
          function StringObject() {
            _classCallCheck(this, StringObject);
            return _super101.apply(this, arguments);
          }
          _createClass(StringObject, [{
            key: x,
            value: function value() {
              this[b] = this[b].trim();
            }
          }]);
          return StringObject;
        }(ContentObject);
        var IntegerObject = /*#__PURE__*/function (_ContentObject3) {
          _inherits(IntegerObject, _ContentObject3);
          var _super102 = _createSuper(IntegerObject);
          function IntegerObject(e, t, a, r) {
            var _this105;
            _classCallCheck(this, IntegerObject);
            _this105 = _super102.call(this, e, t);
            _this105[Ee] = a;
            _this105[Xe] = r;
            return _this105;
          }
          _createClass(IntegerObject, [{
            key: x,
            value: function value() {
              this[b] = (0, r.getInteger)({
                data: this[b],
                defaultValue: this[Ee],
                validate: this[Xe]
              });
            }
          }, {
            key: d,
            value: function value(e) {
              _get(_getPrototypeOf(IntegerObject.prototype), d, this).call(this, e);
              delete this[Ee];
              delete this[Xe];
            }
          }]);
          return IntegerObject;
        }(ContentObject);
        t.IntegerObject = IntegerObject;
        t.Option01 = /*#__PURE__*/function (_IntegerObject) {
          _inherits(Option01, _IntegerObject);
          var _super103 = _createSuper(Option01);
          function Option01(e, t) {
            _classCallCheck(this, Option01);
            return _super103.call(this, e, t, 0, function (e) {
              return 1 === e;
            });
          }
          return _createClass(Option01);
        }(IntegerObject);
        t.Option10 = /*#__PURE__*/function (_IntegerObject2) {
          _inherits(Option10, _IntegerObject2);
          var _super104 = _createSuper(Option10);
          function Option10(e, t) {
            _classCallCheck(this, Option10);
            return _super104.call(this, e, t, 1, function (e) {
              return 0 === e;
            });
          }
          return _createClass(Option10);
        }(IntegerObject);
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.HTMLResult = void 0;
        t.getBBox = function getBBox(e) {
          var t = -1;
          if (!e) return {
            x: t,
            y: t,
            width: t,
            height: t
          };
          var a = e.trim().split(/\s*,\s*/).map(function (e) {
            return getMeasurement(e, "-1");
          });
          if (a.length < 4 || a[2] < 0 || a[3] < 0) return {
            x: t,
            y: t,
            width: t,
            height: t
          };
          var _a330 = _slicedToArray(a, 4),
            r = _a330[0],
            i = _a330[1],
            n = _a330[2],
            s = _a330[3];
          return {
            x: r,
            y: i,
            width: n,
            height: s
          };
        };
        t.getColor = function getColor(e) {
          var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0];
          var _t409 = _slicedToArray(t, 3),
            a = _t409[0],
            r = _t409[1],
            i = _t409[2];
          if (!e) return {
            r: a,
            g: r,
            b: i
          };
          var n = e.trim().split(/\s*,\s*/).map(function (e) {
            return Math.min(Math.max(0, parseInt(e.trim(), 10)), 255);
          }).map(function (e) {
            return isNaN(e) ? 0 : e;
          });
          if (n.length < 3) return {
            r: a,
            g: r,
            b: i
          };
          var _n144 = _slicedToArray(n, 3);
          a = _n144[0];
          r = _n144[1];
          i = _n144[2];
          return {
            r: a,
            g: r,
            b: i
          };
        };
        t.getFloat = function getFloat(_ref96) {
          var e = _ref96.data,
            t = _ref96.defaultValue,
            a = _ref96.validate;
          if (!e) return t;
          e = e.trim();
          var r = parseFloat(e);
          if (!isNaN(r) && a(r)) return r;
          return t;
        };
        t.getInteger = function getInteger(_ref97) {
          var e = _ref97.data,
            t = _ref97.defaultValue,
            a = _ref97.validate;
          if (!e) return t;
          e = e.trim();
          var r = parseInt(e, 10);
          if (!isNaN(r) && a(r)) return r;
          return t;
        };
        t.getKeyword = getKeyword;
        t.getMeasurement = getMeasurement;
        t.getRatio = function getRatio(e) {
          if (!e) return {
            num: 1,
            den: 1
          };
          var t = e.trim().split(/\s*:\s*/).map(function (e) {
            return parseFloat(e);
          }).filter(function (e) {
            return !isNaN(e);
          });
          1 === t.length && t.push(1);
          if (0 === t.length) return {
            num: 1,
            den: 1
          };
          var _t410 = _slicedToArray(t, 2),
            a = _t410[0],
            r = _t410[1];
          return {
            num: a,
            den: r
          };
        };
        t.getRelevant = function getRelevant(e) {
          if (!e) return [];
          return e.trim().split(/\s+/).map(function (e) {
            return {
              excluded: "-" === e[0],
              viewname: e.substring(1)
            };
          });
        };
        t.getStringOption = function getStringOption(e, t) {
          return getKeyword({
            data: e,
            defaultValue: t[0],
            validate: function validate(e) {
              return t.includes(e);
            }
          });
        };
        t.stripQuotes = function stripQuotes(e) {
          if (e.startsWith("'") || e.startsWith('"')) return e.slice(1, -1);
          return e;
        };
        var r = a(2);
        var i = {
            pt: function pt(e) {
              return e;
            },
            cm: function cm(e) {
              return e / 2.54 * 72;
            },
            mm: function mm(e) {
              return e / 25.4 * 72;
            },
            in: function _in(e) {
              return 72 * e;
            },
            px: function px(e) {
              return e;
            }
          },
          n = /([+-]?\d+\.?\d*)(.*)/;
        function getKeyword(_ref98) {
          var e = _ref98.data,
            t = _ref98.defaultValue,
            a = _ref98.validate;
          return e && a(e = e.trim()) ? e : t;
        }
        function getMeasurement(e) {
          var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "0";
          t || (t = "0");
          if (!e) return getMeasurement(t);
          var a = e.trim().match(n);
          if (!a) return getMeasurement(t);
          var _a331 = _slicedToArray(a, 3),
            r = _a331[1],
            s = _a331[2],
            o = parseFloat(r);
          if (isNaN(o)) return getMeasurement(t);
          if (0 === o) return 0;
          var c = i[s];
          return c ? c(o) : o;
        }
        var HTMLResult = /*#__PURE__*/function () {
          function HTMLResult(e, t, a, r) {
            _classCallCheck(this, HTMLResult);
            this.success = e;
            this.html = t;
            this.bbox = a;
            this.breakNode = r;
          }
          _createClass(HTMLResult, [{
            key: "isBreak",
            value: function isBreak() {
              return !!this.breakNode;
            }
          }], [{
            key: "FAILURE",
            get: function get() {
              return (0, r.shadow)(this, "FAILURE", new HTMLResult(!1, null, null, null));
            }
          }, {
            key: "EMPTY",
            get: function get() {
              return (0, r.shadow)(this, "EMPTY", new HTMLResult(!0, null, null, null));
            }
          }, {
            key: "breakNode",
            value: function breakNode(e) {
              return new HTMLResult(!1, null, null, e);
            }
          }, {
            key: "success",
            value: function success(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              return new HTMLResult(!0, e, t, null);
            }
          }]);
          return HTMLResult;
        }();
        t.HTMLResult = HTMLResult;
      }, function (e, t) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.NamespaceIds = t.$buildXFAObject = void 0;
        var a = Symbol();
        t.$buildXFAObject = a;
        t.NamespaceIds = {
          config: {
            id: 0,
            check: function check(e) {
              return e.startsWith("http://www.xfa.org/schema/xci/");
            }
          },
          connectionSet: {
            id: 1,
            check: function check(e) {
              return e.startsWith("http://www.xfa.org/schema/xfa-connection-set/");
            }
          },
          datasets: {
            id: 2,
            check: function check(e) {
              return e.startsWith("http://www.xfa.org/schema/xfa-data/");
            }
          },
          form: {
            id: 3,
            check: function check(e) {
              return e.startsWith("http://www.xfa.org/schema/xfa-form/");
            }
          },
          localeSet: {
            id: 4,
            check: function check(e) {
              return e.startsWith("http://www.xfa.org/schema/xfa-locale-set/");
            }
          },
          pdf: {
            id: 5,
            check: function check(e) {
              return "http://ns.adobe.com/xdp/pdf/" === e;
            }
          },
          signature: {
            id: 6,
            check: function check(e) {
              return "http://www.w3.org/2000/09/xmldsig#" === e;
            }
          },
          sourceSet: {
            id: 7,
            check: function check(e) {
              return e.startsWith("http://www.xfa.org/schema/xfa-source-set/");
            }
          },
          stylesheet: {
            id: 8,
            check: function check(e) {
              return "http://www.w3.org/1999/XSL/Transform" === e;
            }
          },
          template: {
            id: 9,
            check: function check(e) {
              return e.startsWith("http://www.xfa.org/schema/xfa-template/");
            }
          },
          xdc: {
            id: 10,
            check: function check(e) {
              return e.startsWith("http://www.xfa.org/schema/xdc/");
            }
          },
          xdp: {
            id: 11,
            check: function check(e) {
              return "http://ns.adobe.com/xdp/" === e;
            }
          },
          xfdf: {
            id: 12,
            check: function check(e) {
              return "http://ns.adobe.com/xfdf/" === e;
            }
          },
          xhtml: {
            id: 13,
            check: function check(e) {
              return "http://www.w3.org/1999/xhtml" === e;
            }
          },
          xmpmeta: {
            id: 14,
            check: function check(e) {
              return "http://ns.adobe.com/xmpmeta/" === e;
            }
          }
        };
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.createDataNode = function createDataNode(e, t, a) {
          var i = parseExpression(a);
          if (!i) return null;
          if (i.some(function (e) {
            return e.operator === c.dotDot;
          })) return null;
          var s = l.get(i[0].name);
          var o = 0;
          if (s) {
            e = s(e, t);
            o = 1;
          } else e = t || e;
          for (var _t411 = i.length; o < _t411; o++) {
            var _i$o = i[o],
              _t412 = _i$o.name,
              _a332 = _i$o.operator,
              _s115 = _i$o.index;
            if (!isFinite(_s115)) {
              i[o].index = 0;
              return createNodes(e, i.slice(o));
            }
            var _l32 = void 0;
            switch (_a332) {
              case c.dot:
                _l32 = e[r.$getChildrenByName](_t412, !1);
                break;
              case c.dotDot:
                _l32 = e[r.$getChildrenByName](_t412, !0);
                break;
              case c.dotHash:
                _l32 = e[r.$getChildrenByClass](_t412);
                _l32 = _l32 instanceof r.XFAObjectArray ? _l32.children : [_l32];
            }
            if (0 === _l32.length) return createNodes(e, i.slice(o));
            if (!(_s115 < _l32.length)) {
              i[o].index = _s115 - _l32.length;
              return createNodes(e, i.slice(o));
            }
            {
              var _t413 = _l32[_s115];
              if (!(_t413 instanceof r.XFAObject)) {
                (0, n.warn)("XFA - Cannot create a node.");
                return null;
              }
              e = _t413;
            }
          }
          return null;
        };
        t.searchNode = function searchNode(e, t, a) {
          var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;
          var n = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : !0;
          var s = parseExpression(a, i);
          if (!s) return null;
          var o = l.get(s[0].name);
          var u,
            d = 0;
          if (o) {
            u = !0;
            e = [o(e, t)];
            d = 1;
          } else {
            u = null === t;
            e = [t || e];
          }
          var _loop6 = function _loop6() {
            var _s$d = s[d],
              a = _s$d.name,
              i = _s$d.cacheName,
              o = _s$d.operator,
              l = _s$d.index,
              f = [];
            var _iterator179 = _createForOfIteratorHelper(e),
              _step179;
            try {
              for (_iterator179.s(); !(_step179 = _iterator179.n()).done;) {
                var _t414 = _step179.value;
                if (!(_t414 instanceof r.XFAObject)) continue;
                var _e561 = void 0,
                  _s116 = void 0;
                if (n) {
                  _s116 = h.get(_t414);
                  if (!_s116) {
                    _s116 = new Map();
                    h.set(_t414, _s116);
                  }
                  _e561 = _s116.get(i);
                }
                if (!_e561) {
                  switch (o) {
                    case c.dot:
                      _e561 = _t414[r.$getChildrenByName](a, !1);
                      break;
                    case c.dotDot:
                      _e561 = _t414[r.$getChildrenByName](a, !0);
                      break;
                    case c.dotHash:
                      _e561 = _t414[r.$getChildrenByClass](a);
                      _e561 = _e561 instanceof r.XFAObjectArray ? _e561.children : [_e561];
                  }
                  n && _s116.set(i, _e561);
                }
                _e561.length > 0 && f.push(_e561);
              }
            } catch (err) {
              _iterator179.e(err);
            } finally {
              _iterator179.f();
            }
            if (0 !== f.length || u || 0 !== d) e = isFinite(l) ? f.filter(function (e) {
              return l < e.length;
            }).map(function (e) {
              return e[l];
            }) : f.flat();else {
              var _a334 = t[r.$getParent]();
              if (!(t = _a334)) return {
                v: null
              };
              d = -1;
              e = [t];
            }
          };
          for (var _a333 = s.length; d < _a333; d++) {
            var _ret = _loop6();
            if (typeof _ret === "object") return _ret.v;
          }
          if (0 === e.length) return null;
          return e;
        };
        var r = a(77),
          i = a(79),
          n = a(2);
        var s = /^[^.[]+/,
          o = /^[^\]]+/,
          c = {
            dot: 0,
            dotDot: 1,
            dotHash: 2,
            dotBracket: 3,
            dotParen: 4
          },
          l = new Map([["$data", function (e, t) {
            return e.datasets ? e.datasets.data : e;
          }], ["$record", function (e, t) {
            return (e.datasets ? e.datasets.data : e)[r.$getChildren]()[0];
          }], ["$template", function (e, t) {
            return e.template;
          }], ["$connectionSet", function (e, t) {
            return e.connectionSet;
          }], ["$form", function (e, t) {
            return e.form;
          }], ["$layout", function (e, t) {
            return e.layout;
          }], ["$host", function (e, t) {
            return e.host;
          }], ["$dataWindow", function (e, t) {
            return e.dataWindow;
          }], ["$event", function (e, t) {
            return e.event;
          }], ["!", function (e, t) {
            return e.datasets;
          }], ["$xfa", function (e, t) {
            return e;
          }], ["xfa", function (e, t) {
            return e;
          }], ["$", function (e, t) {
            return t;
          }]]),
          h = new WeakMap(),
          u = i.NamespaceIds.datasets.id;
        function parseExpression(e, t) {
          var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;
          var r = e.match(s);
          if (!r) return null;
          var _r264 = r,
            _r265 = _slicedToArray(_r264, 1),
            i = _r265[0];
          var l = [{
            name: i,
            cacheName: "." + i,
            index: 0,
            js: null,
            formCalc: null,
            operator: c.dot
          }];
          var h = i.length;
          for (; h < e.length;) {
            var d = h;
            if ("[" === e.charAt(h++)) {
              r = e.slice(h).match(o);
              if (!r) {
                (0, n.warn)("XFA - Invalid index in SOM expression");
                return null;
              }
              l.at(-1).index = "*" === (u = (u = r[0]).trim()) ? 1 / 0 : parseInt(u, 10) || 0;
              h += r[0].length + 1;
              continue;
            }
            var _f22 = void 0;
            switch (e.charAt(h)) {
              case ".":
                if (!t) return null;
                h++;
                _f22 = c.dotDot;
                break;
              case "#":
                h++;
                _f22 = c.dotHash;
                break;
              case "[":
                if (a) {
                  (0, n.warn)("XFA - SOM expression contains a FormCalc subexpression which is not supported for now.");
                  return null;
                }
                _f22 = c.dotBracket;
                break;
              case "(":
                if (a) {
                  (0, n.warn)("XFA - SOM expression contains a JavaScript subexpression which is not supported for now.");
                  return null;
                }
                _f22 = c.dotParen;
                break;
              default:
                _f22 = c.dot;
            }
            r = e.slice(h).match(s);
            if (!r) break;
            var _r266 = r;
            var _r267 = _slicedToArray(_r266, 1);
            i = _r267[0];
            h += i.length;
            l.push({
              name: i,
              cacheName: e.slice(d, h),
              operator: _f22,
              index: 0,
              js: null,
              formCalc: null
            });
          }
          var u;
          return l;
        }
        function createNodes(e, t) {
          var a = null;
          var _iterator180 = _createForOfIteratorHelper(t),
            _step180;
          try {
            for (_iterator180.s(); !(_step180 = _iterator180.n()).done;) {
              var _step180$value = _step180.value,
                _i219 = _step180$value.name,
                _n145 = _step180$value.index;
              for (var _t415 = 0, _s117 = isFinite(_n145) ? _n145 : 0; _t415 <= _s117; _t415++) {
                var _t416 = e[r.$namespaceId] === u ? -1 : e[r.$namespaceId];
                a = new r.XmlObject(_t416, _i219);
                e[r.$appendChild](a);
              }
              e = a;
            }
          } catch (err) {
            _iterator180.e(err);
          } finally {
            _iterator180.f();
          }
          return a;
        }
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.Binder = void 0;
        var r = a(77),
          i = a(82),
          n = a(80),
          s = a(79),
          o = a(2);
        var c = s.NamespaceIds.datasets.id;
        function createText(e) {
          var t = new i.Text({});
          t[r.$content] = e;
          return t;
        }
        t.Binder = /*#__PURE__*/function () {
          function Binder(e) {
            _classCallCheck(this, Binder);
            this.root = e;
            this.datasets = e.datasets;
            e.datasets && e.datasets.data ? this.data = e.datasets.data : this.data = new r.XmlObject(s.NamespaceIds.datasets.id, "data");
            this.emptyMerge = 0 === this.data[r.$getChildren]().length;
            this.root.form = this.form = e.template[r.$clone]();
          }
          _createClass(Binder, [{
            key: "_isConsumeData",
            value: function _isConsumeData() {
              return !this.emptyMerge && this._mergeMode;
            }
          }, {
            key: "_isMatchTemplate",
            value: function _isMatchTemplate() {
              return !this._isConsumeData();
            }
          }, {
            key: "bind",
            value: function bind() {
              this._bindElement(this.form, this.data);
              return this.form;
            }
          }, {
            key: "getData",
            value: function getData() {
              return this.data;
            }
          }, {
            key: "_bindValue",
            value: function _bindValue(e, t, a) {
              e[r.$data] = t;
              if (e[r.$hasSettableValue]()) {
                if (t[r.$isDataValue]()) {
                  var _a335 = t[r.$getDataValue]();
                  e[r.$setValue](createText(_a335));
                } else if (e instanceof i.Field && e.ui && e.ui.choiceList && "multiSelect" === e.ui.choiceList.open) {
                  var _a336 = t[r.$getChildren]().map(function (e) {
                    return e[r.$content].trim();
                  }).join("\n");
                  e[r.$setValue](createText(_a336));
                } else this._isConsumeData() && (0, o.warn)("XFA - Nodes haven't the same type.");
              } else !t[r.$isDataValue]() || this._isMatchTemplate() ? this._bindElement(e, t) : (0, o.warn)("XFA - Nodes haven't the same type.");
            }
          }, {
            key: "_findDataByNameToConsume",
            value: function _findDataByNameToConsume(e, t, a, i) {
              if (!e) return null;
              var n, o;
              for (var _i220 = 0; _i220 < 3; _i220++) {
                n = a[r.$getRealChildrenByNameIt](e, !1, !0);
                for (;;) {
                  o = n.next().value;
                  if (!o) break;
                  if (t === o[r.$isDataValue]()) return o;
                }
                if (a[r.$namespaceId] === s.NamespaceIds.datasets.id && "data" === a[r.$nodeName]) break;
                a = a[r.$getParent]();
              }
              if (!i) return null;
              n = this.data[r.$getRealChildrenByNameIt](e, !0, !1);
              o = n.next().value;
              if (o) return o;
              n = this.data[r.$getAttributeIt](e, !0);
              o = n.next().value;
              return o && o[r.$isDataValue]() ? o : null;
            }
          }, {
            key: "_setProperties",
            value: function _setProperties(e, t) {
              if (e.hasOwnProperty("setProperty")) {
                var _iterator181 = _createForOfIteratorHelper(e.setProperty.children),
                  _step181;
                try {
                  for (_iterator181.s(); !(_step181 = _iterator181.n()).done;) {
                    var _step181$value = _step181.value,
                      _a337 = _step181$value.ref,
                      _s118 = _step181$value.target,
                      _c53 = _step181$value.connection;
                    if (_c53) continue;
                    if (!_a337) continue;
                    var l = (0, n.searchNode)(this.root, t, _a337, !1, !1);
                    if (!l) {
                      (0, o.warn)("XFA - Invalid reference: ".concat(_a337, "."));
                      continue;
                    }
                    var _l33 = _slicedToArray(l, 1),
                      _h35 = _l33[0];
                    if (!_h35[r.$isDescendent](this.data)) {
                      (0, o.warn)("XFA - Invalid node: must be a data node.");
                      continue;
                    }
                    var u = (0, n.searchNode)(this.root, e, _s118, !1, !1);
                    if (!u) {
                      (0, o.warn)("XFA - Invalid target: ".concat(_s118, "."));
                      continue;
                    }
                    var _u24 = _slicedToArray(u, 1),
                      d = _u24[0];
                    if (!d[r.$isDescendent](e)) {
                      (0, o.warn)("XFA - Invalid target: must be a property or subproperty.");
                      continue;
                    }
                    var _f23 = d[r.$getParent]();
                    if (d instanceof i.SetProperty || _f23 instanceof i.SetProperty) {
                      (0, o.warn)("XFA - Invalid target: cannot be a setProperty or one of its properties.");
                      continue;
                    }
                    if (d instanceof i.BindItems || _f23 instanceof i.BindItems) {
                      (0, o.warn)("XFA - Invalid target: cannot be a bindItems or one of its properties.");
                      continue;
                    }
                    var _g21 = _h35[r.$text](),
                      _p16 = d[r.$nodeName];
                    if (d instanceof r.XFAAttribute) {
                      var _e562 = Object.create(null);
                      _e562[_p16] = _g21;
                      var _t417 = Reflect.construct(Object.getPrototypeOf(_f23).constructor, [_e562]);
                      _f23[_p16] = _t417[_p16];
                    } else if (d.hasOwnProperty(r.$content)) {
                      d[r.$data] = _h35;
                      d[r.$content] = _g21;
                      d[r.$finalize]();
                    } else (0, o.warn)("XFA - Invalid node to use in setProperty");
                  }
                } catch (err) {
                  _iterator181.e(err);
                } finally {
                  _iterator181.f();
                }
              }
            }
          }, {
            key: "_bindItems",
            value: function _bindItems(e, t) {
              if (!e.hasOwnProperty("items") || !e.hasOwnProperty("bindItems") || e.bindItems.isEmpty()) return;
              var _iterator182 = _createForOfIteratorHelper(e.items.children),
                _step182;
              try {
                for (_iterator182.s(); !(_step182 = _iterator182.n()).done;) {
                  var _t418 = _step182.value;
                  e[r.$removeChild](_t418);
                }
              } catch (err) {
                _iterator182.e(err);
              } finally {
                _iterator182.f();
              }
              e.items.clear();
              var a = new i.Items({}),
                s = new i.Items({});
              e[r.$appendChild](a);
              e.items.push(a);
              e[r.$appendChild](s);
              e.items.push(s);
              var _iterator183 = _createForOfIteratorHelper(e.bindItems.children),
                _step183;
              try {
                for (_iterator183.s(); !(_step183 = _iterator183.n()).done;) {
                  var _step183$value = _step183.value,
                    _i221 = _step183$value.ref,
                    _c54 = _step183$value.labelRef,
                    l = _step183$value.valueRef,
                    _h36 = _step183$value.connection;
                  if (_h36) continue;
                  if (!_i221) continue;
                  var _e563 = (0, n.searchNode)(this.root, t, _i221, !1, !1);
                  if (_e563) {
                    var _iterator184 = _createForOfIteratorHelper(_e563),
                      _step184;
                    try {
                      for (_iterator184.s(); !(_step184 = _iterator184.n()).done;) {
                        var _t419 = _step184.value;
                        if (!_t419[r.$isDescendent](this.datasets)) {
                          (0, o.warn)("XFA - Invalid ref (".concat(_i221, "): must be a datasets child."));
                          continue;
                        }
                        var _e564 = (0, n.searchNode)(this.root, _t419, _c54, !0, !1);
                        if (!_e564) {
                          (0, o.warn)("XFA - Invalid label: ".concat(_c54, "."));
                          continue;
                        }
                        var _e565 = _slicedToArray(_e564, 1),
                          _h37 = _e565[0];
                        if (!_h37[r.$isDescendent](this.datasets)) {
                          (0, o.warn)("XFA - Invalid label: must be a datasets child.");
                          continue;
                        }
                        var u = (0, n.searchNode)(this.root, _t419, l, !0, !1);
                        if (!u) {
                          (0, o.warn)("XFA - Invalid value: ".concat(l, "."));
                          continue;
                        }
                        var _u25 = _slicedToArray(u, 1),
                          d = _u25[0];
                        if (!d[r.$isDescendent](this.datasets)) {
                          (0, o.warn)("XFA - Invalid value: must be a datasets child.");
                          continue;
                        }
                        var _f24 = createText(_h37[r.$text]()),
                          _g22 = createText(d[r.$text]());
                        a[r.$appendChild](_f24);
                        a.text.push(_f24);
                        s[r.$appendChild](_g22);
                        s.text.push(_g22);
                      }
                    } catch (err) {
                      _iterator184.e(err);
                    } finally {
                      _iterator184.f();
                    }
                  } else (0, o.warn)("XFA - Invalid reference: ".concat(_i221, "."));
                }
              } catch (err) {
                _iterator183.e(err);
              } finally {
                _iterator183.f();
              }
            }
          }, {
            key: "_bindOccurrences",
            value: function _bindOccurrences(e, t, a) {
              var i;
              if (t.length > 1) {
                i = e[r.$clone]();
                i[r.$removeChild](i.occur);
                i.occur = null;
              }
              this._bindValue(e, t[0], a);
              this._setProperties(e, t[0]);
              this._bindItems(e, t[0]);
              if (1 === t.length) return;
              var n = e[r.$getParent](),
                s = e[r.$nodeName],
                o = n[r.$indexOf](e);
              for (var _e566 = 1, _c55 = t.length; _e566 < _c55; _e566++) {
                var _c56 = t[_e566],
                  l = i[r.$clone]();
                n[s].push(l);
                n[r.$insertAt](o + _e566, l);
                this._bindValue(l, _c56, a);
                this._setProperties(l, _c56);
                this._bindItems(l, _c56);
              }
            }
          }, {
            key: "_createOccurrences",
            value: function _createOccurrences(e) {
              if (!this.emptyMerge) return;
              var t = e.occur;
              if (!t || t.initial <= 1) return;
              var a = e[r.$getParent](),
                i = e[r.$nodeName];
              if (!(a[i] instanceof r.XFAObjectArray)) return;
              var n;
              n = e.name ? a[i].children.filter(function (t) {
                return t.name === e.name;
              }).length : a[i].children.length;
              var s = a[r.$indexOf](e) + 1,
                o = t.initial - n;
              if (o) {
                var _t420 = e[r.$clone]();
                _t420[r.$removeChild](_t420.occur);
                _t420.occur = null;
                a[i].push(_t420);
                a[r.$insertAt](s, _t420);
                for (var _e567 = 1; _e567 < o; _e567++) {
                  var _n146 = _t420[r.$clone]();
                  a[i].push(_n146);
                  a[r.$insertAt](s + _e567, _n146);
                }
              }
            }
          }, {
            key: "_getOccurInfo",
            value: function _getOccurInfo(e) {
              var t = e.name,
                a = e.occur;
              if (!a || !t) return [1, 1];
              var r = -1 === a.max ? 1 / 0 : a.max;
              return [a.min, r];
            }
          }, {
            key: "_setAndBind",
            value: function _setAndBind(e, t) {
              this._setProperties(e, t);
              this._bindItems(e, t);
              this._bindElement(e, t);
            }
          }, {
            key: "_bindElement",
            value: function _bindElement(e, t) {
              var a = [];
              this._createOccurrences(e);
              var _iterator185 = _createForOfIteratorHelper(e[r.$getChildren]()),
                _step185;
              try {
                for (_iterator185.s(); !(_step185 = _iterator185.n()).done;) {
                  var _i222 = _step185.value;
                  if (_i222[r.$data]) continue;
                  if (void 0 === this._mergeMode && "subform" === _i222[r.$nodeName]) {
                    this._mergeMode = "consumeData" === _i222.mergeMode;
                    var _e568 = t[r.$getChildren]();
                    if (_e568.length > 0) this._bindOccurrences(_i222, [_e568[0]], null);else if (this.emptyMerge) {
                      var _e569 = t[r.$namespaceId] === c ? -1 : t[r.$namespaceId],
                        _a338 = _i222[r.$data] = new r.XmlObject(_e569, _i222.name || "root");
                      t[r.$appendChild](_a338);
                      this._bindElement(_i222, _a338);
                    }
                    continue;
                  }
                  if (!_i222[r.$isBindable]()) continue;
                  var _e570 = !1,
                    _s119 = null,
                    l = null,
                    _h38 = null;
                  if (_i222.bind) {
                    switch (_i222.bind.match) {
                      case "none":
                        this._setAndBind(_i222, t);
                        continue;
                      case "global":
                        _e570 = !0;
                        break;
                      case "dataRef":
                        if (!_i222.bind.ref) {
                          (0, o.warn)("XFA - ref is empty in node ".concat(_i222[r.$nodeName], "."));
                          this._setAndBind(_i222, t);
                          continue;
                        }
                        l = _i222.bind.ref;
                    }
                    _i222.bind.picture && (_s119 = _i222.bind.picture[r.$content]);
                  }
                  var _this$_getOccurInfo = this._getOccurInfo(_i222),
                    _this$_getOccurInfo2 = _slicedToArray(_this$_getOccurInfo, 2),
                    u = _this$_getOccurInfo2[0],
                    d = _this$_getOccurInfo2[1];
                  if (l) {
                    _h38 = (0, n.searchNode)(this.root, t, l, !0, !1);
                    if (null === _h38) {
                      _h38 = (0, n.createDataNode)(this.data, t, l);
                      if (!_h38) continue;
                      this._isConsumeData() && (_h38[r.$consumed] = !0);
                      this._setAndBind(_i222, _h38);
                      continue;
                    }
                    this._isConsumeData() && (_h38 = _h38.filter(function (e) {
                      return !e[r.$consumed];
                    }));
                    _h38.length > d ? _h38 = _h38.slice(0, d) : 0 === _h38.length && (_h38 = null);
                    _h38 && this._isConsumeData() && _h38.forEach(function (e) {
                      e[r.$consumed] = !0;
                    });
                  } else {
                    if (!_i222.name) {
                      this._setAndBind(_i222, t);
                      continue;
                    }
                    if (this._isConsumeData()) {
                      var _a339 = [];
                      for (; _a339.length < d;) {
                        var _n147 = this._findDataByNameToConsume(_i222.name, _i222[r.$hasSettableValue](), t, _e570);
                        if (!_n147) break;
                        _n147[r.$consumed] = !0;
                        _a339.push(_n147);
                      }
                      _h38 = _a339.length > 0 ? _a339 : null;
                    } else {
                      _h38 = t[r.$getRealChildrenByNameIt](_i222.name, !1, this.emptyMerge).next().value;
                      if (!_h38) {
                        if (0 === u) {
                          a.push(_i222);
                          continue;
                        }
                        var _e571 = t[r.$namespaceId] === c ? -1 : t[r.$namespaceId];
                        _h38 = _i222[r.$data] = new r.XmlObject(_e571, _i222.name);
                        this.emptyMerge && (_h38[r.$consumed] = !0);
                        t[r.$appendChild](_h38);
                        this._setAndBind(_i222, _h38);
                        continue;
                      }
                      this.emptyMerge && (_h38[r.$consumed] = !0);
                      _h38 = [_h38];
                    }
                  }
                  _h38 ? this._bindOccurrences(_i222, _h38, _s119) : u > 0 ? this._setAndBind(_i222, t) : a.push(_i222);
                }
              } catch (err) {
                _iterator185.e(err);
              } finally {
                _iterator185.f();
              }
              a.forEach(function (e) {
                return e[r.$getParent]()[r.$removeChild](e);
              });
            }
          }]);
          return Binder;
        }();
      }, function (e, t, a) {
        var _marked = /*#__PURE__*/_regeneratorRuntime().mark(getContainedChildren);
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.Value = t.Text = t.TemplateNamespace = t.Template = t.SetProperty = t.Items = t.Field = t.BindItems = void 0;
        var r = a(77),
          i = a(79),
          n = a(83),
          s = a(84),
          o = a(78),
          c = a(2),
          l = a(85),
          h = a(3),
          u = a(80);
        var d = i.NamespaceIds.template.id,
          f = "http://www.w3.org/2000/svg",
          g = /^H(\d+)$/,
          p = new Set(["image/gif", "image/jpeg", "image/jpg", "image/pjpeg", "image/png", "image/apng", "image/x-png", "image/bmp", "image/x-ms-bmp", "image/tiff", "image/tif", "application/octet-stream"]),
          m = [[[66, 77], "image/bmp"], [[255, 216, 255], "image/jpeg"], [[73, 73, 42, 0], "image/tiff"], [[77, 77, 0, 42], "image/tiff"], [[71, 73, 70, 56, 57, 97], "image/gif"], [[137, 80, 78, 71, 13, 10, 26, 10], "image/png"]];
        function getBorderDims(e) {
          if (!e || !e.border) return {
            w: 0,
            h: 0
          };
          var t = e.border[r.$getExtra]();
          return t ? {
            w: t.widths[0] + t.widths[2] + t.insets[0] + t.insets[2],
            h: t.widths[1] + t.widths[3] + t.insets[1] + t.insets[3]
          } : {
            w: 0,
            h: 0
          };
        }
        function hasMargin(e) {
          return e.margin && (e.margin.topInset || e.margin.rightInset || e.margin.bottomInset || e.margin.leftInset);
        }
        function _setValue(e, t) {
          if (!e.value) {
            var _t421 = new Value({});
            e[r.$appendChild](_t421);
            e.value = _t421;
          }
          e.value[r.$setValue](t);
        }
        function getContainedChildren(e) {
          var _iterator186, _step186, _t422;
          return _regeneratorRuntime().wrap(function getContainedChildren$(_context73) {
            while (1) switch (_context73.prev = _context73.next) {
              case 0:
                _iterator186 = _createForOfIteratorHelper(e[r.$getChildren]());
                _context73.prev = 1;
                _iterator186.s();
              case 3:
                if ((_step186 = _iterator186.n()).done) {
                  _context73.next = 13;
                  break;
                }
                _t422 = _step186.value;
                if (!(_t422 instanceof SubformSet)) {
                  _context73.next = 9;
                  break;
                }
                return _context73.delegateYield(_t422[r.$getContainedChildren](), "t0", 7);
              case 7:
                _context73.next = 11;
                break;
              case 9:
                _context73.next = 11;
                return _t422;
              case 11:
                _context73.next = 3;
                break;
              case 13:
                _context73.next = 18;
                break;
              case 15:
                _context73.prev = 15;
                _context73.t1 = _context73["catch"](1);
                _iterator186.e(_context73.t1);
              case 18:
                _context73.prev = 18;
                _iterator186.f();
                return _context73.finish(18);
              case 21:
              case "end":
                return _context73.stop();
            }
          }, _marked, null, [[1, 15, 18, 21]]);
        }
        function isRequired(e) {
          return e.validate && "error" === e.validate.nullTest;
        }
        function setTabIndex(e) {
          for (; e;) {
            if (!e.traversal) {
              e[r.$tabIndex] = e[r.$getParent]()[r.$tabIndex];
              return;
            }
            if (e[r.$tabIndex]) return;
            var _t423 = null;
            var _iterator187 = _createForOfIteratorHelper(e.traversal[r.$getChildren]()),
              _step187;
            try {
              for (_iterator187.s(); !(_step187 = _iterator187.n()).done;) {
                var _a341 = _step187.value;
                if ("next" === _a341.operation) {
                  _t423 = _a341;
                  break;
                }
              }
            } catch (err) {
              _iterator187.e(err);
            } finally {
              _iterator187.f();
            }
            if (!_t423 || !_t423.ref) {
              e[r.$tabIndex] = e[r.$getParent]()[r.$tabIndex];
              return;
            }
            var _a340 = e[r.$getTemplateRoot]();
            e[r.$tabIndex] = ++_a340[r.$tabIndex];
            var _i223 = _a340[r.$searchNode](_t423.ref, e);
            if (!_i223) return;
            e = _i223[0];
          }
        }
        function applyAssist(e, t) {
          var a = e.assist;
          if (a) {
            var _e572 = a[r.$toHTML]();
            _e572 && (t.title = _e572);
            var _i224 = a.role.match(g);
            if (_i224) {
              var _e573 = "heading",
                _a342 = _i224[1];
              t.role = _e573;
              t["aria-level"] = _a342;
            }
          }
          if ("table" === e.layout) t.role = "table";else if ("row" === e.layout) t.role = "row";else {
            var _a343 = e[r.$getParent]();
            "row" === _a343.layout && (_a343.assist && "TH" === _a343.assist.role ? t.role = "columnheader" : t.role = "cell");
          }
        }
        function ariaLabel(e) {
          if (!e.assist) return null;
          var t = e.assist;
          return t.speak && "" !== t.speak[r.$content] ? t.speak[r.$content] : t.toolTip ? t.toolTip[r.$content] : null;
        }
        function valueToHtml(e) {
          return o.HTMLResult.success({
            name: "div",
            attributes: {
              class: ["xfaRich"],
              style: Object.create(null)
            },
            children: [{
              name: "span",
              attributes: {
                style: Object.create(null)
              },
              value: e
            }]
          });
        }
        function setFirstUnsplittable(e) {
          var t = e[r.$getTemplateRoot]();
          if (null === t[r.$extra].firstUnsplittable) {
            t[r.$extra].firstUnsplittable = e;
            t[r.$extra].noLayoutFailure = !0;
          }
        }
        function unsetFirstUnsplittable(e) {
          var t = e[r.$getTemplateRoot]();
          t[r.$extra].firstUnsplittable === e && (t[r.$extra].noLayoutFailure = !1);
        }
        function handleBreak(e) {
          if (e[r.$extra]) return !1;
          e[r.$extra] = Object.create(null);
          if ("auto" === e.targetType) return !1;
          var t = e[r.$getTemplateRoot]();
          var a = null;
          if (e.target) {
            a = t[r.$searchNode](e.target, e[r.$getParent]());
            if (!a) return !1;
            a = a[0];
          }
          var _t$r$$extra = t[r.$extra],
            i = _t$r$$extra.currentPageArea,
            n = _t$r$$extra.currentContentArea;
          if ("pageArea" === e.targetType) {
            a instanceof PageArea || (a = null);
            if (e.startNew) {
              e[r.$extra].target = a || i;
              return !0;
            }
            if (a && a !== i) {
              e[r.$extra].target = a;
              return !0;
            }
            return !1;
          }
          a instanceof ContentArea || (a = null);
          var s = a && a[r.$getParent]();
          var o,
            c = s;
          if (e.startNew) {
            if (a) {
              var _e574 = s.contentArea.children,
                _t424 = _e574.indexOf(n),
                _r268 = _e574.indexOf(a);
              -1 !== _t424 && _t424 < _r268 && (c = null);
              o = _r268 - 1;
            } else o = i.contentArea.children.indexOf(n);
          } else {
            if (!a || a === n) return !1;
            o = s.contentArea.children.indexOf(a) - 1;
            c = s === i ? null : s;
          }
          e[r.$extra].target = c;
          e[r.$extra].index = o;
          return !0;
        }
        function handleOverflow(e, t, a) {
          var i = e[r.$getTemplateRoot](),
            n = i[r.$extra].noLayoutFailure,
            s = t[r.$getSubformParent];
          t[r.$getSubformParent] = function () {
            return e;
          };
          i[r.$extra].noLayoutFailure = !0;
          var o = t[r.$toHTML](a);
          e[r.$addHTML](o.html, o.bbox);
          i[r.$extra].noLayoutFailure = n;
          t[r.$getSubformParent] = s;
        }
        var AppearanceFilter = /*#__PURE__*/function (_r$StringObject) {
          _inherits(AppearanceFilter, _r$StringObject);
          var _super105 = _createSuper(AppearanceFilter);
          function AppearanceFilter(e) {
            var _this106;
            _classCallCheck(this, AppearanceFilter);
            _this106 = _super105.call(this, d, "appearanceFilter");
            _this106.id = e.id || "";
            _this106.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this106.use = e.use || "";
            _this106.usehref = e.usehref || "";
            return _this106;
          }
          return _createClass(AppearanceFilter);
        }(r.StringObject);
        var Arc = /*#__PURE__*/function (_r$XFAObject, _r$$toHTML) {
          _inherits(Arc, _r$XFAObject);
          var _super106 = _createSuper(Arc);
          function Arc(e) {
            var _this107;
            _classCallCheck(this, Arc);
            _this107 = _super106.call(this, d, "arc", !0);
            _this107.circular = (0, o.getInteger)({
              data: e.circular,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this107.hand = (0, o.getStringOption)(e.hand, ["even", "left", "right"]);
            _this107.id = e.id || "";
            _this107.startAngle = (0, o.getFloat)({
              data: e.startAngle,
              defaultValue: 0,
              validate: function validate(e) {
                return !0;
              }
            });
            _this107.sweepAngle = (0, o.getFloat)({
              data: e.sweepAngle,
              defaultValue: 360,
              validate: function validate(e) {
                return !0;
              }
            });
            _this107.use = e.use || "";
            _this107.usehref = e.usehref || "";
            _this107.edge = null;
            _this107.fill = null;
            return _this107;
          }
          _createClass(Arc, [{
            key: _r$$toHTML,
            value: function value() {
              var e = this.edge || new Edge({}),
                t = e[r.$toStyle](),
                a = Object.create(null);
              this.fill && "visible" === this.fill.presence ? Object.assign(a, this.fill[r.$toStyle]()) : a.fill = "transparent";
              a.strokeWidth = (0, s.measureToString)("visible" === e.presence ? e.thickness : 0);
              a.stroke = t.color;
              var i;
              var n = {
                xmlns: f,
                style: {
                  width: "100%",
                  height: "100%",
                  overflow: "visible"
                }
              };
              if (360 === this.sweepAngle) i = {
                name: "ellipse",
                attributes: {
                  xmlns: f,
                  cx: "50%",
                  cy: "50%",
                  rx: "50%",
                  ry: "50%",
                  style: a
                }
              };else {
                var _e575 = this.startAngle * Math.PI / 180,
                  _t425 = this.sweepAngle * Math.PI / 180,
                  _r269 = this.sweepAngle > 180 ? 1 : 0,
                  _s120 = 50 * (1 + Math.cos(_e575)),
                  _o85 = 50 * (1 - Math.sin(_e575)),
                  _c57 = 50 * (1 + Math.cos(_e575 + _t425)),
                  _l34 = 50 * (1 - Math.sin(_e575 + _t425));
                i = {
                  name: "path",
                  attributes: {
                    xmlns: f,
                    d: "M ".concat(_s120, " ").concat(_o85, " A 50 50 0 ").concat(_r269, " 0 ").concat(_c57, " ").concat(_l34),
                    vectorEffect: "non-scaling-stroke",
                    style: a
                  }
                };
                Object.assign(n, {
                  viewBox: "0 0 100 100",
                  preserveAspectRatio: "none"
                });
              }
              var c = {
                name: "svg",
                children: [i],
                attributes: n
              };
              if (hasMargin(this[r.$getParent]()[r.$getParent]())) return o.HTMLResult.success({
                name: "div",
                attributes: {
                  style: {
                    display: "inline",
                    width: "100%",
                    height: "100%"
                  }
                },
                children: [c]
              });
              c.attributes.style.position = "absolute";
              return o.HTMLResult.success(c);
            }
          }]);
          return Arc;
        }(r.XFAObject, r.$toHTML);
        var Area = /*#__PURE__*/function (_r$XFAObject2, _r$$getContainedChild, _r$$isTransparent, _r$$isBindable, _r$$addHTML, _r$$getAvailableSpace, _r$$toHTML2) {
          _inherits(Area, _r$XFAObject2);
          var _super107 = _createSuper(Area);
          function Area(e) {
            var _this108;
            _classCallCheck(this, Area);
            _this108 = _super107.call(this, d, "area", !0);
            _this108.colSpan = (0, o.getInteger)({
              data: e.colSpan,
              defaultValue: 1,
              validate: function validate(e) {
                return e >= 1 || -1 === e;
              }
            });
            _this108.id = e.id || "";
            _this108.name = e.name || "";
            _this108.relevant = (0, o.getRelevant)(e.relevant);
            _this108.use = e.use || "";
            _this108.usehref = e.usehref || "";
            _this108.x = (0, o.getMeasurement)(e.x, "0pt");
            _this108.y = (0, o.getMeasurement)(e.y, "0pt");
            _this108.desc = null;
            _this108.extras = null;
            _this108.area = new r.XFAObjectArray();
            _this108.draw = new r.XFAObjectArray();
            _this108.exObject = new r.XFAObjectArray();
            _this108.exclGroup = new r.XFAObjectArray();
            _this108.field = new r.XFAObjectArray();
            _this108.subform = new r.XFAObjectArray();
            _this108.subformSet = new r.XFAObjectArray();
            return _this108;
          }
          _createClass(Area, [{
            key: _r$$getContainedChild,
            value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {
              return _regeneratorRuntime().wrap(function value$(_context74) {
                while (1) switch (_context74.prev = _context74.next) {
                  case 0:
                    return _context74.delegateYield(getContainedChildren(this), "t0", 1);
                  case 1:
                  case "end":
                    return _context74.stop();
                }
              }, value, this);
            })
          }, {
            key: _r$$isTransparent,
            value: function value() {
              return !0;
            }
          }, {
            key: _r$$isBindable,
            value: function value() {
              return !0;
            }
          }, {
            key: _r$$addHTML,
            value: function value(e, t) {
              var _t426 = _slicedToArray(t, 4),
                a = _t426[0],
                i = _t426[1],
                n = _t426[2],
                s = _t426[3];
              this[r.$extra].width = Math.max(this[r.$extra].width, a + n);
              this[r.$extra].height = Math.max(this[r.$extra].height, i + s);
              this[r.$extra].children.push(e);
            }
          }, {
            key: _r$$getAvailableSpace,
            value: function value() {
              return this[r.$extra].availableSpace;
            }
          }, {
            key: _r$$toHTML2,
            value: function value(e) {
              var t = (0, s.toStyle)(this, "position"),
                a = {
                  style: t,
                  id: this[r.$uid],
                  class: ["xfaArea"]
                };
              (0, s.isPrintOnly)(this) && a.class.push("xfaPrintOnly");
              this.name && (a.xfaName = this.name);
              var i = [];
              this[r.$extra] = {
                children: i,
                width: 0,
                height: 0,
                availableSpace: e
              };
              var n = this[r.$childrenToHTML]({
                filter: new Set(["area", "draw", "field", "exclGroup", "subform", "subformSet"]),
                include: !0
              });
              if (!n.success) {
                if (n.isBreak()) return n;
                delete this[r.$extra];
                return o.HTMLResult.FAILURE;
              }
              t.width = (0, s.measureToString)(this[r.$extra].width);
              t.height = (0, s.measureToString)(this[r.$extra].height);
              var c = {
                  name: "div",
                  attributes: a,
                  children: i
                },
                l = [this.x, this.y, this[r.$extra].width, this[r.$extra].height];
              delete this[r.$extra];
              return o.HTMLResult.success(c, l);
            }
          }]);
          return Area;
        }(r.XFAObject, r.$getContainedChildren, r.$isTransparent, r.$isBindable, r.$addHTML, r.$getAvailableSpace, r.$toHTML);
        var Assist = /*#__PURE__*/function (_r$XFAObject3, _r$$toHTML3) {
          _inherits(Assist, _r$XFAObject3);
          var _super108 = _createSuper(Assist);
          function Assist(e) {
            var _this109;
            _classCallCheck(this, Assist);
            _this109 = _super108.call(this, d, "assist", !0);
            _this109.id = e.id || "";
            _this109.role = e.role || "";
            _this109.use = e.use || "";
            _this109.usehref = e.usehref || "";
            _this109.speak = null;
            _this109.toolTip = null;
            return _this109;
          }
          _createClass(Assist, [{
            key: _r$$toHTML3,
            value: function value() {
              return this.toolTip && this.toolTip[r.$content] ? this.toolTip[r.$content] : null;
            }
          }]);
          return Assist;
        }(r.XFAObject, r.$toHTML);
        var Barcode = /*#__PURE__*/function (_r$XFAObject4) {
          _inherits(Barcode, _r$XFAObject4);
          var _super109 = _createSuper(Barcode);
          function Barcode(e) {
            var _this110;
            _classCallCheck(this, Barcode);
            _this110 = _super109.call(this, d, "barcode", !0);
            _this110.charEncoding = (0, o.getKeyword)({
              data: e.charEncoding ? e.charEncoding.toLowerCase() : "",
              defaultValue: "",
              validate: function validate(e) {
                return ["utf-8", "big-five", "fontspecific", "gbk", "gb-18030", "gb-2312", "ksc-5601", "none", "shift-jis", "ucs-2", "utf-16"].includes(e) || e.match(/iso-8859-\d{2}/);
              }
            });
            _this110.checksum = (0, o.getStringOption)(e.checksum, ["none", "1mod10", "1mod10_1mod11", "2mod10", "auto"]);
            _this110.dataColumnCount = (0, o.getInteger)({
              data: e.dataColumnCount,
              defaultValue: -1,
              validate: function validate(e) {
                return e >= 0;
              }
            });
            _this110.dataLength = (0, o.getInteger)({
              data: e.dataLength,
              defaultValue: -1,
              validate: function validate(e) {
                return e >= 0;
              }
            });
            _this110.dataPrep = (0, o.getStringOption)(e.dataPrep, ["none", "flateCompress"]);
            _this110.dataRowCount = (0, o.getInteger)({
              data: e.dataRowCount,
              defaultValue: -1,
              validate: function validate(e) {
                return e >= 0;
              }
            });
            _this110.endChar = e.endChar || "";
            _this110.errorCorrectionLevel = (0, o.getInteger)({
              data: e.errorCorrectionLevel,
              defaultValue: -1,
              validate: function validate(e) {
                return e >= 0 && e <= 8;
              }
            });
            _this110.id = e.id || "";
            _this110.moduleHeight = (0, o.getMeasurement)(e.moduleHeight, "5mm");
            _this110.moduleWidth = (0, o.getMeasurement)(e.moduleWidth, "0.25mm");
            _this110.printCheckDigit = (0, o.getInteger)({
              data: e.printCheckDigit,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this110.rowColumnRatio = (0, o.getRatio)(e.rowColumnRatio);
            _this110.startChar = e.startChar || "";
            _this110.textLocation = (0, o.getStringOption)(e.textLocation, ["below", "above", "aboveEmbedded", "belowEmbedded", "none"]);
            _this110.truncate = (0, o.getInteger)({
              data: e.truncate,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this110.type = (0, o.getStringOption)(e.type ? e.type.toLowerCase() : "", ["aztec", "codabar", "code2of5industrial", "code2of5interleaved", "code2of5matrix", "code2of5standard", "code3of9", "code3of9extended", "code11", "code49", "code93", "code128", "code128a", "code128b", "code128c", "code128sscc", "datamatrix", "ean8", "ean8add2", "ean8add5", "ean13", "ean13add2", "ean13add5", "ean13pwcd", "fim", "logmars", "maxicode", "msi", "pdf417", "pdf417macro", "plessey", "postauscust2", "postauscust3", "postausreplypaid", "postausstandard", "postukrm4scc", "postusdpbc", "postusimb", "postusstandard", "postus5zip", "qrcode", "rfid", "rss14", "rss14expanded", "rss14limited", "rss14stacked", "rss14stackedomni", "rss14truncated", "telepen", "ucc128", "ucc128random", "ucc128sscc", "upca", "upcaadd2", "upcaadd5", "upcapwcd", "upce", "upceadd2", "upceadd5", "upcean2", "upcean5", "upsmaxicode"]);
            _this110.upsMode = (0, o.getStringOption)(e.upsMode, ["usCarrier", "internationalCarrier", "secureSymbol", "standardSymbol"]);
            _this110.use = e.use || "";
            _this110.usehref = e.usehref || "";
            _this110.wideNarrowRatio = (0, o.getRatio)(e.wideNarrowRatio);
            _this110.encrypt = null;
            _this110.extras = null;
            return _this110;
          }
          return _createClass(Barcode);
        }(r.XFAObject);
        var Bind = /*#__PURE__*/function (_r$XFAObject5) {
          _inherits(Bind, _r$XFAObject5);
          var _super110 = _createSuper(Bind);
          function Bind(e) {
            var _this111;
            _classCallCheck(this, Bind);
            _this111 = _super110.call(this, d, "bind", !0);
            _this111.match = (0, o.getStringOption)(e.match, ["once", "dataRef", "global", "none"]);
            _this111.ref = e.ref || "";
            _this111.picture = null;
            return _this111;
          }
          return _createClass(Bind);
        }(r.XFAObject);
        var BindItems = /*#__PURE__*/function (_r$XFAObject6) {
          _inherits(BindItems, _r$XFAObject6);
          var _super111 = _createSuper(BindItems);
          function BindItems(e) {
            var _this112;
            _classCallCheck(this, BindItems);
            _this112 = _super111.call(this, d, "bindItems");
            _this112.connection = e.connection || "";
            _this112.labelRef = e.labelRef || "";
            _this112.ref = e.ref || "";
            _this112.valueRef = e.valueRef || "";
            return _this112;
          }
          return _createClass(BindItems);
        }(r.XFAObject);
        t.BindItems = BindItems;
        var Bookend = /*#__PURE__*/function (_r$XFAObject7) {
          _inherits(Bookend, _r$XFAObject7);
          var _super112 = _createSuper(Bookend);
          function Bookend(e) {
            var _this113;
            _classCallCheck(this, Bookend);
            _this113 = _super112.call(this, d, "bookend");
            _this113.id = e.id || "";
            _this113.leader = e.leader || "";
            _this113.trailer = e.trailer || "";
            _this113.use = e.use || "";
            _this113.usehref = e.usehref || "";
            return _this113;
          }
          return _createClass(Bookend);
        }(r.XFAObject);
        var BooleanElement = /*#__PURE__*/function (_r$Option, _r$$toHTML4) {
          _inherits(BooleanElement, _r$Option);
          var _super113 = _createSuper(BooleanElement);
          function BooleanElement(e) {
            var _this114;
            _classCallCheck(this, BooleanElement);
            _this114 = _super113.call(this, d, "boolean");
            _this114.id = e.id || "";
            _this114.name = e.name || "";
            _this114.use = e.use || "";
            _this114.usehref = e.usehref || "";
            return _this114;
          }
          _createClass(BooleanElement, [{
            key: _r$$toHTML4,
            value: function value(e) {
              return valueToHtml(1 === this[r.$content] ? "1" : "0");
            }
          }]);
          return BooleanElement;
        }(r.Option01, r.$toHTML);
        var Border = /*#__PURE__*/function (_r$XFAObject8, _r$$getExtra, _r$$toStyle) {
          _inherits(Border, _r$XFAObject8);
          var _super114 = _createSuper(Border);
          function Border(e) {
            var _this115;
            _classCallCheck(this, Border);
            _this115 = _super114.call(this, d, "border", !0);
            _this115.break = (0, o.getStringOption)(e.break, ["close", "open"]);
            _this115.hand = (0, o.getStringOption)(e.hand, ["even", "left", "right"]);
            _this115.id = e.id || "";
            _this115.presence = (0, o.getStringOption)(e.presence, ["visible", "hidden", "inactive", "invisible"]);
            _this115.relevant = (0, o.getRelevant)(e.relevant);
            _this115.use = e.use || "";
            _this115.usehref = e.usehref || "";
            _this115.corner = new r.XFAObjectArray(4);
            _this115.edge = new r.XFAObjectArray(4);
            _this115.extras = null;
            _this115.fill = null;
            _this115.margin = null;
            return _this115;
          }
          _createClass(Border, [{
            key: _r$$getExtra,
            value: function value() {
              if (!this[r.$extra]) {
                var _e576 = this.edge.children.slice();
                if (_e576.length < 4) {
                  var _t427 = _e576.at(-1) || new Edge({});
                  for (var _a344 = _e576.length; _a344 < 4; _a344++) _e576.push(_t427);
                }
                var _t428 = _e576.map(function (e) {
                    return e.thickness;
                  }),
                  _a345 = [0, 0, 0, 0];
                if (this.margin) {
                  _a345[0] = this.margin.topInset;
                  _a345[1] = this.margin.rightInset;
                  _a345[2] = this.margin.bottomInset;
                  _a345[3] = this.margin.leftInset;
                }
                this[r.$extra] = {
                  widths: _t428,
                  insets: _a345,
                  edges: _e576
                };
              }
              return this[r.$extra];
            }
          }, {
            key: _r$$toStyle,
            value: function value() {
              var _this$r$$getExtra = this[r.$getExtra](),
                e = _this$r$$getExtra.edges,
                t = e.map(function (e) {
                  var t = e[r.$toStyle]();
                  t.color = t.color || "#000000";
                  return t;
                }),
                a = Object.create(null);
              this.margin && Object.assign(a, this.margin[r.$toStyle]());
              this.fill && "visible" === this.fill.presence && Object.assign(a, this.fill[r.$toStyle]());
              if (this.corner.children.some(function (e) {
                return 0 !== e.radius;
              })) {
                var _e577 = this.corner.children.map(function (e) {
                  return e[r.$toStyle]();
                });
                if (2 === _e577.length || 3 === _e577.length) {
                  var _t429 = _e577.at(-1);
                  for (var _a346 = _e577.length; _a346 < 4; _a346++) _e577.push(_t429);
                }
                a.borderRadius = _e577.map(function (e) {
                  return e.radius;
                }).join(" ");
              }
              switch (this.presence) {
                case "invisible":
                case "hidden":
                  a.borderStyle = "";
                  break;
                case "inactive":
                  a.borderStyle = "none";
                  break;
                default:
                  a.borderStyle = t.map(function (e) {
                    return e.style;
                  }).join(" ");
              }
              a.borderWidth = t.map(function (e) {
                return e.width;
              }).join(" ");
              a.borderColor = t.map(function (e) {
                return e.color;
              }).join(" ");
              return a;
            }
          }]);
          return Border;
        }(r.XFAObject, r.$getExtra, r.$toStyle);
        var Break = /*#__PURE__*/function (_r$XFAObject9) {
          _inherits(Break, _r$XFAObject9);
          var _super115 = _createSuper(Break);
          function Break(e) {
            var _this116;
            _classCallCheck(this, Break);
            _this116 = _super115.call(this, d, "break", !0);
            _this116.after = (0, o.getStringOption)(e.after, ["auto", "contentArea", "pageArea", "pageEven", "pageOdd"]);
            _this116.afterTarget = e.afterTarget || "";
            _this116.before = (0, o.getStringOption)(e.before, ["auto", "contentArea", "pageArea", "pageEven", "pageOdd"]);
            _this116.beforeTarget = e.beforeTarget || "";
            _this116.bookendLeader = e.bookendLeader || "";
            _this116.bookendTrailer = e.bookendTrailer || "";
            _this116.id = e.id || "";
            _this116.overflowLeader = e.overflowLeader || "";
            _this116.overflowTarget = e.overflowTarget || "";
            _this116.overflowTrailer = e.overflowTrailer || "";
            _this116.startNew = (0, o.getInteger)({
              data: e.startNew,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this116.use = e.use || "";
            _this116.usehref = e.usehref || "";
            _this116.extras = null;
            return _this116;
          }
          return _createClass(Break);
        }(r.XFAObject);
        var BreakAfter = /*#__PURE__*/function (_r$XFAObject10) {
          _inherits(BreakAfter, _r$XFAObject10);
          var _super116 = _createSuper(BreakAfter);
          function BreakAfter(e) {
            var _this117;
            _classCallCheck(this, BreakAfter);
            _this117 = _super116.call(this, d, "breakAfter", !0);
            _this117.id = e.id || "";
            _this117.leader = e.leader || "";
            _this117.startNew = (0, o.getInteger)({
              data: e.startNew,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this117.target = e.target || "";
            _this117.targetType = (0, o.getStringOption)(e.targetType, ["auto", "contentArea", "pageArea"]);
            _this117.trailer = e.trailer || "";
            _this117.use = e.use || "";
            _this117.usehref = e.usehref || "";
            _this117.script = null;
            return _this117;
          }
          return _createClass(BreakAfter);
        }(r.XFAObject);
        var BreakBefore = /*#__PURE__*/function (_r$XFAObject11, _r$$toHTML5) {
          _inherits(BreakBefore, _r$XFAObject11);
          var _super117 = _createSuper(BreakBefore);
          function BreakBefore(e) {
            var _this118;
            _classCallCheck(this, BreakBefore);
            _this118 = _super117.call(this, d, "breakBefore", !0);
            _this118.id = e.id || "";
            _this118.leader = e.leader || "";
            _this118.startNew = (0, o.getInteger)({
              data: e.startNew,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this118.target = e.target || "";
            _this118.targetType = (0, o.getStringOption)(e.targetType, ["auto", "contentArea", "pageArea"]);
            _this118.trailer = e.trailer || "";
            _this118.use = e.use || "";
            _this118.usehref = e.usehref || "";
            _this118.script = null;
            return _this118;
          }
          _createClass(BreakBefore, [{
            key: _r$$toHTML5,
            value: function value(e) {
              this[r.$extra] = {};
              return o.HTMLResult.FAILURE;
            }
          }]);
          return BreakBefore;
        }(r.XFAObject, r.$toHTML);
        var Button = /*#__PURE__*/function (_r$XFAObject12, _r$$toHTML6) {
          _inherits(Button, _r$XFAObject12);
          var _super118 = _createSuper(Button);
          function Button(e) {
            var _this119;
            _classCallCheck(this, Button);
            _this119 = _super118.call(this, d, "button", !0);
            _this119.highlight = (0, o.getStringOption)(e.highlight, ["inverted", "none", "outline", "push"]);
            _this119.id = e.id || "";
            _this119.use = e.use || "";
            _this119.usehref = e.usehref || "";
            _this119.extras = null;
            return _this119;
          }
          _createClass(Button, [{
            key: _r$$toHTML6,
            value: function value(e) {
              var t = this[r.$getParent]()[r.$getParent](),
                a = {
                  name: "button",
                  attributes: {
                    id: this[r.$uid],
                    class: ["xfaButton"],
                    style: {}
                  },
                  children: []
                };
              var _iterator188 = _createForOfIteratorHelper(t.event.children),
                _step188;
              try {
                for (_iterator188.s(); !(_step188 = _iterator188.n()).done;) {
                  var _e578 = _step188.value;
                  if ("click" !== _e578.activity || !_e578.script) continue;
                  var _t430 = (0, h.recoverJsURL)(_e578.script[r.$content]);
                  if (!_t430) continue;
                  var _i225 = (0, s.fixURL)(_t430.url);
                  _i225 && a.children.push({
                    name: "a",
                    attributes: {
                      id: "link" + this[r.$uid],
                      href: _i225,
                      newWindow: _t430.newWindow,
                      class: ["xfaLink"],
                      style: {}
                    },
                    children: []
                  });
                }
              } catch (err) {
                _iterator188.e(err);
              } finally {
                _iterator188.f();
              }
              return o.HTMLResult.success(a);
            }
          }]);
          return Button;
        }(r.XFAObject, r.$toHTML);
        var Calculate = /*#__PURE__*/function (_r$XFAObject13) {
          _inherits(Calculate, _r$XFAObject13);
          var _super119 = _createSuper(Calculate);
          function Calculate(e) {
            var _this120;
            _classCallCheck(this, Calculate);
            _this120 = _super119.call(this, d, "calculate", !0);
            _this120.id = e.id || "";
            _this120.override = (0, o.getStringOption)(e.override, ["disabled", "error", "ignore", "warning"]);
            _this120.use = e.use || "";
            _this120.usehref = e.usehref || "";
            _this120.extras = null;
            _this120.message = null;
            _this120.script = null;
            return _this120;
          }
          return _createClass(Calculate);
        }(r.XFAObject);
        var Caption = /*#__PURE__*/function (_r$XFAObject14, _r$$setValue, _r$$getExtra2, _r$$toHTML7) {
          _inherits(Caption, _r$XFAObject14);
          var _super120 = _createSuper(Caption);
          function Caption(e) {
            var _this121;
            _classCallCheck(this, Caption);
            _this121 = _super120.call(this, d, "caption", !0);
            _this121.id = e.id || "";
            _this121.placement = (0, o.getStringOption)(e.placement, ["left", "bottom", "inline", "right", "top"]);
            _this121.presence = (0, o.getStringOption)(e.presence, ["visible", "hidden", "inactive", "invisible"]);
            _this121.reserve = Math.ceil((0, o.getMeasurement)(e.reserve));
            _this121.use = e.use || "";
            _this121.usehref = e.usehref || "";
            _this121.extras = null;
            _this121.font = null;
            _this121.margin = null;
            _this121.para = null;
            _this121.value = null;
            return _this121;
          }
          _createClass(Caption, [{
            key: _r$$setValue,
            value: function value(e) {
              _setValue(this, e);
            }
          }, {
            key: _r$$getExtra2,
            value: function value(e) {
              if (!this[r.$extra]) {
                var _t431 = e.width,
                  _a347 = e.height;
                switch (this.placement) {
                  case "left":
                  case "right":
                  case "inline":
                    _t431 = this.reserve <= 0 ? _t431 : this.reserve;
                    break;
                  case "top":
                  case "bottom":
                    _a347 = this.reserve <= 0 ? _a347 : this.reserve;
                }
                this[r.$extra] = (0, s.layoutNode)(this, {
                  width: _t431,
                  height: _a347
                });
              }
              return this[r.$extra];
            }
          }, {
            key: _r$$toHTML7,
            value: function value(e) {
              if (!this.value) return o.HTMLResult.EMPTY;
              this[r.$pushPara]();
              var t = this.value[r.$toHTML](e).html;
              if (!t) {
                this[r.$popPara]();
                return o.HTMLResult.EMPTY;
              }
              var a = this.reserve;
              if (this.reserve <= 0) {
                var _this$r$$getExtra2 = this[r.$getExtra](e),
                  _t432 = _this$r$$getExtra2.w,
                  _a348 = _this$r$$getExtra2.h;
                switch (this.placement) {
                  case "left":
                  case "right":
                  case "inline":
                    this.reserve = _t432;
                    break;
                  case "top":
                  case "bottom":
                    this.reserve = _a348;
                }
              }
              var i = [];
              "string" == typeof t ? i.push({
                name: "#text",
                value: t
              }) : i.push(t);
              var n = (0, s.toStyle)(this, "font", "margin", "visibility");
              switch (this.placement) {
                case "left":
                case "right":
                  this.reserve > 0 && (n.width = (0, s.measureToString)(this.reserve));
                  break;
                case "top":
                case "bottom":
                  this.reserve > 0 && (n.height = (0, s.measureToString)(this.reserve));
              }
              (0, s.setPara)(this, null, t);
              this[r.$popPara]();
              this.reserve = a;
              return o.HTMLResult.success({
                name: "div",
                attributes: {
                  style: n,
                  class: ["xfaCaption"]
                },
                children: i
              });
            }
          }]);
          return Caption;
        }(r.XFAObject, r.$setValue, r.$getExtra, r.$toHTML);
        var Certificate = /*#__PURE__*/function (_r$StringObject2) {
          _inherits(Certificate, _r$StringObject2);
          var _super121 = _createSuper(Certificate);
          function Certificate(e) {
            var _this122;
            _classCallCheck(this, Certificate);
            _this122 = _super121.call(this, d, "certificate");
            _this122.id = e.id || "";
            _this122.name = e.name || "";
            _this122.use = e.use || "";
            _this122.usehref = e.usehref || "";
            return _this122;
          }
          return _createClass(Certificate);
        }(r.StringObject);
        var Certificates = /*#__PURE__*/function (_r$XFAObject15) {
          _inherits(Certificates, _r$XFAObject15);
          var _super122 = _createSuper(Certificates);
          function Certificates(e) {
            var _this123;
            _classCallCheck(this, Certificates);
            _this123 = _super122.call(this, d, "certificates", !0);
            _this123.credentialServerPolicy = (0, o.getStringOption)(e.credentialServerPolicy, ["optional", "required"]);
            _this123.id = e.id || "";
            _this123.url = e.url || "";
            _this123.urlPolicy = e.urlPolicy || "";
            _this123.use = e.use || "";
            _this123.usehref = e.usehref || "";
            _this123.encryption = null;
            _this123.issuers = null;
            _this123.keyUsage = null;
            _this123.oids = null;
            _this123.signing = null;
            _this123.subjectDNs = null;
            return _this123;
          }
          return _createClass(Certificates);
        }(r.XFAObject);
        var CheckButton = /*#__PURE__*/function (_r$XFAObject16, _r$$toHTML8) {
          _inherits(CheckButton, _r$XFAObject16);
          var _super123 = _createSuper(CheckButton);
          function CheckButton(e) {
            var _this124;
            _classCallCheck(this, CheckButton);
            _this124 = _super123.call(this, d, "checkButton", !0);
            _this124.id = e.id || "";
            _this124.mark = (0, o.getStringOption)(e.mark, ["default", "check", "circle", "cross", "diamond", "square", "star"]);
            _this124.shape = (0, o.getStringOption)(e.shape, ["square", "round"]);
            _this124.size = (0, o.getMeasurement)(e.size, "10pt");
            _this124.use = e.use || "";
            _this124.usehref = e.usehref || "";
            _this124.border = null;
            _this124.extras = null;
            _this124.margin = null;
            return _this124;
          }
          _createClass(CheckButton, [{
            key: _r$$toHTML8,
            value: function value(e) {
              var t = (0, s.toStyle)("margin"),
                a = (0, s.measureToString)(this.size);
              t.width = t.height = a;
              var i, n, c;
              var l = this[r.$getParent]()[r.$getParent](),
                h = l.items.children.length && l.items.children[0][r.$toHTML]().html || [],
                u = {
                  on: (void 0 !== h[0] ? h[0] : "on").toString(),
                  off: (void 0 !== h[1] ? h[1] : "off").toString()
                },
                d = (l.value && l.value[r.$text]() || "off") === u.on || void 0,
                f = l[r.$getSubformParent](),
                g = l[r.$uid];
              var p;
              if (f instanceof ExclGroup) {
                c = f[r.$uid];
                i = "radio";
                n = "xfaRadio";
                p = f[r.$data] && f[r.$data][r.$uid] || f[r.$uid];
              } else {
                i = "checkbox";
                n = "xfaCheckbox";
                p = l[r.$data] && l[r.$data][r.$uid] || l[r.$uid];
              }
              var m = {
                name: "input",
                attributes: {
                  class: [n],
                  style: t,
                  fieldId: g,
                  dataId: p,
                  type: i,
                  checked: d,
                  xfaOn: u.on,
                  xfaOff: u.off,
                  "aria-label": ariaLabel(l),
                  "aria-required": !1
                }
              };
              c && (m.attributes.name = c);
              if (isRequired(l)) {
                m.attributes["aria-required"] = !0;
                m.attributes.required = !0;
              }
              return o.HTMLResult.success({
                name: "label",
                attributes: {
                  class: ["xfaLabel"]
                },
                children: [m]
              });
            }
          }]);
          return CheckButton;
        }(r.XFAObject, r.$toHTML);
        var ChoiceList = /*#__PURE__*/function (_r$XFAObject17, _r$$toHTML9) {
          _inherits(ChoiceList, _r$XFAObject17);
          var _super124 = _createSuper(ChoiceList);
          function ChoiceList(e) {
            var _this125;
            _classCallCheck(this, ChoiceList);
            _this125 = _super124.call(this, d, "choiceList", !0);
            _this125.commitOn = (0, o.getStringOption)(e.commitOn, ["select", "exit"]);
            _this125.id = e.id || "";
            _this125.open = (0, o.getStringOption)(e.open, ["userControl", "always", "multiSelect", "onEntry"]);
            _this125.textEntry = (0, o.getInteger)({
              data: e.textEntry,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this125.use = e.use || "";
            _this125.usehref = e.usehref || "";
            _this125.border = null;
            _this125.extras = null;
            _this125.margin = null;
            return _this125;
          }
          _createClass(ChoiceList, [{
            key: _r$$toHTML9,
            value: function value(e) {
              var t = (0, s.toStyle)(this, "border", "margin"),
                a = this[r.$getParent]()[r.$getParent](),
                i = {
                  fontSize: "calc(".concat(a.font && a.font.size || 10, "px * var(--scale-factor))")
                },
                n = [];
              if (a.items.children.length > 0) {
                var _e579 = a.items;
                var _t433 = 0,
                  _s121 = 0;
                if (2 === _e579.children.length) {
                  _t433 = _e579.children[0].save;
                  _s121 = 1 - _t433;
                }
                var _o86 = _e579.children[_t433][r.$toHTML]().html,
                  _c58 = _e579.children[_s121][r.$toHTML]().html;
                var _l35 = !1;
                var _h39 = a.value && a.value[r.$text]() || "";
                for (var _e580 = 0, _t434 = _o86.length; _e580 < _t434; _e580++) {
                  var _t435 = {
                    name: "option",
                    attributes: {
                      value: _c58[_e580] || _o86[_e580],
                      style: i
                    },
                    value: _o86[_e580]
                  };
                  _c58[_e580] === _h39 && (_t435.attributes.selected = _l35 = !0);
                  n.push(_t435);
                }
                _l35 || n.splice(0, 0, {
                  name: "option",
                  attributes: {
                    hidden: !0,
                    selected: !0
                  },
                  value: " "
                });
              }
              var c = {
                class: ["xfaSelect"],
                fieldId: a[r.$uid],
                dataId: a[r.$data] && a[r.$data][r.$uid] || a[r.$uid],
                style: t,
                "aria-label": ariaLabel(a),
                "aria-required": !1
              };
              if (isRequired(a)) {
                c["aria-required"] = !0;
                c.required = !0;
              }
              "multiSelect" === this.open && (c.multiple = !0);
              return o.HTMLResult.success({
                name: "label",
                attributes: {
                  class: ["xfaLabel"]
                },
                children: [{
                  name: "select",
                  children: n,
                  attributes: c
                }]
              });
            }
          }]);
          return ChoiceList;
        }(r.XFAObject, r.$toHTML);
        var Color = /*#__PURE__*/function (_r$XFAObject18, _r$$hasSettableValue, _r$$toStyle2) {
          _inherits(Color, _r$XFAObject18);
          var _super125 = _createSuper(Color);
          function Color(e) {
            var _this126;
            _classCallCheck(this, Color);
            _this126 = _super125.call(this, d, "color", !0);
            _this126.cSpace = (0, o.getStringOption)(e.cSpace, ["SRGB"]);
            _this126.id = e.id || "";
            _this126.use = e.use || "";
            _this126.usehref = e.usehref || "";
            _this126.value = e.value ? (0, o.getColor)(e.value) : "";
            _this126.extras = null;
            return _this126;
          }
          _createClass(Color, [{
            key: _r$$hasSettableValue,
            value: function value() {
              return !1;
            }
          }, {
            key: _r$$toStyle2,
            value: function value() {
              return this.value ? c.Util.makeHexColor(this.value.r, this.value.g, this.value.b) : null;
            }
          }]);
          return Color;
        }(r.XFAObject, r.$hasSettableValue, r.$toStyle);
        var Comb = /*#__PURE__*/function (_r$XFAObject19) {
          _inherits(Comb, _r$XFAObject19);
          var _super126 = _createSuper(Comb);
          function Comb(e) {
            var _this127;
            _classCallCheck(this, Comb);
            _this127 = _super126.call(this, d, "comb");
            _this127.id = e.id || "";
            _this127.numberOfCells = (0, o.getInteger)({
              data: e.numberOfCells,
              defaultValue: 0,
              validate: function validate(e) {
                return e >= 0;
              }
            });
            _this127.use = e.use || "";
            _this127.usehref = e.usehref || "";
            return _this127;
          }
          return _createClass(Comb);
        }(r.XFAObject);
        var Connect = /*#__PURE__*/function (_r$XFAObject20) {
          _inherits(Connect, _r$XFAObject20);
          var _super127 = _createSuper(Connect);
          function Connect(e) {
            var _this128;
            _classCallCheck(this, Connect);
            _this128 = _super127.call(this, d, "connect", !0);
            _this128.connection = e.connection || "";
            _this128.id = e.id || "";
            _this128.ref = e.ref || "";
            _this128.usage = (0, o.getStringOption)(e.usage, ["exportAndImport", "exportOnly", "importOnly"]);
            _this128.use = e.use || "";
            _this128.usehref = e.usehref || "";
            _this128.picture = null;
            return _this128;
          }
          return _createClass(Connect);
        }(r.XFAObject);
        var ContentArea = /*#__PURE__*/function (_r$XFAObject21, _r$$toHTML10) {
          _inherits(ContentArea, _r$XFAObject21);
          var _super128 = _createSuper(ContentArea);
          function ContentArea(e) {
            var _this129;
            _classCallCheck(this, ContentArea);
            _this129 = _super128.call(this, d, "contentArea", !0);
            _this129.h = (0, o.getMeasurement)(e.h);
            _this129.id = e.id || "";
            _this129.name = e.name || "";
            _this129.relevant = (0, o.getRelevant)(e.relevant);
            _this129.use = e.use || "";
            _this129.usehref = e.usehref || "";
            _this129.w = (0, o.getMeasurement)(e.w);
            _this129.x = (0, o.getMeasurement)(e.x, "0pt");
            _this129.y = (0, o.getMeasurement)(e.y, "0pt");
            _this129.desc = null;
            _this129.extras = null;
            return _this129;
          }
          _createClass(ContentArea, [{
            key: _r$$toHTML10,
            value: function value(e) {
              var t = {
                  left: (0, s.measureToString)(this.x),
                  top: (0, s.measureToString)(this.y),
                  width: (0, s.measureToString)(this.w),
                  height: (0, s.measureToString)(this.h)
                },
                a = ["xfaContentarea"];
              (0, s.isPrintOnly)(this) && a.push("xfaPrintOnly");
              return o.HTMLResult.success({
                name: "div",
                children: [],
                attributes: {
                  style: t,
                  class: a,
                  id: this[r.$uid]
                }
              });
            }
          }]);
          return ContentArea;
        }(r.XFAObject, r.$toHTML);
        var Corner = /*#__PURE__*/function (_r$XFAObject22, _r$$toStyle3) {
          _inherits(Corner, _r$XFAObject22);
          var _super129 = _createSuper(Corner);
          function Corner(e) {
            var _this130;
            _classCallCheck(this, Corner);
            _this130 = _super129.call(this, d, "corner", !0);
            _this130.id = e.id || "";
            _this130.inverted = (0, o.getInteger)({
              data: e.inverted,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this130.join = (0, o.getStringOption)(e.join, ["square", "round"]);
            _this130.presence = (0, o.getStringOption)(e.presence, ["visible", "hidden", "inactive", "invisible"]);
            _this130.radius = (0, o.getMeasurement)(e.radius);
            _this130.stroke = (0, o.getStringOption)(e.stroke, ["solid", "dashDot", "dashDotDot", "dashed", "dotted", "embossed", "etched", "lowered", "raised"]);
            _this130.thickness = (0, o.getMeasurement)(e.thickness, "0.5pt");
            _this130.use = e.use || "";
            _this130.usehref = e.usehref || "";
            _this130.color = null;
            _this130.extras = null;
            return _this130;
          }
          _createClass(Corner, [{
            key: _r$$toStyle3,
            value: function value() {
              var e = (0, s.toStyle)(this, "visibility");
              e.radius = (0, s.measureToString)("square" === this.join ? 0 : this.radius);
              return e;
            }
          }]);
          return Corner;
        }(r.XFAObject, r.$toStyle);
        var DateElement = /*#__PURE__*/function (_r$ContentObject, _r$$finalize, _r$$toHTML11) {
          _inherits(DateElement, _r$ContentObject);
          var _super130 = _createSuper(DateElement);
          function DateElement(e) {
            var _this131;
            _classCallCheck(this, DateElement);
            _this131 = _super130.call(this, d, "date");
            _this131.id = e.id || "";
            _this131.name = e.name || "";
            _this131.use = e.use || "";
            _this131.usehref = e.usehref || "";
            return _this131;
          }
          _createClass(DateElement, [{
            key: _r$$finalize,
            value: function value() {
              var e = this[r.$content].trim();
              this[r.$content] = e ? new Date(e) : null;
            }
          }, {
            key: _r$$toHTML11,
            value: function value(e) {
              return valueToHtml(this[r.$content] ? this[r.$content].toString() : "");
            }
          }]);
          return DateElement;
        }(r.ContentObject, r.$finalize, r.$toHTML);
        var DateTime = /*#__PURE__*/function (_r$ContentObject2, _r$$finalize2, _r$$toHTML12) {
          _inherits(DateTime, _r$ContentObject2);
          var _super131 = _createSuper(DateTime);
          function DateTime(e) {
            var _this132;
            _classCallCheck(this, DateTime);
            _this132 = _super131.call(this, d, "dateTime");
            _this132.id = e.id || "";
            _this132.name = e.name || "";
            _this132.use = e.use || "";
            _this132.usehref = e.usehref || "";
            return _this132;
          }
          _createClass(DateTime, [{
            key: _r$$finalize2,
            value: function value() {
              var e = this[r.$content].trim();
              this[r.$content] = e ? new Date(e) : null;
            }
          }, {
            key: _r$$toHTML12,
            value: function value(e) {
              return valueToHtml(this[r.$content] ? this[r.$content].toString() : "");
            }
          }]);
          return DateTime;
        }(r.ContentObject, r.$finalize, r.$toHTML);
        var DateTimeEdit = /*#__PURE__*/function (_r$XFAObject23, _r$$toHTML13) {
          _inherits(DateTimeEdit, _r$XFAObject23);
          var _super132 = _createSuper(DateTimeEdit);
          function DateTimeEdit(e) {
            var _this133;
            _classCallCheck(this, DateTimeEdit);
            _this133 = _super132.call(this, d, "dateTimeEdit", !0);
            _this133.hScrollPolicy = (0, o.getStringOption)(e.hScrollPolicy, ["auto", "off", "on"]);
            _this133.id = e.id || "";
            _this133.picker = (0, o.getStringOption)(e.picker, ["host", "none"]);
            _this133.use = e.use || "";
            _this133.usehref = e.usehref || "";
            _this133.border = null;
            _this133.comb = null;
            _this133.extras = null;
            _this133.margin = null;
            return _this133;
          }
          _createClass(DateTimeEdit, [{
            key: _r$$toHTML13,
            value: function value(e) {
              var t = (0, s.toStyle)(this, "border", "font", "margin"),
                a = this[r.$getParent]()[r.$getParent](),
                i = {
                  name: "input",
                  attributes: {
                    type: "text",
                    fieldId: a[r.$uid],
                    dataId: a[r.$data] && a[r.$data][r.$uid] || a[r.$uid],
                    class: ["xfaTextfield"],
                    style: t,
                    "aria-label": ariaLabel(a),
                    "aria-required": !1
                  }
                };
              if (isRequired(a)) {
                i.attributes["aria-required"] = !0;
                i.attributes.required = !0;
              }
              return o.HTMLResult.success({
                name: "label",
                attributes: {
                  class: ["xfaLabel"]
                },
                children: [i]
              });
            }
          }]);
          return DateTimeEdit;
        }(r.XFAObject, r.$toHTML);
        var Decimal = /*#__PURE__*/function (_r$ContentObject3, _r$$finalize3, _r$$toHTML14) {
          _inherits(Decimal, _r$ContentObject3);
          var _super133 = _createSuper(Decimal);
          function Decimal(e) {
            var _this134;
            _classCallCheck(this, Decimal);
            _this134 = _super133.call(this, d, "decimal");
            _this134.fracDigits = (0, o.getInteger)({
              data: e.fracDigits,
              defaultValue: 2,
              validate: function validate(e) {
                return !0;
              }
            });
            _this134.id = e.id || "";
            _this134.leadDigits = (0, o.getInteger)({
              data: e.leadDigits,
              defaultValue: -1,
              validate: function validate(e) {
                return !0;
              }
            });
            _this134.name = e.name || "";
            _this134.use = e.use || "";
            _this134.usehref = e.usehref || "";
            return _this134;
          }
          _createClass(Decimal, [{
            key: _r$$finalize3,
            value: function value() {
              var e = parseFloat(this[r.$content].trim());
              this[r.$content] = isNaN(e) ? null : e;
            }
          }, {
            key: _r$$toHTML14,
            value: function value(e) {
              return valueToHtml(null !== this[r.$content] ? this[r.$content].toString() : "");
            }
          }]);
          return Decimal;
        }(r.ContentObject, r.$finalize, r.$toHTML);
        var DefaultUi = /*#__PURE__*/function (_r$XFAObject24) {
          _inherits(DefaultUi, _r$XFAObject24);
          var _super134 = _createSuper(DefaultUi);
          function DefaultUi(e) {
            var _this135;
            _classCallCheck(this, DefaultUi);
            _this135 = _super134.call(this, d, "defaultUi", !0);
            _this135.id = e.id || "";
            _this135.use = e.use || "";
            _this135.usehref = e.usehref || "";
            _this135.extras = null;
            return _this135;
          }
          return _createClass(DefaultUi);
        }(r.XFAObject);
        var Desc = /*#__PURE__*/function (_r$XFAObject25) {
          _inherits(Desc, _r$XFAObject25);
          var _super135 = _createSuper(Desc);
          function Desc(e) {
            var _this136;
            _classCallCheck(this, Desc);
            _this136 = _super135.call(this, d, "desc", !0);
            _this136.id = e.id || "";
            _this136.use = e.use || "";
            _this136.usehref = e.usehref || "";
            _this136.boolean = new r.XFAObjectArray();
            _this136.date = new r.XFAObjectArray();
            _this136.dateTime = new r.XFAObjectArray();
            _this136.decimal = new r.XFAObjectArray();
            _this136.exData = new r.XFAObjectArray();
            _this136.float = new r.XFAObjectArray();
            _this136.image = new r.XFAObjectArray();
            _this136.integer = new r.XFAObjectArray();
            _this136.text = new r.XFAObjectArray();
            _this136.time = new r.XFAObjectArray();
            return _this136;
          }
          return _createClass(Desc);
        }(r.XFAObject);
        var DigestMethod = /*#__PURE__*/function (_r$OptionObject) {
          _inherits(DigestMethod, _r$OptionObject);
          var _super136 = _createSuper(DigestMethod);
          function DigestMethod(e) {
            var _this137;
            _classCallCheck(this, DigestMethod);
            _this137 = _super136.call(this, d, "digestMethod", ["", "SHA1", "SHA256", "SHA512", "RIPEMD160"]);
            _this137.id = e.id || "";
            _this137.use = e.use || "";
            _this137.usehref = e.usehref || "";
            return _this137;
          }
          return _createClass(DigestMethod);
        }(r.OptionObject);
        var DigestMethods = /*#__PURE__*/function (_r$XFAObject26) {
          _inherits(DigestMethods, _r$XFAObject26);
          var _super137 = _createSuper(DigestMethods);
          function DigestMethods(e) {
            var _this138;
            _classCallCheck(this, DigestMethods);
            _this138 = _super137.call(this, d, "digestMethods", !0);
            _this138.id = e.id || "";
            _this138.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this138.use = e.use || "";
            _this138.usehref = e.usehref || "";
            _this138.digestMethod = new r.XFAObjectArray();
            return _this138;
          }
          return _createClass(DigestMethods);
        }(r.XFAObject);
        var Draw = /*#__PURE__*/function (_r$XFAObject27, _r$$setValue2, _r$$toHTML15) {
          _inherits(Draw, _r$XFAObject27);
          var _super138 = _createSuper(Draw);
          function Draw(e) {
            var _this139;
            _classCallCheck(this, Draw);
            _this139 = _super138.call(this, d, "draw", !0);
            _this139.anchorType = (0, o.getStringOption)(e.anchorType, ["topLeft", "bottomCenter", "bottomLeft", "bottomRight", "middleCenter", "middleLeft", "middleRight", "topCenter", "topRight"]);
            _this139.colSpan = (0, o.getInteger)({
              data: e.colSpan,
              defaultValue: 1,
              validate: function validate(e) {
                return e >= 1 || -1 === e;
              }
            });
            _this139.h = e.h ? (0, o.getMeasurement)(e.h) : "";
            _this139.hAlign = (0, o.getStringOption)(e.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]);
            _this139.id = e.id || "";
            _this139.locale = e.locale || "";
            _this139.maxH = (0, o.getMeasurement)(e.maxH, "0pt");
            _this139.maxW = (0, o.getMeasurement)(e.maxW, "0pt");
            _this139.minH = (0, o.getMeasurement)(e.minH, "0pt");
            _this139.minW = (0, o.getMeasurement)(e.minW, "0pt");
            _this139.name = e.name || "";
            _this139.presence = (0, o.getStringOption)(e.presence, ["visible", "hidden", "inactive", "invisible"]);
            _this139.relevant = (0, o.getRelevant)(e.relevant);
            _this139.rotate = (0, o.getInteger)({
              data: e.rotate,
              defaultValue: 0,
              validate: function validate(e) {
                return e % 90 == 0;
              }
            });
            _this139.use = e.use || "";
            _this139.usehref = e.usehref || "";
            _this139.w = e.w ? (0, o.getMeasurement)(e.w) : "";
            _this139.x = (0, o.getMeasurement)(e.x, "0pt");
            _this139.y = (0, o.getMeasurement)(e.y, "0pt");
            _this139.assist = null;
            _this139.border = null;
            _this139.caption = null;
            _this139.desc = null;
            _this139.extras = null;
            _this139.font = null;
            _this139.keep = null;
            _this139.margin = null;
            _this139.para = null;
            _this139.traversal = null;
            _this139.ui = null;
            _this139.value = null;
            _this139.setProperty = new r.XFAObjectArray();
            return _this139;
          }
          _createClass(Draw, [{
            key: _r$$setValue2,
            value: function value(e) {
              _setValue(this, e);
            }
          }, {
            key: _r$$toHTML15,
            value: function value(e) {
              setTabIndex(this);
              if ("hidden" === this.presence || "inactive" === this.presence) return o.HTMLResult.EMPTY;
              (0, s.fixDimensions)(this);
              this[r.$pushPara]();
              var t = this.w,
                a = this.h,
                _ref99 = (0, s.layoutNode)(this, e),
                i = _ref99.w,
                c = _ref99.h,
                l = _ref99.isBroken;
              if (i && "" === this.w) {
                if (l && this[r.$getSubformParent]()[r.$isThereMoreWidth]()) {
                  this[r.$popPara]();
                  return o.HTMLResult.FAILURE;
                }
                this.w = i;
              }
              c && "" === this.h && (this.h = c);
              setFirstUnsplittable(this);
              if (!(0, n.checkDimensions)(this, e)) {
                this.w = t;
                this.h = a;
                this[r.$popPara]();
                return o.HTMLResult.FAILURE;
              }
              unsetFirstUnsplittable(this);
              var h = (0, s.toStyle)(this, "font", "hAlign", "dimensions", "position", "presence", "rotate", "anchorType", "border", "margin");
              (0, s.setMinMaxDimensions)(this, h);
              if (h.margin) {
                h.padding = h.margin;
                delete h.margin;
              }
              var u = ["xfaDraw"];
              this.font && u.push("xfaFont");
              (0, s.isPrintOnly)(this) && u.push("xfaPrintOnly");
              var d = {
                style: h,
                id: this[r.$uid],
                class: u
              };
              this.name && (d.xfaName = this.name);
              var f = {
                name: "div",
                attributes: d,
                children: []
              };
              applyAssist(this, d);
              var g = (0, s.computeBbox)(this, f, e),
                p = this.value ? this.value[r.$toHTML](e).html : null;
              if (null === p) {
                this.w = t;
                this.h = a;
                this[r.$popPara]();
                return o.HTMLResult.success((0, s.createWrapper)(this, f), g);
              }
              f.children.push(p);
              (0, s.setPara)(this, h, p);
              this.w = t;
              this.h = a;
              this[r.$popPara]();
              return o.HTMLResult.success((0, s.createWrapper)(this, f), g);
            }
          }]);
          return Draw;
        }(r.XFAObject, r.$setValue, r.$toHTML);
        var Edge = /*#__PURE__*/function (_r$XFAObject28, _r$$toStyle4) {
          _inherits(Edge, _r$XFAObject28);
          var _super139 = _createSuper(Edge);
          function Edge(e) {
            var _this140;
            _classCallCheck(this, Edge);
            _this140 = _super139.call(this, d, "edge", !0);
            _this140.cap = (0, o.getStringOption)(e.cap, ["square", "butt", "round"]);
            _this140.id = e.id || "";
            _this140.presence = (0, o.getStringOption)(e.presence, ["visible", "hidden", "inactive", "invisible"]);
            _this140.stroke = (0, o.getStringOption)(e.stroke, ["solid", "dashDot", "dashDotDot", "dashed", "dotted", "embossed", "etched", "lowered", "raised"]);
            _this140.thickness = (0, o.getMeasurement)(e.thickness, "0.5pt");
            _this140.use = e.use || "";
            _this140.usehref = e.usehref || "";
            _this140.color = null;
            _this140.extras = null;
            return _this140;
          }
          _createClass(Edge, [{
            key: _r$$toStyle4,
            value: function value() {
              var e = (0, s.toStyle)(this, "visibility");
              Object.assign(e, {
                linecap: this.cap,
                width: (0, s.measureToString)(this.thickness),
                color: this.color ? this.color[r.$toStyle]() : "#000000",
                style: ""
              });
              if ("visible" !== this.presence) e.style = "none";else switch (this.stroke) {
                case "solid":
                  e.style = "solid";
                  break;
                case "dashDot":
                case "dashDotDot":
                case "dashed":
                  e.style = "dashed";
                  break;
                case "dotted":
                  e.style = "dotted";
                  break;
                case "embossed":
                  e.style = "ridge";
                  break;
                case "etched":
                  e.style = "groove";
                  break;
                case "lowered":
                  e.style = "inset";
                  break;
                case "raised":
                  e.style = "outset";
              }
              return e;
            }
          }]);
          return Edge;
        }(r.XFAObject, r.$toStyle);
        var Encoding = /*#__PURE__*/function (_r$OptionObject2) {
          _inherits(Encoding, _r$OptionObject2);
          var _super140 = _createSuper(Encoding);
          function Encoding(e) {
            var _this141;
            _classCallCheck(this, Encoding);
            _this141 = _super140.call(this, d, "encoding", ["adbe.x509.rsa_sha1", "adbe.pkcs7.detached", "adbe.pkcs7.sha1"]);
            _this141.id = e.id || "";
            _this141.use = e.use || "";
            _this141.usehref = e.usehref || "";
            return _this141;
          }
          return _createClass(Encoding);
        }(r.OptionObject);
        var Encodings = /*#__PURE__*/function (_r$XFAObject29) {
          _inherits(Encodings, _r$XFAObject29);
          var _super141 = _createSuper(Encodings);
          function Encodings(e) {
            var _this142;
            _classCallCheck(this, Encodings);
            _this142 = _super141.call(this, d, "encodings", !0);
            _this142.id = e.id || "";
            _this142.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this142.use = e.use || "";
            _this142.usehref = e.usehref || "";
            _this142.encoding = new r.XFAObjectArray();
            return _this142;
          }
          return _createClass(Encodings);
        }(r.XFAObject);
        var Encrypt = /*#__PURE__*/function (_r$XFAObject30) {
          _inherits(Encrypt, _r$XFAObject30);
          var _super142 = _createSuper(Encrypt);
          function Encrypt(e) {
            var _this143;
            _classCallCheck(this, Encrypt);
            _this143 = _super142.call(this, d, "encrypt", !0);
            _this143.id = e.id || "";
            _this143.use = e.use || "";
            _this143.usehref = e.usehref || "";
            _this143.certificate = null;
            return _this143;
          }
          return _createClass(Encrypt);
        }(r.XFAObject);
        var EncryptData = /*#__PURE__*/function (_r$XFAObject31) {
          _inherits(EncryptData, _r$XFAObject31);
          var _super143 = _createSuper(EncryptData);
          function EncryptData(e) {
            var _this144;
            _classCallCheck(this, EncryptData);
            _this144 = _super143.call(this, d, "encryptData", !0);
            _this144.id = e.id || "";
            _this144.operation = (0, o.getStringOption)(e.operation, ["encrypt", "decrypt"]);
            _this144.target = e.target || "";
            _this144.use = e.use || "";
            _this144.usehref = e.usehref || "";
            _this144.filter = null;
            _this144.manifest = null;
            return _this144;
          }
          return _createClass(EncryptData);
        }(r.XFAObject);
        var Encryption = /*#__PURE__*/function (_r$XFAObject32) {
          _inherits(Encryption, _r$XFAObject32);
          var _super144 = _createSuper(Encryption);
          function Encryption(e) {
            var _this145;
            _classCallCheck(this, Encryption);
            _this145 = _super144.call(this, d, "encryption", !0);
            _this145.id = e.id || "";
            _this145.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this145.use = e.use || "";
            _this145.usehref = e.usehref || "";
            _this145.certificate = new r.XFAObjectArray();
            return _this145;
          }
          return _createClass(Encryption);
        }(r.XFAObject);
        var EncryptionMethod = /*#__PURE__*/function (_r$OptionObject3) {
          _inherits(EncryptionMethod, _r$OptionObject3);
          var _super145 = _createSuper(EncryptionMethod);
          function EncryptionMethod(e) {
            var _this146;
            _classCallCheck(this, EncryptionMethod);
            _this146 = _super145.call(this, d, "encryptionMethod", ["", "AES256-CBC", "TRIPLEDES-CBC", "AES128-CBC", "AES192-CBC"]);
            _this146.id = e.id || "";
            _this146.use = e.use || "";
            _this146.usehref = e.usehref || "";
            return _this146;
          }
          return _createClass(EncryptionMethod);
        }(r.OptionObject);
        var EncryptionMethods = /*#__PURE__*/function (_r$XFAObject33) {
          _inherits(EncryptionMethods, _r$XFAObject33);
          var _super146 = _createSuper(EncryptionMethods);
          function EncryptionMethods(e) {
            var _this147;
            _classCallCheck(this, EncryptionMethods);
            _this147 = _super146.call(this, d, "encryptionMethods", !0);
            _this147.id = e.id || "";
            _this147.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this147.use = e.use || "";
            _this147.usehref = e.usehref || "";
            _this147.encryptionMethod = new r.XFAObjectArray();
            return _this147;
          }
          return _createClass(EncryptionMethods);
        }(r.XFAObject);
        var Event = /*#__PURE__*/function (_r$XFAObject34) {
          _inherits(Event, _r$XFAObject34);
          var _super147 = _createSuper(Event);
          function Event(e) {
            var _this148;
            _classCallCheck(this, Event);
            _this148 = _super147.call(this, d, "event", !0);
            _this148.activity = (0, o.getStringOption)(e.activity, ["click", "change", "docClose", "docReady", "enter", "exit", "full", "indexChange", "initialize", "mouseDown", "mouseEnter", "mouseExit", "mouseUp", "postExecute", "postOpen", "postPrint", "postSave", "postSign", "postSubmit", "preExecute", "preOpen", "prePrint", "preSave", "preSign", "preSubmit", "ready", "validationState"]);
            _this148.id = e.id || "";
            _this148.listen = (0, o.getStringOption)(e.listen, ["refOnly", "refAndDescendents"]);
            _this148.name = e.name || "";
            _this148.ref = e.ref || "";
            _this148.use = e.use || "";
            _this148.usehref = e.usehref || "";
            _this148.extras = null;
            _this148.encryptData = null;
            _this148.execute = null;
            _this148.script = null;
            _this148.signData = null;
            _this148.submit = null;
            return _this148;
          }
          return _createClass(Event);
        }(r.XFAObject);
        var ExData = /*#__PURE__*/function (_r$ContentObject4, _r$$isCDATAXml, _r$$onChild, _r$$toHTML16) {
          _inherits(ExData, _r$ContentObject4);
          var _super148 = _createSuper(ExData);
          function ExData(e) {
            var _this149;
            _classCallCheck(this, ExData);
            _this149 = _super148.call(this, d, "exData");
            _this149.contentType = e.contentType || "";
            _this149.href = e.href || "";
            _this149.id = e.id || "";
            _this149.maxLength = (0, o.getInteger)({
              data: e.maxLength,
              defaultValue: -1,
              validate: function validate(e) {
                return e >= -1;
              }
            });
            _this149.name = e.name || "";
            _this149.rid = e.rid || "";
            _this149.transferEncoding = (0, o.getStringOption)(e.transferEncoding, ["none", "base64", "package"]);
            _this149.use = e.use || "";
            _this149.usehref = e.usehref || "";
            return _this149;
          }
          _createClass(ExData, [{
            key: _r$$isCDATAXml,
            value: function value() {
              return "text/html" === this.contentType;
            }
          }, {
            key: _r$$onChild,
            value: function value(e) {
              if ("text/html" === this.contentType && e[r.$namespaceId] === i.NamespaceIds.xhtml.id) {
                this[r.$content] = e;
                return !0;
              }
              if ("text/xml" === this.contentType) {
                this[r.$content] = e;
                return !0;
              }
              return !1;
            }
          }, {
            key: _r$$toHTML16,
            value: function value(e) {
              return "text/html" === this.contentType && this[r.$content] ? this[r.$content][r.$toHTML](e) : o.HTMLResult.EMPTY;
            }
          }]);
          return ExData;
        }(r.ContentObject, r.$isCDATAXml, r.$onChild, r.$toHTML);
        var ExObject = /*#__PURE__*/function (_r$XFAObject35) {
          _inherits(ExObject, _r$XFAObject35);
          var _super149 = _createSuper(ExObject);
          function ExObject(e) {
            var _this150;
            _classCallCheck(this, ExObject);
            _this150 = _super149.call(this, d, "exObject", !0);
            _this150.archive = e.archive || "";
            _this150.classId = e.classId || "";
            _this150.codeBase = e.codeBase || "";
            _this150.codeType = e.codeType || "";
            _this150.id = e.id || "";
            _this150.name = e.name || "";
            _this150.use = e.use || "";
            _this150.usehref = e.usehref || "";
            _this150.extras = null;
            _this150.boolean = new r.XFAObjectArray();
            _this150.date = new r.XFAObjectArray();
            _this150.dateTime = new r.XFAObjectArray();
            _this150.decimal = new r.XFAObjectArray();
            _this150.exData = new r.XFAObjectArray();
            _this150.exObject = new r.XFAObjectArray();
            _this150.float = new r.XFAObjectArray();
            _this150.image = new r.XFAObjectArray();
            _this150.integer = new r.XFAObjectArray();
            _this150.text = new r.XFAObjectArray();
            _this150.time = new r.XFAObjectArray();
            return _this150;
          }
          return _createClass(ExObject);
        }(r.XFAObject);
        var ExclGroup = /*#__PURE__*/function (_r$XFAObject36, _r$$isBindable2, _r$$hasSettableValue2, _r$$setValue3, _r$$isThereMoreWidth, _r$$isSplittable, _r$$flushHTML, _r$$addHTML2, _r$$getAvailableSpace2, _r$$toHTML17) {
          _inherits(ExclGroup, _r$XFAObject36);
          var _super150 = _createSuper(ExclGroup);
          function ExclGroup(e) {
            var _this151;
            _classCallCheck(this, ExclGroup);
            _this151 = _super150.call(this, d, "exclGroup", !0);
            _this151.access = (0, o.getStringOption)(e.access, ["open", "nonInteractive", "protected", "readOnly"]);
            _this151.accessKey = e.accessKey || "";
            _this151.anchorType = (0, o.getStringOption)(e.anchorType, ["topLeft", "bottomCenter", "bottomLeft", "bottomRight", "middleCenter", "middleLeft", "middleRight", "topCenter", "topRight"]);
            _this151.colSpan = (0, o.getInteger)({
              data: e.colSpan,
              defaultValue: 1,
              validate: function validate(e) {
                return e >= 1 || -1 === e;
              }
            });
            _this151.h = e.h ? (0, o.getMeasurement)(e.h) : "";
            _this151.hAlign = (0, o.getStringOption)(e.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]);
            _this151.id = e.id || "";
            _this151.layout = (0, o.getStringOption)(e.layout, ["position", "lr-tb", "rl-row", "rl-tb", "row", "table", "tb"]);
            _this151.maxH = (0, o.getMeasurement)(e.maxH, "0pt");
            _this151.maxW = (0, o.getMeasurement)(e.maxW, "0pt");
            _this151.minH = (0, o.getMeasurement)(e.minH, "0pt");
            _this151.minW = (0, o.getMeasurement)(e.minW, "0pt");
            _this151.name = e.name || "";
            _this151.presence = (0, o.getStringOption)(e.presence, ["visible", "hidden", "inactive", "invisible"]);
            _this151.relevant = (0, o.getRelevant)(e.relevant);
            _this151.use = e.use || "";
            _this151.usehref = e.usehref || "";
            _this151.w = e.w ? (0, o.getMeasurement)(e.w) : "";
            _this151.x = (0, o.getMeasurement)(e.x, "0pt");
            _this151.y = (0, o.getMeasurement)(e.y, "0pt");
            _this151.assist = null;
            _this151.bind = null;
            _this151.border = null;
            _this151.calculate = null;
            _this151.caption = null;
            _this151.desc = null;
            _this151.extras = null;
            _this151.margin = null;
            _this151.para = null;
            _this151.traversal = null;
            _this151.validate = null;
            _this151.connect = new r.XFAObjectArray();
            _this151.event = new r.XFAObjectArray();
            _this151.field = new r.XFAObjectArray();
            _this151.setProperty = new r.XFAObjectArray();
            return _this151;
          }
          _createClass(ExclGroup, [{
            key: _r$$isBindable2,
            value: function value() {
              return !0;
            }
          }, {
            key: _r$$hasSettableValue2,
            value: function value() {
              return !0;
            }
          }, {
            key: _r$$setValue3,
            value: function value(e) {
              var _iterator189 = _createForOfIteratorHelper(this.field.children),
                _step189;
              try {
                for (_iterator189.s(); !(_step189 = _iterator189.n()).done;) {
                  var _t436 = _step189.value;
                  if (!_t436.value) {
                    var _e581 = new Value({});
                    _t436[r.$appendChild](_e581);
                    _t436.value = _e581;
                  }
                  _t436.value[r.$setValue](e);
                }
              } catch (err) {
                _iterator189.e(err);
              } finally {
                _iterator189.f();
              }
            }
          }, {
            key: _r$$isThereMoreWidth,
            value: function value() {
              return this.layout.endsWith("-tb") && 0 === this[r.$extra].attempt && this[r.$extra].numberInLine > 0 || this[r.$getParent]()[r.$isThereMoreWidth]();
            }
          }, {
            key: _r$$isSplittable,
            value: function value() {
              var e = this[r.$getSubformParent]();
              if (!e[r.$isSplittable]()) return !1;
              if (void 0 !== this[r.$extra]._isSplittable) return this[r.$extra]._isSplittable;
              if ("position" === this.layout || this.layout.includes("row")) {
                this[r.$extra]._isSplittable = !1;
                return !1;
              }
              if (e.layout && e.layout.endsWith("-tb") && 0 !== e[r.$extra].numberInLine) return !1;
              this[r.$extra]._isSplittable = !0;
              return !0;
            }
          }, {
            key: _r$$flushHTML,
            value: function value() {
              return (0, n.flushHTML)(this);
            }
          }, {
            key: _r$$addHTML2,
            value: function value(e, t) {
              (0, n.addHTML)(this, e, t);
            }
          }, {
            key: _r$$getAvailableSpace2,
            value: function value() {
              return (0, n.getAvailableSpace)(this);
            }
          }, {
            key: _r$$toHTML17,
            value: function value(e) {
              setTabIndex(this);
              if ("hidden" === this.presence || "inactive" === this.presence || 0 === this.h || 0 === this.w) return o.HTMLResult.EMPTY;
              (0, s.fixDimensions)(this);
              var t = [],
                a = {
                  id: this[r.$uid],
                  class: []
                };
              (0, s.setAccess)(this, a.class);
              this[r.$extra] || (this[r.$extra] = Object.create(null));
              Object.assign(this[r.$extra], {
                children: t,
                attributes: a,
                attempt: 0,
                line: null,
                numberInLine: 0,
                availableSpace: {
                  width: Math.min(this.w || 1 / 0, e.width),
                  height: Math.min(this.h || 1 / 0, e.height)
                },
                width: 0,
                height: 0,
                prevHeight: 0,
                currentWidth: 0
              });
              var i = this[r.$isSplittable]();
              i || setFirstUnsplittable(this);
              if (!(0, n.checkDimensions)(this, e)) return o.HTMLResult.FAILURE;
              var c = new Set(["field"]);
              if (this.layout.includes("row")) {
                var _e582 = this[r.$getSubformParent]().columnWidths;
                if (Array.isArray(_e582) && _e582.length > 0) {
                  this[r.$extra].columnWidths = _e582;
                  this[r.$extra].currentColumn = 0;
                }
              }
              var l = (0, s.toStyle)(this, "anchorType", "dimensions", "position", "presence", "border", "margin", "hAlign"),
                h = ["xfaExclgroup"],
                u = (0, s.layoutClass)(this);
              u && h.push(u);
              (0, s.isPrintOnly)(this) && h.push("xfaPrintOnly");
              a.style = l;
              a.class = h;
              this.name && (a.xfaName = this.name);
              this[r.$pushPara]();
              var d = "lr-tb" === this.layout || "rl-tb" === this.layout,
                f = d ? 2 : 1;
              for (; this[r.$extra].attempt < f; this[r.$extra].attempt++) {
                d && 1 === this[r.$extra].attempt && (this[r.$extra].numberInLine = 0);
                var _e583 = this[r.$childrenToHTML]({
                  filter: c,
                  include: !0
                });
                if (_e583.success) break;
                if (_e583.isBreak()) {
                  this[r.$popPara]();
                  return _e583;
                }
                if (d && 0 === this[r.$extra].attempt && 0 === this[r.$extra].numberInLine && !this[r.$getTemplateRoot]()[r.$extra].noLayoutFailure) {
                  this[r.$extra].attempt = f;
                  break;
                }
              }
              this[r.$popPara]();
              i || unsetFirstUnsplittable(this);
              if (this[r.$extra].attempt === f) {
                i || delete this[r.$extra];
                return o.HTMLResult.FAILURE;
              }
              var g = 0,
                p = 0;
              if (this.margin) {
                g = this.margin.leftInset + this.margin.rightInset;
                p = this.margin.topInset + this.margin.bottomInset;
              }
              var m = Math.max(this[r.$extra].width + g, this.w || 0),
                b = Math.max(this[r.$extra].height + p, this.h || 0),
                y = [this.x, this.y, m, b];
              "" === this.w && (l.width = (0, s.measureToString)(m));
              "" === this.h && (l.height = (0, s.measureToString)(b));
              var w = {
                name: "div",
                attributes: a,
                children: t
              };
              applyAssist(this, a);
              delete this[r.$extra];
              return o.HTMLResult.success((0, s.createWrapper)(this, w), y);
            }
          }]);
          return ExclGroup;
        }(r.XFAObject, r.$isBindable, r.$hasSettableValue, r.$setValue, r.$isThereMoreWidth, r.$isSplittable, r.$flushHTML, r.$addHTML, r.$getAvailableSpace, r.$toHTML);
        var Execute = /*#__PURE__*/function (_r$XFAObject37) {
          _inherits(Execute, _r$XFAObject37);
          var _super151 = _createSuper(Execute);
          function Execute(e) {
            var _this152;
            _classCallCheck(this, Execute);
            _this152 = _super151.call(this, d, "execute");
            _this152.connection = e.connection || "";
            _this152.executeType = (0, o.getStringOption)(e.executeType, ["import", "remerge"]);
            _this152.id = e.id || "";
            _this152.runAt = (0, o.getStringOption)(e.runAt, ["client", "both", "server"]);
            _this152.use = e.use || "";
            _this152.usehref = e.usehref || "";
            return _this152;
          }
          return _createClass(Execute);
        }(r.XFAObject);
        var Extras = /*#__PURE__*/function (_r$XFAObject38) {
          _inherits(Extras, _r$XFAObject38);
          var _super152 = _createSuper(Extras);
          function Extras(e) {
            var _this153;
            _classCallCheck(this, Extras);
            _this153 = _super152.call(this, d, "extras", !0);
            _this153.id = e.id || "";
            _this153.name = e.name || "";
            _this153.use = e.use || "";
            _this153.usehref = e.usehref || "";
            _this153.boolean = new r.XFAObjectArray();
            _this153.date = new r.XFAObjectArray();
            _this153.dateTime = new r.XFAObjectArray();
            _this153.decimal = new r.XFAObjectArray();
            _this153.exData = new r.XFAObjectArray();
            _this153.extras = new r.XFAObjectArray();
            _this153.float = new r.XFAObjectArray();
            _this153.image = new r.XFAObjectArray();
            _this153.integer = new r.XFAObjectArray();
            _this153.text = new r.XFAObjectArray();
            _this153.time = new r.XFAObjectArray();
            return _this153;
          }
          return _createClass(Extras);
        }(r.XFAObject);
        var Field = /*#__PURE__*/function (_r$XFAObject39, _r$$isBindable3, _r$$setValue4, _r$$toHTML18) {
          _inherits(Field, _r$XFAObject39);
          var _super153 = _createSuper(Field);
          function Field(e) {
            var _this154;
            _classCallCheck(this, Field);
            _this154 = _super153.call(this, d, "field", !0);
            _this154.access = (0, o.getStringOption)(e.access, ["open", "nonInteractive", "protected", "readOnly"]);
            _this154.accessKey = e.accessKey || "";
            _this154.anchorType = (0, o.getStringOption)(e.anchorType, ["topLeft", "bottomCenter", "bottomLeft", "bottomRight", "middleCenter", "middleLeft", "middleRight", "topCenter", "topRight"]);
            _this154.colSpan = (0, o.getInteger)({
              data: e.colSpan,
              defaultValue: 1,
              validate: function validate(e) {
                return e >= 1 || -1 === e;
              }
            });
            _this154.h = e.h ? (0, o.getMeasurement)(e.h) : "";
            _this154.hAlign = (0, o.getStringOption)(e.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]);
            _this154.id = e.id || "";
            _this154.locale = e.locale || "";
            _this154.maxH = (0, o.getMeasurement)(e.maxH, "0pt");
            _this154.maxW = (0, o.getMeasurement)(e.maxW, "0pt");
            _this154.minH = (0, o.getMeasurement)(e.minH, "0pt");
            _this154.minW = (0, o.getMeasurement)(e.minW, "0pt");
            _this154.name = e.name || "";
            _this154.presence = (0, o.getStringOption)(e.presence, ["visible", "hidden", "inactive", "invisible"]);
            _this154.relevant = (0, o.getRelevant)(e.relevant);
            _this154.rotate = (0, o.getInteger)({
              data: e.rotate,
              defaultValue: 0,
              validate: function validate(e) {
                return e % 90 == 0;
              }
            });
            _this154.use = e.use || "";
            _this154.usehref = e.usehref || "";
            _this154.w = e.w ? (0, o.getMeasurement)(e.w) : "";
            _this154.x = (0, o.getMeasurement)(e.x, "0pt");
            _this154.y = (0, o.getMeasurement)(e.y, "0pt");
            _this154.assist = null;
            _this154.bind = null;
            _this154.border = null;
            _this154.calculate = null;
            _this154.caption = null;
            _this154.desc = null;
            _this154.extras = null;
            _this154.font = null;
            _this154.format = null;
            _this154.items = new r.XFAObjectArray(2);
            _this154.keep = null;
            _this154.margin = null;
            _this154.para = null;
            _this154.traversal = null;
            _this154.ui = null;
            _this154.validate = null;
            _this154.value = null;
            _this154.bindItems = new r.XFAObjectArray();
            _this154.connect = new r.XFAObjectArray();
            _this154.event = new r.XFAObjectArray();
            _this154.setProperty = new r.XFAObjectArray();
            return _this154;
          }
          _createClass(Field, [{
            key: _r$$isBindable3,
            value: function value() {
              return !0;
            }
          }, {
            key: _r$$setValue4,
            value: function value(e) {
              _setValue(this, e);
            }
          }, {
            key: _r$$toHTML18,
            value: function value(e) {
              setTabIndex(this);
              if (!this.ui) {
                this.ui = new Ui({});
                this.ui[r.$globalData] = this[r.$globalData];
                this[r.$appendChild](this.ui);
                var _e584;
                switch (this.items.children.length) {
                  case 0:
                    _e584 = new TextEdit({});
                    this.ui.textEdit = _e584;
                    break;
                  case 1:
                    _e584 = new CheckButton({});
                    this.ui.checkButton = _e584;
                    break;
                  case 2:
                    _e584 = new ChoiceList({});
                    this.ui.choiceList = _e584;
                }
                this.ui[r.$appendChild](_e584);
              }
              if (!this.ui || "hidden" === this.presence || "inactive" === this.presence || 0 === this.h || 0 === this.w) return o.HTMLResult.EMPTY;
              this.caption && delete this.caption[r.$extra];
              this[r.$pushPara]();
              var t = this.caption ? this.caption[r.$toHTML](e).html : null,
                a = this.w,
                i = this.h;
              var c = 0,
                h = 0;
              if (this.margin) {
                c = this.margin.leftInset + this.margin.rightInset;
                h = this.margin.topInset + this.margin.bottomInset;
              }
              var u = null;
              if ("" === this.w || "" === this.h) {
                var _t437 = null,
                  _a349 = null,
                  _i226 = 0,
                  _n148 = 0;
                if (this.ui.checkButton) _i226 = _n148 = this.ui.checkButton.size;else {
                  var _ref100 = (0, s.layoutNode)(this, e),
                    _t438 = _ref100.w,
                    _a350 = _ref100.h;
                  if (null !== _t438) {
                    _i226 = _t438;
                    _n148 = _a350;
                  } else _n148 = (0, l.getMetrics)(this.font, !0).lineNoGap;
                }
                u = getBorderDims(this.ui[r.$getExtra]());
                _i226 += u.w;
                _n148 += u.h;
                if (this.caption) {
                  var _this$caption$r$$getE = this.caption[r.$getExtra](e),
                    _s122 = _this$caption$r$$getE.w,
                    _c59 = _this$caption$r$$getE.h,
                    _l36 = _this$caption$r$$getE.isBroken;
                  if (_l36 && this[r.$getSubformParent]()[r.$isThereMoreWidth]()) {
                    this[r.$popPara]();
                    return o.HTMLResult.FAILURE;
                  }
                  _t437 = _s122;
                  _a349 = _c59;
                  switch (this.caption.placement) {
                    case "left":
                    case "right":
                    case "inline":
                      _t437 += _i226;
                      break;
                    case "top":
                    case "bottom":
                      _a349 += _n148;
                  }
                } else {
                  _t437 = _i226;
                  _a349 = _n148;
                }
                if (_t437 && "" === this.w) {
                  _t437 += c;
                  this.w = Math.min(this.maxW <= 0 ? 1 / 0 : this.maxW, this.minW + 1 < _t437 ? _t437 : this.minW);
                }
                if (_a349 && "" === this.h) {
                  _a349 += h;
                  this.h = Math.min(this.maxH <= 0 ? 1 / 0 : this.maxH, this.minH + 1 < _a349 ? _a349 : this.minH);
                }
              }
              this[r.$popPara]();
              (0, s.fixDimensions)(this);
              setFirstUnsplittable(this);
              if (!(0, n.checkDimensions)(this, e)) {
                this.w = a;
                this.h = i;
                this[r.$popPara]();
                return o.HTMLResult.FAILURE;
              }
              unsetFirstUnsplittable(this);
              var d = (0, s.toStyle)(this, "font", "dimensions", "position", "rotate", "anchorType", "presence", "margin", "hAlign");
              (0, s.setMinMaxDimensions)(this, d);
              var f = ["xfaField"];
              this.font && f.push("xfaFont");
              (0, s.isPrintOnly)(this) && f.push("xfaPrintOnly");
              var g = {
                style: d,
                id: this[r.$uid],
                class: f
              };
              if (d.margin) {
                d.padding = d.margin;
                delete d.margin;
              }
              (0, s.setAccess)(this, f);
              this.name && (g.xfaName = this.name);
              var p = [],
                m = {
                  name: "div",
                  attributes: g,
                  children: p
                };
              applyAssist(this, g);
              var b = this.border ? this.border[r.$toStyle]() : null,
                y = (0, s.computeBbox)(this, m, e),
                w = this.ui[r.$toHTML]().html;
              if (!w) {
                Object.assign(d, b);
                return o.HTMLResult.success((0, s.createWrapper)(this, m), y);
              }
              this[r.$tabIndex] && (w.children && w.children[0] ? w.children[0].attributes.tabindex = this[r.$tabIndex] : w.attributes.tabindex = this[r.$tabIndex]);
              w.attributes.style || (w.attributes.style = Object.create(null));
              var S = null;
              if (this.ui.button) {
                var _w$children$splice, _w$children$splice2;
                1 === w.children.length && (_w$children$splice = w.children.splice(0, 1), _w$children$splice2 = _slicedToArray(_w$children$splice, 1), S = _w$children$splice2[0], _w$children$splice);
                Object.assign(w.attributes.style, b);
              } else Object.assign(d, b);
              p.push(w);
              if (this.value) if (this.ui.imageEdit) w.children.push(this.value[r.$toHTML]().html);else if (!this.ui.button) {
                var _e585 = "";
                if (this.value.exData) _e585 = this.value.exData[r.$text]();else if (this.value.text) _e585 = this.value.text[r.$getExtra]();else {
                  var _t439 = this.value[r.$toHTML]().html;
                  null !== _t439 && (_e585 = _t439.children[0].value);
                }
                this.ui.textEdit && this.value.text && this.value.text.maxChars && (w.children[0].attributes.maxLength = this.value.text.maxChars);
                if (_e585) {
                  if (this.ui.numericEdit) {
                    _e585 = parseFloat(_e585);
                    _e585 = isNaN(_e585) ? "" : _e585.toString();
                  }
                  "textarea" === w.children[0].name ? w.children[0].attributes.textContent = _e585 : w.children[0].attributes.value = _e585;
                }
              }
              if (!this.ui.imageEdit && w.children && w.children[0] && this.h) {
                u = u || getBorderDims(this.ui[r.$getExtra]());
                var _t440 = 0;
                if (this.caption && ["top", "bottom"].includes(this.caption.placement)) {
                  _t440 = this.caption.reserve;
                  _t440 <= 0 && (_t440 = this.caption[r.$getExtra](e).h);
                  var _a351 = this.h - _t440 - h - u.h;
                  w.children[0].attributes.style.height = (0, s.measureToString)(_a351);
                } else w.children[0].attributes.style.height = "100%";
              }
              S && w.children.push(S);
              if (!t) {
                w.attributes.class && w.attributes.class.push("xfaLeft");
                this.w = a;
                this.h = i;
                return o.HTMLResult.success((0, s.createWrapper)(this, m), y);
              }
              if (this.ui.button) {
                d.padding && delete d.padding;
                "div" === t.name && (t.name = "span");
                w.children.push(t);
                return o.HTMLResult.success(m, y);
              }
              this.ui.checkButton && (t.attributes.class[0] = "xfaCaptionForCheckButton");
              w.attributes.class || (w.attributes.class = []);
              w.children.splice(0, 0, t);
              switch (this.caption.placement) {
                case "left":
                case "inline":
                  w.attributes.class.push("xfaLeft");
                  break;
                case "right":
                  w.attributes.class.push("xfaRight");
                  break;
                case "top":
                  w.attributes.class.push("xfaTop");
                  break;
                case "bottom":
                  w.attributes.class.push("xfaBottom");
              }
              this.w = a;
              this.h = i;
              return o.HTMLResult.success((0, s.createWrapper)(this, m), y);
            }
          }]);
          return Field;
        }(r.XFAObject, r.$isBindable, r.$setValue, r.$toHTML);
        t.Field = Field;
        var Fill = /*#__PURE__*/function (_r$XFAObject40, _r$$toStyle5) {
          _inherits(Fill, _r$XFAObject40);
          var _super154 = _createSuper(Fill);
          function Fill(e) {
            var _this155;
            _classCallCheck(this, Fill);
            _this155 = _super154.call(this, d, "fill", !0);
            _this155.id = e.id || "";
            _this155.presence = (0, o.getStringOption)(e.presence, ["visible", "hidden", "inactive", "invisible"]);
            _this155.use = e.use || "";
            _this155.usehref = e.usehref || "";
            _this155.color = null;
            _this155.extras = null;
            _this155.linear = null;
            _this155.pattern = null;
            _this155.radial = null;
            _this155.solid = null;
            _this155.stipple = null;
            return _this155;
          }
          _createClass(Fill, [{
            key: _r$$toStyle5,
            value: function value() {
              var e = this[r.$getParent](),
                t = e[r.$getParent]()[r.$getParent](),
                a = Object.create(null);
              var i = "color",
                n = i;
              if (e instanceof Border) {
                i = "background-color";
                n = "background";
                t instanceof Ui && (a.backgroundColor = "white");
              }
              if (e instanceof Rectangle || e instanceof Arc) {
                i = n = "fill";
                a.fill = "white";
              }
              var _iterator190 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this)),
                _step190;
              try {
                for (_iterator190.s(); !(_step190 = _iterator190.n()).done;) {
                  var _e587 = _step190.value;
                  if ("extras" === _e587 || "color" === _e587) continue;
                  var _t441 = this[_e587];
                  if (!(_t441 instanceof r.XFAObject)) continue;
                  var _s123 = _t441[r.$toStyle](this.color);
                  _s123 && (a[_s123.startsWith("#") ? i : n] = _s123);
                  return a;
                }
              } catch (err) {
                _iterator190.e(err);
              } finally {
                _iterator190.f();
              }
              if (this.color && this.color.value) {
                var _e586 = this.color[r.$toStyle]();
                a[_e586.startsWith("#") ? i : n] = _e586;
              }
              return a;
            }
          }]);
          return Fill;
        }(r.XFAObject, r.$toStyle);
        var Filter = /*#__PURE__*/function (_r$XFAObject41) {
          _inherits(Filter, _r$XFAObject41);
          var _super155 = _createSuper(Filter);
          function Filter(e) {
            var _this156;
            _classCallCheck(this, Filter);
            _this156 = _super155.call(this, d, "filter", !0);
            _this156.addRevocationInfo = (0, o.getStringOption)(e.addRevocationInfo, ["", "required", "optional", "none"]);
            _this156.id = e.id || "";
            _this156.name = e.name || "";
            _this156.use = e.use || "";
            _this156.usehref = e.usehref || "";
            _this156.version = (0, o.getInteger)({
              data: _this156.version,
              defaultValue: 5,
              validate: function validate(e) {
                return e >= 1 && e <= 5;
              }
            });
            _this156.appearanceFilter = null;
            _this156.certificates = null;
            _this156.digestMethods = null;
            _this156.encodings = null;
            _this156.encryptionMethods = null;
            _this156.handler = null;
            _this156.lockDocument = null;
            _this156.mdp = null;
            _this156.reasons = null;
            _this156.timeStamp = null;
            return _this156;
          }
          return _createClass(Filter);
        }(r.XFAObject);
        var Float = /*#__PURE__*/function (_r$ContentObject5, _r$$finalize4, _r$$toHTML19) {
          _inherits(Float, _r$ContentObject5);
          var _super156 = _createSuper(Float);
          function Float(e) {
            var _this157;
            _classCallCheck(this, Float);
            _this157 = _super156.call(this, d, "float");
            _this157.id = e.id || "";
            _this157.name = e.name || "";
            _this157.use = e.use || "";
            _this157.usehref = e.usehref || "";
            return _this157;
          }
          _createClass(Float, [{
            key: _r$$finalize4,
            value: function value() {
              var e = parseFloat(this[r.$content].trim());
              this[r.$content] = isNaN(e) ? null : e;
            }
          }, {
            key: _r$$toHTML19,
            value: function value(e) {
              return valueToHtml(null !== this[r.$content] ? this[r.$content].toString() : "");
            }
          }]);
          return Float;
        }(r.ContentObject, r.$finalize, r.$toHTML);
        var Font = /*#__PURE__*/function (_r$XFAObject42, _r$$clean, _r$$toStyle6) {
          _inherits(Font, _r$XFAObject42);
          var _super157 = _createSuper(Font);
          function Font(e) {
            var _this158;
            _classCallCheck(this, Font);
            _this158 = _super157.call(this, d, "font", !0);
            _this158.baselineShift = (0, o.getMeasurement)(e.baselineShift);
            _this158.fontHorizontalScale = (0, o.getFloat)({
              data: e.fontHorizontalScale,
              defaultValue: 100,
              validate: function validate(e) {
                return e >= 0;
              }
            });
            _this158.fontVerticalScale = (0, o.getFloat)({
              data: e.fontVerticalScale,
              defaultValue: 100,
              validate: function validate(e) {
                return e >= 0;
              }
            });
            _this158.id = e.id || "";
            _this158.kerningMode = (0, o.getStringOption)(e.kerningMode, ["none", "pair"]);
            _this158.letterSpacing = (0, o.getMeasurement)(e.letterSpacing, "0");
            _this158.lineThrough = (0, o.getInteger)({
              data: e.lineThrough,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e || 2 === e;
              }
            });
            _this158.lineThroughPeriod = (0, o.getStringOption)(e.lineThroughPeriod, ["all", "word"]);
            _this158.overline = (0, o.getInteger)({
              data: e.overline,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e || 2 === e;
              }
            });
            _this158.overlinePeriod = (0, o.getStringOption)(e.overlinePeriod, ["all", "word"]);
            _this158.posture = (0, o.getStringOption)(e.posture, ["normal", "italic"]);
            _this158.size = (0, o.getMeasurement)(e.size, "10pt");
            _this158.typeface = e.typeface || "Courier";
            _this158.underline = (0, o.getInteger)({
              data: e.underline,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e || 2 === e;
              }
            });
            _this158.underlinePeriod = (0, o.getStringOption)(e.underlinePeriod, ["all", "word"]);
            _this158.use = e.use || "";
            _this158.usehref = e.usehref || "";
            _this158.weight = (0, o.getStringOption)(e.weight, ["normal", "bold"]);
            _this158.extras = null;
            _this158.fill = null;
            return _this158;
          }
          _createClass(Font, [{
            key: _r$$clean,
            value: function value(e) {
              _get(_getPrototypeOf(Font.prototype), r.$clean, this).call(this, e);
              this[r.$globalData].usedTypefaces.add(this.typeface);
            }
          }, {
            key: _r$$toStyle6,
            value: function value() {
              var e = (0, s.toStyle)(this, "fill"),
                t = e.color;
              if (t) if ("#000000" === t) delete e.color;else if (!t.startsWith("#")) {
                e.background = t;
                e.backgroundClip = "text";
                e.color = "transparent";
              }
              this.baselineShift && (e.verticalAlign = (0, s.measureToString)(this.baselineShift));
              e.fontKerning = "none" === this.kerningMode ? "none" : "normal";
              e.letterSpacing = (0, s.measureToString)(this.letterSpacing);
              if (0 !== this.lineThrough) {
                e.textDecoration = "line-through";
                2 === this.lineThrough && (e.textDecorationStyle = "double");
              }
              if (0 !== this.overline) {
                e.textDecoration = "overline";
                2 === this.overline && (e.textDecorationStyle = "double");
              }
              e.fontStyle = this.posture;
              e.fontSize = (0, s.measureToString)(.99 * this.size);
              (0, s.setFontFamily)(this, this, this[r.$globalData].fontFinder, e);
              if (0 !== this.underline) {
                e.textDecoration = "underline";
                2 === this.underline && (e.textDecorationStyle = "double");
              }
              e.fontWeight = this.weight;
              return e;
            }
          }]);
          return Font;
        }(r.XFAObject, r.$clean, r.$toStyle);
        var Format = /*#__PURE__*/function (_r$XFAObject43) {
          _inherits(Format, _r$XFAObject43);
          var _super158 = _createSuper(Format);
          function Format(e) {
            var _this159;
            _classCallCheck(this, Format);
            _this159 = _super158.call(this, d, "format", !0);
            _this159.id = e.id || "";
            _this159.use = e.use || "";
            _this159.usehref = e.usehref || "";
            _this159.extras = null;
            _this159.picture = null;
            return _this159;
          }
          return _createClass(Format);
        }(r.XFAObject);
        var Handler = /*#__PURE__*/function (_r$StringObject3) {
          _inherits(Handler, _r$StringObject3);
          var _super159 = _createSuper(Handler);
          function Handler(e) {
            var _this160;
            _classCallCheck(this, Handler);
            _this160 = _super159.call(this, d, "handler");
            _this160.id = e.id || "";
            _this160.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this160.use = e.use || "";
            _this160.usehref = e.usehref || "";
            return _this160;
          }
          return _createClass(Handler);
        }(r.StringObject);
        var Hyphenation = /*#__PURE__*/function (_r$XFAObject44) {
          _inherits(Hyphenation, _r$XFAObject44);
          var _super160 = _createSuper(Hyphenation);
          function Hyphenation(e) {
            var _this161;
            _classCallCheck(this, Hyphenation);
            _this161 = _super160.call(this, d, "hyphenation");
            _this161.excludeAllCaps = (0, o.getInteger)({
              data: e.excludeAllCaps,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this161.excludeInitialCap = (0, o.getInteger)({
              data: e.excludeInitialCap,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this161.hyphenate = (0, o.getInteger)({
              data: e.hyphenate,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this161.id = e.id || "";
            _this161.pushCharacterCount = (0, o.getInteger)({
              data: e.pushCharacterCount,
              defaultValue: 3,
              validate: function validate(e) {
                return e >= 0;
              }
            });
            _this161.remainCharacterCount = (0, o.getInteger)({
              data: e.remainCharacterCount,
              defaultValue: 3,
              validate: function validate(e) {
                return e >= 0;
              }
            });
            _this161.use = e.use || "";
            _this161.usehref = e.usehref || "";
            _this161.wordCharacterCount = (0, o.getInteger)({
              data: e.wordCharacterCount,
              defaultValue: 7,
              validate: function validate(e) {
                return e >= 0;
              }
            });
            return _this161;
          }
          return _createClass(Hyphenation);
        }(r.XFAObject);
        var Image = /*#__PURE__*/function (_r$StringObject4, _r$$toHTML20) {
          _inherits(Image, _r$StringObject4);
          var _super161 = _createSuper(Image);
          function Image(e) {
            var _this162;
            _classCallCheck(this, Image);
            _this162 = _super161.call(this, d, "image");
            _this162.aspect = (0, o.getStringOption)(e.aspect, ["fit", "actual", "height", "none", "width"]);
            _this162.contentType = e.contentType || "";
            _this162.href = e.href || "";
            _this162.id = e.id || "";
            _this162.name = e.name || "";
            _this162.transferEncoding = (0, o.getStringOption)(e.transferEncoding, ["base64", "none", "package"]);
            _this162.use = e.use || "";
            _this162.usehref = e.usehref || "";
            return _this162;
          }
          _createClass(Image, [{
            key: _r$$toHTML20,
            value: function value() {
              if (this.contentType && !p.has(this.contentType.toLowerCase())) return o.HTMLResult.EMPTY;
              var e = this[r.$globalData].images && this[r.$globalData].images.get(this.href);
              if (!e && (this.href || !this[r.$content])) return o.HTMLResult.EMPTY;
              e || "base64" !== this.transferEncoding || (e = (0, c.stringToBytes)(atob(this[r.$content])));
              if (!e) return o.HTMLResult.EMPTY;
              if (!this.contentType) {
                for (var _i227 = 0, _m7 = m; _i227 < _m7.length; _i227++) {
                  var _m7$_i = _slicedToArray(_m7[_i227], 2),
                    _t442 = _m7$_i[0],
                    _a352 = _m7$_i[1];
                  if (e.length > _t442.length && _t442.every(function (t, a) {
                    return t === e[a];
                  })) {
                    this.contentType = _a352;
                    break;
                  }
                }
                if (!this.contentType) return o.HTMLResult.EMPTY;
              }
              var t = new Blob([e], {
                type: this.contentType
              });
              var a;
              switch (this.aspect) {
                case "fit":
                case "actual":
                  break;
                case "height":
                  a = {
                    height: "100%",
                    objectFit: "fill"
                  };
                  break;
                case "none":
                  a = {
                    width: "100%",
                    height: "100%",
                    objectFit: "fill"
                  };
                  break;
                case "width":
                  a = {
                    width: "100%",
                    objectFit: "fill"
                  };
              }
              var i = this[r.$getParent]();
              return o.HTMLResult.success({
                name: "img",
                attributes: {
                  class: ["xfaImage"],
                  style: a,
                  src: URL.createObjectURL(t),
                  alt: i ? ariaLabel(i[r.$getParent]()) : null
                }
              });
            }
          }]);
          return Image;
        }(r.StringObject, r.$toHTML);
        var ImageEdit = /*#__PURE__*/function (_r$XFAObject45, _r$$toHTML21) {
          _inherits(ImageEdit, _r$XFAObject45);
          var _super162 = _createSuper(ImageEdit);
          function ImageEdit(e) {
            var _this163;
            _classCallCheck(this, ImageEdit);
            _this163 = _super162.call(this, d, "imageEdit", !0);
            _this163.data = (0, o.getStringOption)(e.data, ["link", "embed"]);
            _this163.id = e.id || "";
            _this163.use = e.use || "";
            _this163.usehref = e.usehref || "";
            _this163.border = null;
            _this163.extras = null;
            _this163.margin = null;
            return _this163;
          }
          _createClass(ImageEdit, [{
            key: _r$$toHTML21,
            value: function value(e) {
              return "embed" === this.data ? o.HTMLResult.success({
                name: "div",
                children: [],
                attributes: {}
              }) : o.HTMLResult.EMPTY;
            }
          }]);
          return ImageEdit;
        }(r.XFAObject, r.$toHTML);
        var Integer = /*#__PURE__*/function (_r$ContentObject6, _r$$finalize5, _r$$toHTML22) {
          _inherits(Integer, _r$ContentObject6);
          var _super163 = _createSuper(Integer);
          function Integer(e) {
            var _this164;
            _classCallCheck(this, Integer);
            _this164 = _super163.call(this, d, "integer");
            _this164.id = e.id || "";
            _this164.name = e.name || "";
            _this164.use = e.use || "";
            _this164.usehref = e.usehref || "";
            return _this164;
          }
          _createClass(Integer, [{
            key: _r$$finalize5,
            value: function value() {
              var e = parseInt(this[r.$content].trim(), 10);
              this[r.$content] = isNaN(e) ? null : e;
            }
          }, {
            key: _r$$toHTML22,
            value: function value(e) {
              return valueToHtml(null !== this[r.$content] ? this[r.$content].toString() : "");
            }
          }]);
          return Integer;
        }(r.ContentObject, r.$finalize, r.$toHTML);
        var Issuers = /*#__PURE__*/function (_r$XFAObject46) {
          _inherits(Issuers, _r$XFAObject46);
          var _super164 = _createSuper(Issuers);
          function Issuers(e) {
            var _this165;
            _classCallCheck(this, Issuers);
            _this165 = _super164.call(this, d, "issuers", !0);
            _this165.id = e.id || "";
            _this165.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this165.use = e.use || "";
            _this165.usehref = e.usehref || "";
            _this165.certificate = new r.XFAObjectArray();
            return _this165;
          }
          return _createClass(Issuers);
        }(r.XFAObject);
        var Items = /*#__PURE__*/function (_r$XFAObject47, _r$$toHTML23) {
          _inherits(Items, _r$XFAObject47);
          var _super165 = _createSuper(Items);
          function Items(e) {
            var _this166;
            _classCallCheck(this, Items);
            _this166 = _super165.call(this, d, "items", !0);
            _this166.id = e.id || "";
            _this166.name = e.name || "";
            _this166.presence = (0, o.getStringOption)(e.presence, ["visible", "hidden", "inactive", "invisible"]);
            _this166.ref = e.ref || "";
            _this166.save = (0, o.getInteger)({
              data: e.save,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this166.use = e.use || "";
            _this166.usehref = e.usehref || "";
            _this166.boolean = new r.XFAObjectArray();
            _this166.date = new r.XFAObjectArray();
            _this166.dateTime = new r.XFAObjectArray();
            _this166.decimal = new r.XFAObjectArray();
            _this166.exData = new r.XFAObjectArray();
            _this166.float = new r.XFAObjectArray();
            _this166.image = new r.XFAObjectArray();
            _this166.integer = new r.XFAObjectArray();
            _this166.text = new r.XFAObjectArray();
            _this166.time = new r.XFAObjectArray();
            return _this166;
          }
          _createClass(Items, [{
            key: _r$$toHTML23,
            value: function value() {
              var e = [];
              var _iterator191 = _createForOfIteratorHelper(this[r.$getChildren]()),
                _step191;
              try {
                for (_iterator191.s(); !(_step191 = _iterator191.n()).done;) {
                  var _t443 = _step191.value;
                  e.push(_t443[r.$text]());
                }
              } catch (err) {
                _iterator191.e(err);
              } finally {
                _iterator191.f();
              }
              return o.HTMLResult.success(e);
            }
          }]);
          return Items;
        }(r.XFAObject, r.$toHTML);
        t.Items = Items;
        var Keep = /*#__PURE__*/function (_r$XFAObject48) {
          _inherits(Keep, _r$XFAObject48);
          var _super166 = _createSuper(Keep);
          function Keep(e) {
            var _this167;
            _classCallCheck(this, Keep);
            _this167 = _super166.call(this, d, "keep", !0);
            _this167.id = e.id || "";
            var t = ["none", "contentArea", "pageArea"];
            _this167.intact = (0, o.getStringOption)(e.intact, t);
            _this167.next = (0, o.getStringOption)(e.next, t);
            _this167.previous = (0, o.getStringOption)(e.previous, t);
            _this167.use = e.use || "";
            _this167.usehref = e.usehref || "";
            _this167.extras = null;
            return _this167;
          }
          return _createClass(Keep);
        }(r.XFAObject);
        var KeyUsage = /*#__PURE__*/function (_r$XFAObject49) {
          _inherits(KeyUsage, _r$XFAObject49);
          var _super167 = _createSuper(KeyUsage);
          function KeyUsage(e) {
            var _this168;
            _classCallCheck(this, KeyUsage);
            _this168 = _super167.call(this, d, "keyUsage");
            var t = ["", "yes", "no"];
            _this168.crlSign = (0, o.getStringOption)(e.crlSign, t);
            _this168.dataEncipherment = (0, o.getStringOption)(e.dataEncipherment, t);
            _this168.decipherOnly = (0, o.getStringOption)(e.decipherOnly, t);
            _this168.digitalSignature = (0, o.getStringOption)(e.digitalSignature, t);
            _this168.encipherOnly = (0, o.getStringOption)(e.encipherOnly, t);
            _this168.id = e.id || "";
            _this168.keyAgreement = (0, o.getStringOption)(e.keyAgreement, t);
            _this168.keyCertSign = (0, o.getStringOption)(e.keyCertSign, t);
            _this168.keyEncipherment = (0, o.getStringOption)(e.keyEncipherment, t);
            _this168.nonRepudiation = (0, o.getStringOption)(e.nonRepudiation, t);
            _this168.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this168.use = e.use || "";
            _this168.usehref = e.usehref || "";
            return _this168;
          }
          return _createClass(KeyUsage);
        }(r.XFAObject);
        var Line = /*#__PURE__*/function (_r$XFAObject50, _r$$toHTML24) {
          _inherits(Line, _r$XFAObject50);
          var _super168 = _createSuper(Line);
          function Line(e) {
            var _this169;
            _classCallCheck(this, Line);
            _this169 = _super168.call(this, d, "line", !0);
            _this169.hand = (0, o.getStringOption)(e.hand, ["even", "left", "right"]);
            _this169.id = e.id || "";
            _this169.slope = (0, o.getStringOption)(e.slope, ["\\", "/"]);
            _this169.use = e.use || "";
            _this169.usehref = e.usehref || "";
            _this169.edge = null;
            return _this169;
          }
          _createClass(Line, [{
            key: _r$$toHTML24,
            value: function value() {
              var _ref101, _ref102;
              var e = this[r.$getParent]()[r.$getParent](),
                t = this.edge || new Edge({}),
                a = t[r.$toStyle](),
                i = Object.create(null),
                n = "visible" === t.presence ? t.thickness : 0;
              i.strokeWidth = (0, s.measureToString)(n);
              i.stroke = a.color;
              var c,
                l,
                h,
                u,
                d = "100%",
                g = "100%";
              if (e.w <= n) {
                c = "50%";
                l = 0;
                h = "50%";
                u = "100%";
                d = i.strokeWidth;
              } else if (e.h <= n) {
                c = 0;
                l = "50%";
                h = "100%";
                u = "50%";
                g = i.strokeWidth;
              } else "\\" === this.slope ? (_ref101 = [0, 0, "100%", "100%"], c = _ref101[0], l = _ref101[1], h = _ref101[2], u = _ref101[3], _ref101) : (_ref102 = [0, "100%", "100%", 0], c = _ref102[0], l = _ref102[1], h = _ref102[2], u = _ref102[3], _ref102);
              var p = {
                name: "svg",
                children: [{
                  name: "line",
                  attributes: {
                    xmlns: f,
                    x1: c,
                    y1: l,
                    x2: h,
                    y2: u,
                    style: i
                  }
                }],
                attributes: {
                  xmlns: f,
                  width: d,
                  height: g,
                  style: {
                    overflow: "visible"
                  }
                }
              };
              if (hasMargin(e)) return o.HTMLResult.success({
                name: "div",
                attributes: {
                  style: {
                    display: "inline",
                    width: "100%",
                    height: "100%"
                  }
                },
                children: [p]
              });
              p.attributes.style.position = "absolute";
              return o.HTMLResult.success(p);
            }
          }]);
          return Line;
        }(r.XFAObject, r.$toHTML);
        var Linear = /*#__PURE__*/function (_r$XFAObject51, _r$$toStyle7) {
          _inherits(Linear, _r$XFAObject51);
          var _super169 = _createSuper(Linear);
          function Linear(e) {
            var _this170;
            _classCallCheck(this, Linear);
            _this170 = _super169.call(this, d, "linear", !0);
            _this170.id = e.id || "";
            _this170.type = (0, o.getStringOption)(e.type, ["toRight", "toBottom", "toLeft", "toTop"]);
            _this170.use = e.use || "";
            _this170.usehref = e.usehref || "";
            _this170.color = null;
            _this170.extras = null;
            return _this170;
          }
          _createClass(Linear, [{
            key: _r$$toStyle7,
            value: function value(e) {
              e = e ? e[r.$toStyle]() : "#FFFFFF";
              return "linear-gradient(".concat(this.type.replace(/([RBLT])/, " $1").toLowerCase(), ", ").concat(e, ", ").concat(this.color ? this.color[r.$toStyle]() : "#000000", ")");
            }
          }]);
          return Linear;
        }(r.XFAObject, r.$toStyle);
        var LockDocument = /*#__PURE__*/function (_r$ContentObject7, _r$$finalize6) {
          _inherits(LockDocument, _r$ContentObject7);
          var _super170 = _createSuper(LockDocument);
          function LockDocument(e) {
            var _this171;
            _classCallCheck(this, LockDocument);
            _this171 = _super170.call(this, d, "lockDocument");
            _this171.id = e.id || "";
            _this171.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this171.use = e.use || "";
            _this171.usehref = e.usehref || "";
            return _this171;
          }
          _createClass(LockDocument, [{
            key: _r$$finalize6,
            value: function value() {
              this[r.$content] = (0, o.getStringOption)(this[r.$content], ["auto", "0", "1"]);
            }
          }]);
          return LockDocument;
        }(r.ContentObject, r.$finalize);
        var Manifest = /*#__PURE__*/function (_r$XFAObject52) {
          _inherits(Manifest, _r$XFAObject52);
          var _super171 = _createSuper(Manifest);
          function Manifest(e) {
            var _this172;
            _classCallCheck(this, Manifest);
            _this172 = _super171.call(this, d, "manifest", !0);
            _this172.action = (0, o.getStringOption)(e.action, ["include", "all", "exclude"]);
            _this172.id = e.id || "";
            _this172.name = e.name || "";
            _this172.use = e.use || "";
            _this172.usehref = e.usehref || "";
            _this172.extras = null;
            _this172.ref = new r.XFAObjectArray();
            return _this172;
          }
          return _createClass(Manifest);
        }(r.XFAObject);
        var Margin = /*#__PURE__*/function (_r$XFAObject53, _r$$toStyle8) {
          _inherits(Margin, _r$XFAObject53);
          var _super172 = _createSuper(Margin);
          function Margin(e) {
            var _this173;
            _classCallCheck(this, Margin);
            _this173 = _super172.call(this, d, "margin", !0);
            _this173.bottomInset = (0, o.getMeasurement)(e.bottomInset, "0");
            _this173.id = e.id || "";
            _this173.leftInset = (0, o.getMeasurement)(e.leftInset, "0");
            _this173.rightInset = (0, o.getMeasurement)(e.rightInset, "0");
            _this173.topInset = (0, o.getMeasurement)(e.topInset, "0");
            _this173.use = e.use || "";
            _this173.usehref = e.usehref || "";
            _this173.extras = null;
            return _this173;
          }
          _createClass(Margin, [{
            key: _r$$toStyle8,
            value: function value() {
              return {
                margin: (0, s.measureToString)(this.topInset) + " " + (0, s.measureToString)(this.rightInset) + " " + (0, s.measureToString)(this.bottomInset) + " " + (0, s.measureToString)(this.leftInset)
              };
            }
          }]);
          return Margin;
        }(r.XFAObject, r.$toStyle);
        var Mdp = /*#__PURE__*/function (_r$XFAObject54) {
          _inherits(Mdp, _r$XFAObject54);
          var _super173 = _createSuper(Mdp);
          function Mdp(e) {
            var _this174;
            _classCallCheck(this, Mdp);
            _this174 = _super173.call(this, d, "mdp");
            _this174.id = e.id || "";
            _this174.permissions = (0, o.getInteger)({
              data: e.permissions,
              defaultValue: 2,
              validate: function validate(e) {
                return 1 === e || 3 === e;
              }
            });
            _this174.signatureType = (0, o.getStringOption)(e.signatureType, ["filler", "author"]);
            _this174.use = e.use || "";
            _this174.usehref = e.usehref || "";
            return _this174;
          }
          return _createClass(Mdp);
        }(r.XFAObject);
        var Medium = /*#__PURE__*/function (_r$XFAObject55) {
          _inherits(Medium, _r$XFAObject55);
          var _super174 = _createSuper(Medium);
          function Medium(e) {
            var _this175;
            _classCallCheck(this, Medium);
            _this175 = _super174.call(this, d, "medium");
            _this175.id = e.id || "";
            _this175.imagingBBox = (0, o.getBBox)(e.imagingBBox);
            _this175.long = (0, o.getMeasurement)(e.long);
            _this175.orientation = (0, o.getStringOption)(e.orientation, ["portrait", "landscape"]);
            _this175.short = (0, o.getMeasurement)(e.short);
            _this175.stock = e.stock || "";
            _this175.trayIn = (0, o.getStringOption)(e.trayIn, ["auto", "delegate", "pageFront"]);
            _this175.trayOut = (0, o.getStringOption)(e.trayOut, ["auto", "delegate"]);
            _this175.use = e.use || "";
            _this175.usehref = e.usehref || "";
            return _this175;
          }
          return _createClass(Medium);
        }(r.XFAObject);
        var Message = /*#__PURE__*/function (_r$XFAObject56) {
          _inherits(Message, _r$XFAObject56);
          var _super175 = _createSuper(Message);
          function Message(e) {
            var _this176;
            _classCallCheck(this, Message);
            _this176 = _super175.call(this, d, "message", !0);
            _this176.id = e.id || "";
            _this176.use = e.use || "";
            _this176.usehref = e.usehref || "";
            _this176.text = new r.XFAObjectArray();
            return _this176;
          }
          return _createClass(Message);
        }(r.XFAObject);
        var NumericEdit = /*#__PURE__*/function (_r$XFAObject57, _r$$toHTML25) {
          _inherits(NumericEdit, _r$XFAObject57);
          var _super176 = _createSuper(NumericEdit);
          function NumericEdit(e) {
            var _this177;
            _classCallCheck(this, NumericEdit);
            _this177 = _super176.call(this, d, "numericEdit", !0);
            _this177.hScrollPolicy = (0, o.getStringOption)(e.hScrollPolicy, ["auto", "off", "on"]);
            _this177.id = e.id || "";
            _this177.use = e.use || "";
            _this177.usehref = e.usehref || "";
            _this177.border = null;
            _this177.comb = null;
            _this177.extras = null;
            _this177.margin = null;
            return _this177;
          }
          _createClass(NumericEdit, [{
            key: _r$$toHTML25,
            value: function value(e) {
              var t = (0, s.toStyle)(this, "border", "font", "margin"),
                a = this[r.$getParent]()[r.$getParent](),
                i = {
                  name: "input",
                  attributes: {
                    type: "text",
                    fieldId: a[r.$uid],
                    dataId: a[r.$data] && a[r.$data][r.$uid] || a[r.$uid],
                    class: ["xfaTextfield"],
                    style: t,
                    "aria-label": ariaLabel(a),
                    "aria-required": !1
                  }
                };
              if (isRequired(a)) {
                i.attributes["aria-required"] = !0;
                i.attributes.required = !0;
              }
              return o.HTMLResult.success({
                name: "label",
                attributes: {
                  class: ["xfaLabel"]
                },
                children: [i]
              });
            }
          }]);
          return NumericEdit;
        }(r.XFAObject, r.$toHTML);
        var Occur = /*#__PURE__*/function (_r$XFAObject58, _r$$clean2) {
          _inherits(Occur, _r$XFAObject58);
          var _super177 = _createSuper(Occur);
          function Occur(e) {
            var _this178;
            _classCallCheck(this, Occur);
            _this178 = _super177.call(this, d, "occur", !0);
            _this178.id = e.id || "";
            _this178.initial = "" !== e.initial ? (0, o.getInteger)({
              data: e.initial,
              defaultValue: "",
              validate: function validate(e) {
                return !0;
              }
            }) : "";
            _this178.max = "" !== e.max ? (0, o.getInteger)({
              data: e.max,
              defaultValue: 1,
              validate: function validate(e) {
                return !0;
              }
            }) : "";
            _this178.min = "" !== e.min ? (0, o.getInteger)({
              data: e.min,
              defaultValue: 1,
              validate: function validate(e) {
                return !0;
              }
            }) : "";
            _this178.use = e.use || "";
            _this178.usehref = e.usehref || "";
            _this178.extras = null;
            return _this178;
          }
          _createClass(Occur, [{
            key: _r$$clean2,
            value: function value() {
              var e = this[r.$getParent](),
                t = this.min;
              "" === this.min && (this.min = e instanceof PageArea || e instanceof PageSet ? 0 : 1);
              "" === this.max && (this.max = "" === t ? e instanceof PageArea || e instanceof PageSet ? -1 : 1 : this.min);
              -1 !== this.max && this.max < this.min && (this.max = this.min);
              "" === this.initial && (this.initial = e instanceof Template ? 1 : this.min);
            }
          }]);
          return Occur;
        }(r.XFAObject, r.$clean);
        var Oid = /*#__PURE__*/function (_r$StringObject5) {
          _inherits(Oid, _r$StringObject5);
          var _super178 = _createSuper(Oid);
          function Oid(e) {
            var _this179;
            _classCallCheck(this, Oid);
            _this179 = _super178.call(this, d, "oid");
            _this179.id = e.id || "";
            _this179.name = e.name || "";
            _this179.use = e.use || "";
            _this179.usehref = e.usehref || "";
            return _this179;
          }
          return _createClass(Oid);
        }(r.StringObject);
        var Oids = /*#__PURE__*/function (_r$XFAObject59) {
          _inherits(Oids, _r$XFAObject59);
          var _super179 = _createSuper(Oids);
          function Oids(e) {
            var _this180;
            _classCallCheck(this, Oids);
            _this180 = _super179.call(this, d, "oids", !0);
            _this180.id = e.id || "";
            _this180.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this180.use = e.use || "";
            _this180.usehref = e.usehref || "";
            _this180.oid = new r.XFAObjectArray();
            return _this180;
          }
          return _createClass(Oids);
        }(r.XFAObject);
        var Overflow = /*#__PURE__*/function (_r$XFAObject60, _r$$getExtra3) {
          _inherits(Overflow, _r$XFAObject60);
          var _super180 = _createSuper(Overflow);
          function Overflow(e) {
            var _this181;
            _classCallCheck(this, Overflow);
            _this181 = _super180.call(this, d, "overflow");
            _this181.id = e.id || "";
            _this181.leader = e.leader || "";
            _this181.target = e.target || "";
            _this181.trailer = e.trailer || "";
            _this181.use = e.use || "";
            _this181.usehref = e.usehref || "";
            return _this181;
          }
          _createClass(Overflow, [{
            key: _r$$getExtra3,
            value: function value() {
              if (!this[r.$extra]) {
                var _e588 = this[r.$getParent](),
                  _t444 = this[r.$getTemplateRoot](),
                  _a353 = _t444[r.$searchNode](this.target, _e588),
                  _i228 = _t444[r.$searchNode](this.leader, _e588),
                  _n149 = _t444[r.$searchNode](this.trailer, _e588);
                this[r.$extra] = {
                  target: _a353 && _a353[0] || null,
                  leader: _i228 && _i228[0] || null,
                  trailer: _n149 && _n149[0] || null,
                  addLeader: !1,
                  addTrailer: !1
                };
              }
              return this[r.$extra];
            }
          }]);
          return Overflow;
        }(r.XFAObject, r.$getExtra);
        var PageArea = /*#__PURE__*/function (_r$XFAObject61, _r$$isUsable, _r$$cleanPage, _r$$getNextPage, _r$$getAvailableSpace3, _r$$toHTML26) {
          _inherits(PageArea, _r$XFAObject61);
          var _super181 = _createSuper(PageArea);
          function PageArea(e) {
            var _this182;
            _classCallCheck(this, PageArea);
            _this182 = _super181.call(this, d, "pageArea", !0);
            _this182.blankOrNotBlank = (0, o.getStringOption)(e.blankOrNotBlank, ["any", "blank", "notBlank"]);
            _this182.id = e.id || "";
            _this182.initialNumber = (0, o.getInteger)({
              data: e.initialNumber,
              defaultValue: 1,
              validate: function validate(e) {
                return !0;
              }
            });
            _this182.name = e.name || "";
            _this182.numbered = (0, o.getInteger)({
              data: e.numbered,
              defaultValue: 1,
              validate: function validate(e) {
                return !0;
              }
            });
            _this182.oddOrEven = (0, o.getStringOption)(e.oddOrEven, ["any", "even", "odd"]);
            _this182.pagePosition = (0, o.getStringOption)(e.pagePosition, ["any", "first", "last", "only", "rest"]);
            _this182.relevant = (0, o.getRelevant)(e.relevant);
            _this182.use = e.use || "";
            _this182.usehref = e.usehref || "";
            _this182.desc = null;
            _this182.extras = null;
            _this182.medium = null;
            _this182.occur = null;
            _this182.area = new r.XFAObjectArray();
            _this182.contentArea = new r.XFAObjectArray();
            _this182.draw = new r.XFAObjectArray();
            _this182.exclGroup = new r.XFAObjectArray();
            _this182.field = new r.XFAObjectArray();
            _this182.subform = new r.XFAObjectArray();
            return _this182;
          }
          _createClass(PageArea, [{
            key: _r$$isUsable,
            value: function value() {
              if (!this[r.$extra]) {
                this[r.$extra] = {
                  numberOfUse: 0
                };
                return !0;
              }
              return !this.occur || -1 === this.occur.max || this[r.$extra].numberOfUse < this.occur.max;
            }
          }, {
            key: _r$$cleanPage,
            value: function value() {
              delete this[r.$extra];
            }
          }, {
            key: _r$$getNextPage,
            value: function value() {
              this[r.$extra] || (this[r.$extra] = {
                numberOfUse: 0
              });
              var e = this[r.$getParent]();
              if ("orderedOccurrence" === e.relation && this[r.$isUsable]()) {
                this[r.$extra].numberOfUse += 1;
                return this;
              }
              return e[r.$getNextPage]();
            }
          }, {
            key: _r$$getAvailableSpace3,
            value: function value() {
              return this[r.$extra].space || {
                width: 0,
                height: 0
              };
            }
          }, {
            key: _r$$toHTML26,
            value: function value() {
              this[r.$extra] || (this[r.$extra] = {
                numberOfUse: 1
              });
              var e = [];
              this[r.$extra].children = e;
              var t = Object.create(null);
              if (this.medium && this.medium.short && this.medium.long) {
                t.width = (0, s.measureToString)(this.medium.short);
                t.height = (0, s.measureToString)(this.medium.long);
                this[r.$extra].space = {
                  width: this.medium.short,
                  height: this.medium.long
                };
                if ("landscape" === this.medium.orientation) {
                  var _e589 = t.width;
                  t.width = t.height;
                  t.height = _e589;
                  this[r.$extra].space = {
                    width: this.medium.long,
                    height: this.medium.short
                  };
                }
              } else (0, c.warn)("XFA - No medium specified in pageArea: please file a bug.");
              this[r.$childrenToHTML]({
                filter: new Set(["area", "draw", "field", "subform"]),
                include: !0
              });
              this[r.$childrenToHTML]({
                filter: new Set(["contentArea"]),
                include: !0
              });
              return o.HTMLResult.success({
                name: "div",
                children: e,
                attributes: {
                  class: ["xfaPage"],
                  id: this[r.$uid],
                  style: t,
                  xfaName: this.name
                }
              });
            }
          }]);
          return PageArea;
        }(r.XFAObject, r.$isUsable, r.$cleanPage, r.$getNextPage, r.$getAvailableSpace, r.$toHTML);
        var PageSet = /*#__PURE__*/function (_r$XFAObject62, _r$$cleanPage2, _r$$isUsable2, _r$$getNextPage2) {
          _inherits(PageSet, _r$XFAObject62);
          var _super182 = _createSuper(PageSet);
          function PageSet(e) {
            var _this183;
            _classCallCheck(this, PageSet);
            _this183 = _super182.call(this, d, "pageSet", !0);
            _this183.duplexImposition = (0, o.getStringOption)(e.duplexImposition, ["longEdge", "shortEdge"]);
            _this183.id = e.id || "";
            _this183.name = e.name || "";
            _this183.relation = (0, o.getStringOption)(e.relation, ["orderedOccurrence", "duplexPaginated", "simplexPaginated"]);
            _this183.relevant = (0, o.getRelevant)(e.relevant);
            _this183.use = e.use || "";
            _this183.usehref = e.usehref || "";
            _this183.extras = null;
            _this183.occur = null;
            _this183.pageArea = new r.XFAObjectArray();
            _this183.pageSet = new r.XFAObjectArray();
            return _this183;
          }
          _createClass(PageSet, [{
            key: _r$$cleanPage2,
            value: function value() {
              var _iterator192 = _createForOfIteratorHelper(this.pageArea.children),
                _step192;
              try {
                for (_iterator192.s(); !(_step192 = _iterator192.n()).done;) {
                  var _e590 = _step192.value;
                  _e590[r.$cleanPage]();
                }
              } catch (err) {
                _iterator192.e(err);
              } finally {
                _iterator192.f();
              }
              var _iterator193 = _createForOfIteratorHelper(this.pageSet.children),
                _step193;
              try {
                for (_iterator193.s(); !(_step193 = _iterator193.n()).done;) {
                  var _e591 = _step193.value;
                  _e591[r.$cleanPage]();
                }
              } catch (err) {
                _iterator193.e(err);
              } finally {
                _iterator193.f();
              }
            }
          }, {
            key: _r$$isUsable2,
            value: function value() {
              return !this.occur || -1 === this.occur.max || this[r.$extra].numberOfUse < this.occur.max;
            }
          }, {
            key: _r$$getNextPage2,
            value: function value() {
              this[r.$extra] || (this[r.$extra] = {
                numberOfUse: 1,
                pageIndex: -1,
                pageSetIndex: -1
              });
              if ("orderedOccurrence" === this.relation) {
                if (this[r.$extra].pageIndex + 1 < this.pageArea.children.length) {
                  this[r.$extra].pageIndex += 1;
                  return this.pageArea.children[this[r.$extra].pageIndex][r.$getNextPage]();
                }
                if (this[r.$extra].pageSetIndex + 1 < this.pageSet.children.length) {
                  this[r.$extra].pageSetIndex += 1;
                  return this.pageSet.children[this[r.$extra].pageSetIndex][r.$getNextPage]();
                }
                if (this[r.$isUsable]()) {
                  this[r.$extra].numberOfUse += 1;
                  this[r.$extra].pageIndex = -1;
                  this[r.$extra].pageSetIndex = -1;
                  return this[r.$getNextPage]();
                }
                var _e592 = this[r.$getParent]();
                if (_e592 instanceof PageSet) return _e592[r.$getNextPage]();
                this[r.$cleanPage]();
                return this[r.$getNextPage]();
              }
              var e = this[r.$getTemplateRoot]()[r.$extra].pageNumber,
                t = e % 2 == 0 ? "even" : "odd",
                a = 0 === e ? "first" : "rest";
              var i = this.pageArea.children.find(function (e) {
                return e.oddOrEven === t && e.pagePosition === a;
              });
              if (i) return i;
              i = this.pageArea.children.find(function (e) {
                return "any" === e.oddOrEven && e.pagePosition === a;
              });
              if (i) return i;
              i = this.pageArea.children.find(function (e) {
                return "any" === e.oddOrEven && "any" === e.pagePosition;
              });
              return i || this.pageArea.children[0];
            }
          }]);
          return PageSet;
        }(r.XFAObject, r.$cleanPage, r.$isUsable, r.$getNextPage);
        var Para = /*#__PURE__*/function (_r$XFAObject63, _r$$toStyle9) {
          _inherits(Para, _r$XFAObject63);
          var _super183 = _createSuper(Para);
          function Para(e) {
            var _this184;
            _classCallCheck(this, Para);
            _this184 = _super183.call(this, d, "para", !0);
            _this184.hAlign = (0, o.getStringOption)(e.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]);
            _this184.id = e.id || "";
            _this184.lineHeight = e.lineHeight ? (0, o.getMeasurement)(e.lineHeight, "0pt") : "";
            _this184.marginLeft = e.marginLeft ? (0, o.getMeasurement)(e.marginLeft, "0pt") : "";
            _this184.marginRight = e.marginRight ? (0, o.getMeasurement)(e.marginRight, "0pt") : "";
            _this184.orphans = (0, o.getInteger)({
              data: e.orphans,
              defaultValue: 0,
              validate: function validate(e) {
                return e >= 0;
              }
            });
            _this184.preserve = e.preserve || "";
            _this184.radixOffset = e.radixOffset ? (0, o.getMeasurement)(e.radixOffset, "0pt") : "";
            _this184.spaceAbove = e.spaceAbove ? (0, o.getMeasurement)(e.spaceAbove, "0pt") : "";
            _this184.spaceBelow = e.spaceBelow ? (0, o.getMeasurement)(e.spaceBelow, "0pt") : "";
            _this184.tabDefault = e.tabDefault ? (0, o.getMeasurement)(_this184.tabDefault) : "";
            _this184.tabStops = (e.tabStops || "").trim().split(/\s+/).map(function (e, t) {
              return t % 2 == 1 ? (0, o.getMeasurement)(e) : e;
            });
            _this184.textIndent = e.textIndent ? (0, o.getMeasurement)(e.textIndent, "0pt") : "";
            _this184.use = e.use || "";
            _this184.usehref = e.usehref || "";
            _this184.vAlign = (0, o.getStringOption)(e.vAlign, ["top", "bottom", "middle"]);
            _this184.widows = (0, o.getInteger)({
              data: e.widows,
              defaultValue: 0,
              validate: function validate(e) {
                return e >= 0;
              }
            });
            _this184.hyphenation = null;
            return _this184;
          }
          _createClass(Para, [{
            key: _r$$toStyle9,
            value: function value() {
              var e = (0, s.toStyle)(this, "hAlign");
              "" !== this.marginLeft && (e.paddingLeft = (0, s.measureToString)(this.marginLeft));
              "" !== this.marginRight && (e.paddingight = (0, s.measureToString)(this.marginRight));
              "" !== this.spaceAbove && (e.paddingTop = (0, s.measureToString)(this.spaceAbove));
              "" !== this.spaceBelow && (e.paddingBottom = (0, s.measureToString)(this.spaceBelow));
              if ("" !== this.textIndent) {
                e.textIndent = (0, s.measureToString)(this.textIndent);
                (0, s.fixTextIndent)(e);
              }
              this.lineHeight > 0 && (e.lineHeight = (0, s.measureToString)(this.lineHeight));
              "" !== this.tabDefault && (e.tabSize = (0, s.measureToString)(this.tabDefault));
              this.tabStops.length;
              this.hyphenatation && Object.assign(e, this.hyphenatation[r.$toStyle]());
              return e;
            }
          }]);
          return Para;
        }(r.XFAObject, r.$toStyle);
        var PasswordEdit = /*#__PURE__*/function (_r$XFAObject64) {
          _inherits(PasswordEdit, _r$XFAObject64);
          var _super184 = _createSuper(PasswordEdit);
          function PasswordEdit(e) {
            var _this185;
            _classCallCheck(this, PasswordEdit);
            _this185 = _super184.call(this, d, "passwordEdit", !0);
            _this185.hScrollPolicy = (0, o.getStringOption)(e.hScrollPolicy, ["auto", "off", "on"]);
            _this185.id = e.id || "";
            _this185.passwordChar = e.passwordChar || "*";
            _this185.use = e.use || "";
            _this185.usehref = e.usehref || "";
            _this185.border = null;
            _this185.extras = null;
            _this185.margin = null;
            return _this185;
          }
          return _createClass(PasswordEdit);
        }(r.XFAObject);
        var Pattern = /*#__PURE__*/function (_r$XFAObject65, _r$$toStyle10) {
          _inherits(Pattern, _r$XFAObject65);
          var _super185 = _createSuper(Pattern);
          function Pattern(e) {
            var _this186;
            _classCallCheck(this, Pattern);
            _this186 = _super185.call(this, d, "pattern", !0);
            _this186.id = e.id || "";
            _this186.type = (0, o.getStringOption)(e.type, ["crossHatch", "crossDiagonal", "diagonalLeft", "diagonalRight", "horizontal", "vertical"]);
            _this186.use = e.use || "";
            _this186.usehref = e.usehref || "";
            _this186.color = null;
            _this186.extras = null;
            return _this186;
          }
          _createClass(Pattern, [{
            key: _r$$toStyle10,
            value: function value(e) {
              e = e ? e[r.$toStyle]() : "#FFFFFF";
              var t = this.color ? this.color[r.$toStyle]() : "#000000",
                a = "repeating-linear-gradient",
                i = "".concat(e, ",").concat(e, " 5px,").concat(t, " 5px,").concat(t, " 10px");
              switch (this.type) {
                case "crossHatch":
                  return "".concat(a, "(to top,").concat(i, ") ").concat(a, "(to right,").concat(i, ")");
                case "crossDiagonal":
                  return "".concat(a, "(45deg,").concat(i, ") ").concat(a, "(-45deg,").concat(i, ")");
                case "diagonalLeft":
                  return "".concat(a, "(45deg,").concat(i, ")");
                case "diagonalRight":
                  return "".concat(a, "(-45deg,").concat(i, ")");
                case "horizontal":
                  return "".concat(a, "(to top,").concat(i, ")");
                case "vertical":
                  return "".concat(a, "(to right,").concat(i, ")");
              }
              return "";
            }
          }]);
          return Pattern;
        }(r.XFAObject, r.$toStyle);
        var Picture = /*#__PURE__*/function (_r$StringObject6) {
          _inherits(Picture, _r$StringObject6);
          var _super186 = _createSuper(Picture);
          function Picture(e) {
            var _this187;
            _classCallCheck(this, Picture);
            _this187 = _super186.call(this, d, "picture");
            _this187.id = e.id || "";
            _this187.use = e.use || "";
            _this187.usehref = e.usehref || "";
            return _this187;
          }
          return _createClass(Picture);
        }(r.StringObject);
        var Proto = /*#__PURE__*/function (_r$XFAObject66) {
          _inherits(Proto, _r$XFAObject66);
          var _super187 = _createSuper(Proto);
          function Proto(e) {
            var _this188;
            _classCallCheck(this, Proto);
            _this188 = _super187.call(this, d, "proto", !0);
            _this188.appearanceFilter = new r.XFAObjectArray();
            _this188.arc = new r.XFAObjectArray();
            _this188.area = new r.XFAObjectArray();
            _this188.assist = new r.XFAObjectArray();
            _this188.barcode = new r.XFAObjectArray();
            _this188.bindItems = new r.XFAObjectArray();
            _this188.bookend = new r.XFAObjectArray();
            _this188.boolean = new r.XFAObjectArray();
            _this188.border = new r.XFAObjectArray();
            _this188.break = new r.XFAObjectArray();
            _this188.breakAfter = new r.XFAObjectArray();
            _this188.breakBefore = new r.XFAObjectArray();
            _this188.button = new r.XFAObjectArray();
            _this188.calculate = new r.XFAObjectArray();
            _this188.caption = new r.XFAObjectArray();
            _this188.certificate = new r.XFAObjectArray();
            _this188.certificates = new r.XFAObjectArray();
            _this188.checkButton = new r.XFAObjectArray();
            _this188.choiceList = new r.XFAObjectArray();
            _this188.color = new r.XFAObjectArray();
            _this188.comb = new r.XFAObjectArray();
            _this188.connect = new r.XFAObjectArray();
            _this188.contentArea = new r.XFAObjectArray();
            _this188.corner = new r.XFAObjectArray();
            _this188.date = new r.XFAObjectArray();
            _this188.dateTime = new r.XFAObjectArray();
            _this188.dateTimeEdit = new r.XFAObjectArray();
            _this188.decimal = new r.XFAObjectArray();
            _this188.defaultUi = new r.XFAObjectArray();
            _this188.desc = new r.XFAObjectArray();
            _this188.digestMethod = new r.XFAObjectArray();
            _this188.digestMethods = new r.XFAObjectArray();
            _this188.draw = new r.XFAObjectArray();
            _this188.edge = new r.XFAObjectArray();
            _this188.encoding = new r.XFAObjectArray();
            _this188.encodings = new r.XFAObjectArray();
            _this188.encrypt = new r.XFAObjectArray();
            _this188.encryptData = new r.XFAObjectArray();
            _this188.encryption = new r.XFAObjectArray();
            _this188.encryptionMethod = new r.XFAObjectArray();
            _this188.encryptionMethods = new r.XFAObjectArray();
            _this188.event = new r.XFAObjectArray();
            _this188.exData = new r.XFAObjectArray();
            _this188.exObject = new r.XFAObjectArray();
            _this188.exclGroup = new r.XFAObjectArray();
            _this188.execute = new r.XFAObjectArray();
            _this188.extras = new r.XFAObjectArray();
            _this188.field = new r.XFAObjectArray();
            _this188.fill = new r.XFAObjectArray();
            _this188.filter = new r.XFAObjectArray();
            _this188.float = new r.XFAObjectArray();
            _this188.font = new r.XFAObjectArray();
            _this188.format = new r.XFAObjectArray();
            _this188.handler = new r.XFAObjectArray();
            _this188.hyphenation = new r.XFAObjectArray();
            _this188.image = new r.XFAObjectArray();
            _this188.imageEdit = new r.XFAObjectArray();
            _this188.integer = new r.XFAObjectArray();
            _this188.issuers = new r.XFAObjectArray();
            _this188.items = new r.XFAObjectArray();
            _this188.keep = new r.XFAObjectArray();
            _this188.keyUsage = new r.XFAObjectArray();
            _this188.line = new r.XFAObjectArray();
            _this188.linear = new r.XFAObjectArray();
            _this188.lockDocument = new r.XFAObjectArray();
            _this188.manifest = new r.XFAObjectArray();
            _this188.margin = new r.XFAObjectArray();
            _this188.mdp = new r.XFAObjectArray();
            _this188.medium = new r.XFAObjectArray();
            _this188.message = new r.XFAObjectArray();
            _this188.numericEdit = new r.XFAObjectArray();
            _this188.occur = new r.XFAObjectArray();
            _this188.oid = new r.XFAObjectArray();
            _this188.oids = new r.XFAObjectArray();
            _this188.overflow = new r.XFAObjectArray();
            _this188.pageArea = new r.XFAObjectArray();
            _this188.pageSet = new r.XFAObjectArray();
            _this188.para = new r.XFAObjectArray();
            _this188.passwordEdit = new r.XFAObjectArray();
            _this188.pattern = new r.XFAObjectArray();
            _this188.picture = new r.XFAObjectArray();
            _this188.radial = new r.XFAObjectArray();
            _this188.reason = new r.XFAObjectArray();
            _this188.reasons = new r.XFAObjectArray();
            _this188.rectangle = new r.XFAObjectArray();
            _this188.ref = new r.XFAObjectArray();
            _this188.script = new r.XFAObjectArray();
            _this188.setProperty = new r.XFAObjectArray();
            _this188.signData = new r.XFAObjectArray();
            _this188.signature = new r.XFAObjectArray();
            _this188.signing = new r.XFAObjectArray();
            _this188.solid = new r.XFAObjectArray();
            _this188.speak = new r.XFAObjectArray();
            _this188.stipple = new r.XFAObjectArray();
            _this188.subform = new r.XFAObjectArray();
            _this188.subformSet = new r.XFAObjectArray();
            _this188.subjectDN = new r.XFAObjectArray();
            _this188.subjectDNs = new r.XFAObjectArray();
            _this188.submit = new r.XFAObjectArray();
            _this188.text = new r.XFAObjectArray();
            _this188.textEdit = new r.XFAObjectArray();
            _this188.time = new r.XFAObjectArray();
            _this188.timeStamp = new r.XFAObjectArray();
            _this188.toolTip = new r.XFAObjectArray();
            _this188.traversal = new r.XFAObjectArray();
            _this188.traverse = new r.XFAObjectArray();
            _this188.ui = new r.XFAObjectArray();
            _this188.validate = new r.XFAObjectArray();
            _this188.value = new r.XFAObjectArray();
            _this188.variables = new r.XFAObjectArray();
            return _this188;
          }
          return _createClass(Proto);
        }(r.XFAObject);
        var Radial = /*#__PURE__*/function (_r$XFAObject67, _r$$toStyle11) {
          _inherits(Radial, _r$XFAObject67);
          var _super188 = _createSuper(Radial);
          function Radial(e) {
            var _this189;
            _classCallCheck(this, Radial);
            _this189 = _super188.call(this, d, "radial", !0);
            _this189.id = e.id || "";
            _this189.type = (0, o.getStringOption)(e.type, ["toEdge", "toCenter"]);
            _this189.use = e.use || "";
            _this189.usehref = e.usehref || "";
            _this189.color = null;
            _this189.extras = null;
            return _this189;
          }
          _createClass(Radial, [{
            key: _r$$toStyle11,
            value: function value(e) {
              e = e ? e[r.$toStyle]() : "#FFFFFF";
              var t = this.color ? this.color[r.$toStyle]() : "#000000";
              return "radial-gradient(circle at center, ".concat("toEdge" === this.type ? "".concat(e, ",").concat(t) : "".concat(t, ",").concat(e), ")");
            }
          }]);
          return Radial;
        }(r.XFAObject, r.$toStyle);
        var Reason = /*#__PURE__*/function (_r$StringObject7) {
          _inherits(Reason, _r$StringObject7);
          var _super189 = _createSuper(Reason);
          function Reason(e) {
            var _this190;
            _classCallCheck(this, Reason);
            _this190 = _super189.call(this, d, "reason");
            _this190.id = e.id || "";
            _this190.name = e.name || "";
            _this190.use = e.use || "";
            _this190.usehref = e.usehref || "";
            return _this190;
          }
          return _createClass(Reason);
        }(r.StringObject);
        var Reasons = /*#__PURE__*/function (_r$XFAObject68) {
          _inherits(Reasons, _r$XFAObject68);
          var _super190 = _createSuper(Reasons);
          function Reasons(e) {
            var _this191;
            _classCallCheck(this, Reasons);
            _this191 = _super190.call(this, d, "reasons", !0);
            _this191.id = e.id || "";
            _this191.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this191.use = e.use || "";
            _this191.usehref = e.usehref || "";
            _this191.reason = new r.XFAObjectArray();
            return _this191;
          }
          return _createClass(Reasons);
        }(r.XFAObject);
        var Rectangle = /*#__PURE__*/function (_r$XFAObject69, _r$$toHTML27) {
          _inherits(Rectangle, _r$XFAObject69);
          var _super191 = _createSuper(Rectangle);
          function Rectangle(e) {
            var _this192;
            _classCallCheck(this, Rectangle);
            _this192 = _super191.call(this, d, "rectangle", !0);
            _this192.hand = (0, o.getStringOption)(e.hand, ["even", "left", "right"]);
            _this192.id = e.id || "";
            _this192.use = e.use || "";
            _this192.usehref = e.usehref || "";
            _this192.corner = new r.XFAObjectArray(4);
            _this192.edge = new r.XFAObjectArray(4);
            _this192.fill = null;
            return _this192;
          }
          _createClass(Rectangle, [{
            key: _r$$toHTML27,
            value: function value() {
              var e = this.edge.children.length ? this.edge.children[0] : new Edge({}),
                t = e[r.$toStyle](),
                a = Object.create(null);
              this.fill && "visible" === this.fill.presence ? Object.assign(a, this.fill[r.$toStyle]()) : a.fill = "transparent";
              a.strokeWidth = (0, s.measureToString)("visible" === e.presence ? e.thickness : 0);
              a.stroke = t.color;
              var i = (this.corner.children.length ? this.corner.children[0] : new Corner({}))[r.$toStyle](),
                n = {
                  name: "svg",
                  children: [{
                    name: "rect",
                    attributes: {
                      xmlns: f,
                      width: "100%",
                      height: "100%",
                      x: 0,
                      y: 0,
                      rx: i.radius,
                      ry: i.radius,
                      style: a
                    }
                  }],
                  attributes: {
                    xmlns: f,
                    style: {
                      overflow: "visible"
                    },
                    width: "100%",
                    height: "100%"
                  }
                };
              if (hasMargin(this[r.$getParent]()[r.$getParent]())) return o.HTMLResult.success({
                name: "div",
                attributes: {
                  style: {
                    display: "inline",
                    width: "100%",
                    height: "100%"
                  }
                },
                children: [n]
              });
              n.attributes.style.position = "absolute";
              return o.HTMLResult.success(n);
            }
          }]);
          return Rectangle;
        }(r.XFAObject, r.$toHTML);
        var RefElement = /*#__PURE__*/function (_r$StringObject8) {
          _inherits(RefElement, _r$StringObject8);
          var _super192 = _createSuper(RefElement);
          function RefElement(e) {
            var _this193;
            _classCallCheck(this, RefElement);
            _this193 = _super192.call(this, d, "ref");
            _this193.id = e.id || "";
            _this193.use = e.use || "";
            _this193.usehref = e.usehref || "";
            return _this193;
          }
          return _createClass(RefElement);
        }(r.StringObject);
        var Script = /*#__PURE__*/function (_r$StringObject9) {
          _inherits(Script, _r$StringObject9);
          var _super193 = _createSuper(Script);
          function Script(e) {
            var _this194;
            _classCallCheck(this, Script);
            _this194 = _super193.call(this, d, "script");
            _this194.binding = e.binding || "";
            _this194.contentType = e.contentType || "";
            _this194.id = e.id || "";
            _this194.name = e.name || "";
            _this194.runAt = (0, o.getStringOption)(e.runAt, ["client", "both", "server"]);
            _this194.use = e.use || "";
            _this194.usehref = e.usehref || "";
            return _this194;
          }
          return _createClass(Script);
        }(r.StringObject);
        var SetProperty = /*#__PURE__*/function (_r$XFAObject70) {
          _inherits(SetProperty, _r$XFAObject70);
          var _super194 = _createSuper(SetProperty);
          function SetProperty(e) {
            var _this195;
            _classCallCheck(this, SetProperty);
            _this195 = _super194.call(this, d, "setProperty");
            _this195.connection = e.connection || "";
            _this195.ref = e.ref || "";
            _this195.target = e.target || "";
            return _this195;
          }
          return _createClass(SetProperty);
        }(r.XFAObject);
        t.SetProperty = SetProperty;
        var SignData = /*#__PURE__*/function (_r$XFAObject71) {
          _inherits(SignData, _r$XFAObject71);
          var _super195 = _createSuper(SignData);
          function SignData(e) {
            var _this196;
            _classCallCheck(this, SignData);
            _this196 = _super195.call(this, d, "signData", !0);
            _this196.id = e.id || "";
            _this196.operation = (0, o.getStringOption)(e.operation, ["sign", "clear", "verify"]);
            _this196.ref = e.ref || "";
            _this196.target = e.target || "";
            _this196.use = e.use || "";
            _this196.usehref = e.usehref || "";
            _this196.filter = null;
            _this196.manifest = null;
            return _this196;
          }
          return _createClass(SignData);
        }(r.XFAObject);
        var Signature = /*#__PURE__*/function (_r$XFAObject72) {
          _inherits(Signature, _r$XFAObject72);
          var _super196 = _createSuper(Signature);
          function Signature(e) {
            var _this197;
            _classCallCheck(this, Signature);
            _this197 = _super196.call(this, d, "signature", !0);
            _this197.id = e.id || "";
            _this197.type = (0, o.getStringOption)(e.type, ["PDF1.3", "PDF1.6"]);
            _this197.use = e.use || "";
            _this197.usehref = e.usehref || "";
            _this197.border = null;
            _this197.extras = null;
            _this197.filter = null;
            _this197.manifest = null;
            _this197.margin = null;
            return _this197;
          }
          return _createClass(Signature);
        }(r.XFAObject);
        var Signing = /*#__PURE__*/function (_r$XFAObject73) {
          _inherits(Signing, _r$XFAObject73);
          var _super197 = _createSuper(Signing);
          function Signing(e) {
            var _this198;
            _classCallCheck(this, Signing);
            _this198 = _super197.call(this, d, "signing", !0);
            _this198.id = e.id || "";
            _this198.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this198.use = e.use || "";
            _this198.usehref = e.usehref || "";
            _this198.certificate = new r.XFAObjectArray();
            return _this198;
          }
          return _createClass(Signing);
        }(r.XFAObject);
        var Solid = /*#__PURE__*/function (_r$XFAObject74, _r$$toStyle12) {
          _inherits(Solid, _r$XFAObject74);
          var _super198 = _createSuper(Solid);
          function Solid(e) {
            var _this199;
            _classCallCheck(this, Solid);
            _this199 = _super198.call(this, d, "solid", !0);
            _this199.id = e.id || "";
            _this199.use = e.use || "";
            _this199.usehref = e.usehref || "";
            _this199.extras = null;
            return _this199;
          }
          _createClass(Solid, [{
            key: _r$$toStyle12,
            value: function value(e) {
              return e ? e[r.$toStyle]() : "#FFFFFF";
            }
          }]);
          return Solid;
        }(r.XFAObject, r.$toStyle);
        var Speak = /*#__PURE__*/function (_r$StringObject10) {
          _inherits(Speak, _r$StringObject10);
          var _super199 = _createSuper(Speak);
          function Speak(e) {
            var _this200;
            _classCallCheck(this, Speak);
            _this200 = _super199.call(this, d, "speak");
            _this200.disable = (0, o.getInteger)({
              data: e.disable,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this200.id = e.id || "";
            _this200.priority = (0, o.getStringOption)(e.priority, ["custom", "caption", "name", "toolTip"]);
            _this200.rid = e.rid || "";
            _this200.use = e.use || "";
            _this200.usehref = e.usehref || "";
            return _this200;
          }
          return _createClass(Speak);
        }(r.StringObject);
        var Stipple = /*#__PURE__*/function (_r$XFAObject75, _r$$toStyle13) {
          _inherits(Stipple, _r$XFAObject75);
          var _super200 = _createSuper(Stipple);
          function Stipple(e) {
            var _this201;
            _classCallCheck(this, Stipple);
            _this201 = _super200.call(this, d, "stipple", !0);
            _this201.id = e.id || "";
            _this201.rate = (0, o.getInteger)({
              data: e.rate,
              defaultValue: 50,
              validate: function validate(e) {
                return e >= 0 && e <= 100;
              }
            });
            _this201.use = e.use || "";
            _this201.usehref = e.usehref || "";
            _this201.color = null;
            _this201.extras = null;
            return _this201;
          }
          _createClass(Stipple, [{
            key: _r$$toStyle13,
            value: function value(e) {
              var t = this.rate / 100;
              return c.Util.makeHexColor(Math.round(e.value.r * (1 - t) + this.value.r * t), Math.round(e.value.g * (1 - t) + this.value.g * t), Math.round(e.value.b * (1 - t) + this.value.b * t));
            }
          }]);
          return Stipple;
        }(r.XFAObject, r.$toStyle);
        var Subform = /*#__PURE__*/function (_r$XFAObject76, _r$$getSubformParent, _r$$isBindable4, _r$$isThereMoreWidth2, _r$$getContainedChild2, _r$$flushHTML2, _r$$addHTML3, _r$$getAvailableSpace4, _r$$isSplittable2, _r$$toHTML28) {
          _inherits(Subform, _r$XFAObject76);
          var _super201 = _createSuper(Subform);
          function Subform(e) {
            var _this202;
            _classCallCheck(this, Subform);
            _this202 = _super201.call(this, d, "subform", !0);
            _this202.access = (0, o.getStringOption)(e.access, ["open", "nonInteractive", "protected", "readOnly"]);
            _this202.allowMacro = (0, o.getInteger)({
              data: e.allowMacro,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this202.anchorType = (0, o.getStringOption)(e.anchorType, ["topLeft", "bottomCenter", "bottomLeft", "bottomRight", "middleCenter", "middleLeft", "middleRight", "topCenter", "topRight"]);
            _this202.colSpan = (0, o.getInteger)({
              data: e.colSpan,
              defaultValue: 1,
              validate: function validate(e) {
                return e >= 1 || -1 === e;
              }
            });
            _this202.columnWidths = (e.columnWidths || "").trim().split(/\s+/).map(function (e) {
              return "-1" === e ? -1 : (0, o.getMeasurement)(e);
            });
            _this202.h = e.h ? (0, o.getMeasurement)(e.h) : "";
            _this202.hAlign = (0, o.getStringOption)(e.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]);
            _this202.id = e.id || "";
            _this202.layout = (0, o.getStringOption)(e.layout, ["position", "lr-tb", "rl-row", "rl-tb", "row", "table", "tb"]);
            _this202.locale = e.locale || "";
            _this202.maxH = (0, o.getMeasurement)(e.maxH, "0pt");
            _this202.maxW = (0, o.getMeasurement)(e.maxW, "0pt");
            _this202.mergeMode = (0, o.getStringOption)(e.mergeMode, ["consumeData", "matchTemplate"]);
            _this202.minH = (0, o.getMeasurement)(e.minH, "0pt");
            _this202.minW = (0, o.getMeasurement)(e.minW, "0pt");
            _this202.name = e.name || "";
            _this202.presence = (0, o.getStringOption)(e.presence, ["visible", "hidden", "inactive", "invisible"]);
            _this202.relevant = (0, o.getRelevant)(e.relevant);
            _this202.restoreState = (0, o.getStringOption)(e.restoreState, ["manual", "auto"]);
            _this202.scope = (0, o.getStringOption)(e.scope, ["name", "none"]);
            _this202.use = e.use || "";
            _this202.usehref = e.usehref || "";
            _this202.w = e.w ? (0, o.getMeasurement)(e.w) : "";
            _this202.x = (0, o.getMeasurement)(e.x, "0pt");
            _this202.y = (0, o.getMeasurement)(e.y, "0pt");
            _this202.assist = null;
            _this202.bind = null;
            _this202.bookend = null;
            _this202.border = null;
            _this202.break = null;
            _this202.calculate = null;
            _this202.desc = null;
            _this202.extras = null;
            _this202.keep = null;
            _this202.margin = null;
            _this202.occur = null;
            _this202.overflow = null;
            _this202.pageSet = null;
            _this202.para = null;
            _this202.traversal = null;
            _this202.validate = null;
            _this202.variables = null;
            _this202.area = new r.XFAObjectArray();
            _this202.breakAfter = new r.XFAObjectArray();
            _this202.breakBefore = new r.XFAObjectArray();
            _this202.connect = new r.XFAObjectArray();
            _this202.draw = new r.XFAObjectArray();
            _this202.event = new r.XFAObjectArray();
            _this202.exObject = new r.XFAObjectArray();
            _this202.exclGroup = new r.XFAObjectArray();
            _this202.field = new r.XFAObjectArray();
            _this202.proto = new r.XFAObjectArray();
            _this202.setProperty = new r.XFAObjectArray();
            _this202.subform = new r.XFAObjectArray();
            _this202.subformSet = new r.XFAObjectArray();
            return _this202;
          }
          _createClass(Subform, [{
            key: _r$$getSubformParent,
            value: function value() {
              var e = this[r.$getParent]();
              return e instanceof SubformSet ? e[r.$getSubformParent]() : e;
            }
          }, {
            key: _r$$isBindable4,
            value: function value() {
              return !0;
            }
          }, {
            key: _r$$isThereMoreWidth2,
            value: function value() {
              return this.layout.endsWith("-tb") && 0 === this[r.$extra].attempt && this[r.$extra].numberInLine > 0 || this[r.$getParent]()[r.$isThereMoreWidth]();
            }
          }, {
            key: _r$$getContainedChild2,
            value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {
              return _regeneratorRuntime().wrap(function value$(_context75) {
                while (1) switch (_context75.prev = _context75.next) {
                  case 0:
                    return _context75.delegateYield(getContainedChildren(this), "t0", 1);
                  case 1:
                  case "end":
                    return _context75.stop();
                }
              }, value, this);
            })
          }, {
            key: _r$$flushHTML2,
            value: function value() {
              return (0, n.flushHTML)(this);
            }
          }, {
            key: _r$$addHTML3,
            value: function value(e, t) {
              (0, n.addHTML)(this, e, t);
            }
          }, {
            key: _r$$getAvailableSpace4,
            value: function value() {
              return (0, n.getAvailableSpace)(this);
            }
          }, {
            key: _r$$isSplittable2,
            value: function value() {
              var e = this[r.$getSubformParent]();
              if (!e[r.$isSplittable]()) return !1;
              if (void 0 !== this[r.$extra]._isSplittable) return this[r.$extra]._isSplittable;
              if ("position" === this.layout || this.layout.includes("row")) {
                this[r.$extra]._isSplittable = !1;
                return !1;
              }
              if (this.keep && "none" !== this.keep.intact) {
                this[r.$extra]._isSplittable = !1;
                return !1;
              }
              if (e.layout && e.layout.endsWith("-tb") && 0 !== e[r.$extra].numberInLine) return !1;
              this[r.$extra]._isSplittable = !0;
              return !0;
            }
          }, {
            key: _r$$toHTML28,
            value: function value(e) {
              setTabIndex(this);
              if (this.break) {
                if ("auto" !== this.break.after || "" !== this.break.afterTarget) {
                  var _e593 = new BreakAfter({
                    targetType: this.break.after,
                    target: this.break.afterTarget,
                    startNew: this.break.startNew.toString()
                  });
                  _e593[r.$globalData] = this[r.$globalData];
                  this[r.$appendChild](_e593);
                  this.breakAfter.push(_e593);
                }
                if ("auto" !== this.break.before || "" !== this.break.beforeTarget) {
                  var _e594 = new BreakBefore({
                    targetType: this.break.before,
                    target: this.break.beforeTarget,
                    startNew: this.break.startNew.toString()
                  });
                  _e594[r.$globalData] = this[r.$globalData];
                  this[r.$appendChild](_e594);
                  this.breakBefore.push(_e594);
                }
                if ("" !== this.break.overflowTarget) {
                  var _e595 = new Overflow({
                    target: this.break.overflowTarget,
                    leader: this.break.overflowLeader,
                    trailer: this.break.overflowTrailer
                  });
                  _e595[r.$globalData] = this[r.$globalData];
                  this[r.$appendChild](_e595);
                  this.overflow.push(_e595);
                }
                this[r.$removeChild](this.break);
                this.break = null;
              }
              if ("hidden" === this.presence || "inactive" === this.presence) return o.HTMLResult.EMPTY;
              (this.breakBefore.children.length > 1 || this.breakAfter.children.length > 1) && (0, c.warn)("XFA - Several breakBefore or breakAfter in subforms: please file a bug.");
              if (this.breakBefore.children.length >= 1) {
                var _e596 = this.breakBefore.children[0];
                if (handleBreak(_e596)) return o.HTMLResult.breakNode(_e596);
              }
              if (this[r.$extra] && this[r.$extra].afterBreakAfter) return o.HTMLResult.EMPTY;
              (0, s.fixDimensions)(this);
              var t = [],
                a = {
                  id: this[r.$uid],
                  class: []
                };
              (0, s.setAccess)(this, a.class);
              this[r.$extra] || (this[r.$extra] = Object.create(null));
              Object.assign(this[r.$extra], {
                children: t,
                line: null,
                attributes: a,
                attempt: 0,
                numberInLine: 0,
                availableSpace: {
                  width: Math.min(this.w || 1 / 0, e.width),
                  height: Math.min(this.h || 1 / 0, e.height)
                },
                width: 0,
                height: 0,
                prevHeight: 0,
                currentWidth: 0
              });
              var i = this[r.$getTemplateRoot](),
                l = i[r.$extra].noLayoutFailure,
                h = this[r.$isSplittable]();
              h || setFirstUnsplittable(this);
              if (!(0, n.checkDimensions)(this, e)) return o.HTMLResult.FAILURE;
              var u = new Set(["area", "draw", "exclGroup", "field", "subform", "subformSet"]);
              if (this.layout.includes("row")) {
                var _e597 = this[r.$getSubformParent]().columnWidths;
                if (Array.isArray(_e597) && _e597.length > 0) {
                  this[r.$extra].columnWidths = _e597;
                  this[r.$extra].currentColumn = 0;
                }
              }
              var d = (0, s.toStyle)(this, "anchorType", "dimensions", "position", "presence", "border", "margin", "hAlign"),
                f = ["xfaSubform"],
                g = (0, s.layoutClass)(this);
              g && f.push(g);
              a.style = d;
              a.class = f;
              this.name && (a.xfaName = this.name);
              if (this.overflow) {
                var _t445 = this.overflow[r.$getExtra]();
                if (_t445.addLeader) {
                  _t445.addLeader = !1;
                  handleOverflow(this, _t445.leader, e);
                }
              }
              this[r.$pushPara]();
              var p = "lr-tb" === this.layout || "rl-tb" === this.layout,
                m = p ? 2 : 1;
              for (; this[r.$extra].attempt < m; this[r.$extra].attempt++) {
                p && 1 === this[r.$extra].attempt && (this[r.$extra].numberInLine = 0);
                var _e598 = this[r.$childrenToHTML]({
                  filter: u,
                  include: !0
                });
                if (_e598.success) break;
                if (_e598.isBreak()) {
                  this[r.$popPara]();
                  return _e598;
                }
                if (p && 0 === this[r.$extra].attempt && 0 === this[r.$extra].numberInLine && !i[r.$extra].noLayoutFailure) {
                  this[r.$extra].attempt = m;
                  break;
                }
              }
              this[r.$popPara]();
              h || unsetFirstUnsplittable(this);
              i[r.$extra].noLayoutFailure = l;
              if (this[r.$extra].attempt === m) {
                this.overflow && (this[r.$getTemplateRoot]()[r.$extra].overflowNode = this.overflow);
                h || delete this[r.$extra];
                return o.HTMLResult.FAILURE;
              }
              if (this.overflow) {
                var _t446 = this.overflow[r.$getExtra]();
                if (_t446.addTrailer) {
                  _t446.addTrailer = !1;
                  handleOverflow(this, _t446.trailer, e);
                }
              }
              var b = 0,
                y = 0;
              if (this.margin) {
                b = this.margin.leftInset + this.margin.rightInset;
                y = this.margin.topInset + this.margin.bottomInset;
              }
              var w = Math.max(this[r.$extra].width + b, this.w || 0),
                S = Math.max(this[r.$extra].height + y, this.h || 0),
                x = [this.x, this.y, w, S];
              "" === this.w && (d.width = (0, s.measureToString)(w));
              "" === this.h && (d.height = (0, s.measureToString)(S));
              if (("0px" === d.width || "0px" === d.height) && 0 === t.length) return o.HTMLResult.EMPTY;
              var C = {
                name: "div",
                attributes: a,
                children: t
              };
              applyAssist(this, a);
              var k = o.HTMLResult.success((0, s.createWrapper)(this, C), x);
              if (this.breakAfter.children.length >= 1) {
                var _e599 = this.breakAfter.children[0];
                if (handleBreak(_e599)) {
                  this[r.$extra].afterBreakAfter = k;
                  return o.HTMLResult.breakNode(_e599);
                }
              }
              delete this[r.$extra];
              return k;
            }
          }]);
          return Subform;
        }(r.XFAObject, r.$getSubformParent, r.$isBindable, r.$isThereMoreWidth, r.$getContainedChildren, r.$flushHTML, r.$addHTML, r.$getAvailableSpace, r.$isSplittable, r.$toHTML);
        var SubformSet = /*#__PURE__*/function (_r$XFAObject77, _r$$getContainedChild3, _r$$getSubformParent2, _r$$isBindable5) {
          _inherits(SubformSet, _r$XFAObject77);
          var _super202 = _createSuper(SubformSet);
          function SubformSet(e) {
            var _this203;
            _classCallCheck(this, SubformSet);
            _this203 = _super202.call(this, d, "subformSet", !0);
            _this203.id = e.id || "";
            _this203.name = e.name || "";
            _this203.relation = (0, o.getStringOption)(e.relation, ["ordered", "choice", "unordered"]);
            _this203.relevant = (0, o.getRelevant)(e.relevant);
            _this203.use = e.use || "";
            _this203.usehref = e.usehref || "";
            _this203.bookend = null;
            _this203.break = null;
            _this203.desc = null;
            _this203.extras = null;
            _this203.occur = null;
            _this203.overflow = null;
            _this203.breakAfter = new r.XFAObjectArray();
            _this203.breakBefore = new r.XFAObjectArray();
            _this203.subform = new r.XFAObjectArray();
            _this203.subformSet = new r.XFAObjectArray();
            return _this203;
          }
          _createClass(SubformSet, [{
            key: _r$$getContainedChild3,
            value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {
              return _regeneratorRuntime().wrap(function value$(_context76) {
                while (1) switch (_context76.prev = _context76.next) {
                  case 0:
                    return _context76.delegateYield(getContainedChildren(this), "t0", 1);
                  case 1:
                  case "end":
                    return _context76.stop();
                }
              }, value, this);
            })
          }, {
            key: _r$$getSubformParent2,
            value: function value() {
              var e = this[r.$getParent]();
              for (; !(e instanceof Subform);) e = e[r.$getParent]();
              return e;
            }
          }, {
            key: _r$$isBindable5,
            value: function value() {
              return !0;
            }
          }]);
          return SubformSet;
        }(r.XFAObject, r.$getContainedChildren, r.$getSubformParent, r.$isBindable);
        var SubjectDN = /*#__PURE__*/function (_r$ContentObject8, _r$$finalize7) {
          _inherits(SubjectDN, _r$ContentObject8);
          var _super203 = _createSuper(SubjectDN);
          function SubjectDN(e) {
            var _this204;
            _classCallCheck(this, SubjectDN);
            _this204 = _super203.call(this, d, "subjectDN");
            _this204.delimiter = e.delimiter || ",";
            _this204.id = e.id || "";
            _this204.name = e.name || "";
            _this204.use = e.use || "";
            _this204.usehref = e.usehref || "";
            return _this204;
          }
          _createClass(SubjectDN, [{
            key: _r$$finalize7,
            value: function value() {
              this[r.$content] = new Map(this[r.$content].split(this.delimiter).map(function (e) {
                (e = e.split("=", 2))[0] = e[0].trim();
                return e;
              }));
            }
          }]);
          return SubjectDN;
        }(r.ContentObject, r.$finalize);
        var SubjectDNs = /*#__PURE__*/function (_r$XFAObject78) {
          _inherits(SubjectDNs, _r$XFAObject78);
          var _super204 = _createSuper(SubjectDNs);
          function SubjectDNs(e) {
            var _this205;
            _classCallCheck(this, SubjectDNs);
            _this205 = _super204.call(this, d, "subjectDNs", !0);
            _this205.id = e.id || "";
            _this205.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this205.use = e.use || "";
            _this205.usehref = e.usehref || "";
            _this205.subjectDN = new r.XFAObjectArray();
            return _this205;
          }
          return _createClass(SubjectDNs);
        }(r.XFAObject);
        var Submit = /*#__PURE__*/function (_r$XFAObject79) {
          _inherits(Submit, _r$XFAObject79);
          var _super205 = _createSuper(Submit);
          function Submit(e) {
            var _this206;
            _classCallCheck(this, Submit);
            _this206 = _super205.call(this, d, "submit", !0);
            _this206.embedPDF = (0, o.getInteger)({
              data: e.embedPDF,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this206.format = (0, o.getStringOption)(e.format, ["xdp", "formdata", "pdf", "urlencoded", "xfd", "xml"]);
            _this206.id = e.id || "";
            _this206.target = e.target || "";
            _this206.textEncoding = (0, o.getKeyword)({
              data: e.textEncoding ? e.textEncoding.toLowerCase() : "",
              defaultValue: "",
              validate: function validate(e) {
                return ["utf-8", "big-five", "fontspecific", "gbk", "gb-18030", "gb-2312", "ksc-5601", "none", "shift-jis", "ucs-2", "utf-16"].includes(e) || e.match(/iso-8859-\d{2}/);
              }
            });
            _this206.use = e.use || "";
            _this206.usehref = e.usehref || "";
            _this206.xdpContent = e.xdpContent || "";
            _this206.encrypt = null;
            _this206.encryptData = new r.XFAObjectArray();
            _this206.signData = new r.XFAObjectArray();
            return _this206;
          }
          return _createClass(Submit);
        }(r.XFAObject);
        var Template = /*#__PURE__*/function (_r$XFAObject80, _r$$finalize8, _r$$isSplittable3, _r$$searchNode, _r$$toPages) {
          _inherits(Template, _r$XFAObject80);
          var _super206 = _createSuper(Template);
          function Template(e) {
            var _this207;
            _classCallCheck(this, Template);
            _this207 = _super206.call(this, d, "template", !0);
            _this207.baseProfile = (0, o.getStringOption)(e.baseProfile, ["full", "interactiveForms"]);
            _this207.extras = null;
            _this207.subform = new r.XFAObjectArray();
            return _this207;
          }
          _createClass(Template, [{
            key: _r$$finalize8,
            value: function value() {
              0 === this.subform.children.length && (0, c.warn)("XFA - No subforms in template node.");
              this.subform.children.length >= 2 && (0, c.warn)("XFA - Several subforms in template node: please file a bug.");
              this[r.$tabIndex] = 5e3;
            }
          }, {
            key: _r$$isSplittable3,
            value: function value() {
              return !0;
            }
          }, {
            key: _r$$searchNode,
            value: function value(e, t) {
              return e.startsWith("#") ? [this[r.$ids].get(e.slice(1))] : (0, u.searchNode)(this, t, e, !0, !0);
            }
          }, {
            key: _r$$toPages,
            value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {
              var _this208 = this;
              var e, t, a, i, n, s, _e600, l, h, u, d, f, g, p, _loop7, _ret2;
              return _regeneratorRuntime().wrap(function value$(_context78) {
                while (1) switch (_context78.prev = _context78.next) {
                  case 0:
                    if (this.subform.children.length) {
                      _context78.next = 2;
                      break;
                    }
                    return _context78.abrupt("return", o.HTMLResult.success({
                      name: "div",
                      children: []
                    }));
                  case 2:
                    this[r.$extra] = {
                      overflowNode: null,
                      firstUnsplittable: null,
                      currentContentArea: null,
                      currentPageArea: null,
                      noLayoutFailure: !1,
                      pageNumber: 1,
                      pagePosition: "first",
                      oddOrEven: "odd",
                      blankOrNotBlank: "nonBlank",
                      paraStack: []
                    };
                    e = this.subform.children[0];
                    e.pageSet[r.$cleanPage]();
                    t = e.pageSet.pageArea.children, a = {
                      name: "div",
                      children: []
                    };
                    i = null, n = null, s = null;
                    if (e.breakBefore.children.length >= 1) {
                      n = e.breakBefore.children[0];
                      s = n.target;
                    } else if (e.subform.children.length >= 1 && e.subform.children[0].breakBefore.children.length >= 1) {
                      n = e.subform.children[0].breakBefore.children[0];
                      s = n.target;
                    } else if (e.break && e.break.beforeTarget) {
                      n = e.break;
                      s = n.beforeTarget;
                    } else if (e.subform.children.length >= 1 && e.subform.children[0].break && e.subform.children[0].break.beforeTarget) {
                      n = e.subform.children[0].break;
                      s = n.beforeTarget;
                    }
                    if (n) {
                      _e600 = this[r.$searchNode](s, n[r.$getParent]());
                      if (_e600 instanceof PageArea) {
                        i = _e600;
                        n[r.$extra] = {};
                      }
                    }
                    i || (i = t[0]);
                    i[r.$extra] = {
                      numberOfUse: 1
                    };
                    l = i[r.$getParent]();
                    l[r.$extra] = {
                      numberOfUse: 1,
                      pageIndex: l.pageArea.children.indexOf(i),
                      pageSetIndex: 0
                    };
                    u = null, d = null, f = !0, g = 0, p = 0;
                    _loop7 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop7() {
                      var t, n, s, flush, _t447, _i229, _i230, _o87, _c60, _e601, _e602, _a354, _i231, _s124, _e603;
                      return _regeneratorRuntime().wrap(function _loop7$(_context77) {
                        while (1) switch (_context77.prev = _context77.next) {
                          case 0:
                            if (!f) {
                              _context77.next = 4;
                              break;
                            }
                            g = 0;
                            _context77.next = 8;
                            break;
                          case 4:
                            a.children.pop();
                            if (!(3 == ++g)) {
                              _context77.next = 8;
                              break;
                            }
                            (0, c.warn)("XFA - Something goes wrong: please file a bug.");
                            return _context77.abrupt("return", {
                              v: a
                            });
                          case 8:
                            h = null;
                            _this208[r.$extra].currentPageArea = i;
                            t = i[r.$toHTML]().html;
                            a.children.push(t);
                            if (u) {
                              _this208[r.$extra].noLayoutFailure = !0;
                              t.children.push(u[r.$toHTML](i[r.$extra].space).html);
                              u = null;
                            }
                            if (d) {
                              _this208[r.$extra].noLayoutFailure = !0;
                              t.children.push(d[r.$toHTML](i[r.$extra].space).html);
                              d = null;
                            }
                            n = i.contentArea.children, s = t.children.filter(function (e) {
                              return e.attributes.class.includes("xfaContentarea");
                            });
                            f = !1;
                            _this208[r.$extra].firstUnsplittable = null;
                            _this208[r.$extra].noLayoutFailure = !1;
                            flush = function flush(t) {
                              var a = e[r.$flushHTML]();
                              if (a) {
                                f || (f = !!a.children && 0 !== a.children.length);
                                s[t].children.push(a);
                              }
                            };
                            _t447 = p, _i229 = n.length;
                          case 20:
                            if (!(_t447 < _i229)) {
                              _context77.next = 43;
                              break;
                            }
                            _i230 = _this208[r.$extra].currentContentArea = n[_t447], _o87 = {
                              width: _i230.w,
                              height: _i230.h
                            };
                            p = 0;
                            if (u) {
                              s[_t447].children.push(u[r.$toHTML](_o87).html);
                              u = null;
                            }
                            if (d) {
                              s[_t447].children.push(d[r.$toHTML](_o87).html);
                              d = null;
                            }
                            _c60 = e[r.$toHTML](_o87);
                            if (!_c60.success) {
                              _context77.next = 29;
                              break;
                            }
                            if (_c60.html) {
                              f || (f = !!_c60.html.children && 0 !== _c60.html.children.length);
                              s[_t447].children.push(_c60.html);
                            } else !f && a.children.length > 1 && a.children.pop();
                            return _context77.abrupt("return", {
                              v: a
                            });
                          case 29:
                            if (!_c60.isBreak()) {
                              _context77.next = 39;
                              break;
                            }
                            _e601 = _c60.breakNode;
                            flush(_t447);
                            if (!("auto" === _e601.targetType)) {
                              _context77.next = 34;
                              break;
                            }
                            return _context77.abrupt("continue", 40);
                          case 34:
                            if (_e601.leader) {
                              u = _this208[r.$searchNode](_e601.leader, _e601[r.$getParent]());
                              u = u ? u[0] : null;
                            }
                            if (_e601.trailer) {
                              d = _this208[r.$searchNode](_e601.trailer, _e601[r.$getParent]());
                              d = d ? d[0] : null;
                            }
                            if ("pageArea" === _e601.targetType) {
                              h = _e601[r.$extra].target;
                              _t447 = 1 / 0;
                            } else if (_e601[r.$extra].target) {
                              h = _e601[r.$extra].target;
                              p = _e601[r.$extra].index + 1;
                              _t447 = 1 / 0;
                            } else _t447 = _e601[r.$extra].index;
                            _context77.next = 40;
                            break;
                          case 39:
                            if (_this208[r.$extra].overflowNode) {
                              _e602 = _this208[r.$extra].overflowNode;
                              _this208[r.$extra].overflowNode = null;
                              _a354 = _e602[r.$getExtra](), _i231 = _a354.target;
                              _a354.addLeader = null !== _a354.leader;
                              _a354.addTrailer = null !== _a354.trailer;
                              flush(_t447);
                              _s124 = _t447;
                              _t447 = 1 / 0;
                              if (_i231 instanceof PageArea) h = _i231;else if (_i231 instanceof ContentArea) {
                                _e603 = n.indexOf(_i231);
                                if (-1 !== _e603) _e603 > _s124 ? _t447 = _e603 - 1 : p = _e603;else {
                                  h = _i231[r.$getParent]();
                                  p = h.contentArea.children.indexOf(_i231);
                                }
                              }
                            } else flush(_t447);
                          case 40:
                            _t447++;
                            _context77.next = 20;
                            break;
                          case 43:
                            _this208[r.$extra].pageNumber += 1;
                            h && (h[r.$isUsable]() ? h[r.$extra].numberOfUse += 1 : h = null);
                            i = h || i[r.$getNextPage]();
                            _context77.next = 48;
                            return null;
                          case 48:
                          case "end":
                            return _context77.stop();
                        }
                      }, _loop7);
                    });
                  case 15:
                    return _context78.delegateYield(_loop7(), "t0", 16);
                  case 16:
                    _ret2 = _context78.t0;
                    if (!(typeof _ret2 === "object")) {
                      _context78.next = 19;
                      break;
                    }
                    return _context78.abrupt("return", _ret2.v);
                  case 19:
                    _context78.next = 15;
                    break;
                  case 21:
                  case "end":
                    return _context78.stop();
                }
              }, value, this);
            })
          }]);
          return Template;
        }(r.XFAObject, r.$finalize, r.$isSplittable, r.$searchNode, r.$toPages);
        t.Template = Template;
        var Text = /*#__PURE__*/function (_r$ContentObject9, _r$$acceptWhitespace, _r$$onChild2, _r$$onText, _r$$finalize9, _r$$getExtra4, _r$$toHTML29) {
          _inherits(Text, _r$ContentObject9);
          var _super207 = _createSuper(Text);
          function Text(e) {
            var _this209;
            _classCallCheck(this, Text);
            _this209 = _super207.call(this, d, "text");
            _this209.id = e.id || "";
            _this209.maxChars = (0, o.getInteger)({
              data: e.maxChars,
              defaultValue: 0,
              validate: function validate(e) {
                return e >= 0;
              }
            });
            _this209.name = e.name || "";
            _this209.rid = e.rid || "";
            _this209.use = e.use || "";
            _this209.usehref = e.usehref || "";
            return _this209;
          }
          _createClass(Text, [{
            key: _r$$acceptWhitespace,
            value: function value() {
              return !0;
            }
          }, {
            key: _r$$onChild2,
            value: function value(e) {
              if (e[r.$namespaceId] === i.NamespaceIds.xhtml.id) {
                this[r.$content] = e;
                return !0;
              }
              (0, c.warn)("XFA - Invalid content in Text: ".concat(e[r.$nodeName], "."));
              return !1;
            }
          }, {
            key: _r$$onText,
            value: function value(e) {
              this[r.$content] instanceof r.XFAObject || _get(_getPrototypeOf(Text.prototype), r.$onText, this).call(this, e);
            }
          }, {
            key: _r$$finalize9,
            value: function value() {
              "string" == typeof this[r.$content] && (this[r.$content] = this[r.$content].replaceAll("\r\n", "\n"));
            }
          }, {
            key: _r$$getExtra4,
            value: function value() {
              return "string" == typeof this[r.$content] ? this[r.$content].split(/[\u2029\u2028\n]/).reduce(function (e, t) {
                t && e.push(t);
                return e;
              }, []).join("\n") : this[r.$content][r.$text]();
            }
          }, {
            key: _r$$toHTML29,
            value: function value(e) {
              if ("string" == typeof this[r.$content]) {
                var _e604 = valueToHtml(this[r.$content]).html;
                if (this[r.$content].includes("\u2029")) {
                  _e604.name = "div";
                  _e604.children = [];
                  this[r.$content].split("\u2029").map(function (e) {
                    return e.split(/[\u2028\n]/).reduce(function (e, t) {
                      e.push({
                        name: "span",
                        value: t
                      }, {
                        name: "br"
                      });
                      return e;
                    }, []);
                  }).forEach(function (t) {
                    _e604.children.push({
                      name: "p",
                      children: t
                    });
                  });
                } else if (/[\u2028\n]/.test(this[r.$content])) {
                  _e604.name = "div";
                  _e604.children = [];
                  this[r.$content].split(/[\u2028\n]/).forEach(function (t) {
                    _e604.children.push({
                      name: "span",
                      value: t
                    }, {
                      name: "br"
                    });
                  });
                }
                return o.HTMLResult.success(_e604);
              }
              return this[r.$content][r.$toHTML](e);
            }
          }]);
          return Text;
        }(r.ContentObject, r.$acceptWhitespace, r.$onChild, r.$onText, r.$finalize, r.$getExtra, r.$toHTML);
        t.Text = Text;
        var TextEdit = /*#__PURE__*/function (_r$XFAObject81, _r$$toHTML30) {
          _inherits(TextEdit, _r$XFAObject81);
          var _super208 = _createSuper(TextEdit);
          function TextEdit(e) {
            var _this210;
            _classCallCheck(this, TextEdit);
            _this210 = _super208.call(this, d, "textEdit", !0);
            _this210.allowRichText = (0, o.getInteger)({
              data: e.allowRichText,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this210.hScrollPolicy = (0, o.getStringOption)(e.hScrollPolicy, ["auto", "off", "on"]);
            _this210.id = e.id || "";
            _this210.multiLine = (0, o.getInteger)({
              data: e.multiLine,
              defaultValue: "",
              validate: function validate(e) {
                return 0 === e || 1 === e;
              }
            });
            _this210.use = e.use || "";
            _this210.usehref = e.usehref || "";
            _this210.vScrollPolicy = (0, o.getStringOption)(e.vScrollPolicy, ["auto", "off", "on"]);
            _this210.border = null;
            _this210.comb = null;
            _this210.extras = null;
            _this210.margin = null;
            return _this210;
          }
          _createClass(TextEdit, [{
            key: _r$$toHTML30,
            value: function value(e) {
              var t = (0, s.toStyle)(this, "border", "font", "margin");
              var a;
              var i = this[r.$getParent]()[r.$getParent]();
              "" === this.multiLine && (this.multiLine = i instanceof Draw ? 1 : 0);
              a = 1 === this.multiLine ? {
                name: "textarea",
                attributes: {
                  dataId: i[r.$data] && i[r.$data][r.$uid] || i[r.$uid],
                  fieldId: i[r.$uid],
                  class: ["xfaTextfield"],
                  style: t,
                  "aria-label": ariaLabel(i),
                  "aria-required": !1
                }
              } : {
                name: "input",
                attributes: {
                  type: "text",
                  dataId: i[r.$data] && i[r.$data][r.$uid] || i[r.$uid],
                  fieldId: i[r.$uid],
                  class: ["xfaTextfield"],
                  style: t,
                  "aria-label": ariaLabel(i),
                  "aria-required": !1
                }
              };
              if (isRequired(i)) {
                a.attributes["aria-required"] = !0;
                a.attributes.required = !0;
              }
              return o.HTMLResult.success({
                name: "label",
                attributes: {
                  class: ["xfaLabel"]
                },
                children: [a]
              });
            }
          }]);
          return TextEdit;
        }(r.XFAObject, r.$toHTML);
        var Time = /*#__PURE__*/function (_r$StringObject11, _r$$finalize10, _r$$toHTML31) {
          _inherits(Time, _r$StringObject11);
          var _super209 = _createSuper(Time);
          function Time(e) {
            var _this211;
            _classCallCheck(this, Time);
            _this211 = _super209.call(this, d, "time");
            _this211.id = e.id || "";
            _this211.name = e.name || "";
            _this211.use = e.use || "";
            _this211.usehref = e.usehref || "";
            return _this211;
          }
          _createClass(Time, [{
            key: _r$$finalize10,
            value: function value() {
              var e = this[r.$content].trim();
              this[r.$content] = e ? new Date(e) : null;
            }
          }, {
            key: _r$$toHTML31,
            value: function value(e) {
              return valueToHtml(this[r.$content] ? this[r.$content].toString() : "");
            }
          }]);
          return Time;
        }(r.StringObject, r.$finalize, r.$toHTML);
        var TimeStamp = /*#__PURE__*/function (_r$XFAObject82) {
          _inherits(TimeStamp, _r$XFAObject82);
          var _super210 = _createSuper(TimeStamp);
          function TimeStamp(e) {
            var _this212;
            _classCallCheck(this, TimeStamp);
            _this212 = _super210.call(this, d, "timeStamp");
            _this212.id = e.id || "";
            _this212.server = e.server || "";
            _this212.type = (0, o.getStringOption)(e.type, ["optional", "required"]);
            _this212.use = e.use || "";
            _this212.usehref = e.usehref || "";
            return _this212;
          }
          return _createClass(TimeStamp);
        }(r.XFAObject);
        var ToolTip = /*#__PURE__*/function (_r$StringObject12) {
          _inherits(ToolTip, _r$StringObject12);
          var _super211 = _createSuper(ToolTip);
          function ToolTip(e) {
            var _this213;
            _classCallCheck(this, ToolTip);
            _this213 = _super211.call(this, d, "toolTip");
            _this213.id = e.id || "";
            _this213.rid = e.rid || "";
            _this213.use = e.use || "";
            _this213.usehref = e.usehref || "";
            return _this213;
          }
          return _createClass(ToolTip);
        }(r.StringObject);
        var Traversal = /*#__PURE__*/function (_r$XFAObject83) {
          _inherits(Traversal, _r$XFAObject83);
          var _super212 = _createSuper(Traversal);
          function Traversal(e) {
            var _this214;
            _classCallCheck(this, Traversal);
            _this214 = _super212.call(this, d, "traversal", !0);
            _this214.id = e.id || "";
            _this214.use = e.use || "";
            _this214.usehref = e.usehref || "";
            _this214.extras = null;
            _this214.traverse = new r.XFAObjectArray();
            return _this214;
          }
          return _createClass(Traversal);
        }(r.XFAObject);
        var Traverse = /*#__PURE__*/function (_r$XFAObject84, _r$$isTransparent2) {
          _inherits(Traverse, _r$XFAObject84);
          var _super213 = _createSuper(Traverse);
          function Traverse(e) {
            var _this215;
            _classCallCheck(this, Traverse);
            _this215 = _super213.call(this, d, "traverse", !0);
            _this215.id = e.id || "";
            _this215.operation = (0, o.getStringOption)(e.operation, ["next", "back", "down", "first", "left", "right", "up"]);
            _this215.ref = e.ref || "";
            _this215.use = e.use || "";
            _this215.usehref = e.usehref || "";
            _this215.extras = null;
            _this215.script = null;
            return _this215;
          }
          _createClass(Traverse, [{
            key: "name",
            get: function get() {
              return this.operation;
            }
          }, {
            key: _r$$isTransparent2,
            value: function value() {
              return !1;
            }
          }]);
          return Traverse;
        }(r.XFAObject, r.$isTransparent);
        var Ui = /*#__PURE__*/function (_r$XFAObject85, _r$$getExtra5, _r$$toHTML32) {
          _inherits(Ui, _r$XFAObject85);
          var _super214 = _createSuper(Ui);
          function Ui(e) {
            var _this216;
            _classCallCheck(this, Ui);
            _this216 = _super214.call(this, d, "ui", !0);
            _this216.id = e.id || "";
            _this216.use = e.use || "";
            _this216.usehref = e.usehref || "";
            _this216.extras = null;
            _this216.picture = null;
            _this216.barcode = null;
            _this216.button = null;
            _this216.checkButton = null;
            _this216.choiceList = null;
            _this216.dateTimeEdit = null;
            _this216.defaultUi = null;
            _this216.imageEdit = null;
            _this216.numericEdit = null;
            _this216.passwordEdit = null;
            _this216.signature = null;
            _this216.textEdit = null;
            return _this216;
          }
          _createClass(Ui, [{
            key: _r$$getExtra5,
            value: function value() {
              if (void 0 === this[r.$extra]) {
                var _iterator194 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this)),
                  _step194;
                try {
                  for (_iterator194.s(); !(_step194 = _iterator194.n()).done;) {
                    var _e605 = _step194.value;
                    if ("extras" === _e605 || "picture" === _e605) continue;
                    var _t448 = this[_e605];
                    if (_t448 instanceof r.XFAObject) {
                      this[r.$extra] = _t448;
                      return _t448;
                    }
                  }
                } catch (err) {
                  _iterator194.e(err);
                } finally {
                  _iterator194.f();
                }
                this[r.$extra] = null;
              }
              return this[r.$extra];
            }
          }, {
            key: _r$$toHTML32,
            value: function value(e) {
              var t = this[r.$getExtra]();
              return t ? t[r.$toHTML](e) : o.HTMLResult.EMPTY;
            }
          }]);
          return Ui;
        }(r.XFAObject, r.$getExtra, r.$toHTML);
        var Validate = /*#__PURE__*/function (_r$XFAObject86) {
          _inherits(Validate, _r$XFAObject86);
          var _super215 = _createSuper(Validate);
          function Validate(e) {
            var _this217;
            _classCallCheck(this, Validate);
            _this217 = _super215.call(this, d, "validate", !0);
            _this217.formatTest = (0, o.getStringOption)(e.formatTest, ["warning", "disabled", "error"]);
            _this217.id = e.id || "";
            _this217.nullTest = (0, o.getStringOption)(e.nullTest, ["disabled", "error", "warning"]);
            _this217.scriptTest = (0, o.getStringOption)(e.scriptTest, ["error", "disabled", "warning"]);
            _this217.use = e.use || "";
            _this217.usehref = e.usehref || "";
            _this217.extras = null;
            _this217.message = null;
            _this217.picture = null;
            _this217.script = null;
            return _this217;
          }
          return _createClass(Validate);
        }(r.XFAObject);
        var Value = /*#__PURE__*/function (_r$XFAObject87, _r$$setValue5, _r$$text, _r$$toHTML33) {
          _inherits(Value, _r$XFAObject87);
          var _super216 = _createSuper(Value);
          function Value(e) {
            var _this218;
            _classCallCheck(this, Value);
            _this218 = _super216.call(this, d, "value", !0);
            _this218.id = e.id || "";
            _this218.override = (0, o.getInteger)({
              data: e.override,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this218.relevant = (0, o.getRelevant)(e.relevant);
            _this218.use = e.use || "";
            _this218.usehref = e.usehref || "";
            _this218.arc = null;
            _this218.boolean = null;
            _this218.date = null;
            _this218.dateTime = null;
            _this218.decimal = null;
            _this218.exData = null;
            _this218.float = null;
            _this218.image = null;
            _this218.integer = null;
            _this218.line = null;
            _this218.rectangle = null;
            _this218.text = null;
            _this218.time = null;
            return _this218;
          }
          _createClass(Value, [{
            key: _r$$setValue5,
            value: function value(e) {
              var t = this[r.$getParent]();
              if (t instanceof Field && t.ui && t.ui.imageEdit) {
                if (!this.image) {
                  this.image = new Image({});
                  this[r.$appendChild](this.image);
                }
                this.image[r.$content] = e[r.$content];
                return;
              }
              var a = e[r.$nodeName];
              if (null === this[a]) {
                var _iterator195 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this)),
                  _step195;
                try {
                  for (_iterator195.s(); !(_step195 = _iterator195.n()).done;) {
                    var _e606 = _step195.value;
                    var _t449 = this[_e606];
                    if (_t449 instanceof r.XFAObject) {
                      this[_e606] = null;
                      this[r.$removeChild](_t449);
                    }
                  }
                } catch (err) {
                  _iterator195.e(err);
                } finally {
                  _iterator195.f();
                }
                this[e[r.$nodeName]] = e;
                this[r.$appendChild](e);
              } else this[a][r.$content] = e[r.$content];
            }
          }, {
            key: _r$$text,
            value: function value() {
              if (this.exData) return "string" == typeof this.exData[r.$content] ? this.exData[r.$content].trim() : this.exData[r.$content][r.$text]().trim();
              var _iterator196 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this)),
                _step196;
              try {
                for (_iterator196.s(); !(_step196 = _iterator196.n()).done;) {
                  var _e607 = _step196.value;
                  if ("image" === _e607) continue;
                  var _t450 = this[_e607];
                  if (_t450 instanceof r.XFAObject) return (_t450[r.$content] || "").toString().trim();
                }
              } catch (err) {
                _iterator196.e(err);
              } finally {
                _iterator196.f();
              }
              return null;
            }
          }, {
            key: _r$$toHTML33,
            value: function value(e) {
              var _iterator197 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this)),
                _step197;
              try {
                for (_iterator197.s(); !(_step197 = _iterator197.n()).done;) {
                  var _t451 = _step197.value;
                  var _a355 = this[_t451];
                  if (_a355 instanceof r.XFAObject) return _a355[r.$toHTML](e);
                }
              } catch (err) {
                _iterator197.e(err);
              } finally {
                _iterator197.f();
              }
              return o.HTMLResult.EMPTY;
            }
          }]);
          return Value;
        }(r.XFAObject, r.$setValue, r.$text, r.$toHTML);
        t.Value = Value;
        var Variables = /*#__PURE__*/function (_r$XFAObject88, _r$$isTransparent3) {
          _inherits(Variables, _r$XFAObject88);
          var _super217 = _createSuper(Variables);
          function Variables(e) {
            var _this219;
            _classCallCheck(this, Variables);
            _this219 = _super217.call(this, d, "variables", !0);
            _this219.id = e.id || "";
            _this219.use = e.use || "";
            _this219.usehref = e.usehref || "";
            _this219.boolean = new r.XFAObjectArray();
            _this219.date = new r.XFAObjectArray();
            _this219.dateTime = new r.XFAObjectArray();
            _this219.decimal = new r.XFAObjectArray();
            _this219.exData = new r.XFAObjectArray();
            _this219.float = new r.XFAObjectArray();
            _this219.image = new r.XFAObjectArray();
            _this219.integer = new r.XFAObjectArray();
            _this219.manifest = new r.XFAObjectArray();
            _this219.script = new r.XFAObjectArray();
            _this219.text = new r.XFAObjectArray();
            _this219.time = new r.XFAObjectArray();
            return _this219;
          }
          _createClass(Variables, [{
            key: _r$$isTransparent3,
            value: function value() {
              return !0;
            }
          }]);
          return Variables;
        }(r.XFAObject, r.$isTransparent);
        var TemplateNamespace = /*#__PURE__*/function (_i$$buildXFAObject) {
          function TemplateNamespace() {
            _classCallCheck(this, TemplateNamespace);
          }
          _createClass(TemplateNamespace, null, [{
            key: _i$$buildXFAObject,
            value: function value(e, t) {
              if (TemplateNamespace.hasOwnProperty(e)) {
                var _a356 = TemplateNamespace[e](t);
                _a356[r.$setSetAttributes](t);
                return _a356;
              }
            }
          }, {
            key: "appearanceFilter",
            value: function appearanceFilter(e) {
              return new AppearanceFilter(e);
            }
          }, {
            key: "arc",
            value: function arc(e) {
              return new Arc(e);
            }
          }, {
            key: "area",
            value: function area(e) {
              return new Area(e);
            }
          }, {
            key: "assist",
            value: function assist(e) {
              return new Assist(e);
            }
          }, {
            key: "barcode",
            value: function barcode(e) {
              return new Barcode(e);
            }
          }, {
            key: "bind",
            value: function bind(e) {
              return new Bind(e);
            }
          }, {
            key: "bindItems",
            value: function bindItems(e) {
              return new BindItems(e);
            }
          }, {
            key: "bookend",
            value: function bookend(e) {
              return new Bookend(e);
            }
          }, {
            key: "boolean",
            value: function boolean(e) {
              return new BooleanElement(e);
            }
          }, {
            key: "border",
            value: function border(e) {
              return new Border(e);
            }
          }, {
            key: "break",
            value: function _break(e) {
              return new Break(e);
            }
          }, {
            key: "breakAfter",
            value: function breakAfter(e) {
              return new BreakAfter(e);
            }
          }, {
            key: "breakBefore",
            value: function breakBefore(e) {
              return new BreakBefore(e);
            }
          }, {
            key: "button",
            value: function button(e) {
              return new Button(e);
            }
          }, {
            key: "calculate",
            value: function calculate(e) {
              return new Calculate(e);
            }
          }, {
            key: "caption",
            value: function caption(e) {
              return new Caption(e);
            }
          }, {
            key: "certificate",
            value: function certificate(e) {
              return new Certificate(e);
            }
          }, {
            key: "certificates",
            value: function certificates(e) {
              return new Certificates(e);
            }
          }, {
            key: "checkButton",
            value: function checkButton(e) {
              return new CheckButton(e);
            }
          }, {
            key: "choiceList",
            value: function choiceList(e) {
              return new ChoiceList(e);
            }
          }, {
            key: "color",
            value: function color(e) {
              return new Color(e);
            }
          }, {
            key: "comb",
            value: function comb(e) {
              return new Comb(e);
            }
          }, {
            key: "connect",
            value: function connect(e) {
              return new Connect(e);
            }
          }, {
            key: "contentArea",
            value: function contentArea(e) {
              return new ContentArea(e);
            }
          }, {
            key: "corner",
            value: function corner(e) {
              return new Corner(e);
            }
          }, {
            key: "date",
            value: function date(e) {
              return new DateElement(e);
            }
          }, {
            key: "dateTime",
            value: function dateTime(e) {
              return new DateTime(e);
            }
          }, {
            key: "dateTimeEdit",
            value: function dateTimeEdit(e) {
              return new DateTimeEdit(e);
            }
          }, {
            key: "decimal",
            value: function decimal(e) {
              return new Decimal(e);
            }
          }, {
            key: "defaultUi",
            value: function defaultUi(e) {
              return new DefaultUi(e);
            }
          }, {
            key: "desc",
            value: function desc(e) {
              return new Desc(e);
            }
          }, {
            key: "digestMethod",
            value: function digestMethod(e) {
              return new DigestMethod(e);
            }
          }, {
            key: "digestMethods",
            value: function digestMethods(e) {
              return new DigestMethods(e);
            }
          }, {
            key: "draw",
            value: function draw(e) {
              return new Draw(e);
            }
          }, {
            key: "edge",
            value: function edge(e) {
              return new Edge(e);
            }
          }, {
            key: "encoding",
            value: function encoding(e) {
              return new Encoding(e);
            }
          }, {
            key: "encodings",
            value: function encodings(e) {
              return new Encodings(e);
            }
          }, {
            key: "encrypt",
            value: function encrypt(e) {
              return new Encrypt(e);
            }
          }, {
            key: "encryptData",
            value: function encryptData(e) {
              return new EncryptData(e);
            }
          }, {
            key: "encryption",
            value: function encryption(e) {
              return new Encryption(e);
            }
          }, {
            key: "encryptionMethod",
            value: function encryptionMethod(e) {
              return new EncryptionMethod(e);
            }
          }, {
            key: "encryptionMethods",
            value: function encryptionMethods(e) {
              return new EncryptionMethods(e);
            }
          }, {
            key: "event",
            value: function event(e) {
              return new Event(e);
            }
          }, {
            key: "exData",
            value: function exData(e) {
              return new ExData(e);
            }
          }, {
            key: "exObject",
            value: function exObject(e) {
              return new ExObject(e);
            }
          }, {
            key: "exclGroup",
            value: function exclGroup(e) {
              return new ExclGroup(e);
            }
          }, {
            key: "execute",
            value: function execute(e) {
              return new Execute(e);
            }
          }, {
            key: "extras",
            value: function extras(e) {
              return new Extras(e);
            }
          }, {
            key: "field",
            value: function field(e) {
              return new Field(e);
            }
          }, {
            key: "fill",
            value: function fill(e) {
              return new Fill(e);
            }
          }, {
            key: "filter",
            value: function filter(e) {
              return new Filter(e);
            }
          }, {
            key: "float",
            value: function float(e) {
              return new Float(e);
            }
          }, {
            key: "font",
            value: function font(e) {
              return new Font(e);
            }
          }, {
            key: "format",
            value: function format(e) {
              return new Format(e);
            }
          }, {
            key: "handler",
            value: function handler(e) {
              return new Handler(e);
            }
          }, {
            key: "hyphenation",
            value: function hyphenation(e) {
              return new Hyphenation(e);
            }
          }, {
            key: "image",
            value: function image(e) {
              return new Image(e);
            }
          }, {
            key: "imageEdit",
            value: function imageEdit(e) {
              return new ImageEdit(e);
            }
          }, {
            key: "integer",
            value: function integer(e) {
              return new Integer(e);
            }
          }, {
            key: "issuers",
            value: function issuers(e) {
              return new Issuers(e);
            }
          }, {
            key: "items",
            value: function items(e) {
              return new Items(e);
            }
          }, {
            key: "keep",
            value: function keep(e) {
              return new Keep(e);
            }
          }, {
            key: "keyUsage",
            value: function keyUsage(e) {
              return new KeyUsage(e);
            }
          }, {
            key: "line",
            value: function line(e) {
              return new Line(e);
            }
          }, {
            key: "linear",
            value: function linear(e) {
              return new Linear(e);
            }
          }, {
            key: "lockDocument",
            value: function lockDocument(e) {
              return new LockDocument(e);
            }
          }, {
            key: "manifest",
            value: function manifest(e) {
              return new Manifest(e);
            }
          }, {
            key: "margin",
            value: function margin(e) {
              return new Margin(e);
            }
          }, {
            key: "mdp",
            value: function mdp(e) {
              return new Mdp(e);
            }
          }, {
            key: "medium",
            value: function medium(e) {
              return new Medium(e);
            }
          }, {
            key: "message",
            value: function message(e) {
              return new Message(e);
            }
          }, {
            key: "numericEdit",
            value: function numericEdit(e) {
              return new NumericEdit(e);
            }
          }, {
            key: "occur",
            value: function occur(e) {
              return new Occur(e);
            }
          }, {
            key: "oid",
            value: function oid(e) {
              return new Oid(e);
            }
          }, {
            key: "oids",
            value: function oids(e) {
              return new Oids(e);
            }
          }, {
            key: "overflow",
            value: function overflow(e) {
              return new Overflow(e);
            }
          }, {
            key: "pageArea",
            value: function pageArea(e) {
              return new PageArea(e);
            }
          }, {
            key: "pageSet",
            value: function pageSet(e) {
              return new PageSet(e);
            }
          }, {
            key: "para",
            value: function para(e) {
              return new Para(e);
            }
          }, {
            key: "passwordEdit",
            value: function passwordEdit(e) {
              return new PasswordEdit(e);
            }
          }, {
            key: "pattern",
            value: function pattern(e) {
              return new Pattern(e);
            }
          }, {
            key: "picture",
            value: function picture(e) {
              return new Picture(e);
            }
          }, {
            key: "proto",
            value: function proto(e) {
              return new Proto(e);
            }
          }, {
            key: "radial",
            value: function radial(e) {
              return new Radial(e);
            }
          }, {
            key: "reason",
            value: function reason(e) {
              return new Reason(e);
            }
          }, {
            key: "reasons",
            value: function reasons(e) {
              return new Reasons(e);
            }
          }, {
            key: "rectangle",
            value: function rectangle(e) {
              return new Rectangle(e);
            }
          }, {
            key: "ref",
            value: function ref(e) {
              return new RefElement(e);
            }
          }, {
            key: "script",
            value: function script(e) {
              return new Script(e);
            }
          }, {
            key: "setProperty",
            value: function setProperty(e) {
              return new SetProperty(e);
            }
          }, {
            key: "signData",
            value: function signData(e) {
              return new SignData(e);
            }
          }, {
            key: "signature",
            value: function signature(e) {
              return new Signature(e);
            }
          }, {
            key: "signing",
            value: function signing(e) {
              return new Signing(e);
            }
          }, {
            key: "solid",
            value: function solid(e) {
              return new Solid(e);
            }
          }, {
            key: "speak",
            value: function speak(e) {
              return new Speak(e);
            }
          }, {
            key: "stipple",
            value: function stipple(e) {
              return new Stipple(e);
            }
          }, {
            key: "subform",
            value: function subform(e) {
              return new Subform(e);
            }
          }, {
            key: "subformSet",
            value: function subformSet(e) {
              return new SubformSet(e);
            }
          }, {
            key: "subjectDN",
            value: function subjectDN(e) {
              return new SubjectDN(e);
            }
          }, {
            key: "subjectDNs",
            value: function subjectDNs(e) {
              return new SubjectDNs(e);
            }
          }, {
            key: "submit",
            value: function submit(e) {
              return new Submit(e);
            }
          }, {
            key: "template",
            value: function template(e) {
              return new Template(e);
            }
          }, {
            key: "text",
            value: function text(e) {
              return new Text(e);
            }
          }, {
            key: "textEdit",
            value: function textEdit(e) {
              return new TextEdit(e);
            }
          }, {
            key: "time",
            value: function time(e) {
              return new Time(e);
            }
          }, {
            key: "timeStamp",
            value: function timeStamp(e) {
              return new TimeStamp(e);
            }
          }, {
            key: "toolTip",
            value: function toolTip(e) {
              return new ToolTip(e);
            }
          }, {
            key: "traversal",
            value: function traversal(e) {
              return new Traversal(e);
            }
          }, {
            key: "traverse",
            value: function traverse(e) {
              return new Traverse(e);
            }
          }, {
            key: "ui",
            value: function ui(e) {
              return new Ui(e);
            }
          }, {
            key: "validate",
            value: function validate(e) {
              return new Validate(e);
            }
          }, {
            key: "value",
            value: function value(e) {
              return new Value(e);
            }
          }, {
            key: "variables",
            value: function variables(e) {
              return new Variables(e);
            }
          }]);
          return TemplateNamespace;
        }(i.$buildXFAObject);
        t.TemplateNamespace = TemplateNamespace;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.addHTML = function addHTML(e, t, a) {
          var n = e[r.$extra],
            s = n.availableSpace,
            _a357 = _slicedToArray(a, 4),
            o = _a357[0],
            c = _a357[1],
            l = _a357[2],
            h = _a357[3];
          switch (e.layout) {
            case "position":
              n.width = Math.max(n.width, o + l);
              n.height = Math.max(n.height, c + h);
              n.children.push(t);
              break;
            case "lr-tb":
            case "rl-tb":
              if (!n.line || 1 === n.attempt) {
                n.line = createLine(e, []);
                n.children.push(n.line);
                n.numberInLine = 0;
              }
              n.numberInLine += 1;
              n.line.children.push(t);
              if (0 === n.attempt) {
                n.currentWidth += l;
                n.height = Math.max(n.height, n.prevHeight + h);
              } else {
                n.currentWidth = l;
                n.prevHeight = n.height;
                n.height += h;
                n.attempt = 0;
              }
              n.width = Math.max(n.width, n.currentWidth);
              break;
            case "rl-row":
            case "row":
              {
                n.children.push(t);
                n.width += l;
                n.height = Math.max(n.height, h);
                var _e608 = (0, i.measureToString)(n.height);
                var _iterator198 = _createForOfIteratorHelper(n.children),
                  _step198;
                try {
                  for (_iterator198.s(); !(_step198 = _iterator198.n()).done;) {
                    var _t452 = _step198.value;
                    _t452.attributes.style.height = _e608;
                  }
                } catch (err) {
                  _iterator198.e(err);
                } finally {
                  _iterator198.f();
                }
                break;
              }
            case "table":
            case "tb":
              n.width = Math.min(s.width, Math.max(n.width, l));
              n.height += h;
              n.children.push(t);
          }
        };
        t.checkDimensions = function checkDimensions(e, t) {
          if (null === e[r.$getTemplateRoot]()[r.$extra].firstUnsplittable) return !0;
          if (0 === e.w || 0 === e.h) return !0;
          var a = e[r.$getSubformParent](),
            i = a[r.$extra] && a[r.$extra].attempt || 0,
            _getTransformedBBox = function getTransformedBBox(e) {
              var t,
                a,
                r = "" === e.w ? NaN : e.w,
                i = "" === e.h ? NaN : e.h,
                n = 0,
                s = 0;
              switch (e.anchorType || "") {
                case "bottomCenter":
                  n = r / 2;
                  s = i;
                  break;
                case "bottomLeft":
                  n = 0;
                  s = i;
                  break;
                case "bottomRight":
                  n = r;
                  s = i;
                  break;
                case "middleCenter":
                  n = r / 2;
                  s = i / 2;
                  break;
                case "middleLeft":
                  n = 0;
                  s = i / 2;
                  break;
                case "middleRight":
                  n = r;
                  s = i / 2;
                  break;
                case "topCenter":
                  n = r / 2;
                  s = 0;
                  break;
                case "topRight":
                  n = r;
                  s = 0;
              }
              switch (e.rotate || 0) {
                case 0:
                  t = -n;
                  a = -s;
                  break;
                case 90:
                  t = -s;
                  a = n;
                  var _ref103 = [i, -r];
                  r = _ref103[0];
                  i = _ref103[1];
                  break;
                case 180:
                  t = n;
                  a = s;
                  var _ref104 = [-r, -i];
                  r = _ref104[0];
                  i = _ref104[1];
                  break;
                case 270:
                  t = s;
                  a = -n;
                  var _ref105 = [-i, r];
                  r = _ref105[0];
                  i = _ref105[1];
              }
              return [e.x + t + Math.min(0, r), e.y + a + Math.min(0, i), Math.abs(r), Math.abs(i)];
            }(e),
            _getTransformedBBox2 = _slicedToArray(_getTransformedBBox, 4),
            n = _getTransformedBBox2[1],
            s = _getTransformedBBox2[2],
            o = _getTransformedBBox2[3];
          switch (a.layout) {
            case "lr-tb":
            case "rl-tb":
              return 0 === i ? e[r.$getTemplateRoot]()[r.$extra].noLayoutFailure ? "" !== e.w ? Math.round(s - t.width) <= 2 : t.width > 2 : !("" !== e.h && Math.round(o - t.height) > 2) && ("" !== e.w ? Math.round(s - t.width) <= 2 || 0 === a[r.$extra].numberInLine && t.height > 2 : t.width > 2) : !!e[r.$getTemplateRoot]()[r.$extra].noLayoutFailure || !("" !== e.h && Math.round(o - t.height) > 2) && ("" === e.w || Math.round(s - t.width) <= 2 || !a[r.$isThereMoreWidth]()) && t.height > 2;
            case "table":
            case "tb":
              return !!e[r.$getTemplateRoot]()[r.$extra].noLayoutFailure || ("" === e.h || e[r.$isSplittable]() ? ("" === e.w || Math.round(s - t.width) <= 2 || !a[r.$isThereMoreWidth]()) && t.height > 2 : Math.round(o - t.height) <= 2);
            case "position":
              if (e[r.$getTemplateRoot]()[r.$extra].noLayoutFailure) return !0;
              if ("" === e.h || Math.round(o + n - t.height) <= 2) return !0;
              return o + n > e[r.$getTemplateRoot]()[r.$extra].currentContentArea.h;
            case "rl-row":
            case "row":
              return !!e[r.$getTemplateRoot]()[r.$extra].noLayoutFailure || "" === e.h || Math.round(o - t.height) <= 2;
            default:
              return !0;
          }
        };
        t.flushHTML = function flushHTML(e) {
          if (!e[r.$extra]) return null;
          var t = {
            name: "div",
            attributes: e[r.$extra].attributes,
            children: e[r.$extra].children
          };
          if (e[r.$extra].failingNode) {
            var _a358 = e[r.$extra].failingNode[r.$flushHTML]();
            _a358 && (e.layout.endsWith("-tb") ? t.children.push(createLine(e, [_a358])) : t.children.push(_a358));
          }
          if (0 === t.children.length) return null;
          return t;
        };
        t.getAvailableSpace = function getAvailableSpace(e) {
          var t = e[r.$extra].availableSpace,
            a = e.margin ? e.margin.topInset + e.margin.bottomInset : 0,
            i = e.margin ? e.margin.leftInset + e.margin.rightInset : 0;
          switch (e.layout) {
            case "lr-tb":
            case "rl-tb":
              return 0 === e[r.$extra].attempt ? {
                width: t.width - i - e[r.$extra].currentWidth,
                height: t.height - a - e[r.$extra].prevHeight
              } : {
                width: t.width - i,
                height: t.height - a - e[r.$extra].height
              };
            case "rl-row":
            case "row":
              return {
                width: e[r.$extra].columnWidths.slice(e[r.$extra].currentColumn).reduce(function (e, t) {
                  return e + t;
                }),
                height: t.height - i
              };
            case "table":
            case "tb":
              return {
                width: t.width - i,
                height: t.height - a - e[r.$extra].height
              };
            default:
              return t;
          }
        };
        var r = a(77),
          i = a(84);
        function createLine(e, t) {
          return {
            name: "div",
            attributes: {
              class: ["lr-tb" === e.layout ? "xfaLr" : "xfaRl"]
            },
            children: t
          };
        }
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.computeBbox = function computeBbox(e, t, a) {
          var i;
          if ("" !== e.w && "" !== e.h) i = [e.x, e.y, e.w, e.h];else {
            if (!a) return null;
            var _n150 = e.w;
            if ("" === _n150) {
              if (0 === e.maxW) {
                var _t453 = e[r.$getSubformParent]();
                _n150 = "position" === _t453.layout && "" !== _t453.w ? 0 : e.minW;
              } else _n150 = Math.min(e.maxW, a.width);
              t.attributes.style.width = measureToString(_n150);
            }
            var _s125 = e.h;
            if ("" === _s125) {
              if (0 === e.maxH) {
                var _t454 = e[r.$getSubformParent]();
                _s125 = "position" === _t454.layout && "" !== _t454.h ? 0 : e.minH;
              } else _s125 = Math.min(e.maxH, a.height);
              t.attributes.style.height = measureToString(_s125);
            }
            i = [e.x, e.y, _n150, _s125];
          }
          return i;
        };
        t.createWrapper = function createWrapper(e, t) {
          var a = t.attributes,
            i = a.style,
            n = {
              name: "div",
              attributes: {
                class: ["xfaWrapper"],
                style: Object.create(null)
              },
              children: []
            };
          a.class.push("xfaWrapped");
          if (e.border) {
            var _e$border$r$$extra = e.border[r.$extra],
              _a359 = _e$border$r$$extra.widths,
              _s126 = _e$border$r$$extra.insets;
            var _o88,
              _c61,
              l = _s126[0],
              _h40 = _s126[3];
            var u = _s126[0] + _s126[2],
              d = _s126[1] + _s126[3];
            switch (e.border.hand) {
              case "even":
                l -= _a359[0] / 2;
                _h40 -= _a359[3] / 2;
                _o88 = "calc(100% + ".concat((_a359[1] + _a359[3]) / 2 - d, "px)");
                _c61 = "calc(100% + ".concat((_a359[0] + _a359[2]) / 2 - u, "px)");
                break;
              case "left":
                l -= _a359[0];
                _h40 -= _a359[3];
                _o88 = "calc(100% + ".concat(_a359[1] + _a359[3] - d, "px)");
                _c61 = "calc(100% + ".concat(_a359[0] + _a359[2] - u, "px)");
                break;
              case "right":
                _o88 = d ? "calc(100% - ".concat(d, "px)") : "100%";
                _c61 = u ? "calc(100% - ".concat(u, "px)") : "100%";
            }
            var _f25 = ["xfaBorder"];
            isPrintOnly(e.border) && _f25.push("xfaPrintOnly");
            var _g23 = {
              name: "div",
              attributes: {
                class: _f25,
                style: {
                  top: "".concat(l, "px"),
                  left: "".concat(_h40, "px"),
                  width: _o88,
                  height: _c61
                }
              },
              children: []
            };
            for (var _i232 = 0, _arr4 = ["border", "borderWidth", "borderColor", "borderRadius", "borderStyle"]; _i232 < _arr4.length; _i232++) {
              var _e609 = _arr4[_i232];
              if (void 0 !== i[_e609]) {
                _g23.attributes.style[_e609] = i[_e609];
                delete i[_e609];
              }
            }
            n.children.push(_g23, t);
          } else n.children.push(t);
          for (var _i233 = 0, _arr5 = ["background", "backgroundClip", "top", "left", "width", "height", "minWidth", "minHeight", "maxWidth", "maxHeight", "transform", "transformOrigin", "visibility"]; _i233 < _arr5.length; _i233++) {
            var _e610 = _arr5[_i233];
            if (void 0 !== i[_e610]) {
              n.attributes.style[_e610] = i[_e610];
              delete i[_e610];
            }
          }
          "absolute" === i.position ? n.attributes.style.position = "absolute" : n.attributes.style.position = "relative";
          delete i.position;
          if (i.alignSelf) {
            n.attributes.style.alignSelf = i.alignSelf;
            delete i.alignSelf;
          }
          return n;
        };
        t.fixDimensions = function fixDimensions(e) {
          var t = e[r.$getSubformParent]();
          if (t.layout && t.layout.includes("row")) {
            var _a360 = t[r.$extra],
              _i234 = e.colSpan;
            var _n151;
            _n151 = -1 === _i234 ? _a360.columnWidths.slice(_a360.currentColumn).reduce(function (e, t) {
              return e + t;
            }, 0) : _a360.columnWidths.slice(_a360.currentColumn, _a360.currentColumn + _i234).reduce(function (e, t) {
              return e + t;
            }, 0);
            isNaN(_n151) || (e.w = _n151);
          }
          t.layout && "position" !== t.layout && (e.x = e.y = 0);
          "table" === e.layout && "" === e.w && Array.isArray(e.columnWidths) && (e.w = e.columnWidths.reduce(function (e, t) {
            return e + t;
          }, 0));
        };
        t.fixTextIndent = function fixTextIndent(e) {
          var t = (0, n.getMeasurement)(e.textIndent, "0px");
          if (t >= 0) return;
          var a = "padding" + ("left" == ("right" === e.textAlign ? "right" : "left") ? "Left" : "Right"),
            r = (0, n.getMeasurement)(e[a], "0px");
          e[a] = r - t + "px";
        };
        t.fixURL = function fixURL(e) {
          var t = (0, i.createValidAbsoluteUrl)(e, null, {
            addDefaultProtocol: !0,
            tryConvertEncoding: !0
          });
          return t ? t.href : null;
        };
        t.isPrintOnly = isPrintOnly;
        t.layoutClass = function layoutClass(e) {
          switch (e.layout) {
            case "position":
            default:
              return "xfaPosition";
            case "lr-tb":
              return "xfaLrTb";
            case "rl-row":
              return "xfaRlRow";
            case "rl-tb":
              return "xfaRlTb";
            case "row":
              return "xfaRow";
            case "table":
              return "xfaTable";
            case "tb":
              return "xfaTb";
          }
        };
        t.layoutNode = function layoutNode(e, t) {
          var a = null,
            i = null,
            n = !1;
          if ((!e.w || !e.h) && e.value) {
            var _s127 = 0,
              _o89 = 0;
            if (e.margin) {
              _s127 = e.margin.leftInset + e.margin.rightInset;
              _o89 = e.margin.topInset + e.margin.bottomInset;
            }
            var _c62 = null,
              l = null;
            if (e.para) {
              l = Object.create(null);
              _c62 = "" === e.para.lineHeight ? null : e.para.lineHeight;
              l.top = "" === e.para.spaceAbove ? 0 : e.para.spaceAbove;
              l.bottom = "" === e.para.spaceBelow ? 0 : e.para.spaceBelow;
              l.left = "" === e.para.marginLeft ? 0 : e.para.marginLeft;
              l.right = "" === e.para.marginRight ? 0 : e.para.marginRight;
            }
            var _h41 = e.font;
            if (!_h41) {
              var _t455 = e[r.$getTemplateRoot]();
              var _a361 = e[r.$getParent]();
              for (; _a361 && _a361 !== _t455;) {
                if (_a361.font) {
                  _h41 = _a361.font;
                  break;
                }
                _a361 = _a361[r.$getParent]();
              }
            }
            var u = (e.w || t.width) - _s127,
              d = e[r.$globalData].fontFinder;
            if (e.value.exData && e.value.exData[r.$content] && "text/html" === e.value.exData.contentType) {
              var _t456 = layoutText(e.value.exData[r.$content], _h41, l, _c62, d, u);
              i = _t456.width;
              a = _t456.height;
              n = _t456.isBroken;
            } else {
              var _t457 = e.value[r.$text]();
              if (_t457) {
                var _e611 = layoutText(_t457, _h41, l, _c62, d, u);
                i = _e611.width;
                a = _e611.height;
                n = _e611.isBroken;
              }
            }
            null === i || e.w || (i += _s127);
            null === a || e.h || (a += _o89);
          }
          return {
            w: i,
            h: a,
            isBroken: n
          };
        };
        t.measureToString = measureToString;
        t.setAccess = function setAccess(e, t) {
          switch (e.access) {
            case "nonInteractive":
              t.push("xfaNonInteractive");
              break;
            case "readOnly":
              t.push("xfaReadOnly");
              break;
            case "protected":
              t.push("xfaDisabled");
          }
        };
        t.setFontFamily = function setFontFamily(e, t, a, r) {
          if (!a) {
            delete r.fontFamily;
            return;
          }
          var i = (0, n.stripQuotes)(e.typeface);
          r.fontFamily = "\"".concat(i, "\"");
          var o = a.find(i);
          if (o) {
            var _a362 = o.regular.cssFontInfo.fontFamily;
            _a362 !== i && (r.fontFamily = "\"".concat(_a362, "\""));
            var _n152 = getCurrentPara(t);
            if (_n152 && "" !== _n152.lineHeight) return;
            if (r.lineHeight) return;
            var _c63 = (0, s.selectFont)(e, o);
            _c63 && (r.lineHeight = Math.max(1.2, _c63.lineHeight));
          }
        };
        t.setMinMaxDimensions = function setMinMaxDimensions(e, t) {
          if ("position" === e[r.$getSubformParent]().layout) {
            e.minW > 0 && (t.minWidth = measureToString(e.minW));
            e.maxW > 0 && (t.maxWidth = measureToString(e.maxW));
            e.minH > 0 && (t.minHeight = measureToString(e.minH));
            e.maxH > 0 && (t.maxHeight = measureToString(e.maxH));
          }
        };
        t.setPara = function setPara(e, t, a) {
          if (a.attributes.class && a.attributes.class.includes("xfaRich")) {
            if (t) {
              "" === e.h && (t.height = "auto");
              "" === e.w && (t.width = "auto");
            }
            var _i235 = getCurrentPara(e);
            if (_i235) {
              var _e612 = a.attributes.style;
              _e612.display = "flex";
              _e612.flexDirection = "column";
              switch (_i235.vAlign) {
                case "top":
                  _e612.justifyContent = "start";
                  break;
                case "bottom":
                  _e612.justifyContent = "end";
                  break;
                case "middle":
                  _e612.justifyContent = "center";
              }
              var _t458 = _i235[r.$toStyle]();
              for (var _i236 = 0, _Object$entries5 = Object.entries(_t458); _i236 < _Object$entries5.length; _i236++) {
                var _Object$entries5$_i = _slicedToArray(_Object$entries5[_i236], 2),
                  _a363 = _Object$entries5$_i[0],
                  _r270 = _Object$entries5$_i[1];
                _a363 in _e612 || (_e612[_a363] = _r270);
              }
            }
          }
        };
        t.toStyle = function toStyle(e) {
          var a = Object.create(null);
          for (var _len = arguments.length, t = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            t[_key - 1] = arguments[_key];
          }
          for (var _i237 = 0, _t459 = t; _i237 < _t459.length; _i237++) {
            var _n153 = _t459[_i237];
            var _t460 = e[_n153];
            if (null !== _t460) if (c.hasOwnProperty(_n153)) c[_n153](e, a);else if (_t460 instanceof r.XFAObject) {
              var _e613 = _t460[r.$toStyle]();
              _e613 ? Object.assign(a, _e613) : (0, i.warn)("(DEBUG) - XFA - style for ".concat(_n153, " not implemented yet"));
            }
          }
          return a;
        };
        var r = a(77),
          i = a(2),
          n = a(78),
          s = a(85),
          o = a(86);
        function measureToString(e) {
          return "string" == typeof e ? "0px" : Number.isInteger(e) ? "".concat(e, "px") : "".concat(e.toFixed(2), "px");
        }
        var c = {
          anchorType: function anchorType(e, t) {
            var a = e[r.$getSubformParent]();
            if (a && (!a.layout || "position" === a.layout)) {
              "transform" in t || (t.transform = "");
              switch (e.anchorType) {
                case "bottomCenter":
                  t.transform += "translate(-50%, -100%)";
                  break;
                case "bottomLeft":
                  t.transform += "translate(0,-100%)";
                  break;
                case "bottomRight":
                  t.transform += "translate(-100%,-100%)";
                  break;
                case "middleCenter":
                  t.transform += "translate(-50%,-50%)";
                  break;
                case "middleLeft":
                  t.transform += "translate(0,-50%)";
                  break;
                case "middleRight":
                  t.transform += "translate(-100%,-50%)";
                  break;
                case "topCenter":
                  t.transform += "translate(-50%,0)";
                  break;
                case "topRight":
                  t.transform += "translate(-100%,0)";
              }
            }
          },
          dimensions: function dimensions(e, t) {
            var a = e[r.$getSubformParent]();
            var i = e.w;
            var n = e.h;
            if (a.layout && a.layout.includes("row")) {
              var _t461 = a[r.$extra],
                _n154 = e.colSpan;
              var _s128;
              if (-1 === _n154) {
                _s128 = _t461.columnWidths.slice(_t461.currentColumn).reduce(function (e, t) {
                  return e + t;
                }, 0);
                _t461.currentColumn = 0;
              } else {
                _s128 = _t461.columnWidths.slice(_t461.currentColumn, _t461.currentColumn + _n154).reduce(function (e, t) {
                  return e + t;
                }, 0);
                _t461.currentColumn = (_t461.currentColumn + e.colSpan) % _t461.columnWidths.length;
              }
              isNaN(_s128) || (i = e.w = _s128);
            }
            t.width = "" !== i ? measureToString(i) : "auto";
            t.height = "" !== n ? measureToString(n) : "auto";
          },
          position: function position(e, t) {
            var a = e[r.$getSubformParent]();
            if (!a || !a.layout || "position" === a.layout) {
              t.position = "absolute";
              t.left = measureToString(e.x);
              t.top = measureToString(e.y);
            }
          },
          rotate: function rotate(e, t) {
            if (e.rotate) {
              "transform" in t || (t.transform = "");
              t.transform += "rotate(-".concat(e.rotate, "deg)");
              t.transformOrigin = "top left";
            }
          },
          presence: function presence(e, t) {
            switch (e.presence) {
              case "invisible":
                t.visibility = "hidden";
                break;
              case "hidden":
              case "inactive":
                t.display = "none";
            }
          },
          hAlign: function hAlign(e, t) {
            if ("para" === e[r.$nodeName]) switch (e.hAlign) {
              case "justifyAll":
                t.textAlign = "justify-all";
                break;
              case "radix":
                t.textAlign = "left";
                break;
              default:
                t.textAlign = e.hAlign;
            } else switch (e.hAlign) {
              case "left":
                t.alignSelf = "start";
                break;
              case "center":
                t.alignSelf = "center";
                break;
              case "right":
                t.alignSelf = "end";
            }
          },
          margin: function margin(e, t) {
            e.margin && (t.margin = e.margin[r.$toStyle]().margin);
          }
        };
        function layoutText(e, t, a, i, n, s) {
          var c = new o.TextMeasure(t, a, i, n);
          "string" == typeof e ? c.addString(e) : e[r.$pushGlyphs](c);
          return c.compute(s);
        }
        function isPrintOnly(e) {
          return e.relevant.length > 0 && !e.relevant[0].excluded && "print" === e.relevant[0].viewname;
        }
        function getCurrentPara(e) {
          var t = e[r.$getTemplateRoot]()[r.$extra].paraStack;
          return t.length ? t.at(-1) : null;
        }
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.FontFinder = void 0;
        t.getMetrics = function getMetrics(e) {
          var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
          var a = null;
          if (e) {
            var _t462 = (0, i.stripQuotes)(e.typeface),
              _n155 = e[r.$globalData].fontFinder.find(_t462);
            a = selectFont(e, _n155);
          }
          if (!a) return {
            lineHeight: 12,
            lineGap: 2,
            lineNoGap: 10
          };
          var n = e.size || 10,
            s = a.lineHeight ? Math.max(t ? 0 : 1.2, a.lineHeight) : 1.2,
            o = void 0 === a.lineGap ? .2 : a.lineGap;
          return {
            lineHeight: s * n,
            lineGap: o * n,
            lineNoGap: Math.max(1, s - o) * n
          };
        };
        t.selectFont = selectFont;
        var r = a(77),
          i = a(78),
          n = a(2);
        t.FontFinder = /*#__PURE__*/function () {
          function FontFinder(e) {
            _classCallCheck(this, FontFinder);
            this.fonts = new Map();
            this.cache = new Map();
            this.warned = new Set();
            this.defaultFont = null;
            this.add(e);
          }
          _createClass(FontFinder, [{
            key: "add",
            value: function add(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
              var _iterator199 = _createForOfIteratorHelper(e),
                _step199;
              try {
                for (_iterator199.s(); !(_step199 = _iterator199.n()).done;) {
                  var _t463 = _step199.value;
                  this.addPdfFont(_t463);
                }
              } catch (err) {
                _iterator199.e(err);
              } finally {
                _iterator199.f();
              }
              var _iterator200 = _createForOfIteratorHelper(this.fonts.values()),
                _step200;
              try {
                for (_iterator200.s(); !(_step200 = _iterator200.n()).done;) {
                  var _e614 = _step200.value;
                  _e614.regular || (_e614.regular = _e614.italic || _e614.bold || _e614.bolditalic);
                }
              } catch (err) {
                _iterator200.e(err);
              } finally {
                _iterator200.f();
              }
              if (!t || 0 === t.size) return;
              var a = this.fonts.get("PdfJS-Fallback-PdfJS-XFA");
              var _iterator201 = _createForOfIteratorHelper(t),
                _step201;
              try {
                for (_iterator201.s(); !(_step201 = _iterator201.n()).done;) {
                  var _e615 = _step201.value;
                  this.fonts.set(_e615, a);
                }
              } catch (err) {
                _iterator201.e(err);
              } finally {
                _iterator201.f();
              }
            }
          }, {
            key: "addPdfFont",
            value: function addPdfFont(e) {
              var t = e.cssFontInfo,
                a = t.fontFamily;
              var r = this.fonts.get(a);
              if (!r) {
                r = Object.create(null);
                this.fonts.set(a, r);
                this.defaultFont || (this.defaultFont = r);
              }
              var i = "";
              var n = parseFloat(t.fontWeight);
              0 !== parseFloat(t.italicAngle) ? i = n >= 700 ? "bolditalic" : "italic" : n >= 700 && (i = "bold");
              if (!i) {
                (e.name.includes("Bold") || e.psName && e.psName.includes("Bold")) && (i = "bold");
                (e.name.includes("Italic") || e.name.endsWith("It") || e.psName && (e.psName.includes("Italic") || e.psName.endsWith("It"))) && (i += "italic");
              }
              i || (i = "regular");
              r[i] = e;
            }
          }, {
            key: "getDefault",
            value: function getDefault() {
              return this.defaultFont;
            }
          }, {
            key: "find",
            value: function find(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
              var a = this.fonts.get(e) || this.cache.get(e);
              if (a) return a;
              var r = /,|-|_| |bolditalic|bold|italic|regular|it/gi;
              var i = e.replaceAll(r, "");
              a = this.fonts.get(i);
              if (a) {
                this.cache.set(e, a);
                return a;
              }
              i = i.toLowerCase();
              var s = [];
              var _iterator202 = _createForOfIteratorHelper(this.fonts.entries()),
                _step202;
              try {
                for (_iterator202.s(); !(_step202 = _iterator202.n()).done;) {
                  var _step202$value = _slicedToArray(_step202.value, 2),
                    _e619 = _step202$value[0],
                    _t465 = _step202$value[1];
                  _e619.replaceAll(r, "").toLowerCase().startsWith(i) && s.push(_t465);
                }
              } catch (err) {
                _iterator202.e(err);
              } finally {
                _iterator202.f();
              }
              if (0 === s.length) {
                var _iterator203 = _createForOfIteratorHelper(this.fonts.entries()),
                  _step203;
                try {
                  for (_iterator203.s(); !(_step203 = _iterator203.n()).done;) {
                    var _step203$value = _slicedToArray(_step203.value, 2),
                      _e616 = _step203$value[1];
                    _e616.regular.name && _e616.regular.name.replaceAll(r, "").toLowerCase().startsWith(i) && s.push(_e616);
                  }
                } catch (err) {
                  _iterator203.e(err);
                } finally {
                  _iterator203.f();
                }
              }
              if (0 === s.length) {
                i = i.replaceAll(/psmt|mt/gi, "");
                var _iterator204 = _createForOfIteratorHelper(this.fonts.entries()),
                  _step204;
                try {
                  for (_iterator204.s(); !(_step204 = _iterator204.n()).done;) {
                    var _step204$value = _slicedToArray(_step204.value, 2),
                      _e617 = _step204$value[0],
                      _t464 = _step204$value[1];
                    _e617.replaceAll(r, "").toLowerCase().startsWith(i) && s.push(_t464);
                  }
                } catch (err) {
                  _iterator204.e(err);
                } finally {
                  _iterator204.f();
                }
              }
              if (0 === s.length) {
                var _iterator205 = _createForOfIteratorHelper(this.fonts.values()),
                  _step205;
                try {
                  for (_iterator205.s(); !(_step205 = _iterator205.n()).done;) {
                    var _e618 = _step205.value;
                    _e618.regular.name && _e618.regular.name.replaceAll(r, "").toLowerCase().startsWith(i) && s.push(_e618);
                  }
                } catch (err) {
                  _iterator205.e(err);
                } finally {
                  _iterator205.f();
                }
              }
              if (s.length >= 1) {
                1 !== s.length && t && (0, n.warn)("XFA - Too many choices to guess the correct font: ".concat(e));
                this.cache.set(e, s[0]);
                return s[0];
              }
              if (t && !this.warned.has(e)) {
                this.warned.add(e);
                (0, n.warn)("XFA - Cannot find the font: ".concat(e));
              }
              return null;
            }
          }]);
          return FontFinder;
        }();
        function selectFont(e, t) {
          return "italic" === e.posture ? "bold" === e.weight ? t.bolditalic : t.italic : "bold" === e.weight ? t.bold : t.regular;
        }
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.TextMeasure = void 0;
        var r = a(85);
        var FontInfo = /*#__PURE__*/function () {
          function FontInfo(e, t, a, i) {
            _classCallCheck(this, FontInfo);
            this.lineHeight = a;
            this.paraMargin = t || {
              top: 0,
              bottom: 0,
              left: 0,
              right: 0
            };
            if (!e) {
              var _this$defaultFont = this.defaultFont(i);
              var _this$defaultFont2 = _slicedToArray(_this$defaultFont, 2);
              this.pdfFont = _this$defaultFont2[0];
              this.xfaFont = _this$defaultFont2[1];
              return;
            }
            this.xfaFont = {
              typeface: e.typeface,
              posture: e.posture,
              weight: e.weight,
              size: e.size,
              letterSpacing: e.letterSpacing
            };
            var n = i.find(e.typeface);
            if (n) {
              var _this$defaultFont3, _this$defaultFont4;
              this.pdfFont = (0, r.selectFont)(e, n);
              this.pdfFont || (_this$defaultFont3 = this.defaultFont(i), _this$defaultFont4 = _slicedToArray(_this$defaultFont3, 2), this.pdfFont = _this$defaultFont4[0], this.xfaFont = _this$defaultFont4[1], _this$defaultFont3);
            } else {
              var _this$defaultFont5 = this.defaultFont(i);
              var _this$defaultFont6 = _slicedToArray(_this$defaultFont5, 2);
              this.pdfFont = _this$defaultFont6[0];
              this.xfaFont = _this$defaultFont6[1];
            }
          }
          _createClass(FontInfo, [{
            key: "defaultFont",
            value: function defaultFont(e) {
              var t = e.find("Helvetica", !1) || e.find("Myriad Pro", !1) || e.find("Arial", !1) || e.getDefault();
              if (t && t.regular) {
                var _e620 = t.regular;
                return [_e620, {
                  typeface: _e620.cssFontInfo.fontFamily,
                  posture: "normal",
                  weight: "normal",
                  size: 10,
                  letterSpacing: 0
                }];
              }
              return [null, {
                typeface: "Courier",
                posture: "normal",
                weight: "normal",
                size: 10,
                letterSpacing: 0
              }];
            }
          }]);
          return FontInfo;
        }();
        var FontSelector = /*#__PURE__*/function () {
          function FontSelector(e, t, a, r) {
            _classCallCheck(this, FontSelector);
            this.fontFinder = r;
            this.stack = [new FontInfo(e, t, a, r)];
          }
          _createClass(FontSelector, [{
            key: "pushData",
            value: function pushData(e, t, a) {
              var r = this.stack.at(-1);
              for (var _i238 = 0, _arr6 = ["typeface", "posture", "weight", "size", "letterSpacing"]; _i238 < _arr6.length; _i238++) {
                var _t466 = _arr6[_i238];
                e[_t466] || (e[_t466] = r.xfaFont[_t466]);
              }
              for (var _i239 = 0, _arr7 = ["top", "bottom", "left", "right"]; _i239 < _arr7.length; _i239++) {
                var _e621 = _arr7[_i239];
                isNaN(t[_e621]) && (t[_e621] = r.paraMargin[_e621]);
              }
              var i = new FontInfo(e, t, a || r.lineHeight, this.fontFinder);
              i.pdfFont || (i.pdfFont = r.pdfFont);
              this.stack.push(i);
            }
          }, {
            key: "popFont",
            value: function popFont() {
              this.stack.pop();
            }
          }, {
            key: "topFont",
            value: function topFont() {
              return this.stack.at(-1);
            }
          }]);
          return FontSelector;
        }();
        t.TextMeasure = /*#__PURE__*/function () {
          function TextMeasure(e, t, a, r) {
            _classCallCheck(this, TextMeasure);
            this.glyphs = [];
            this.fontSelector = new FontSelector(e, t, a, r);
            this.extraHeight = 0;
          }
          _createClass(TextMeasure, [{
            key: "pushData",
            value: function pushData(e, t, a) {
              this.fontSelector.pushData(e, t, a);
            }
          }, {
            key: "popFont",
            value: function popFont(e) {
              return this.fontSelector.popFont();
            }
          }, {
            key: "addPara",
            value: function addPara() {
              var e = this.fontSelector.topFont();
              this.extraHeight += e.paraMargin.top + e.paraMargin.bottom;
            }
          }, {
            key: "addString",
            value: function addString(e) {
              if (!e) return;
              var t = this.fontSelector.topFont(),
                a = t.xfaFont.size;
              if (t.pdfFont) {
                var _r271 = t.xfaFont.letterSpacing,
                  _i240 = t.pdfFont,
                  _n156 = _i240.lineHeight || 1.2,
                  _s129 = t.lineHeight || Math.max(1.2, _n156) * a,
                  _o90 = _n156 - (void 0 === _i240.lineGap ? .2 : _i240.lineGap),
                  _c64 = Math.max(1, _o90) * a,
                  l = a / 1e3,
                  _h42 = _i240.defaultWidth || _i240.charsToGlyphs(" ")[0].width;
                var _iterator206 = _createForOfIteratorHelper(e.split(/[\u2029\n]/)),
                  _step206;
                try {
                  for (_iterator206.s(); !(_step206 = _iterator206.n()).done;) {
                    var _t467 = _step206.value;
                    var _e622 = _i240.encodeString(_t467).join(""),
                      _a364 = _i240.charsToGlyphs(_e622);
                    var _iterator207 = _createForOfIteratorHelper(_a364),
                      _step207;
                    try {
                      for (_iterator207.s(); !(_step207 = _iterator207.n()).done;) {
                        var _e623 = _step207.value;
                        var _t468 = _e623.width || _h42;
                        this.glyphs.push([_t468 * l + _r271, _s129, _c64, _e623.unicode, !1]);
                      }
                    } catch (err) {
                      _iterator207.e(err);
                    } finally {
                      _iterator207.f();
                    }
                    this.glyphs.push([0, 0, 0, "\n", !0]);
                  }
                } catch (err) {
                  _iterator206.e(err);
                } finally {
                  _iterator206.f();
                }
                this.glyphs.pop();
              } else {
                var _iterator208 = _createForOfIteratorHelper(e.split(/[\u2029\n]/)),
                  _step208;
                try {
                  for (_iterator208.s(); !(_step208 = _iterator208.n()).done;) {
                    var _t469 = _step208.value;
                    var _iterator209 = _createForOfIteratorHelper(_t469.split("")),
                      _step209;
                    try {
                      for (_iterator209.s(); !(_step209 = _iterator209.n()).done;) {
                        var _e624 = _step209.value;
                        this.glyphs.push([a, 1.2 * a, a, _e624, !1]);
                      }
                    } catch (err) {
                      _iterator209.e(err);
                    } finally {
                      _iterator209.f();
                    }
                    this.glyphs.push([0, 0, 0, "\n", !0]);
                  }
                } catch (err) {
                  _iterator208.e(err);
                } finally {
                  _iterator208.f();
                }
                this.glyphs.pop();
              }
            }
          }, {
            key: "compute",
            value: function compute(e) {
              var t = -1,
                a = 0,
                r = 0,
                i = 0,
                n = 0,
                s = 0,
                o = !1,
                c = !0;
              for (var l = 0, _h43 = this.glyphs.length; l < _h43; l++) {
                var _this$glyphs$l = _slicedToArray(this.glyphs[l], 5),
                  _h44 = _this$glyphs$l[0],
                  u = _this$glyphs$l[1],
                  d = _this$glyphs$l[2],
                  _f26 = _this$glyphs$l[3],
                  _g24 = _this$glyphs$l[4],
                  _p17 = " " === _f26,
                  m = c ? d : u;
                if (_g24) {
                  r = Math.max(r, n);
                  n = 0;
                  i += s;
                  s = m;
                  t = -1;
                  a = 0;
                  c = !1;
                } else if (_p17) {
                  if (n + _h44 > e) {
                    r = Math.max(r, n);
                    n = 0;
                    i += s;
                    s = m;
                    t = -1;
                    a = 0;
                    o = !0;
                    c = !1;
                  } else {
                    s = Math.max(m, s);
                    a = n;
                    n += _h44;
                    t = l;
                  }
                } else if (n + _h44 > e) {
                  i += s;
                  s = m;
                  if (-1 !== t) {
                    l = t;
                    r = Math.max(r, a);
                    n = 0;
                    t = -1;
                    a = 0;
                  } else {
                    r = Math.max(r, n);
                    n = _h44;
                  }
                  o = !0;
                  c = !1;
                } else {
                  n += _h44;
                  s = Math.max(m, s);
                }
              }
              r = Math.max(r, n);
              i += s + this.extraHeight;
              return {
                width: 1.02 * r,
                height: i,
                isBroken: o
              };
            }
          }]);
          return TextMeasure;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.DataHandler = void 0;
        var r = a(77);
        t.DataHandler = /*#__PURE__*/function () {
          function DataHandler(e, t) {
            _classCallCheck(this, DataHandler);
            this.data = t;
            this.dataset = e.datasets || null;
          }
          _createClass(DataHandler, [{
            key: "serialize",
            value: function serialize(e) {
              var t = [[-1, this.data[r.$getChildren]()]];
              for (; t.length > 0;) {
                var _a366 = t.at(-1),
                  _a365 = _slicedToArray(_a366, 2),
                  _i241 = _a365[0],
                  _n157 = _a365[1];
                if (_i241 + 1 === _n157.length) {
                  t.pop();
                  continue;
                }
                var _s130 = _n157[++_a366[0]],
                  _o91 = e.get(_s130[r.$uid]);
                if (_o91) _s130[r.$setValue](_o91);else {
                  var _t470 = _s130[r.$getAttributes]();
                  var _iterator210 = _createForOfIteratorHelper(_t470.values()),
                    _step210;
                  try {
                    for (_iterator210.s(); !(_step210 = _iterator210.n()).done;) {
                      var _a367 = _step210.value;
                      var _t471 = e.get(_a367[r.$uid]);
                      if (_t471) {
                        _a367[r.$setValue](_t471);
                        break;
                      }
                    }
                  } catch (err) {
                    _iterator210.e(err);
                  } finally {
                    _iterator210.f();
                  }
                }
                var _c65 = _s130[r.$getChildren]();
                _c65.length > 0 && t.push([-1, _c65]);
              }
              var a = ['<xfa:datasets xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/">'];
              if (this.dataset) {
                var _iterator211 = _createForOfIteratorHelper(this.dataset[r.$getChildren]()),
                  _step211;
                try {
                  for (_iterator211.s(); !(_step211 = _iterator211.n()).done;) {
                    var _e625 = _step211.value;
                    "data" !== _e625[r.$nodeName] && _e625[r.$toString](a);
                  }
                } catch (err) {
                  _iterator211.e(err);
                } finally {
                  _iterator211.f();
                }
              }
              this.data[r.$toString](a);
              a.push("</xfa:datasets>");
              return a.join("");
            }
          }]);
          return DataHandler;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.XFAParser = void 0;
        var r = a(77),
          i = a(66),
          n = a(89),
          s = a(2);
        var XFAParser = /*#__PURE__*/function (_i$XMLParserBase) {
          _inherits(XFAParser, _i$XMLParserBase);
          var _super218 = _createSuper(XFAParser);
          function XFAParser() {
            var _this220;
            var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
            var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
            _classCallCheck(this, XFAParser);
            _this220 = _super218.call(this);
            _this220._builder = new n.Builder(e);
            _this220._stack = [];
            _this220._globalData = {
              usedTypefaces: new Set()
            };
            _this220._ids = new Map();
            _this220._current = _this220._builder.buildRoot(_this220._ids);
            _this220._errorCode = i.XMLParserErrorCode.NoError;
            _this220._whiteRegex = /^\s+$/;
            _this220._nbsps = /\xa0+/g;
            _this220._richText = t;
            return _this220;
          }
          _createClass(XFAParser, [{
            key: "parse",
            value: function parse(e) {
              this.parseXml(e);
              if (this._errorCode === i.XMLParserErrorCode.NoError) {
                this._current[r.$finalize]();
                return this._current.element;
              }
            }
          }, {
            key: "onText",
            value: function onText(e) {
              e = e.replace(this._nbsps, function (e) {
                return e.slice(1) + " ";
              });
              this._richText || this._current[r.$acceptWhitespace]() ? this._current[r.$onText](e, this._richText) : this._whiteRegex.test(e) || this._current[r.$onText](e.trim());
            }
          }, {
            key: "onCdata",
            value: function onCdata(e) {
              this._current[r.$onText](e);
            }
          }, {
            key: "_mkAttributes",
            value: function _mkAttributes(e, t) {
              var a = null,
                i = null;
              var n = Object.create({});
              var _iterator212 = _createForOfIteratorHelper(e),
                _step212;
              try {
                for (_iterator212.s(); !(_step212 = _iterator212.n()).done;) {
                  var _step212$value = _step212.value,
                    _o92 = _step212$value.name,
                    _c66 = _step212$value.value;
                  if ("xmlns" === _o92) a ? (0, s.warn)("XFA - multiple namespace definition in <".concat(t, ">")) : a = _c66;else if (_o92.startsWith("xmlns:")) {
                    var _e626 = _o92.substring(6);
                    i || (i = []);
                    i.push({
                      prefix: _e626,
                      value: _c66
                    });
                  } else {
                    var _e627 = _o92.indexOf(":");
                    if (-1 === _e627) n[_o92] = _c66;else {
                      var _t473;
                      var _t472 = n[r.$nsAttributes];
                      _t472 || (_t472 = n[r.$nsAttributes] = Object.create(null));
                      var _ref106 = [_o92.slice(0, _e627), _o92.slice(_e627 + 1)],
                        _a368 = _ref106[0],
                        _i242 = _ref106[1];
                      ((_t473 = _t472)[_a368] || (_t473[_a368] = Object.create(null)))[_i242] = _c66;
                    }
                  }
                }
              } catch (err) {
                _iterator212.e(err);
              } finally {
                _iterator212.f();
              }
              return [a, i, n];
            }
          }, {
            key: "_getNameAndPrefix",
            value: function _getNameAndPrefix(e, t) {
              var a = e.indexOf(":");
              return -1 === a ? [e, null] : [e.substring(a + 1), t ? "" : e.substring(0, a)];
            }
          }, {
            key: "onBeginElement",
            value: function onBeginElement(e, t, a) {
              var _this$_mkAttributes = this._mkAttributes(t, e),
                _this$_mkAttributes2 = _slicedToArray(_this$_mkAttributes, 3),
                i = _this$_mkAttributes2[0],
                n = _this$_mkAttributes2[1],
                s = _this$_mkAttributes2[2],
                _this$_getNameAndPref = this._getNameAndPrefix(e, this._builder.isNsAgnostic()),
                _this$_getNameAndPref2 = _slicedToArray(_this$_getNameAndPref, 2),
                o = _this$_getNameAndPref2[0],
                c = _this$_getNameAndPref2[1],
                l = this._builder.build({
                  nsPrefix: c,
                  name: o,
                  attributes: s,
                  namespace: i,
                  prefixes: n
                });
              l[r.$globalData] = this._globalData;
              if (a) {
                l[r.$finalize]();
                this._current[r.$onChild](l) && l[r.$setId](this._ids);
                l[r.$clean](this._builder);
              } else {
                this._stack.push(this._current);
                this._current = l;
              }
            }
          }, {
            key: "onEndElement",
            value: function onEndElement(e) {
              var t = this._current;
              if (t[r.$isCDATAXml]() && "string" == typeof t[r.$content]) {
                var _e628 = new XFAParser();
                _e628._globalData = this._globalData;
                var _a369 = _e628.parse(t[r.$content]);
                t[r.$content] = null;
                t[r.$onChild](_a369);
              }
              t[r.$finalize]();
              this._current = this._stack.pop();
              this._current[r.$onChild](t) && t[r.$setId](this._ids);
              t[r.$clean](this._builder);
            }
          }, {
            key: "onError",
            value: function onError(e) {
              this._errorCode = e;
            }
          }]);
          return XFAParser;
        }(i.XMLParserBase);
        t.XFAParser = XFAParser;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.Builder = void 0;
        var r = a(79),
          i = a(77),
          n = a(90),
          s = a(82),
          o = a(99),
          c = a(2);
        var Root = /*#__PURE__*/function (_i$XFAObject, _i$$onChild, _i$$finalize) {
          _inherits(Root, _i$XFAObject);
          var _super219 = _createSuper(Root);
          function Root(e) {
            var _this221;
            _classCallCheck(this, Root);
            _this221 = _super219.call(this, -1, "root", Object.create(null));
            _this221.element = null;
            _this221[i.$ids] = e;
            return _this221;
          }
          _createClass(Root, [{
            key: _i$$onChild,
            value: function value(e) {
              this.element = e;
              return !0;
            }
          }, {
            key: _i$$finalize,
            value: function value() {
              _get(_getPrototypeOf(Root.prototype), i.$finalize, this).call(this);
              if (this.element.template instanceof s.Template) {
                this[i.$ids].set(i.$root, this.element);
                this.element.template[i.$resolvePrototypes](this[i.$ids]);
                this.element.template[i.$ids] = this[i.$ids];
              }
            }
          }]);
          return Root;
        }(i.XFAObject, i.$onChild, i.$finalize);
        var Empty = /*#__PURE__*/function (_i$XFAObject2, _i$$onChild2) {
          _inherits(Empty, _i$XFAObject2);
          var _super220 = _createSuper(Empty);
          function Empty() {
            _classCallCheck(this, Empty);
            return _super220.call(this, -1, "", Object.create(null));
          }
          _createClass(Empty, [{
            key: _i$$onChild2,
            value: function value(e) {
              return !1;
            }
          }]);
          return Empty;
        }(i.XFAObject, i.$onChild);
        t.Builder = /*#__PURE__*/function () {
          function Builder() {
            var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
            _classCallCheck(this, Builder);
            this._namespaceStack = [];
            this._nsAgnosticLevel = 0;
            this._namespacePrefixes = new Map();
            this._namespaces = new Map();
            this._nextNsId = Math.max.apply(Math, _toConsumableArray(Object.values(r.NamespaceIds).map(function (_ref107) {
              var e = _ref107.id;
              return e;
            })));
            this._currentNamespace = e || new o.UnknownNamespace(++this._nextNsId);
          }
          _createClass(Builder, [{
            key: "buildRoot",
            value: function buildRoot(e) {
              return new Root(e);
            }
          }, {
            key: "build",
            value: function build(_ref108) {
              var e = _ref108.nsPrefix,
                t = _ref108.name,
                a = _ref108.attributes,
                s = _ref108.namespace,
                o = _ref108.prefixes;
              var c = null !== s;
              if (c) {
                this._namespaceStack.push(this._currentNamespace);
                this._currentNamespace = this._searchNamespace(s);
              }
              o && this._addNamespacePrefix(o);
              if (a.hasOwnProperty(i.$nsAttributes)) {
                var _e629 = n.NamespaceSetUp.datasets,
                  _t474 = a[i.$nsAttributes];
                var _r272 = null;
                for (var _i243 = 0, _Object$entries6 = Object.entries(_t474); _i243 < _Object$entries6.length; _i243++) {
                  var _Object$entries6$_i = _slicedToArray(_Object$entries6[_i243], 2),
                    _a370 = _Object$entries6$_i[0],
                    _i244 = _Object$entries6$_i[1];
                  if (this._getNamespaceToUse(_a370) === _e629) {
                    _r272 = {
                      xfa: _i244
                    };
                    break;
                  }
                }
                _r272 ? a[i.$nsAttributes] = _r272 : delete a[i.$nsAttributes];
              }
              var l = this._getNamespaceToUse(e),
                h = l && l[r.$buildXFAObject](t, a) || new Empty();
              h[i.$isNsAgnostic]() && this._nsAgnosticLevel++;
              (c || o || h[i.$isNsAgnostic]()) && (h[i.$cleanup] = {
                hasNamespace: c,
                prefixes: o,
                nsAgnostic: h[i.$isNsAgnostic]()
              });
              return h;
            }
          }, {
            key: "isNsAgnostic",
            value: function isNsAgnostic() {
              return this._nsAgnosticLevel > 0;
            }
          }, {
            key: "_searchNamespace",
            value: function _searchNamespace(e) {
              var t = this._namespaces.get(e);
              if (t) return t;
              for (var _i245 = 0, _Object$entries7 = Object.entries(r.NamespaceIds); _i245 < _Object$entries7.length; _i245++) {
                var _Object$entries7$_i = _slicedToArray(_Object$entries7[_i245], 2),
                  _a371 = _Object$entries7$_i[0],
                  _i246 = _Object$entries7$_i[1].check;
                if (_i246(e)) {
                  t = n.NamespaceSetUp[_a371];
                  if (t) {
                    this._namespaces.set(e, t);
                    return t;
                  }
                  break;
                }
              }
              t = new o.UnknownNamespace(++this._nextNsId);
              this._namespaces.set(e, t);
              return t;
            }
          }, {
            key: "_addNamespacePrefix",
            value: function _addNamespacePrefix(e) {
              var _iterator213 = _createForOfIteratorHelper(e),
                _step213;
              try {
                for (_iterator213.s(); !(_step213 = _iterator213.n()).done;) {
                  var _step213$value = _step213.value,
                    _t475 = _step213$value.prefix,
                    _a372 = _step213$value.value;
                  var _e630 = this._searchNamespace(_a372);
                  var _r273 = this._namespacePrefixes.get(_t475);
                  if (!_r273) {
                    _r273 = [];
                    this._namespacePrefixes.set(_t475, _r273);
                  }
                  _r273.push(_e630);
                }
              } catch (err) {
                _iterator213.e(err);
              } finally {
                _iterator213.f();
              }
            }
          }, {
            key: "_getNamespaceToUse",
            value: function _getNamespaceToUse(e) {
              if (!e) return this._currentNamespace;
              var t = this._namespacePrefixes.get(e);
              if (t && t.length > 0) return t.at(-1);
              (0, c.warn)("Unknown namespace prefix: ".concat(e, "."));
              return null;
            }
          }, {
            key: "clean",
            value: function clean(e) {
              var _this222 = this;
              var t = e.hasNamespace,
                a = e.prefixes,
                r = e.nsAgnostic;
              t && (this._currentNamespace = this._namespaceStack.pop());
              a && a.forEach(function (_ref109) {
                var e = _ref109.prefix;
                _this222._namespacePrefixes.get(e).pop();
              });
              r && this._nsAgnosticLevel--;
            }
          }]);
          return Builder;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.NamespaceSetUp = void 0;
        var r = a(91),
          i = a(92),
          n = a(93),
          s = a(94),
          o = a(95),
          c = a(96),
          l = a(82),
          h = a(97),
          u = a(98);
        var d = {
          config: r.ConfigNamespace,
          connection: i.ConnectionSetNamespace,
          datasets: n.DatasetsNamespace,
          localeSet: s.LocaleSetNamespace,
          signature: o.SignatureNamespace,
          stylesheet: c.StylesheetNamespace,
          template: l.TemplateNamespace,
          xdp: h.XdpNamespace,
          xhtml: u.XhtmlNamespace
        };
        t.NamespaceSetUp = d;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.ConfigNamespace = void 0;
        var r = a(79),
          i = a(77),
          n = a(78),
          s = a(2);
        var o = r.NamespaceIds.config.id;
        var Acrobat = /*#__PURE__*/function (_i$XFAObject3) {
          _inherits(Acrobat, _i$XFAObject3);
          var _super221 = _createSuper(Acrobat);
          function Acrobat(e) {
            var _this223;
            _classCallCheck(this, Acrobat);
            _this223 = _super221.call(this, o, "acrobat", !0);
            _this223.acrobat7 = null;
            _this223.autoSave = null;
            _this223.common = null;
            _this223.validate = null;
            _this223.validateApprovalSignatures = null;
            _this223.submitUrl = new i.XFAObjectArray();
            return _this223;
          }
          return _createClass(Acrobat);
        }(i.XFAObject);
        var Acrobat7 = /*#__PURE__*/function (_i$XFAObject4) {
          _inherits(Acrobat7, _i$XFAObject4);
          var _super222 = _createSuper(Acrobat7);
          function Acrobat7(e) {
            var _this224;
            _classCallCheck(this, Acrobat7);
            _this224 = _super222.call(this, o, "acrobat7", !0);
            _this224.dynamicRender = null;
            return _this224;
          }
          return _createClass(Acrobat7);
        }(i.XFAObject);
        var _ADBE_JSConsole = /*#__PURE__*/function (_i$OptionObject) {
          _inherits(ADBE_JSConsole, _i$OptionObject);
          var _super223 = _createSuper(ADBE_JSConsole);
          function ADBE_JSConsole(e) {
            _classCallCheck(this, ADBE_JSConsole);
            return _super223.call(this, o, "ADBE_JSConsole", ["delegate", "Enable", "Disable"]);
          }
          return _createClass(ADBE_JSConsole);
        }(i.OptionObject);
        var _ADBE_JSDebugger = /*#__PURE__*/function (_i$OptionObject2) {
          _inherits(ADBE_JSDebugger, _i$OptionObject2);
          var _super224 = _createSuper(ADBE_JSDebugger);
          function ADBE_JSDebugger(e) {
            _classCallCheck(this, ADBE_JSDebugger);
            return _super224.call(this, o, "ADBE_JSDebugger", ["delegate", "Enable", "Disable"]);
          }
          return _createClass(ADBE_JSDebugger);
        }(i.OptionObject);
        var AddSilentPrint = /*#__PURE__*/function (_i$Option) {
          _inherits(AddSilentPrint, _i$Option);
          var _super225 = _createSuper(AddSilentPrint);
          function AddSilentPrint(e) {
            _classCallCheck(this, AddSilentPrint);
            return _super225.call(this, o, "addSilentPrint");
          }
          return _createClass(AddSilentPrint);
        }(i.Option01);
        var AddViewerPreferences = /*#__PURE__*/function (_i$Option2) {
          _inherits(AddViewerPreferences, _i$Option2);
          var _super226 = _createSuper(AddViewerPreferences);
          function AddViewerPreferences(e) {
            _classCallCheck(this, AddViewerPreferences);
            return _super226.call(this, o, "addViewerPreferences");
          }
          return _createClass(AddViewerPreferences);
        }(i.Option01);
        var AdjustData = /*#__PURE__*/function (_i$Option3) {
          _inherits(AdjustData, _i$Option3);
          var _super227 = _createSuper(AdjustData);
          function AdjustData(e) {
            _classCallCheck(this, AdjustData);
            return _super227.call(this, o, "adjustData");
          }
          return _createClass(AdjustData);
        }(i.Option10);
        var AdobeExtensionLevel = /*#__PURE__*/function (_i$IntegerObject) {
          _inherits(AdobeExtensionLevel, _i$IntegerObject);
          var _super228 = _createSuper(AdobeExtensionLevel);
          function AdobeExtensionLevel(e) {
            _classCallCheck(this, AdobeExtensionLevel);
            return _super228.call(this, o, "adobeExtensionLevel", 0, function (e) {
              return e >= 1 && e <= 8;
            });
          }
          return _createClass(AdobeExtensionLevel);
        }(i.IntegerObject);
        var Agent = /*#__PURE__*/function (_i$XFAObject5) {
          _inherits(Agent, _i$XFAObject5);
          var _super229 = _createSuper(Agent);
          function Agent(e) {
            var _this225;
            _classCallCheck(this, Agent);
            _this225 = _super229.call(this, o, "agent", !0);
            _this225.name = e.name ? e.name.trim() : "";
            _this225.common = new i.XFAObjectArray();
            return _this225;
          }
          return _createClass(Agent);
        }(i.XFAObject);
        var AlwaysEmbed = /*#__PURE__*/function (_i$ContentObject) {
          _inherits(AlwaysEmbed, _i$ContentObject);
          var _super230 = _createSuper(AlwaysEmbed);
          function AlwaysEmbed(e) {
            _classCallCheck(this, AlwaysEmbed);
            return _super230.call(this, o, "alwaysEmbed");
          }
          return _createClass(AlwaysEmbed);
        }(i.ContentObject);
        var Amd = /*#__PURE__*/function (_i$StringObject) {
          _inherits(Amd, _i$StringObject);
          var _super231 = _createSuper(Amd);
          function Amd(e) {
            _classCallCheck(this, Amd);
            return _super231.call(this, o, "amd");
          }
          return _createClass(Amd);
        }(i.StringObject);
        var Area = /*#__PURE__*/function (_i$XFAObject6) {
          _inherits(Area, _i$XFAObject6);
          var _super232 = _createSuper(Area);
          function Area(e) {
            var _this226;
            _classCallCheck(this, Area);
            _this226 = _super232.call(this, o, "area");
            _this226.level = (0, n.getInteger)({
              data: e.level,
              defaultValue: 0,
              validate: function validate(e) {
                return e >= 1 && e <= 3;
              }
            });
            _this226.name = (0, n.getStringOption)(e.name, ["", "barcode", "coreinit", "deviceDriver", "font", "general", "layout", "merge", "script", "signature", "sourceSet", "templateCache"]);
            return _this226;
          }
          return _createClass(Area);
        }(i.XFAObject);
        var Attributes = /*#__PURE__*/function (_i$OptionObject3) {
          _inherits(Attributes, _i$OptionObject3);
          var _super233 = _createSuper(Attributes);
          function Attributes(e) {
            _classCallCheck(this, Attributes);
            return _super233.call(this, o, "attributes", ["preserve", "delegate", "ignore"]);
          }
          return _createClass(Attributes);
        }(i.OptionObject);
        var AutoSave = /*#__PURE__*/function (_i$OptionObject4) {
          _inherits(AutoSave, _i$OptionObject4);
          var _super234 = _createSuper(AutoSave);
          function AutoSave(e) {
            _classCallCheck(this, AutoSave);
            return _super234.call(this, o, "autoSave", ["disabled", "enabled"]);
          }
          return _createClass(AutoSave);
        }(i.OptionObject);
        var Base = /*#__PURE__*/function (_i$StringObject2) {
          _inherits(Base, _i$StringObject2);
          var _super235 = _createSuper(Base);
          function Base(e) {
            _classCallCheck(this, Base);
            return _super235.call(this, o, "base");
          }
          return _createClass(Base);
        }(i.StringObject);
        var BatchOutput = /*#__PURE__*/function (_i$XFAObject7) {
          _inherits(BatchOutput, _i$XFAObject7);
          var _super236 = _createSuper(BatchOutput);
          function BatchOutput(e) {
            var _this227;
            _classCallCheck(this, BatchOutput);
            _this227 = _super236.call(this, o, "batchOutput");
            _this227.format = (0, n.getStringOption)(e.format, ["none", "concat", "zip", "zipCompress"]);
            return _this227;
          }
          return _createClass(BatchOutput);
        }(i.XFAObject);
        var BehaviorOverride = /*#__PURE__*/function (_i$ContentObject2, _i$$finalize2) {
          _inherits(BehaviorOverride, _i$ContentObject2);
          var _super237 = _createSuper(BehaviorOverride);
          function BehaviorOverride(e) {
            _classCallCheck(this, BehaviorOverride);
            return _super237.call(this, o, "behaviorOverride");
          }
          _createClass(BehaviorOverride, [{
            key: _i$$finalize2,
            value: function value() {
              this[i.$content] = new Map(this[i.$content].trim().split(/\s+/).filter(function (e) {
                return e.includes(":");
              }).map(function (e) {
                return e.split(":", 2);
              }));
            }
          }]);
          return BehaviorOverride;
        }(i.ContentObject, i.$finalize);
        var Cache = /*#__PURE__*/function (_i$XFAObject8) {
          _inherits(Cache, _i$XFAObject8);
          var _super238 = _createSuper(Cache);
          function Cache(e) {
            var _this228;
            _classCallCheck(this, Cache);
            _this228 = _super238.call(this, o, "cache", !0);
            _this228.templateCache = null;
            return _this228;
          }
          return _createClass(Cache);
        }(i.XFAObject);
        var Change = /*#__PURE__*/function (_i$Option4) {
          _inherits(Change, _i$Option4);
          var _super239 = _createSuper(Change);
          function Change(e) {
            _classCallCheck(this, Change);
            return _super239.call(this, o, "change");
          }
          return _createClass(Change);
        }(i.Option01);
        var Common = /*#__PURE__*/function (_i$XFAObject9) {
          _inherits(Common, _i$XFAObject9);
          var _super240 = _createSuper(Common);
          function Common(e) {
            var _this229;
            _classCallCheck(this, Common);
            _this229 = _super240.call(this, o, "common", !0);
            _this229.data = null;
            _this229.locale = null;
            _this229.localeSet = null;
            _this229.messaging = null;
            _this229.suppressBanner = null;
            _this229.template = null;
            _this229.validationMessaging = null;
            _this229.versionControl = null;
            _this229.log = new i.XFAObjectArray();
            return _this229;
          }
          return _createClass(Common);
        }(i.XFAObject);
        var Compress = /*#__PURE__*/function (_i$XFAObject10) {
          _inherits(Compress, _i$XFAObject10);
          var _super241 = _createSuper(Compress);
          function Compress(e) {
            var _this230;
            _classCallCheck(this, Compress);
            _this230 = _super241.call(this, o, "compress");
            _this230.scope = (0, n.getStringOption)(e.scope, ["imageOnly", "document"]);
            return _this230;
          }
          return _createClass(Compress);
        }(i.XFAObject);
        var CompressLogicalStructure = /*#__PURE__*/function (_i$Option5) {
          _inherits(CompressLogicalStructure, _i$Option5);
          var _super242 = _createSuper(CompressLogicalStructure);
          function CompressLogicalStructure(e) {
            _classCallCheck(this, CompressLogicalStructure);
            return _super242.call(this, o, "compressLogicalStructure");
          }
          return _createClass(CompressLogicalStructure);
        }(i.Option01);
        var CompressObjectStream = /*#__PURE__*/function (_i$Option6) {
          _inherits(CompressObjectStream, _i$Option6);
          var _super243 = _createSuper(CompressObjectStream);
          function CompressObjectStream(e) {
            _classCallCheck(this, CompressObjectStream);
            return _super243.call(this, o, "compressObjectStream");
          }
          return _createClass(CompressObjectStream);
        }(i.Option10);
        var Compression = /*#__PURE__*/function (_i$XFAObject11) {
          _inherits(Compression, _i$XFAObject11);
          var _super244 = _createSuper(Compression);
          function Compression(e) {
            var _this231;
            _classCallCheck(this, Compression);
            _this231 = _super244.call(this, o, "compression", !0);
            _this231.compressLogicalStructure = null;
            _this231.compressObjectStream = null;
            _this231.level = null;
            _this231.type = null;
            return _this231;
          }
          return _createClass(Compression);
        }(i.XFAObject);
        var Config = /*#__PURE__*/function (_i$XFAObject12) {
          _inherits(Config, _i$XFAObject12);
          var _super245 = _createSuper(Config);
          function Config(e) {
            var _this232;
            _classCallCheck(this, Config);
            _this232 = _super245.call(this, o, "config", !0);
            _this232.acrobat = null;
            _this232.present = null;
            _this232.trace = null;
            _this232.agent = new i.XFAObjectArray();
            return _this232;
          }
          return _createClass(Config);
        }(i.XFAObject);
        var Conformance = /*#__PURE__*/function (_i$OptionObject5) {
          _inherits(Conformance, _i$OptionObject5);
          var _super246 = _createSuper(Conformance);
          function Conformance(e) {
            _classCallCheck(this, Conformance);
            return _super246.call(this, o, "conformance", ["A", "B"]);
          }
          return _createClass(Conformance);
        }(i.OptionObject);
        var ContentCopy = /*#__PURE__*/function (_i$Option7) {
          _inherits(ContentCopy, _i$Option7);
          var _super247 = _createSuper(ContentCopy);
          function ContentCopy(e) {
            _classCallCheck(this, ContentCopy);
            return _super247.call(this, o, "contentCopy");
          }
          return _createClass(ContentCopy);
        }(i.Option01);
        var Copies = /*#__PURE__*/function (_i$IntegerObject2) {
          _inherits(Copies, _i$IntegerObject2);
          var _super248 = _createSuper(Copies);
          function Copies(e) {
            _classCallCheck(this, Copies);
            return _super248.call(this, o, "copies", 1, function (e) {
              return e >= 1;
            });
          }
          return _createClass(Copies);
        }(i.IntegerObject);
        var Creator = /*#__PURE__*/function (_i$StringObject3) {
          _inherits(Creator, _i$StringObject3);
          var _super249 = _createSuper(Creator);
          function Creator(e) {
            _classCallCheck(this, Creator);
            return _super249.call(this, o, "creator");
          }
          return _createClass(Creator);
        }(i.StringObject);
        var CurrentPage = /*#__PURE__*/function (_i$IntegerObject3) {
          _inherits(CurrentPage, _i$IntegerObject3);
          var _super250 = _createSuper(CurrentPage);
          function CurrentPage(e) {
            _classCallCheck(this, CurrentPage);
            return _super250.call(this, o, "currentPage", 0, function (e) {
              return e >= 0;
            });
          }
          return _createClass(CurrentPage);
        }(i.IntegerObject);
        var Data = /*#__PURE__*/function (_i$XFAObject13) {
          _inherits(Data, _i$XFAObject13);
          var _super251 = _createSuper(Data);
          function Data(e) {
            var _this233;
            _classCallCheck(this, Data);
            _this233 = _super251.call(this, o, "data", !0);
            _this233.adjustData = null;
            _this233.attributes = null;
            _this233.incrementalLoad = null;
            _this233.outputXSL = null;
            _this233.range = null;
            _this233.record = null;
            _this233.startNode = null;
            _this233.uri = null;
            _this233.window = null;
            _this233.xsl = null;
            _this233.excludeNS = new i.XFAObjectArray();
            _this233.transform = new i.XFAObjectArray();
            return _this233;
          }
          return _createClass(Data);
        }(i.XFAObject);
        var Debug = /*#__PURE__*/function (_i$XFAObject14) {
          _inherits(Debug, _i$XFAObject14);
          var _super252 = _createSuper(Debug);
          function Debug(e) {
            var _this234;
            _classCallCheck(this, Debug);
            _this234 = _super252.call(this, o, "debug", !0);
            _this234.uri = null;
            return _this234;
          }
          return _createClass(Debug);
        }(i.XFAObject);
        var DefaultTypeface = /*#__PURE__*/function (_i$ContentObject3) {
          _inherits(DefaultTypeface, _i$ContentObject3);
          var _super253 = _createSuper(DefaultTypeface);
          function DefaultTypeface(e) {
            var _this235;
            _classCallCheck(this, DefaultTypeface);
            _this235 = _super253.call(this, o, "defaultTypeface");
            _this235.writingScript = (0, n.getStringOption)(e.writingScript, ["*", "Arabic", "Cyrillic", "EastEuropeanRoman", "Greek", "Hebrew", "Japanese", "Korean", "Roman", "SimplifiedChinese", "Thai", "TraditionalChinese", "Vietnamese"]);
            return _this235;
          }
          return _createClass(DefaultTypeface);
        }(i.ContentObject);
        var Destination = /*#__PURE__*/function (_i$OptionObject6) {
          _inherits(Destination, _i$OptionObject6);
          var _super254 = _createSuper(Destination);
          function Destination(e) {
            _classCallCheck(this, Destination);
            return _super254.call(this, o, "destination", ["pdf", "pcl", "ps", "webClient", "zpl"]);
          }
          return _createClass(Destination);
        }(i.OptionObject);
        var DocumentAssembly = /*#__PURE__*/function (_i$Option8) {
          _inherits(DocumentAssembly, _i$Option8);
          var _super255 = _createSuper(DocumentAssembly);
          function DocumentAssembly(e) {
            _classCallCheck(this, DocumentAssembly);
            return _super255.call(this, o, "documentAssembly");
          }
          return _createClass(DocumentAssembly);
        }(i.Option01);
        var Driver = /*#__PURE__*/function (_i$XFAObject15) {
          _inherits(Driver, _i$XFAObject15);
          var _super256 = _createSuper(Driver);
          function Driver(e) {
            var _this236;
            _classCallCheck(this, Driver);
            _this236 = _super256.call(this, o, "driver", !0);
            _this236.name = e.name ? e.name.trim() : "";
            _this236.fontInfo = null;
            _this236.xdc = null;
            return _this236;
          }
          return _createClass(Driver);
        }(i.XFAObject);
        var DuplexOption = /*#__PURE__*/function (_i$OptionObject7) {
          _inherits(DuplexOption, _i$OptionObject7);
          var _super257 = _createSuper(DuplexOption);
          function DuplexOption(e) {
            _classCallCheck(this, DuplexOption);
            return _super257.call(this, o, "duplexOption", ["simplex", "duplexFlipLongEdge", "duplexFlipShortEdge"]);
          }
          return _createClass(DuplexOption);
        }(i.OptionObject);
        var DynamicRender = /*#__PURE__*/function (_i$OptionObject8) {
          _inherits(DynamicRender, _i$OptionObject8);
          var _super258 = _createSuper(DynamicRender);
          function DynamicRender(e) {
            _classCallCheck(this, DynamicRender);
            return _super258.call(this, o, "dynamicRender", ["forbidden", "required"]);
          }
          return _createClass(DynamicRender);
        }(i.OptionObject);
        var Embed = /*#__PURE__*/function (_i$Option9) {
          _inherits(Embed, _i$Option9);
          var _super259 = _createSuper(Embed);
          function Embed(e) {
            _classCallCheck(this, Embed);
            return _super259.call(this, o, "embed");
          }
          return _createClass(Embed);
        }(i.Option01);
        var Encrypt = /*#__PURE__*/function (_i$Option10) {
          _inherits(Encrypt, _i$Option10);
          var _super260 = _createSuper(Encrypt);
          function Encrypt(e) {
            _classCallCheck(this, Encrypt);
            return _super260.call(this, o, "encrypt");
          }
          return _createClass(Encrypt);
        }(i.Option01);
        var Encryption = /*#__PURE__*/function (_i$XFAObject16) {
          _inherits(Encryption, _i$XFAObject16);
          var _super261 = _createSuper(Encryption);
          function Encryption(e) {
            var _this237;
            _classCallCheck(this, Encryption);
            _this237 = _super261.call(this, o, "encryption", !0);
            _this237.encrypt = null;
            _this237.encryptionLevel = null;
            _this237.permissions = null;
            return _this237;
          }
          return _createClass(Encryption);
        }(i.XFAObject);
        var EncryptionLevel = /*#__PURE__*/function (_i$OptionObject9) {
          _inherits(EncryptionLevel, _i$OptionObject9);
          var _super262 = _createSuper(EncryptionLevel);
          function EncryptionLevel(e) {
            _classCallCheck(this, EncryptionLevel);
            return _super262.call(this, o, "encryptionLevel", ["40bit", "128bit"]);
          }
          return _createClass(EncryptionLevel);
        }(i.OptionObject);
        var Enforce = /*#__PURE__*/function (_i$StringObject4) {
          _inherits(Enforce, _i$StringObject4);
          var _super263 = _createSuper(Enforce);
          function Enforce(e) {
            _classCallCheck(this, Enforce);
            return _super263.call(this, o, "enforce");
          }
          return _createClass(Enforce);
        }(i.StringObject);
        var Equate = /*#__PURE__*/function (_i$XFAObject17) {
          _inherits(Equate, _i$XFAObject17);
          var _super264 = _createSuper(Equate);
          function Equate(e) {
            var _this238;
            _classCallCheck(this, Equate);
            _this238 = _super264.call(this, o, "equate");
            _this238.force = (0, n.getInteger)({
              data: e.force,
              defaultValue: 1,
              validate: function validate(e) {
                return 0 === e;
              }
            });
            _this238.from = e.from || "";
            _this238.to = e.to || "";
            return _this238;
          }
          return _createClass(Equate);
        }(i.XFAObject);
        var EquateRange = /*#__PURE__*/function (_i$XFAObject18) {
          _inherits(EquateRange, _i$XFAObject18);
          var _super265 = _createSuper(EquateRange);
          function EquateRange(e) {
            var _this239;
            _classCallCheck(this, EquateRange);
            _this239 = _super265.call(this, o, "equateRange");
            _this239.from = e.from || "";
            _this239.to = e.to || "";
            _this239._unicodeRange = e.unicodeRange || "";
            return _this239;
          }
          _createClass(EquateRange, [{
            key: "unicodeRange",
            get: function get() {
              var e = [],
                t = /U\+([0-9a-fA-F]+)/,
                a = this._unicodeRange;
              var _iterator214 = _createForOfIteratorHelper(a.split(",").map(function (e) {
                  return e.trim();
                }).filter(function (e) {
                  return !!e;
                })),
                _step214;
              try {
                for (_iterator214.s(); !(_step214 = _iterator214.n()).done;) {
                  var _r274 = _step214.value;
                  _r274 = _r274.split("-", 2).map(function (e) {
                    var a = e.match(t);
                    return a ? parseInt(a[1], 16) : 0;
                  });
                  1 === _r274.length && _r274.push(_r274[0]);
                  e.push(_r274);
                }
              } catch (err) {
                _iterator214.e(err);
              } finally {
                _iterator214.f();
              }
              return (0, s.shadow)(this, "unicodeRange", e);
            }
          }]);
          return EquateRange;
        }(i.XFAObject);
        var Exclude = /*#__PURE__*/function (_i$ContentObject4, _i$$finalize3) {
          _inherits(Exclude, _i$ContentObject4);
          var _super266 = _createSuper(Exclude);
          function Exclude(e) {
            _classCallCheck(this, Exclude);
            return _super266.call(this, o, "exclude");
          }
          _createClass(Exclude, [{
            key: _i$$finalize3,
            value: function value() {
              this[i.$content] = this[i.$content].trim().split(/\s+/).filter(function (e) {
                return e && ["calculate", "close", "enter", "exit", "initialize", "ready", "validate"].includes(e);
              });
            }
          }]);
          return Exclude;
        }(i.ContentObject, i.$finalize);
        var ExcludeNS = /*#__PURE__*/function (_i$StringObject5) {
          _inherits(ExcludeNS, _i$StringObject5);
          var _super267 = _createSuper(ExcludeNS);
          function ExcludeNS(e) {
            _classCallCheck(this, ExcludeNS);
            return _super267.call(this, o, "excludeNS");
          }
          return _createClass(ExcludeNS);
        }(i.StringObject);
        var FlipLabel = /*#__PURE__*/function (_i$OptionObject10) {
          _inherits(FlipLabel, _i$OptionObject10);
          var _super268 = _createSuper(FlipLabel);
          function FlipLabel(e) {
            _classCallCheck(this, FlipLabel);
            return _super268.call(this, o, "flipLabel", ["usePrinterSetting", "on", "off"]);
          }
          return _createClass(FlipLabel);
        }(i.OptionObject);
        var FontInfo = /*#__PURE__*/function (_i$XFAObject19) {
          _inherits(FontInfo, _i$XFAObject19);
          var _super269 = _createSuper(FontInfo);
          function FontInfo(e) {
            var _this240;
            _classCallCheck(this, FontInfo);
            _this240 = _super269.call(this, o, "fontInfo", !0);
            _this240.embed = null;
            _this240.map = null;
            _this240.subsetBelow = null;
            _this240.alwaysEmbed = new i.XFAObjectArray();
            _this240.defaultTypeface = new i.XFAObjectArray();
            _this240.neverEmbed = new i.XFAObjectArray();
            return _this240;
          }
          return _createClass(FontInfo);
        }(i.XFAObject);
        var FormFieldFilling = /*#__PURE__*/function (_i$Option11) {
          _inherits(FormFieldFilling, _i$Option11);
          var _super270 = _createSuper(FormFieldFilling);
          function FormFieldFilling(e) {
            _classCallCheck(this, FormFieldFilling);
            return _super270.call(this, o, "formFieldFilling");
          }
          return _createClass(FormFieldFilling);
        }(i.Option01);
        var GroupParent = /*#__PURE__*/function (_i$StringObject6) {
          _inherits(GroupParent, _i$StringObject6);
          var _super271 = _createSuper(GroupParent);
          function GroupParent(e) {
            _classCallCheck(this, GroupParent);
            return _super271.call(this, o, "groupParent");
          }
          return _createClass(GroupParent);
        }(i.StringObject);
        var IfEmpty = /*#__PURE__*/function (_i$OptionObject11) {
          _inherits(IfEmpty, _i$OptionObject11);
          var _super272 = _createSuper(IfEmpty);
          function IfEmpty(e) {
            _classCallCheck(this, IfEmpty);
            return _super272.call(this, o, "ifEmpty", ["dataValue", "dataGroup", "ignore", "remove"]);
          }
          return _createClass(IfEmpty);
        }(i.OptionObject);
        var IncludeXDPContent = /*#__PURE__*/function (_i$StringObject7) {
          _inherits(IncludeXDPContent, _i$StringObject7);
          var _super273 = _createSuper(IncludeXDPContent);
          function IncludeXDPContent(e) {
            _classCallCheck(this, IncludeXDPContent);
            return _super273.call(this, o, "includeXDPContent");
          }
          return _createClass(IncludeXDPContent);
        }(i.StringObject);
        var IncrementalLoad = /*#__PURE__*/function (_i$OptionObject12) {
          _inherits(IncrementalLoad, _i$OptionObject12);
          var _super274 = _createSuper(IncrementalLoad);
          function IncrementalLoad(e) {
            _classCallCheck(this, IncrementalLoad);
            return _super274.call(this, o, "incrementalLoad", ["none", "forwardOnly"]);
          }
          return _createClass(IncrementalLoad);
        }(i.OptionObject);
        var IncrementalMerge = /*#__PURE__*/function (_i$Option12) {
          _inherits(IncrementalMerge, _i$Option12);
          var _super275 = _createSuper(IncrementalMerge);
          function IncrementalMerge(e) {
            _classCallCheck(this, IncrementalMerge);
            return _super275.call(this, o, "incrementalMerge");
          }
          return _createClass(IncrementalMerge);
        }(i.Option01);
        var Interactive = /*#__PURE__*/function (_i$Option13) {
          _inherits(Interactive, _i$Option13);
          var _super276 = _createSuper(Interactive);
          function Interactive(e) {
            _classCallCheck(this, Interactive);
            return _super276.call(this, o, "interactive");
          }
          return _createClass(Interactive);
        }(i.Option01);
        var Jog = /*#__PURE__*/function (_i$OptionObject13) {
          _inherits(Jog, _i$OptionObject13);
          var _super277 = _createSuper(Jog);
          function Jog(e) {
            _classCallCheck(this, Jog);
            return _super277.call(this, o, "jog", ["usePrinterSetting", "none", "pageSet"]);
          }
          return _createClass(Jog);
        }(i.OptionObject);
        var LabelPrinter = /*#__PURE__*/function (_i$XFAObject20) {
          _inherits(LabelPrinter, _i$XFAObject20);
          var _super278 = _createSuper(LabelPrinter);
          function LabelPrinter(e) {
            var _this241;
            _classCallCheck(this, LabelPrinter);
            _this241 = _super278.call(this, o, "labelPrinter", !0);
            _this241.name = (0, n.getStringOption)(e.name, ["zpl", "dpl", "ipl", "tcpl"]);
            _this241.batchOutput = null;
            _this241.flipLabel = null;
            _this241.fontInfo = null;
            _this241.xdc = null;
            return _this241;
          }
          return _createClass(LabelPrinter);
        }(i.XFAObject);
        var Layout = /*#__PURE__*/function (_i$OptionObject14) {
          _inherits(Layout, _i$OptionObject14);
          var _super279 = _createSuper(Layout);
          function Layout(e) {
            _classCallCheck(this, Layout);
            return _super279.call(this, o, "layout", ["paginate", "panel"]);
          }
          return _createClass(Layout);
        }(i.OptionObject);
        var Level = /*#__PURE__*/function (_i$IntegerObject4) {
          _inherits(Level, _i$IntegerObject4);
          var _super280 = _createSuper(Level);
          function Level(e) {
            _classCallCheck(this, Level);
            return _super280.call(this, o, "level", 0, function (e) {
              return e > 0;
            });
          }
          return _createClass(Level);
        }(i.IntegerObject);
        var Linearized = /*#__PURE__*/function (_i$Option14) {
          _inherits(Linearized, _i$Option14);
          var _super281 = _createSuper(Linearized);
          function Linearized(e) {
            _classCallCheck(this, Linearized);
            return _super281.call(this, o, "linearized");
          }
          return _createClass(Linearized);
        }(i.Option01);
        var Locale = /*#__PURE__*/function (_i$StringObject8) {
          _inherits(Locale, _i$StringObject8);
          var _super282 = _createSuper(Locale);
          function Locale(e) {
            _classCallCheck(this, Locale);
            return _super282.call(this, o, "locale");
          }
          return _createClass(Locale);
        }(i.StringObject);
        var LocaleSet = /*#__PURE__*/function (_i$StringObject9) {
          _inherits(LocaleSet, _i$StringObject9);
          var _super283 = _createSuper(LocaleSet);
          function LocaleSet(e) {
            _classCallCheck(this, LocaleSet);
            return _super283.call(this, o, "localeSet");
          }
          return _createClass(LocaleSet);
        }(i.StringObject);
        var Log = /*#__PURE__*/function (_i$XFAObject21) {
          _inherits(Log, _i$XFAObject21);
          var _super284 = _createSuper(Log);
          function Log(e) {
            var _this242;
            _classCallCheck(this, Log);
            _this242 = _super284.call(this, o, "log", !0);
            _this242.mode = null;
            _this242.threshold = null;
            _this242.to = null;
            _this242.uri = null;
            return _this242;
          }
          return _createClass(Log);
        }(i.XFAObject);
        var MapElement = /*#__PURE__*/function (_i$XFAObject22) {
          _inherits(MapElement, _i$XFAObject22);
          var _super285 = _createSuper(MapElement);
          function MapElement(e) {
            var _this243;
            _classCallCheck(this, MapElement);
            _this243 = _super285.call(this, o, "map", !0);
            _this243.equate = new i.XFAObjectArray();
            _this243.equateRange = new i.XFAObjectArray();
            return _this243;
          }
          return _createClass(MapElement);
        }(i.XFAObject);
        var MediumInfo = /*#__PURE__*/function (_i$XFAObject23) {
          _inherits(MediumInfo, _i$XFAObject23);
          var _super286 = _createSuper(MediumInfo);
          function MediumInfo(e) {
            var _this244;
            _classCallCheck(this, MediumInfo);
            _this244 = _super286.call(this, o, "mediumInfo", !0);
            _this244.map = null;
            return _this244;
          }
          return _createClass(MediumInfo);
        }(i.XFAObject);
        var Message = /*#__PURE__*/function (_i$XFAObject24) {
          _inherits(Message, _i$XFAObject24);
          var _super287 = _createSuper(Message);
          function Message(e) {
            var _this245;
            _classCallCheck(this, Message);
            _this245 = _super287.call(this, o, "message", !0);
            _this245.msgId = null;
            _this245.severity = null;
            return _this245;
          }
          return _createClass(Message);
        }(i.XFAObject);
        var Messaging = /*#__PURE__*/function (_i$XFAObject25) {
          _inherits(Messaging, _i$XFAObject25);
          var _super288 = _createSuper(Messaging);
          function Messaging(e) {
            var _this246;
            _classCallCheck(this, Messaging);
            _this246 = _super288.call(this, o, "messaging", !0);
            _this246.message = new i.XFAObjectArray();
            return _this246;
          }
          return _createClass(Messaging);
        }(i.XFAObject);
        var Mode = /*#__PURE__*/function (_i$OptionObject15) {
          _inherits(Mode, _i$OptionObject15);
          var _super289 = _createSuper(Mode);
          function Mode(e) {
            _classCallCheck(this, Mode);
            return _super289.call(this, o, "mode", ["append", "overwrite"]);
          }
          return _createClass(Mode);
        }(i.OptionObject);
        var ModifyAnnots = /*#__PURE__*/function (_i$Option15) {
          _inherits(ModifyAnnots, _i$Option15);
          var _super290 = _createSuper(ModifyAnnots);
          function ModifyAnnots(e) {
            _classCallCheck(this, ModifyAnnots);
            return _super290.call(this, o, "modifyAnnots");
          }
          return _createClass(ModifyAnnots);
        }(i.Option01);
        var MsgId = /*#__PURE__*/function (_i$IntegerObject5) {
          _inherits(MsgId, _i$IntegerObject5);
          var _super291 = _createSuper(MsgId);
          function MsgId(e) {
            _classCallCheck(this, MsgId);
            return _super291.call(this, o, "msgId", 1, function (e) {
              return e >= 1;
            });
          }
          return _createClass(MsgId);
        }(i.IntegerObject);
        var NameAttr = /*#__PURE__*/function (_i$StringObject10) {
          _inherits(NameAttr, _i$StringObject10);
          var _super292 = _createSuper(NameAttr);
          function NameAttr(e) {
            _classCallCheck(this, NameAttr);
            return _super292.call(this, o, "nameAttr");
          }
          return _createClass(NameAttr);
        }(i.StringObject);
        var NeverEmbed = /*#__PURE__*/function (_i$ContentObject5) {
          _inherits(NeverEmbed, _i$ContentObject5);
          var _super293 = _createSuper(NeverEmbed);
          function NeverEmbed(e) {
            _classCallCheck(this, NeverEmbed);
            return _super293.call(this, o, "neverEmbed");
          }
          return _createClass(NeverEmbed);
        }(i.ContentObject);
        var NumberOfCopies = /*#__PURE__*/function (_i$IntegerObject6) {
          _inherits(NumberOfCopies, _i$IntegerObject6);
          var _super294 = _createSuper(NumberOfCopies);
          function NumberOfCopies(e) {
            _classCallCheck(this, NumberOfCopies);
            return _super294.call(this, o, "numberOfCopies", null, function (e) {
              return e >= 2 && e <= 5;
            });
          }
          return _createClass(NumberOfCopies);
        }(i.IntegerObject);
        var OpenAction = /*#__PURE__*/function (_i$XFAObject26) {
          _inherits(OpenAction, _i$XFAObject26);
          var _super295 = _createSuper(OpenAction);
          function OpenAction(e) {
            var _this247;
            _classCallCheck(this, OpenAction);
            _this247 = _super295.call(this, o, "openAction", !0);
            _this247.destination = null;
            return _this247;
          }
          return _createClass(OpenAction);
        }(i.XFAObject);
        var Output = /*#__PURE__*/function (_i$XFAObject27) {
          _inherits(Output, _i$XFAObject27);
          var _super296 = _createSuper(Output);
          function Output(e) {
            var _this248;
            _classCallCheck(this, Output);
            _this248 = _super296.call(this, o, "output", !0);
            _this248.to = null;
            _this248.type = null;
            _this248.uri = null;
            return _this248;
          }
          return _createClass(Output);
        }(i.XFAObject);
        var OutputBin = /*#__PURE__*/function (_i$StringObject11) {
          _inherits(OutputBin, _i$StringObject11);
          var _super297 = _createSuper(OutputBin);
          function OutputBin(e) {
            _classCallCheck(this, OutputBin);
            return _super297.call(this, o, "outputBin");
          }
          return _createClass(OutputBin);
        }(i.StringObject);
        var OutputXSL = /*#__PURE__*/function (_i$XFAObject28) {
          _inherits(OutputXSL, _i$XFAObject28);
          var _super298 = _createSuper(OutputXSL);
          function OutputXSL(e) {
            var _this249;
            _classCallCheck(this, OutputXSL);
            _this249 = _super298.call(this, o, "outputXSL", !0);
            _this249.uri = null;
            return _this249;
          }
          return _createClass(OutputXSL);
        }(i.XFAObject);
        var Overprint = /*#__PURE__*/function (_i$OptionObject16) {
          _inherits(Overprint, _i$OptionObject16);
          var _super299 = _createSuper(Overprint);
          function Overprint(e) {
            _classCallCheck(this, Overprint);
            return _super299.call(this, o, "overprint", ["none", "both", "draw", "field"]);
          }
          return _createClass(Overprint);
        }(i.OptionObject);
        var Packets = /*#__PURE__*/function (_i$StringObject12, _i$$finalize4) {
          _inherits(Packets, _i$StringObject12);
          var _super300 = _createSuper(Packets);
          function Packets(e) {
            _classCallCheck(this, Packets);
            return _super300.call(this, o, "packets");
          }
          _createClass(Packets, [{
            key: _i$$finalize4,
            value: function value() {
              "*" !== this[i.$content] && (this[i.$content] = this[i.$content].trim().split(/\s+/).filter(function (e) {
                return ["config", "datasets", "template", "xfdf", "xslt"].includes(e);
              }));
            }
          }]);
          return Packets;
        }(i.StringObject, i.$finalize);
        var PageOffset = /*#__PURE__*/function (_i$XFAObject29) {
          _inherits(PageOffset, _i$XFAObject29);
          var _super301 = _createSuper(PageOffset);
          function PageOffset(e) {
            var _this250;
            _classCallCheck(this, PageOffset);
            _this250 = _super301.call(this, o, "pageOffset");
            _this250.x = (0, n.getInteger)({
              data: e.x,
              defaultValue: "useXDCSetting",
              validate: function validate(e) {
                return !0;
              }
            });
            _this250.y = (0, n.getInteger)({
              data: e.y,
              defaultValue: "useXDCSetting",
              validate: function validate(e) {
                return !0;
              }
            });
            return _this250;
          }
          return _createClass(PageOffset);
        }(i.XFAObject);
        var PageRange = /*#__PURE__*/function (_i$StringObject13, _i$$finalize5) {
          _inherits(PageRange, _i$StringObject13);
          var _super302 = _createSuper(PageRange);
          function PageRange(e) {
            _classCallCheck(this, PageRange);
            return _super302.call(this, o, "pageRange");
          }
          _createClass(PageRange, [{
            key: _i$$finalize5,
            value: function value() {
              var e = this[i.$content].trim().split(/\s+/).map(function (e) {
                  return parseInt(e, 10);
                }),
                t = [];
              for (var _a373 = 0, _r275 = e.length; _a373 < _r275; _a373 += 2) t.push(e.slice(_a373, _a373 + 2));
              this[i.$content] = t;
            }
          }]);
          return PageRange;
        }(i.StringObject, i.$finalize);
        var Pagination = /*#__PURE__*/function (_i$OptionObject17) {
          _inherits(Pagination, _i$OptionObject17);
          var _super303 = _createSuper(Pagination);
          function Pagination(e) {
            _classCallCheck(this, Pagination);
            return _super303.call(this, o, "pagination", ["simplex", "duplexShortEdge", "duplexLongEdge"]);
          }
          return _createClass(Pagination);
        }(i.OptionObject);
        var PaginationOverride = /*#__PURE__*/function (_i$OptionObject18) {
          _inherits(PaginationOverride, _i$OptionObject18);
          var _super304 = _createSuper(PaginationOverride);
          function PaginationOverride(e) {
            _classCallCheck(this, PaginationOverride);
            return _super304.call(this, o, "paginationOverride", ["none", "forceDuplex", "forceDuplexLongEdge", "forceDuplexShortEdge", "forceSimplex"]);
          }
          return _createClass(PaginationOverride);
        }(i.OptionObject);
        var Part = /*#__PURE__*/function (_i$IntegerObject7) {
          _inherits(Part, _i$IntegerObject7);
          var _super305 = _createSuper(Part);
          function Part(e) {
            _classCallCheck(this, Part);
            return _super305.call(this, o, "part", 1, function (e) {
              return !1;
            });
          }
          return _createClass(Part);
        }(i.IntegerObject);
        var Pcl = /*#__PURE__*/function (_i$XFAObject30) {
          _inherits(Pcl, _i$XFAObject30);
          var _super306 = _createSuper(Pcl);
          function Pcl(e) {
            var _this251;
            _classCallCheck(this, Pcl);
            _this251 = _super306.call(this, o, "pcl", !0);
            _this251.name = e.name || "";
            _this251.batchOutput = null;
            _this251.fontInfo = null;
            _this251.jog = null;
            _this251.mediumInfo = null;
            _this251.outputBin = null;
            _this251.pageOffset = null;
            _this251.staple = null;
            _this251.xdc = null;
            return _this251;
          }
          return _createClass(Pcl);
        }(i.XFAObject);
        var Pdf = /*#__PURE__*/function (_i$XFAObject31) {
          _inherits(Pdf, _i$XFAObject31);
          var _super307 = _createSuper(Pdf);
          function Pdf(e) {
            var _this252;
            _classCallCheck(this, Pdf);
            _this252 = _super307.call(this, o, "pdf", !0);
            _this252.name = e.name || "";
            _this252.adobeExtensionLevel = null;
            _this252.batchOutput = null;
            _this252.compression = null;
            _this252.creator = null;
            _this252.encryption = null;
            _this252.fontInfo = null;
            _this252.interactive = null;
            _this252.linearized = null;
            _this252.openAction = null;
            _this252.pdfa = null;
            _this252.producer = null;
            _this252.renderPolicy = null;
            _this252.scriptModel = null;
            _this252.silentPrint = null;
            _this252.submitFormat = null;
            _this252.tagged = null;
            _this252.version = null;
            _this252.viewerPreferences = null;
            _this252.xdc = null;
            return _this252;
          }
          return _createClass(Pdf);
        }(i.XFAObject);
        var Pdfa = /*#__PURE__*/function (_i$XFAObject32) {
          _inherits(Pdfa, _i$XFAObject32);
          var _super308 = _createSuper(Pdfa);
          function Pdfa(e) {
            var _this253;
            _classCallCheck(this, Pdfa);
            _this253 = _super308.call(this, o, "pdfa", !0);
            _this253.amd = null;
            _this253.conformance = null;
            _this253.includeXDPContent = null;
            _this253.part = null;
            return _this253;
          }
          return _createClass(Pdfa);
        }(i.XFAObject);
        var Permissions = /*#__PURE__*/function (_i$XFAObject33) {
          _inherits(Permissions, _i$XFAObject33);
          var _super309 = _createSuper(Permissions);
          function Permissions(e) {
            var _this254;
            _classCallCheck(this, Permissions);
            _this254 = _super309.call(this, o, "permissions", !0);
            _this254.accessibleContent = null;
            _this254.change = null;
            _this254.contentCopy = null;
            _this254.documentAssembly = null;
            _this254.formFieldFilling = null;
            _this254.modifyAnnots = null;
            _this254.plaintextMetadata = null;
            _this254.print = null;
            _this254.printHighQuality = null;
            return _this254;
          }
          return _createClass(Permissions);
        }(i.XFAObject);
        var PickTrayByPDFSize = /*#__PURE__*/function (_i$Option16) {
          _inherits(PickTrayByPDFSize, _i$Option16);
          var _super310 = _createSuper(PickTrayByPDFSize);
          function PickTrayByPDFSize(e) {
            _classCallCheck(this, PickTrayByPDFSize);
            return _super310.call(this, o, "pickTrayByPDFSize");
          }
          return _createClass(PickTrayByPDFSize);
        }(i.Option01);
        var Picture = /*#__PURE__*/function (_i$StringObject14) {
          _inherits(Picture, _i$StringObject14);
          var _super311 = _createSuper(Picture);
          function Picture(e) {
            _classCallCheck(this, Picture);
            return _super311.call(this, o, "picture");
          }
          return _createClass(Picture);
        }(i.StringObject);
        var PlaintextMetadata = /*#__PURE__*/function (_i$Option17) {
          _inherits(PlaintextMetadata, _i$Option17);
          var _super312 = _createSuper(PlaintextMetadata);
          function PlaintextMetadata(e) {
            _classCallCheck(this, PlaintextMetadata);
            return _super312.call(this, o, "plaintextMetadata");
          }
          return _createClass(PlaintextMetadata);
        }(i.Option01);
        var Presence = /*#__PURE__*/function (_i$OptionObject19) {
          _inherits(Presence, _i$OptionObject19);
          var _super313 = _createSuper(Presence);
          function Presence(e) {
            _classCallCheck(this, Presence);
            return _super313.call(this, o, "presence", ["preserve", "dissolve", "dissolveStructure", "ignore", "remove"]);
          }
          return _createClass(Presence);
        }(i.OptionObject);
        var Present = /*#__PURE__*/function (_i$XFAObject34) {
          _inherits(Present, _i$XFAObject34);
          var _super314 = _createSuper(Present);
          function Present(e) {
            var _this255;
            _classCallCheck(this, Present);
            _this255 = _super314.call(this, o, "present", !0);
            _this255.behaviorOverride = null;
            _this255.cache = null;
            _this255.common = null;
            _this255.copies = null;
            _this255.destination = null;
            _this255.incrementalMerge = null;
            _this255.layout = null;
            _this255.output = null;
            _this255.overprint = null;
            _this255.pagination = null;
            _this255.paginationOverride = null;
            _this255.script = null;
            _this255.validate = null;
            _this255.xdp = null;
            _this255.driver = new i.XFAObjectArray();
            _this255.labelPrinter = new i.XFAObjectArray();
            _this255.pcl = new i.XFAObjectArray();
            _this255.pdf = new i.XFAObjectArray();
            _this255.ps = new i.XFAObjectArray();
            _this255.submitUrl = new i.XFAObjectArray();
            _this255.webClient = new i.XFAObjectArray();
            _this255.zpl = new i.XFAObjectArray();
            return _this255;
          }
          return _createClass(Present);
        }(i.XFAObject);
        var Print = /*#__PURE__*/function (_i$Option18) {
          _inherits(Print, _i$Option18);
          var _super315 = _createSuper(Print);
          function Print(e) {
            _classCallCheck(this, Print);
            return _super315.call(this, o, "print");
          }
          return _createClass(Print);
        }(i.Option01);
        var PrintHighQuality = /*#__PURE__*/function (_i$Option19) {
          _inherits(PrintHighQuality, _i$Option19);
          var _super316 = _createSuper(PrintHighQuality);
          function PrintHighQuality(e) {
            _classCallCheck(this, PrintHighQuality);
            return _super316.call(this, o, "printHighQuality");
          }
          return _createClass(PrintHighQuality);
        }(i.Option01);
        var PrintScaling = /*#__PURE__*/function (_i$OptionObject20) {
          _inherits(PrintScaling, _i$OptionObject20);
          var _super317 = _createSuper(PrintScaling);
          function PrintScaling(e) {
            _classCallCheck(this, PrintScaling);
            return _super317.call(this, o, "printScaling", ["appdefault", "noScaling"]);
          }
          return _createClass(PrintScaling);
        }(i.OptionObject);
        var PrinterName = /*#__PURE__*/function (_i$StringObject15) {
          _inherits(PrinterName, _i$StringObject15);
          var _super318 = _createSuper(PrinterName);
          function PrinterName(e) {
            _classCallCheck(this, PrinterName);
            return _super318.call(this, o, "printerName");
          }
          return _createClass(PrinterName);
        }(i.StringObject);
        var Producer = /*#__PURE__*/function (_i$StringObject16) {
          _inherits(Producer, _i$StringObject16);
          var _super319 = _createSuper(Producer);
          function Producer(e) {
            _classCallCheck(this, Producer);
            return _super319.call(this, o, "producer");
          }
          return _createClass(Producer);
        }(i.StringObject);
        var Ps = /*#__PURE__*/function (_i$XFAObject35) {
          _inherits(Ps, _i$XFAObject35);
          var _super320 = _createSuper(Ps);
          function Ps(e) {
            var _this256;
            _classCallCheck(this, Ps);
            _this256 = _super320.call(this, o, "ps", !0);
            _this256.name = e.name || "";
            _this256.batchOutput = null;
            _this256.fontInfo = null;
            _this256.jog = null;
            _this256.mediumInfo = null;
            _this256.outputBin = null;
            _this256.staple = null;
            _this256.xdc = null;
            return _this256;
          }
          return _createClass(Ps);
        }(i.XFAObject);
        var Range = /*#__PURE__*/function (_i$ContentObject6, _i$$finalize6) {
          _inherits(Range, _i$ContentObject6);
          var _super321 = _createSuper(Range);
          function Range(e) {
            _classCallCheck(this, Range);
            return _super321.call(this, o, "range");
          }
          _createClass(Range, [{
            key: _i$$finalize6,
            value: function value() {
              this[i.$content] = this[i.$content].trim().split(/\s*,\s*/, 2).map(function (e) {
                return e.split("-").map(function (e) {
                  return parseInt(e.trim(), 10);
                });
              }).filter(function (e) {
                return e.every(function (e) {
                  return !isNaN(e);
                });
              }).map(function (e) {
                1 === e.length && e.push(e[0]);
                return e;
              });
            }
          }]);
          return Range;
        }(i.ContentObject, i.$finalize);
        var Record = /*#__PURE__*/function (_i$ContentObject7, _i$$finalize7) {
          _inherits(Record, _i$ContentObject7);
          var _super322 = _createSuper(Record);
          function Record(e) {
            _classCallCheck(this, Record);
            return _super322.call(this, o, "record");
          }
          _createClass(Record, [{
            key: _i$$finalize7,
            value: function value() {
              this[i.$content] = this[i.$content].trim();
              var e = parseInt(this[i.$content], 10);
              !isNaN(e) && e >= 0 && (this[i.$content] = e);
            }
          }]);
          return Record;
        }(i.ContentObject, i.$finalize);
        var Relevant = /*#__PURE__*/function (_i$ContentObject8, _i$$finalize8) {
          _inherits(Relevant, _i$ContentObject8);
          var _super323 = _createSuper(Relevant);
          function Relevant(e) {
            _classCallCheck(this, Relevant);
            return _super323.call(this, o, "relevant");
          }
          _createClass(Relevant, [{
            key: _i$$finalize8,
            value: function value() {
              this[i.$content] = this[i.$content].trim().split(/\s+/);
            }
          }]);
          return Relevant;
        }(i.ContentObject, i.$finalize);
        var Rename = /*#__PURE__*/function (_i$ContentObject9, _i$$finalize9) {
          _inherits(Rename, _i$ContentObject9);
          var _super324 = _createSuper(Rename);
          function Rename(e) {
            _classCallCheck(this, Rename);
            return _super324.call(this, o, "rename");
          }
          _createClass(Rename, [{
            key: _i$$finalize9,
            value: function value() {
              this[i.$content] = this[i.$content].trim();
              (this[i.$content].toLowerCase().startsWith("xml") || new RegExp("[\\p{L}_][\\p{L}\\d._\\p{M}-]*", "u").test(this[i.$content])) && (0, s.warn)("XFA - Rename: invalid XFA name");
            }
          }]);
          return Rename;
        }(i.ContentObject, i.$finalize);
        var RenderPolicy = /*#__PURE__*/function (_i$OptionObject21) {
          _inherits(RenderPolicy, _i$OptionObject21);
          var _super325 = _createSuper(RenderPolicy);
          function RenderPolicy(e) {
            _classCallCheck(this, RenderPolicy);
            return _super325.call(this, o, "renderPolicy", ["server", "client"]);
          }
          return _createClass(RenderPolicy);
        }(i.OptionObject);
        var RunScripts = /*#__PURE__*/function (_i$OptionObject22) {
          _inherits(RunScripts, _i$OptionObject22);
          var _super326 = _createSuper(RunScripts);
          function RunScripts(e) {
            _classCallCheck(this, RunScripts);
            return _super326.call(this, o, "runScripts", ["both", "client", "none", "server"]);
          }
          return _createClass(RunScripts);
        }(i.OptionObject);
        var Script = /*#__PURE__*/function (_i$XFAObject36) {
          _inherits(Script, _i$XFAObject36);
          var _super327 = _createSuper(Script);
          function Script(e) {
            var _this257;
            _classCallCheck(this, Script);
            _this257 = _super327.call(this, o, "script", !0);
            _this257.currentPage = null;
            _this257.exclude = null;
            _this257.runScripts = null;
            return _this257;
          }
          return _createClass(Script);
        }(i.XFAObject);
        var ScriptModel = /*#__PURE__*/function (_i$OptionObject23) {
          _inherits(ScriptModel, _i$OptionObject23);
          var _super328 = _createSuper(ScriptModel);
          function ScriptModel(e) {
            _classCallCheck(this, ScriptModel);
            return _super328.call(this, o, "scriptModel", ["XFA", "none"]);
          }
          return _createClass(ScriptModel);
        }(i.OptionObject);
        var Severity = /*#__PURE__*/function (_i$OptionObject24) {
          _inherits(Severity, _i$OptionObject24);
          var _super329 = _createSuper(Severity);
          function Severity(e) {
            _classCallCheck(this, Severity);
            return _super329.call(this, o, "severity", ["ignore", "error", "information", "trace", "warning"]);
          }
          return _createClass(Severity);
        }(i.OptionObject);
        var SilentPrint = /*#__PURE__*/function (_i$XFAObject37) {
          _inherits(SilentPrint, _i$XFAObject37);
          var _super330 = _createSuper(SilentPrint);
          function SilentPrint(e) {
            var _this258;
            _classCallCheck(this, SilentPrint);
            _this258 = _super330.call(this, o, "silentPrint", !0);
            _this258.addSilentPrint = null;
            _this258.printerName = null;
            return _this258;
          }
          return _createClass(SilentPrint);
        }(i.XFAObject);
        var Staple = /*#__PURE__*/function (_i$XFAObject38) {
          _inherits(Staple, _i$XFAObject38);
          var _super331 = _createSuper(Staple);
          function Staple(e) {
            var _this259;
            _classCallCheck(this, Staple);
            _this259 = _super331.call(this, o, "staple");
            _this259.mode = (0, n.getStringOption)(e.mode, ["usePrinterSetting", "on", "off"]);
            return _this259;
          }
          return _createClass(Staple);
        }(i.XFAObject);
        var StartNode = /*#__PURE__*/function (_i$StringObject17) {
          _inherits(StartNode, _i$StringObject17);
          var _super332 = _createSuper(StartNode);
          function StartNode(e) {
            _classCallCheck(this, StartNode);
            return _super332.call(this, o, "startNode");
          }
          return _createClass(StartNode);
        }(i.StringObject);
        var StartPage = /*#__PURE__*/function (_i$IntegerObject8) {
          _inherits(StartPage, _i$IntegerObject8);
          var _super333 = _createSuper(StartPage);
          function StartPage(e) {
            _classCallCheck(this, StartPage);
            return _super333.call(this, o, "startPage", 0, function (e) {
              return !0;
            });
          }
          return _createClass(StartPage);
        }(i.IntegerObject);
        var SubmitFormat = /*#__PURE__*/function (_i$OptionObject25) {
          _inherits(SubmitFormat, _i$OptionObject25);
          var _super334 = _createSuper(SubmitFormat);
          function SubmitFormat(e) {
            _classCallCheck(this, SubmitFormat);
            return _super334.call(this, o, "submitFormat", ["html", "delegate", "fdf", "xml", "pdf"]);
          }
          return _createClass(SubmitFormat);
        }(i.OptionObject);
        var SubmitUrl = /*#__PURE__*/function (_i$StringObject18) {
          _inherits(SubmitUrl, _i$StringObject18);
          var _super335 = _createSuper(SubmitUrl);
          function SubmitUrl(e) {
            _classCallCheck(this, SubmitUrl);
            return _super335.call(this, o, "submitUrl");
          }
          return _createClass(SubmitUrl);
        }(i.StringObject);
        var SubsetBelow = /*#__PURE__*/function (_i$IntegerObject9) {
          _inherits(SubsetBelow, _i$IntegerObject9);
          var _super336 = _createSuper(SubsetBelow);
          function SubsetBelow(e) {
            _classCallCheck(this, SubsetBelow);
            return _super336.call(this, o, "subsetBelow", 100, function (e) {
              return e >= 0 && e <= 100;
            });
          }
          return _createClass(SubsetBelow);
        }(i.IntegerObject);
        var SuppressBanner = /*#__PURE__*/function (_i$Option20) {
          _inherits(SuppressBanner, _i$Option20);
          var _super337 = _createSuper(SuppressBanner);
          function SuppressBanner(e) {
            _classCallCheck(this, SuppressBanner);
            return _super337.call(this, o, "suppressBanner");
          }
          return _createClass(SuppressBanner);
        }(i.Option01);
        var Tagged = /*#__PURE__*/function (_i$Option21) {
          _inherits(Tagged, _i$Option21);
          var _super338 = _createSuper(Tagged);
          function Tagged(e) {
            _classCallCheck(this, Tagged);
            return _super338.call(this, o, "tagged");
          }
          return _createClass(Tagged);
        }(i.Option01);
        var Template = /*#__PURE__*/function (_i$XFAObject39) {
          _inherits(Template, _i$XFAObject39);
          var _super339 = _createSuper(Template);
          function Template(e) {
            var _this260;
            _classCallCheck(this, Template);
            _this260 = _super339.call(this, o, "template", !0);
            _this260.base = null;
            _this260.relevant = null;
            _this260.startPage = null;
            _this260.uri = null;
            _this260.xsl = null;
            return _this260;
          }
          return _createClass(Template);
        }(i.XFAObject);
        var Threshold = /*#__PURE__*/function (_i$OptionObject26) {
          _inherits(Threshold, _i$OptionObject26);
          var _super340 = _createSuper(Threshold);
          function Threshold(e) {
            _classCallCheck(this, Threshold);
            return _super340.call(this, o, "threshold", ["trace", "error", "information", "warning"]);
          }
          return _createClass(Threshold);
        }(i.OptionObject);
        var To = /*#__PURE__*/function (_i$OptionObject27) {
          _inherits(To, _i$OptionObject27);
          var _super341 = _createSuper(To);
          function To(e) {
            _classCallCheck(this, To);
            return _super341.call(this, o, "to", ["null", "memory", "stderr", "stdout", "system", "uri"]);
          }
          return _createClass(To);
        }(i.OptionObject);
        var TemplateCache = /*#__PURE__*/function (_i$XFAObject40) {
          _inherits(TemplateCache, _i$XFAObject40);
          var _super342 = _createSuper(TemplateCache);
          function TemplateCache(e) {
            var _this261;
            _classCallCheck(this, TemplateCache);
            _this261 = _super342.call(this, o, "templateCache");
            _this261.maxEntries = (0, n.getInteger)({
              data: e.maxEntries,
              defaultValue: 5,
              validate: function validate(e) {
                return e >= 0;
              }
            });
            return _this261;
          }
          return _createClass(TemplateCache);
        }(i.XFAObject);
        var Trace = /*#__PURE__*/function (_i$XFAObject41) {
          _inherits(Trace, _i$XFAObject41);
          var _super343 = _createSuper(Trace);
          function Trace(e) {
            var _this262;
            _classCallCheck(this, Trace);
            _this262 = _super343.call(this, o, "trace", !0);
            _this262.area = new i.XFAObjectArray();
            return _this262;
          }
          return _createClass(Trace);
        }(i.XFAObject);
        var Transform = /*#__PURE__*/function (_i$XFAObject42) {
          _inherits(Transform, _i$XFAObject42);
          var _super344 = _createSuper(Transform);
          function Transform(e) {
            var _this263;
            _classCallCheck(this, Transform);
            _this263 = _super344.call(this, o, "transform", !0);
            _this263.groupParent = null;
            _this263.ifEmpty = null;
            _this263.nameAttr = null;
            _this263.picture = null;
            _this263.presence = null;
            _this263.rename = null;
            _this263.whitespace = null;
            return _this263;
          }
          return _createClass(Transform);
        }(i.XFAObject);
        var Type = /*#__PURE__*/function (_i$OptionObject28) {
          _inherits(Type, _i$OptionObject28);
          var _super345 = _createSuper(Type);
          function Type(e) {
            _classCallCheck(this, Type);
            return _super345.call(this, o, "type", ["none", "ascii85", "asciiHex", "ccittfax", "flate", "lzw", "runLength", "native", "xdp", "mergedXDP"]);
          }
          return _createClass(Type);
        }(i.OptionObject);
        var Uri = /*#__PURE__*/function (_i$StringObject19) {
          _inherits(Uri, _i$StringObject19);
          var _super346 = _createSuper(Uri);
          function Uri(e) {
            _classCallCheck(this, Uri);
            return _super346.call(this, o, "uri");
          }
          return _createClass(Uri);
        }(i.StringObject);
        var Validate = /*#__PURE__*/function (_i$OptionObject29) {
          _inherits(Validate, _i$OptionObject29);
          var _super347 = _createSuper(Validate);
          function Validate(e) {
            _classCallCheck(this, Validate);
            return _super347.call(this, o, "validate", ["preSubmit", "prePrint", "preExecute", "preSave"]);
          }
          return _createClass(Validate);
        }(i.OptionObject);
        var ValidateApprovalSignatures = /*#__PURE__*/function (_i$ContentObject10, _i$$finalize10) {
          _inherits(ValidateApprovalSignatures, _i$ContentObject10);
          var _super348 = _createSuper(ValidateApprovalSignatures);
          function ValidateApprovalSignatures(e) {
            _classCallCheck(this, ValidateApprovalSignatures);
            return _super348.call(this, o, "validateApprovalSignatures");
          }
          _createClass(ValidateApprovalSignatures, [{
            key: _i$$finalize10,
            value: function value() {
              this[i.$content] = this[i.$content].trim().split(/\s+/).filter(function (e) {
                return ["docReady", "postSign"].includes(e);
              });
            }
          }]);
          return ValidateApprovalSignatures;
        }(i.ContentObject, i.$finalize);
        var ValidationMessaging = /*#__PURE__*/function (_i$OptionObject30) {
          _inherits(ValidationMessaging, _i$OptionObject30);
          var _super349 = _createSuper(ValidationMessaging);
          function ValidationMessaging(e) {
            _classCallCheck(this, ValidationMessaging);
            return _super349.call(this, o, "validationMessaging", ["allMessagesIndividually", "allMessagesTogether", "firstMessageOnly", "noMessages"]);
          }
          return _createClass(ValidationMessaging);
        }(i.OptionObject);
        var Version = /*#__PURE__*/function (_i$OptionObject31) {
          _inherits(Version, _i$OptionObject31);
          var _super350 = _createSuper(Version);
          function Version(e) {
            _classCallCheck(this, Version);
            return _super350.call(this, o, "version", ["1.7", "1.6", "1.5", "1.4", "1.3", "1.2"]);
          }
          return _createClass(Version);
        }(i.OptionObject);
        var VersionControl = /*#__PURE__*/function (_i$XFAObject43) {
          _inherits(VersionControl, _i$XFAObject43);
          var _super351 = _createSuper(VersionControl);
          function VersionControl(e) {
            var _this264;
            _classCallCheck(this, VersionControl);
            _this264 = _super351.call(this, o, "VersionControl");
            _this264.outputBelow = (0, n.getStringOption)(e.outputBelow, ["warn", "error", "update"]);
            _this264.sourceAbove = (0, n.getStringOption)(e.sourceAbove, ["warn", "error"]);
            _this264.sourceBelow = (0, n.getStringOption)(e.sourceBelow, ["update", "maintain"]);
            return _this264;
          }
          return _createClass(VersionControl);
        }(i.XFAObject);
        var ViewerPreferences = /*#__PURE__*/function (_i$XFAObject44) {
          _inherits(ViewerPreferences, _i$XFAObject44);
          var _super352 = _createSuper(ViewerPreferences);
          function ViewerPreferences(e) {
            var _this265;
            _classCallCheck(this, ViewerPreferences);
            _this265 = _super352.call(this, o, "viewerPreferences", !0);
            _this265.ADBE_JSConsole = null;
            _this265.ADBE_JSDebugger = null;
            _this265.addViewerPreferences = null;
            _this265.duplexOption = null;
            _this265.enforce = null;
            _this265.numberOfCopies = null;
            _this265.pageRange = null;
            _this265.pickTrayByPDFSize = null;
            _this265.printScaling = null;
            return _this265;
          }
          return _createClass(ViewerPreferences);
        }(i.XFAObject);
        var WebClient = /*#__PURE__*/function (_i$XFAObject45) {
          _inherits(WebClient, _i$XFAObject45);
          var _super353 = _createSuper(WebClient);
          function WebClient(e) {
            var _this266;
            _classCallCheck(this, WebClient);
            _this266 = _super353.call(this, o, "webClient", !0);
            _this266.name = e.name ? e.name.trim() : "";
            _this266.fontInfo = null;
            _this266.xdc = null;
            return _this266;
          }
          return _createClass(WebClient);
        }(i.XFAObject);
        var Whitespace = /*#__PURE__*/function (_i$OptionObject32) {
          _inherits(Whitespace, _i$OptionObject32);
          var _super354 = _createSuper(Whitespace);
          function Whitespace(e) {
            _classCallCheck(this, Whitespace);
            return _super354.call(this, o, "whitespace", ["preserve", "ltrim", "normalize", "rtrim", "trim"]);
          }
          return _createClass(Whitespace);
        }(i.OptionObject);
        var Window = /*#__PURE__*/function (_i$ContentObject11, _i$$finalize11) {
          _inherits(Window, _i$ContentObject11);
          var _super355 = _createSuper(Window);
          function Window(e) {
            _classCallCheck(this, Window);
            return _super355.call(this, o, "window");
          }
          _createClass(Window, [{
            key: _i$$finalize11,
            value: function value() {
              var e = this[i.$content].trim().split(/\s*,\s*/, 2).map(function (e) {
                return parseInt(e, 10);
              });
              if (e.some(function (e) {
                return isNaN(e);
              })) this[i.$content] = [0, 0];else {
                1 === e.length && e.push(e[0]);
                this[i.$content] = e;
              }
            }
          }]);
          return Window;
        }(i.ContentObject, i.$finalize);
        var Xdc = /*#__PURE__*/function (_i$XFAObject46) {
          _inherits(Xdc, _i$XFAObject46);
          var _super356 = _createSuper(Xdc);
          function Xdc(e) {
            var _this267;
            _classCallCheck(this, Xdc);
            _this267 = _super356.call(this, o, "xdc", !0);
            _this267.uri = new i.XFAObjectArray();
            _this267.xsl = new i.XFAObjectArray();
            return _this267;
          }
          return _createClass(Xdc);
        }(i.XFAObject);
        var Xdp = /*#__PURE__*/function (_i$XFAObject47) {
          _inherits(Xdp, _i$XFAObject47);
          var _super357 = _createSuper(Xdp);
          function Xdp(e) {
            var _this268;
            _classCallCheck(this, Xdp);
            _this268 = _super357.call(this, o, "xdp", !0);
            _this268.packets = null;
            return _this268;
          }
          return _createClass(Xdp);
        }(i.XFAObject);
        var Xsl = /*#__PURE__*/function (_i$XFAObject48) {
          _inherits(Xsl, _i$XFAObject48);
          var _super358 = _createSuper(Xsl);
          function Xsl(e) {
            var _this269;
            _classCallCheck(this, Xsl);
            _this269 = _super358.call(this, o, "xsl", !0);
            _this269.debug = null;
            _this269.uri = null;
            return _this269;
          }
          return _createClass(Xsl);
        }(i.XFAObject);
        var Zpl = /*#__PURE__*/function (_i$XFAObject49) {
          _inherits(Zpl, _i$XFAObject49);
          var _super359 = _createSuper(Zpl);
          function Zpl(e) {
            var _this270;
            _classCallCheck(this, Zpl);
            _this270 = _super359.call(this, o, "zpl", !0);
            _this270.name = e.name ? e.name.trim() : "";
            _this270.batchOutput = null;
            _this270.flipLabel = null;
            _this270.fontInfo = null;
            _this270.xdc = null;
            return _this270;
          }
          return _createClass(Zpl);
        }(i.XFAObject);
        var ConfigNamespace = /*#__PURE__*/function (_r$$buildXFAObject) {
          function ConfigNamespace() {
            _classCallCheck(this, ConfigNamespace);
          }
          _createClass(ConfigNamespace, null, [{
            key: _r$$buildXFAObject,
            value: function value(e, t) {
              if (ConfigNamespace.hasOwnProperty(e)) return ConfigNamespace[e](t);
            }
          }, {
            key: "acrobat",
            value: function acrobat(e) {
              return new Acrobat(e);
            }
          }, {
            key: "acrobat7",
            value: function acrobat7(e) {
              return new Acrobat7(e);
            }
          }, {
            key: "ADBE_JSConsole",
            value: function ADBE_JSConsole(e) {
              return new _ADBE_JSConsole(e);
            }
          }, {
            key: "ADBE_JSDebugger",
            value: function ADBE_JSDebugger(e) {
              return new _ADBE_JSDebugger(e);
            }
          }, {
            key: "addSilentPrint",
            value: function addSilentPrint(e) {
              return new AddSilentPrint(e);
            }
          }, {
            key: "addViewerPreferences",
            value: function addViewerPreferences(e) {
              return new AddViewerPreferences(e);
            }
          }, {
            key: "adjustData",
            value: function adjustData(e) {
              return new AdjustData(e);
            }
          }, {
            key: "adobeExtensionLevel",
            value: function adobeExtensionLevel(e) {
              return new AdobeExtensionLevel(e);
            }
          }, {
            key: "agent",
            value: function agent(e) {
              return new Agent(e);
            }
          }, {
            key: "alwaysEmbed",
            value: function alwaysEmbed(e) {
              return new AlwaysEmbed(e);
            }
          }, {
            key: "amd",
            value: function amd(e) {
              return new Amd(e);
            }
          }, {
            key: "area",
            value: function area(e) {
              return new Area(e);
            }
          }, {
            key: "attributes",
            value: function attributes(e) {
              return new Attributes(e);
            }
          }, {
            key: "autoSave",
            value: function autoSave(e) {
              return new AutoSave(e);
            }
          }, {
            key: "base",
            value: function base(e) {
              return new Base(e);
            }
          }, {
            key: "batchOutput",
            value: function batchOutput(e) {
              return new BatchOutput(e);
            }
          }, {
            key: "behaviorOverride",
            value: function behaviorOverride(e) {
              return new BehaviorOverride(e);
            }
          }, {
            key: "cache",
            value: function cache(e) {
              return new Cache(e);
            }
          }, {
            key: "change",
            value: function change(e) {
              return new Change(e);
            }
          }, {
            key: "common",
            value: function common(e) {
              return new Common(e);
            }
          }, {
            key: "compress",
            value: function compress(e) {
              return new Compress(e);
            }
          }, {
            key: "compressLogicalStructure",
            value: function compressLogicalStructure(e) {
              return new CompressLogicalStructure(e);
            }
          }, {
            key: "compressObjectStream",
            value: function compressObjectStream(e) {
              return new CompressObjectStream(e);
            }
          }, {
            key: "compression",
            value: function compression(e) {
              return new Compression(e);
            }
          }, {
            key: "config",
            value: function config(e) {
              return new Config(e);
            }
          }, {
            key: "conformance",
            value: function conformance(e) {
              return new Conformance(e);
            }
          }, {
            key: "contentCopy",
            value: function contentCopy(e) {
              return new ContentCopy(e);
            }
          }, {
            key: "copies",
            value: function copies(e) {
              return new Copies(e);
            }
          }, {
            key: "creator",
            value: function creator(e) {
              return new Creator(e);
            }
          }, {
            key: "currentPage",
            value: function currentPage(e) {
              return new CurrentPage(e);
            }
          }, {
            key: "data",
            value: function data(e) {
              return new Data(e);
            }
          }, {
            key: "debug",
            value: function debug(e) {
              return new Debug(e);
            }
          }, {
            key: "defaultTypeface",
            value: function defaultTypeface(e) {
              return new DefaultTypeface(e);
            }
          }, {
            key: "destination",
            value: function destination(e) {
              return new Destination(e);
            }
          }, {
            key: "documentAssembly",
            value: function documentAssembly(e) {
              return new DocumentAssembly(e);
            }
          }, {
            key: "driver",
            value: function driver(e) {
              return new Driver(e);
            }
          }, {
            key: "duplexOption",
            value: function duplexOption(e) {
              return new DuplexOption(e);
            }
          }, {
            key: "dynamicRender",
            value: function dynamicRender(e) {
              return new DynamicRender(e);
            }
          }, {
            key: "embed",
            value: function embed(e) {
              return new Embed(e);
            }
          }, {
            key: "encrypt",
            value: function encrypt(e) {
              return new Encrypt(e);
            }
          }, {
            key: "encryption",
            value: function encryption(e) {
              return new Encryption(e);
            }
          }, {
            key: "encryptionLevel",
            value: function encryptionLevel(e) {
              return new EncryptionLevel(e);
            }
          }, {
            key: "enforce",
            value: function enforce(e) {
              return new Enforce(e);
            }
          }, {
            key: "equate",
            value: function equate(e) {
              return new Equate(e);
            }
          }, {
            key: "equateRange",
            value: function equateRange(e) {
              return new EquateRange(e);
            }
          }, {
            key: "exclude",
            value: function exclude(e) {
              return new Exclude(e);
            }
          }, {
            key: "excludeNS",
            value: function excludeNS(e) {
              return new ExcludeNS(e);
            }
          }, {
            key: "flipLabel",
            value: function flipLabel(e) {
              return new FlipLabel(e);
            }
          }, {
            key: "fontInfo",
            value: function fontInfo(e) {
              return new FontInfo(e);
            }
          }, {
            key: "formFieldFilling",
            value: function formFieldFilling(e) {
              return new FormFieldFilling(e);
            }
          }, {
            key: "groupParent",
            value: function groupParent(e) {
              return new GroupParent(e);
            }
          }, {
            key: "ifEmpty",
            value: function ifEmpty(e) {
              return new IfEmpty(e);
            }
          }, {
            key: "includeXDPContent",
            value: function includeXDPContent(e) {
              return new IncludeXDPContent(e);
            }
          }, {
            key: "incrementalLoad",
            value: function incrementalLoad(e) {
              return new IncrementalLoad(e);
            }
          }, {
            key: "incrementalMerge",
            value: function incrementalMerge(e) {
              return new IncrementalMerge(e);
            }
          }, {
            key: "interactive",
            value: function interactive(e) {
              return new Interactive(e);
            }
          }, {
            key: "jog",
            value: function jog(e) {
              return new Jog(e);
            }
          }, {
            key: "labelPrinter",
            value: function labelPrinter(e) {
              return new LabelPrinter(e);
            }
          }, {
            key: "layout",
            value: function layout(e) {
              return new Layout(e);
            }
          }, {
            key: "level",
            value: function level(e) {
              return new Level(e);
            }
          }, {
            key: "linearized",
            value: function linearized(e) {
              return new Linearized(e);
            }
          }, {
            key: "locale",
            value: function locale(e) {
              return new Locale(e);
            }
          }, {
            key: "localeSet",
            value: function localeSet(e) {
              return new LocaleSet(e);
            }
          }, {
            key: "log",
            value: function log(e) {
              return new Log(e);
            }
          }, {
            key: "map",
            value: function map(e) {
              return new MapElement(e);
            }
          }, {
            key: "mediumInfo",
            value: function mediumInfo(e) {
              return new MediumInfo(e);
            }
          }, {
            key: "message",
            value: function message(e) {
              return new Message(e);
            }
          }, {
            key: "messaging",
            value: function messaging(e) {
              return new Messaging(e);
            }
          }, {
            key: "mode",
            value: function mode(e) {
              return new Mode(e);
            }
          }, {
            key: "modifyAnnots",
            value: function modifyAnnots(e) {
              return new ModifyAnnots(e);
            }
          }, {
            key: "msgId",
            value: function msgId(e) {
              return new MsgId(e);
            }
          }, {
            key: "nameAttr",
            value: function nameAttr(e) {
              return new NameAttr(e);
            }
          }, {
            key: "neverEmbed",
            value: function neverEmbed(e) {
              return new NeverEmbed(e);
            }
          }, {
            key: "numberOfCopies",
            value: function numberOfCopies(e) {
              return new NumberOfCopies(e);
            }
          }, {
            key: "openAction",
            value: function openAction(e) {
              return new OpenAction(e);
            }
          }, {
            key: "output",
            value: function output(e) {
              return new Output(e);
            }
          }, {
            key: "outputBin",
            value: function outputBin(e) {
              return new OutputBin(e);
            }
          }, {
            key: "outputXSL",
            value: function outputXSL(e) {
              return new OutputXSL(e);
            }
          }, {
            key: "overprint",
            value: function overprint(e) {
              return new Overprint(e);
            }
          }, {
            key: "packets",
            value: function packets(e) {
              return new Packets(e);
            }
          }, {
            key: "pageOffset",
            value: function pageOffset(e) {
              return new PageOffset(e);
            }
          }, {
            key: "pageRange",
            value: function pageRange(e) {
              return new PageRange(e);
            }
          }, {
            key: "pagination",
            value: function pagination(e) {
              return new Pagination(e);
            }
          }, {
            key: "paginationOverride",
            value: function paginationOverride(e) {
              return new PaginationOverride(e);
            }
          }, {
            key: "part",
            value: function part(e) {
              return new Part(e);
            }
          }, {
            key: "pcl",
            value: function pcl(e) {
              return new Pcl(e);
            }
          }, {
            key: "pdf",
            value: function pdf(e) {
              return new Pdf(e);
            }
          }, {
            key: "pdfa",
            value: function pdfa(e) {
              return new Pdfa(e);
            }
          }, {
            key: "permissions",
            value: function permissions(e) {
              return new Permissions(e);
            }
          }, {
            key: "pickTrayByPDFSize",
            value: function pickTrayByPDFSize(e) {
              return new PickTrayByPDFSize(e);
            }
          }, {
            key: "picture",
            value: function picture(e) {
              return new Picture(e);
            }
          }, {
            key: "plaintextMetadata",
            value: function plaintextMetadata(e) {
              return new PlaintextMetadata(e);
            }
          }, {
            key: "presence",
            value: function presence(e) {
              return new Presence(e);
            }
          }, {
            key: "present",
            value: function present(e) {
              return new Present(e);
            }
          }, {
            key: "print",
            value: function print(e) {
              return new Print(e);
            }
          }, {
            key: "printHighQuality",
            value: function printHighQuality(e) {
              return new PrintHighQuality(e);
            }
          }, {
            key: "printScaling",
            value: function printScaling(e) {
              return new PrintScaling(e);
            }
          }, {
            key: "printerName",
            value: function printerName(e) {
              return new PrinterName(e);
            }
          }, {
            key: "producer",
            value: function producer(e) {
              return new Producer(e);
            }
          }, {
            key: "ps",
            value: function ps(e) {
              return new Ps(e);
            }
          }, {
            key: "range",
            value: function range(e) {
              return new Range(e);
            }
          }, {
            key: "record",
            value: function record(e) {
              return new Record(e);
            }
          }, {
            key: "relevant",
            value: function relevant(e) {
              return new Relevant(e);
            }
          }, {
            key: "rename",
            value: function rename(e) {
              return new Rename(e);
            }
          }, {
            key: "renderPolicy",
            value: function renderPolicy(e) {
              return new RenderPolicy(e);
            }
          }, {
            key: "runScripts",
            value: function runScripts(e) {
              return new RunScripts(e);
            }
          }, {
            key: "script",
            value: function script(e) {
              return new Script(e);
            }
          }, {
            key: "scriptModel",
            value: function scriptModel(e) {
              return new ScriptModel(e);
            }
          }, {
            key: "severity",
            value: function severity(e) {
              return new Severity(e);
            }
          }, {
            key: "silentPrint",
            value: function silentPrint(e) {
              return new SilentPrint(e);
            }
          }, {
            key: "staple",
            value: function staple(e) {
              return new Staple(e);
            }
          }, {
            key: "startNode",
            value: function startNode(e) {
              return new StartNode(e);
            }
          }, {
            key: "startPage",
            value: function startPage(e) {
              return new StartPage(e);
            }
          }, {
            key: "submitFormat",
            value: function submitFormat(e) {
              return new SubmitFormat(e);
            }
          }, {
            key: "submitUrl",
            value: function submitUrl(e) {
              return new SubmitUrl(e);
            }
          }, {
            key: "subsetBelow",
            value: function subsetBelow(e) {
              return new SubsetBelow(e);
            }
          }, {
            key: "suppressBanner",
            value: function suppressBanner(e) {
              return new SuppressBanner(e);
            }
          }, {
            key: "tagged",
            value: function tagged(e) {
              return new Tagged(e);
            }
          }, {
            key: "template",
            value: function template(e) {
              return new Template(e);
            }
          }, {
            key: "templateCache",
            value: function templateCache(e) {
              return new TemplateCache(e);
            }
          }, {
            key: "threshold",
            value: function threshold(e) {
              return new Threshold(e);
            }
          }, {
            key: "to",
            value: function to(e) {
              return new To(e);
            }
          }, {
            key: "trace",
            value: function trace(e) {
              return new Trace(e);
            }
          }, {
            key: "transform",
            value: function transform(e) {
              return new Transform(e);
            }
          }, {
            key: "type",
            value: function type(e) {
              return new Type(e);
            }
          }, {
            key: "uri",
            value: function uri(e) {
              return new Uri(e);
            }
          }, {
            key: "validate",
            value: function validate(e) {
              return new Validate(e);
            }
          }, {
            key: "validateApprovalSignatures",
            value: function validateApprovalSignatures(e) {
              return new ValidateApprovalSignatures(e);
            }
          }, {
            key: "validationMessaging",
            value: function validationMessaging(e) {
              return new ValidationMessaging(e);
            }
          }, {
            key: "version",
            value: function version(e) {
              return new Version(e);
            }
          }, {
            key: "versionControl",
            value: function versionControl(e) {
              return new VersionControl(e);
            }
          }, {
            key: "viewerPreferences",
            value: function viewerPreferences(e) {
              return new ViewerPreferences(e);
            }
          }, {
            key: "webClient",
            value: function webClient(e) {
              return new WebClient(e);
            }
          }, {
            key: "whitespace",
            value: function whitespace(e) {
              return new Whitespace(e);
            }
          }, {
            key: "window",
            value: function window(e) {
              return new Window(e);
            }
          }, {
            key: "xdc",
            value: function xdc(e) {
              return new Xdc(e);
            }
          }, {
            key: "xdp",
            value: function xdp(e) {
              return new Xdp(e);
            }
          }, {
            key: "xsl",
            value: function xsl(e) {
              return new Xsl(e);
            }
          }, {
            key: "zpl",
            value: function zpl(e) {
              return new Zpl(e);
            }
          }]);
          return ConfigNamespace;
        }(r.$buildXFAObject);
        t.ConfigNamespace = ConfigNamespace;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.ConnectionSetNamespace = void 0;
        var r = a(79),
          i = a(77);
        var n = r.NamespaceIds.connectionSet.id;
        var ConnectionSet = /*#__PURE__*/function (_i$XFAObject50) {
          _inherits(ConnectionSet, _i$XFAObject50);
          var _super360 = _createSuper(ConnectionSet);
          function ConnectionSet(e) {
            var _this271;
            _classCallCheck(this, ConnectionSet);
            _this271 = _super360.call(this, n, "connectionSet", !0);
            _this271.wsdlConnection = new i.XFAObjectArray();
            _this271.xmlConnection = new i.XFAObjectArray();
            _this271.xsdConnection = new i.XFAObjectArray();
            return _this271;
          }
          return _createClass(ConnectionSet);
        }(i.XFAObject);
        var EffectiveInputPolicy = /*#__PURE__*/function (_i$XFAObject51) {
          _inherits(EffectiveInputPolicy, _i$XFAObject51);
          var _super361 = _createSuper(EffectiveInputPolicy);
          function EffectiveInputPolicy(e) {
            var _this272;
            _classCallCheck(this, EffectiveInputPolicy);
            _this272 = _super361.call(this, n, "effectiveInputPolicy");
            _this272.id = e.id || "";
            _this272.name = e.name || "";
            _this272.use = e.use || "";
            _this272.usehref = e.usehref || "";
            return _this272;
          }
          return _createClass(EffectiveInputPolicy);
        }(i.XFAObject);
        var EffectiveOutputPolicy = /*#__PURE__*/function (_i$XFAObject52) {
          _inherits(EffectiveOutputPolicy, _i$XFAObject52);
          var _super362 = _createSuper(EffectiveOutputPolicy);
          function EffectiveOutputPolicy(e) {
            var _this273;
            _classCallCheck(this, EffectiveOutputPolicy);
            _this273 = _super362.call(this, n, "effectiveOutputPolicy");
            _this273.id = e.id || "";
            _this273.name = e.name || "";
            _this273.use = e.use || "";
            _this273.usehref = e.usehref || "";
            return _this273;
          }
          return _createClass(EffectiveOutputPolicy);
        }(i.XFAObject);
        var Operation = /*#__PURE__*/function (_i$StringObject20) {
          _inherits(Operation, _i$StringObject20);
          var _super363 = _createSuper(Operation);
          function Operation(e) {
            var _this274;
            _classCallCheck(this, Operation);
            _this274 = _super363.call(this, n, "operation");
            _this274.id = e.id || "";
            _this274.input = e.input || "";
            _this274.name = e.name || "";
            _this274.output = e.output || "";
            _this274.use = e.use || "";
            _this274.usehref = e.usehref || "";
            return _this274;
          }
          return _createClass(Operation);
        }(i.StringObject);
        var RootElement = /*#__PURE__*/function (_i$StringObject21) {
          _inherits(RootElement, _i$StringObject21);
          var _super364 = _createSuper(RootElement);
          function RootElement(e) {
            var _this275;
            _classCallCheck(this, RootElement);
            _this275 = _super364.call(this, n, "rootElement");
            _this275.id = e.id || "";
            _this275.name = e.name || "";
            _this275.use = e.use || "";
            _this275.usehref = e.usehref || "";
            return _this275;
          }
          return _createClass(RootElement);
        }(i.StringObject);
        var SoapAction = /*#__PURE__*/function (_i$StringObject22) {
          _inherits(SoapAction, _i$StringObject22);
          var _super365 = _createSuper(SoapAction);
          function SoapAction(e) {
            var _this276;
            _classCallCheck(this, SoapAction);
            _this276 = _super365.call(this, n, "soapAction");
            _this276.id = e.id || "";
            _this276.name = e.name || "";
            _this276.use = e.use || "";
            _this276.usehref = e.usehref || "";
            return _this276;
          }
          return _createClass(SoapAction);
        }(i.StringObject);
        var SoapAddress = /*#__PURE__*/function (_i$StringObject23) {
          _inherits(SoapAddress, _i$StringObject23);
          var _super366 = _createSuper(SoapAddress);
          function SoapAddress(e) {
            var _this277;
            _classCallCheck(this, SoapAddress);
            _this277 = _super366.call(this, n, "soapAddress");
            _this277.id = e.id || "";
            _this277.name = e.name || "";
            _this277.use = e.use || "";
            _this277.usehref = e.usehref || "";
            return _this277;
          }
          return _createClass(SoapAddress);
        }(i.StringObject);
        var Uri = /*#__PURE__*/function (_i$StringObject24) {
          _inherits(Uri, _i$StringObject24);
          var _super367 = _createSuper(Uri);
          function Uri(e) {
            var _this278;
            _classCallCheck(this, Uri);
            _this278 = _super367.call(this, n, "uri");
            _this278.id = e.id || "";
            _this278.name = e.name || "";
            _this278.use = e.use || "";
            _this278.usehref = e.usehref || "";
            return _this278;
          }
          return _createClass(Uri);
        }(i.StringObject);
        var WsdlAddress = /*#__PURE__*/function (_i$StringObject25) {
          _inherits(WsdlAddress, _i$StringObject25);
          var _super368 = _createSuper(WsdlAddress);
          function WsdlAddress(e) {
            var _this279;
            _classCallCheck(this, WsdlAddress);
            _this279 = _super368.call(this, n, "wsdlAddress");
            _this279.id = e.id || "";
            _this279.name = e.name || "";
            _this279.use = e.use || "";
            _this279.usehref = e.usehref || "";
            return _this279;
          }
          return _createClass(WsdlAddress);
        }(i.StringObject);
        var WsdlConnection = /*#__PURE__*/function (_i$XFAObject53) {
          _inherits(WsdlConnection, _i$XFAObject53);
          var _super369 = _createSuper(WsdlConnection);
          function WsdlConnection(e) {
            var _this280;
            _classCallCheck(this, WsdlConnection);
            _this280 = _super369.call(this, n, "wsdlConnection", !0);
            _this280.dataDescription = e.dataDescription || "";
            _this280.name = e.name || "";
            _this280.effectiveInputPolicy = null;
            _this280.effectiveOutputPolicy = null;
            _this280.operation = null;
            _this280.soapAction = null;
            _this280.soapAddress = null;
            _this280.wsdlAddress = null;
            return _this280;
          }
          return _createClass(WsdlConnection);
        }(i.XFAObject);
        var XmlConnection = /*#__PURE__*/function (_i$XFAObject54) {
          _inherits(XmlConnection, _i$XFAObject54);
          var _super370 = _createSuper(XmlConnection);
          function XmlConnection(e) {
            var _this281;
            _classCallCheck(this, XmlConnection);
            _this281 = _super370.call(this, n, "xmlConnection", !0);
            _this281.dataDescription = e.dataDescription || "";
            _this281.name = e.name || "";
            _this281.uri = null;
            return _this281;
          }
          return _createClass(XmlConnection);
        }(i.XFAObject);
        var XsdConnection = /*#__PURE__*/function (_i$XFAObject55) {
          _inherits(XsdConnection, _i$XFAObject55);
          var _super371 = _createSuper(XsdConnection);
          function XsdConnection(e) {
            var _this282;
            _classCallCheck(this, XsdConnection);
            _this282 = _super371.call(this, n, "xsdConnection", !0);
            _this282.dataDescription = e.dataDescription || "";
            _this282.name = e.name || "";
            _this282.rootElement = null;
            _this282.uri = null;
            return _this282;
          }
          return _createClass(XsdConnection);
        }(i.XFAObject);
        var ConnectionSetNamespace = /*#__PURE__*/function (_r$$buildXFAObject2) {
          function ConnectionSetNamespace() {
            _classCallCheck(this, ConnectionSetNamespace);
          }
          _createClass(ConnectionSetNamespace, null, [{
            key: _r$$buildXFAObject2,
            value: function value(e, t) {
              if (ConnectionSetNamespace.hasOwnProperty(e)) return ConnectionSetNamespace[e](t);
            }
          }, {
            key: "connectionSet",
            value: function connectionSet(e) {
              return new ConnectionSet(e);
            }
          }, {
            key: "effectiveInputPolicy",
            value: function effectiveInputPolicy(e) {
              return new EffectiveInputPolicy(e);
            }
          }, {
            key: "effectiveOutputPolicy",
            value: function effectiveOutputPolicy(e) {
              return new EffectiveOutputPolicy(e);
            }
          }, {
            key: "operation",
            value: function operation(e) {
              return new Operation(e);
            }
          }, {
            key: "rootElement",
            value: function rootElement(e) {
              return new RootElement(e);
            }
          }, {
            key: "soapAction",
            value: function soapAction(e) {
              return new SoapAction(e);
            }
          }, {
            key: "soapAddress",
            value: function soapAddress(e) {
              return new SoapAddress(e);
            }
          }, {
            key: "uri",
            value: function uri(e) {
              return new Uri(e);
            }
          }, {
            key: "wsdlAddress",
            value: function wsdlAddress(e) {
              return new WsdlAddress(e);
            }
          }, {
            key: "wsdlConnection",
            value: function wsdlConnection(e) {
              return new WsdlConnection(e);
            }
          }, {
            key: "xmlConnection",
            value: function xmlConnection(e) {
              return new XmlConnection(e);
            }
          }, {
            key: "xsdConnection",
            value: function xsdConnection(e) {
              return new XsdConnection(e);
            }
          }]);
          return ConnectionSetNamespace;
        }(r.$buildXFAObject);
        t.ConnectionSetNamespace = ConnectionSetNamespace;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.DatasetsNamespace = void 0;
        var r = a(77),
          i = a(79);
        var n = i.NamespaceIds.datasets.id;
        var Data = /*#__PURE__*/function (_r$XmlObject, _r$$isNsAgnostic) {
          _inherits(Data, _r$XmlObject);
          var _super372 = _createSuper(Data);
          function Data(e) {
            _classCallCheck(this, Data);
            return _super372.call(this, n, "data", e);
          }
          _createClass(Data, [{
            key: _r$$isNsAgnostic,
            value: function value() {
              return !0;
            }
          }]);
          return Data;
        }(r.XmlObject, r.$isNsAgnostic);
        var Datasets = /*#__PURE__*/function (_r$XFAObject89, _r$$onChild3) {
          _inherits(Datasets, _r$XFAObject89);
          var _super373 = _createSuper(Datasets);
          function Datasets(e) {
            var _this283;
            _classCallCheck(this, Datasets);
            _this283 = _super373.call(this, n, "datasets", !0);
            _this283.data = null;
            _this283.Signature = null;
            return _this283;
          }
          _createClass(Datasets, [{
            key: _r$$onChild3,
            value: function value(e) {
              var t = e[r.$nodeName];
              ("data" === t && e[r.$namespaceId] === n || "Signature" === t && e[r.$namespaceId] === i.NamespaceIds.signature.id) && (this[t] = e);
              this[r.$appendChild](e);
            }
          }]);
          return Datasets;
        }(r.XFAObject, r.$onChild);
        var DatasetsNamespace = /*#__PURE__*/function (_i$$buildXFAObject2) {
          function DatasetsNamespace() {
            _classCallCheck(this, DatasetsNamespace);
          }
          _createClass(DatasetsNamespace, null, [{
            key: _i$$buildXFAObject2,
            value: function value(e, t) {
              if (DatasetsNamespace.hasOwnProperty(e)) return DatasetsNamespace[e](t);
            }
          }, {
            key: "datasets",
            value: function datasets(e) {
              return new Datasets(e);
            }
          }, {
            key: "data",
            value: function data(e) {
              return new Data(e);
            }
          }]);
          return DatasetsNamespace;
        }(i.$buildXFAObject);
        t.DatasetsNamespace = DatasetsNamespace;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.LocaleSetNamespace = void 0;
        var r = a(79),
          i = a(77),
          n = a(78);
        var s = r.NamespaceIds.localeSet.id;
        var CalendarSymbols = /*#__PURE__*/function (_i$XFAObject56) {
          _inherits(CalendarSymbols, _i$XFAObject56);
          var _super374 = _createSuper(CalendarSymbols);
          function CalendarSymbols(e) {
            var _this284;
            _classCallCheck(this, CalendarSymbols);
            _this284 = _super374.call(this, s, "calendarSymbols", !0);
            _this284.name = "gregorian";
            _this284.dayNames = new i.XFAObjectArray(2);
            _this284.eraNames = null;
            _this284.meridiemNames = null;
            _this284.monthNames = new i.XFAObjectArray(2);
            return _this284;
          }
          return _createClass(CalendarSymbols);
        }(i.XFAObject);
        var CurrencySymbol = /*#__PURE__*/function (_i$StringObject26) {
          _inherits(CurrencySymbol, _i$StringObject26);
          var _super375 = _createSuper(CurrencySymbol);
          function CurrencySymbol(e) {
            var _this285;
            _classCallCheck(this, CurrencySymbol);
            _this285 = _super375.call(this, s, "currencySymbol");
            _this285.name = (0, n.getStringOption)(e.name, ["symbol", "isoname", "decimal"]);
            return _this285;
          }
          return _createClass(CurrencySymbol);
        }(i.StringObject);
        var CurrencySymbols = /*#__PURE__*/function (_i$XFAObject57) {
          _inherits(CurrencySymbols, _i$XFAObject57);
          var _super376 = _createSuper(CurrencySymbols);
          function CurrencySymbols(e) {
            var _this286;
            _classCallCheck(this, CurrencySymbols);
            _this286 = _super376.call(this, s, "currencySymbols", !0);
            _this286.currencySymbol = new i.XFAObjectArray(3);
            return _this286;
          }
          return _createClass(CurrencySymbols);
        }(i.XFAObject);
        var DatePattern = /*#__PURE__*/function (_i$StringObject27) {
          _inherits(DatePattern, _i$StringObject27);
          var _super377 = _createSuper(DatePattern);
          function DatePattern(e) {
            var _this287;
            _classCallCheck(this, DatePattern);
            _this287 = _super377.call(this, s, "datePattern");
            _this287.name = (0, n.getStringOption)(e.name, ["full", "long", "med", "short"]);
            return _this287;
          }
          return _createClass(DatePattern);
        }(i.StringObject);
        var DatePatterns = /*#__PURE__*/function (_i$XFAObject58) {
          _inherits(DatePatterns, _i$XFAObject58);
          var _super378 = _createSuper(DatePatterns);
          function DatePatterns(e) {
            var _this288;
            _classCallCheck(this, DatePatterns);
            _this288 = _super378.call(this, s, "datePatterns", !0);
            _this288.datePattern = new i.XFAObjectArray(4);
            return _this288;
          }
          return _createClass(DatePatterns);
        }(i.XFAObject);
        var DateTimeSymbols = /*#__PURE__*/function (_i$ContentObject12) {
          _inherits(DateTimeSymbols, _i$ContentObject12);
          var _super379 = _createSuper(DateTimeSymbols);
          function DateTimeSymbols(e) {
            _classCallCheck(this, DateTimeSymbols);
            return _super379.call(this, s, "dateTimeSymbols");
          }
          return _createClass(DateTimeSymbols);
        }(i.ContentObject);
        var Day = /*#__PURE__*/function (_i$StringObject28) {
          _inherits(Day, _i$StringObject28);
          var _super380 = _createSuper(Day);
          function Day(e) {
            _classCallCheck(this, Day);
            return _super380.call(this, s, "day");
          }
          return _createClass(Day);
        }(i.StringObject);
        var DayNames = /*#__PURE__*/function (_i$XFAObject59) {
          _inherits(DayNames, _i$XFAObject59);
          var _super381 = _createSuper(DayNames);
          function DayNames(e) {
            var _this289;
            _classCallCheck(this, DayNames);
            _this289 = _super381.call(this, s, "dayNames", !0);
            _this289.abbr = (0, n.getInteger)({
              data: e.abbr,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this289.day = new i.XFAObjectArray(7);
            return _this289;
          }
          return _createClass(DayNames);
        }(i.XFAObject);
        var Era = /*#__PURE__*/function (_i$StringObject29) {
          _inherits(Era, _i$StringObject29);
          var _super382 = _createSuper(Era);
          function Era(e) {
            _classCallCheck(this, Era);
            return _super382.call(this, s, "era");
          }
          return _createClass(Era);
        }(i.StringObject);
        var EraNames = /*#__PURE__*/function (_i$XFAObject60) {
          _inherits(EraNames, _i$XFAObject60);
          var _super383 = _createSuper(EraNames);
          function EraNames(e) {
            var _this290;
            _classCallCheck(this, EraNames);
            _this290 = _super383.call(this, s, "eraNames", !0);
            _this290.era = new i.XFAObjectArray(2);
            return _this290;
          }
          return _createClass(EraNames);
        }(i.XFAObject);
        var Locale = /*#__PURE__*/function (_i$XFAObject61) {
          _inherits(Locale, _i$XFAObject61);
          var _super384 = _createSuper(Locale);
          function Locale(e) {
            var _this291;
            _classCallCheck(this, Locale);
            _this291 = _super384.call(this, s, "locale", !0);
            _this291.desc = e.desc || "";
            _this291.name = "isoname";
            _this291.calendarSymbols = null;
            _this291.currencySymbols = null;
            _this291.datePatterns = null;
            _this291.dateTimeSymbols = null;
            _this291.numberPatterns = null;
            _this291.numberSymbols = null;
            _this291.timePatterns = null;
            _this291.typeFaces = null;
            return _this291;
          }
          return _createClass(Locale);
        }(i.XFAObject);
        var LocaleSet = /*#__PURE__*/function (_i$XFAObject62) {
          _inherits(LocaleSet, _i$XFAObject62);
          var _super385 = _createSuper(LocaleSet);
          function LocaleSet(e) {
            var _this292;
            _classCallCheck(this, LocaleSet);
            _this292 = _super385.call(this, s, "localeSet", !0);
            _this292.locale = new i.XFAObjectArray();
            return _this292;
          }
          return _createClass(LocaleSet);
        }(i.XFAObject);
        var Meridiem = /*#__PURE__*/function (_i$StringObject30) {
          _inherits(Meridiem, _i$StringObject30);
          var _super386 = _createSuper(Meridiem);
          function Meridiem(e) {
            _classCallCheck(this, Meridiem);
            return _super386.call(this, s, "meridiem");
          }
          return _createClass(Meridiem);
        }(i.StringObject);
        var MeridiemNames = /*#__PURE__*/function (_i$XFAObject63) {
          _inherits(MeridiemNames, _i$XFAObject63);
          var _super387 = _createSuper(MeridiemNames);
          function MeridiemNames(e) {
            var _this293;
            _classCallCheck(this, MeridiemNames);
            _this293 = _super387.call(this, s, "meridiemNames", !0);
            _this293.meridiem = new i.XFAObjectArray(2);
            return _this293;
          }
          return _createClass(MeridiemNames);
        }(i.XFAObject);
        var Month = /*#__PURE__*/function (_i$StringObject31) {
          _inherits(Month, _i$StringObject31);
          var _super388 = _createSuper(Month);
          function Month(e) {
            _classCallCheck(this, Month);
            return _super388.call(this, s, "month");
          }
          return _createClass(Month);
        }(i.StringObject);
        var MonthNames = /*#__PURE__*/function (_i$XFAObject64) {
          _inherits(MonthNames, _i$XFAObject64);
          var _super389 = _createSuper(MonthNames);
          function MonthNames(e) {
            var _this294;
            _classCallCheck(this, MonthNames);
            _this294 = _super389.call(this, s, "monthNames", !0);
            _this294.abbr = (0, n.getInteger)({
              data: e.abbr,
              defaultValue: 0,
              validate: function validate(e) {
                return 1 === e;
              }
            });
            _this294.month = new i.XFAObjectArray(12);
            return _this294;
          }
          return _createClass(MonthNames);
        }(i.XFAObject);
        var NumberPattern = /*#__PURE__*/function (_i$StringObject32) {
          _inherits(NumberPattern, _i$StringObject32);
          var _super390 = _createSuper(NumberPattern);
          function NumberPattern(e) {
            var _this295;
            _classCallCheck(this, NumberPattern);
            _this295 = _super390.call(this, s, "numberPattern");
            _this295.name = (0, n.getStringOption)(e.name, ["full", "long", "med", "short"]);
            return _this295;
          }
          return _createClass(NumberPattern);
        }(i.StringObject);
        var NumberPatterns = /*#__PURE__*/function (_i$XFAObject65) {
          _inherits(NumberPatterns, _i$XFAObject65);
          var _super391 = _createSuper(NumberPatterns);
          function NumberPatterns(e) {
            var _this296;
            _classCallCheck(this, NumberPatterns);
            _this296 = _super391.call(this, s, "numberPatterns", !0);
            _this296.numberPattern = new i.XFAObjectArray(4);
            return _this296;
          }
          return _createClass(NumberPatterns);
        }(i.XFAObject);
        var NumberSymbol = /*#__PURE__*/function (_i$StringObject33) {
          _inherits(NumberSymbol, _i$StringObject33);
          var _super392 = _createSuper(NumberSymbol);
          function NumberSymbol(e) {
            var _this297;
            _classCallCheck(this, NumberSymbol);
            _this297 = _super392.call(this, s, "numberSymbol");
            _this297.name = (0, n.getStringOption)(e.name, ["decimal", "grouping", "percent", "minus", "zero"]);
            return _this297;
          }
          return _createClass(NumberSymbol);
        }(i.StringObject);
        var NumberSymbols = /*#__PURE__*/function (_i$XFAObject66) {
          _inherits(NumberSymbols, _i$XFAObject66);
          var _super393 = _createSuper(NumberSymbols);
          function NumberSymbols(e) {
            var _this298;
            _classCallCheck(this, NumberSymbols);
            _this298 = _super393.call(this, s, "numberSymbols", !0);
            _this298.numberSymbol = new i.XFAObjectArray(5);
            return _this298;
          }
          return _createClass(NumberSymbols);
        }(i.XFAObject);
        var TimePattern = /*#__PURE__*/function (_i$StringObject34) {
          _inherits(TimePattern, _i$StringObject34);
          var _super394 = _createSuper(TimePattern);
          function TimePattern(e) {
            var _this299;
            _classCallCheck(this, TimePattern);
            _this299 = _super394.call(this, s, "timePattern");
            _this299.name = (0, n.getStringOption)(e.name, ["full", "long", "med", "short"]);
            return _this299;
          }
          return _createClass(TimePattern);
        }(i.StringObject);
        var TimePatterns = /*#__PURE__*/function (_i$XFAObject67) {
          _inherits(TimePatterns, _i$XFAObject67);
          var _super395 = _createSuper(TimePatterns);
          function TimePatterns(e) {
            var _this300;
            _classCallCheck(this, TimePatterns);
            _this300 = _super395.call(this, s, "timePatterns", !0);
            _this300.timePattern = new i.XFAObjectArray(4);
            return _this300;
          }
          return _createClass(TimePatterns);
        }(i.XFAObject);
        var TypeFace = /*#__PURE__*/function (_i$XFAObject68) {
          _inherits(TypeFace, _i$XFAObject68);
          var _super396 = _createSuper(TypeFace);
          function TypeFace(e) {
            var _this301;
            _classCallCheck(this, TypeFace);
            _this301 = _super396.call(this, s, "typeFace", !0);
            _this301.name = "" | e.name;
            return _this301;
          }
          return _createClass(TypeFace);
        }(i.XFAObject);
        var TypeFaces = /*#__PURE__*/function (_i$XFAObject69) {
          _inherits(TypeFaces, _i$XFAObject69);
          var _super397 = _createSuper(TypeFaces);
          function TypeFaces(e) {
            var _this302;
            _classCallCheck(this, TypeFaces);
            _this302 = _super397.call(this, s, "typeFaces", !0);
            _this302.typeFace = new i.XFAObjectArray();
            return _this302;
          }
          return _createClass(TypeFaces);
        }(i.XFAObject);
        var LocaleSetNamespace = /*#__PURE__*/function (_r$$buildXFAObject3) {
          function LocaleSetNamespace() {
            _classCallCheck(this, LocaleSetNamespace);
          }
          _createClass(LocaleSetNamespace, null, [{
            key: _r$$buildXFAObject3,
            value: function value(e, t) {
              if (LocaleSetNamespace.hasOwnProperty(e)) return LocaleSetNamespace[e](t);
            }
          }, {
            key: "calendarSymbols",
            value: function calendarSymbols(e) {
              return new CalendarSymbols(e);
            }
          }, {
            key: "currencySymbol",
            value: function currencySymbol(e) {
              return new CurrencySymbol(e);
            }
          }, {
            key: "currencySymbols",
            value: function currencySymbols(e) {
              return new CurrencySymbols(e);
            }
          }, {
            key: "datePattern",
            value: function datePattern(e) {
              return new DatePattern(e);
            }
          }, {
            key: "datePatterns",
            value: function datePatterns(e) {
              return new DatePatterns(e);
            }
          }, {
            key: "dateTimeSymbols",
            value: function dateTimeSymbols(e) {
              return new DateTimeSymbols(e);
            }
          }, {
            key: "day",
            value: function day(e) {
              return new Day(e);
            }
          }, {
            key: "dayNames",
            value: function dayNames(e) {
              return new DayNames(e);
            }
          }, {
            key: "era",
            value: function era(e) {
              return new Era(e);
            }
          }, {
            key: "eraNames",
            value: function eraNames(e) {
              return new EraNames(e);
            }
          }, {
            key: "locale",
            value: function locale(e) {
              return new Locale(e);
            }
          }, {
            key: "localeSet",
            value: function localeSet(e) {
              return new LocaleSet(e);
            }
          }, {
            key: "meridiem",
            value: function meridiem(e) {
              return new Meridiem(e);
            }
          }, {
            key: "meridiemNames",
            value: function meridiemNames(e) {
              return new MeridiemNames(e);
            }
          }, {
            key: "month",
            value: function month(e) {
              return new Month(e);
            }
          }, {
            key: "monthNames",
            value: function monthNames(e) {
              return new MonthNames(e);
            }
          }, {
            key: "numberPattern",
            value: function numberPattern(e) {
              return new NumberPattern(e);
            }
          }, {
            key: "numberPatterns",
            value: function numberPatterns(e) {
              return new NumberPatterns(e);
            }
          }, {
            key: "numberSymbol",
            value: function numberSymbol(e) {
              return new NumberSymbol(e);
            }
          }, {
            key: "numberSymbols",
            value: function numberSymbols(e) {
              return new NumberSymbols(e);
            }
          }, {
            key: "timePattern",
            value: function timePattern(e) {
              return new TimePattern(e);
            }
          }, {
            key: "timePatterns",
            value: function timePatterns(e) {
              return new TimePatterns(e);
            }
          }, {
            key: "typeFace",
            value: function typeFace(e) {
              return new TypeFace(e);
            }
          }, {
            key: "typeFaces",
            value: function typeFaces(e) {
              return new TypeFaces(e);
            }
          }]);
          return LocaleSetNamespace;
        }(r.$buildXFAObject);
        t.LocaleSetNamespace = LocaleSetNamespace;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.SignatureNamespace = void 0;
        var r = a(79),
          i = a(77);
        var n = r.NamespaceIds.signature.id;
        var Signature = /*#__PURE__*/function (_i$XFAObject70) {
          _inherits(Signature, _i$XFAObject70);
          var _super398 = _createSuper(Signature);
          function Signature(e) {
            _classCallCheck(this, Signature);
            return _super398.call(this, n, "signature", !0);
          }
          return _createClass(Signature);
        }(i.XFAObject);
        var SignatureNamespace = /*#__PURE__*/function (_r$$buildXFAObject4) {
          function SignatureNamespace() {
            _classCallCheck(this, SignatureNamespace);
          }
          _createClass(SignatureNamespace, null, [{
            key: _r$$buildXFAObject4,
            value: function value(e, t) {
              if (SignatureNamespace.hasOwnProperty(e)) return SignatureNamespace[e](t);
            }
          }, {
            key: "signature",
            value: function signature(e) {
              return new Signature(e);
            }
          }]);
          return SignatureNamespace;
        }(r.$buildXFAObject);
        t.SignatureNamespace = SignatureNamespace;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.StylesheetNamespace = void 0;
        var r = a(79),
          i = a(77);
        var n = r.NamespaceIds.stylesheet.id;
        var Stylesheet = /*#__PURE__*/function (_i$XFAObject71) {
          _inherits(Stylesheet, _i$XFAObject71);
          var _super399 = _createSuper(Stylesheet);
          function Stylesheet(e) {
            _classCallCheck(this, Stylesheet);
            return _super399.call(this, n, "stylesheet", !0);
          }
          return _createClass(Stylesheet);
        }(i.XFAObject);
        var StylesheetNamespace = /*#__PURE__*/function (_r$$buildXFAObject5) {
          function StylesheetNamespace() {
            _classCallCheck(this, StylesheetNamespace);
          }
          _createClass(StylesheetNamespace, null, [{
            key: _r$$buildXFAObject5,
            value: function value(e, t) {
              if (StylesheetNamespace.hasOwnProperty(e)) return StylesheetNamespace[e](t);
            }
          }, {
            key: "stylesheet",
            value: function stylesheet(e) {
              return new Stylesheet(e);
            }
          }]);
          return StylesheetNamespace;
        }(r.$buildXFAObject);
        t.StylesheetNamespace = StylesheetNamespace;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.XdpNamespace = void 0;
        var r = a(79),
          i = a(77);
        var n = r.NamespaceIds.xdp.id;
        var Xdp = /*#__PURE__*/function (_i$XFAObject72, _i$$onChildCheck) {
          _inherits(Xdp, _i$XFAObject72);
          var _super400 = _createSuper(Xdp);
          function Xdp(e) {
            var _this303;
            _classCallCheck(this, Xdp);
            _this303 = _super400.call(this, n, "xdp", !0);
            _this303.uuid = e.uuid || "";
            _this303.timeStamp = e.timeStamp || "";
            _this303.config = null;
            _this303.connectionSet = null;
            _this303.datasets = null;
            _this303.localeSet = null;
            _this303.stylesheet = new i.XFAObjectArray();
            _this303.template = null;
            return _this303;
          }
          _createClass(Xdp, [{
            key: _i$$onChildCheck,
            value: function value(e) {
              var t = r.NamespaceIds[e[i.$nodeName]];
              return t && e[i.$namespaceId] === t.id;
            }
          }]);
          return Xdp;
        }(i.XFAObject, i.$onChildCheck);
        var XdpNamespace = /*#__PURE__*/function (_r$$buildXFAObject6) {
          function XdpNamespace() {
            _classCallCheck(this, XdpNamespace);
          }
          _createClass(XdpNamespace, null, [{
            key: _r$$buildXFAObject6,
            value: function value(e, t) {
              if (XdpNamespace.hasOwnProperty(e)) return XdpNamespace[e](t);
            }
          }, {
            key: "xdp",
            value: function xdp(e) {
              return new Xdp(e);
            }
          }]);
          return XdpNamespace;
        }(r.$buildXFAObject);
        t.XdpNamespace = XdpNamespace;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.XhtmlNamespace = void 0;
        var r = a(77),
          i = a(79),
          n = a(84),
          s = a(78);
        var o = i.NamespaceIds.xhtml.id,
          c = Symbol(),
          l = new Set(["color", "font", "font-family", "font-size", "font-stretch", "font-style", "font-weight", "margin", "margin-bottom", "margin-left", "margin-right", "margin-top", "letter-spacing", "line-height", "orphans", "page-break-after", "page-break-before", "page-break-inside", "tab-interval", "tab-stop", "text-align", "text-decoration", "text-indent", "vertical-align", "widows", "kerning-mode", "xfa-font-horizontal-scale", "xfa-font-vertical-scale", "xfa-spacerun", "xfa-tab-stops"]),
          h = new Map([["page-break-after", "breakAfter"], ["page-break-before", "breakBefore"], ["page-break-inside", "breakInside"], ["kerning-mode", function (e) {
            return "none" === e ? "none" : "normal";
          }], ["xfa-font-horizontal-scale", function (e) {
            return "scaleX(".concat(Math.max(0, Math.min(parseInt(e) / 100)).toFixed(2), ")");
          }], ["xfa-font-vertical-scale", function (e) {
            return "scaleY(".concat(Math.max(0, Math.min(parseInt(e) / 100)).toFixed(2), ")");
          }], ["xfa-spacerun", ""], ["xfa-tab-stops", ""], ["font-size", function (e, t) {
            e = t.fontSize = (0, s.getMeasurement)(e);
            return (0, n.measureToString)(.99 * e);
          }], ["letter-spacing", function (e) {
            return (0, n.measureToString)((0, s.getMeasurement)(e));
          }], ["line-height", function (e) {
            return (0, n.measureToString)((0, s.getMeasurement)(e));
          }], ["margin", function (e) {
            return (0, n.measureToString)((0, s.getMeasurement)(e));
          }], ["margin-bottom", function (e) {
            return (0, n.measureToString)((0, s.getMeasurement)(e));
          }], ["margin-left", function (e) {
            return (0, n.measureToString)((0, s.getMeasurement)(e));
          }], ["margin-right", function (e) {
            return (0, n.measureToString)((0, s.getMeasurement)(e));
          }], ["margin-top", function (e) {
            return (0, n.measureToString)((0, s.getMeasurement)(e));
          }], ["text-indent", function (e) {
            return (0, n.measureToString)((0, s.getMeasurement)(e));
          }], ["font-family", function (e) {
            return e;
          }], ["vertical-align", function (e) {
            return (0, n.measureToString)((0, s.getMeasurement)(e));
          }]]),
          u = /\s+/g,
          d = /[\r\n]+/g,
          f = /\r\n?/g;
        function mapStyle(e, t, a) {
          var i = Object.create(null);
          if (!e) return i;
          var o = Object.create(null);
          var _iterator215 = _createForOfIteratorHelper(e.split(";").map(function (e) {
              return e.split(":", 2);
            })),
            _step215;
          try {
            for (_iterator215.s(); !(_step215 = _iterator215.n()).done;) {
              var _step215$value = _slicedToArray(_step215.value, 2),
                _t477 = _step215$value[0],
                _a375 = _step215$value[1];
              var _e632 = h.get(_t477);
              if ("" === _e632) continue;
              var _r276 = _a375;
              _e632 && (_r276 = "string" == typeof _e632 ? _e632 : _e632(_a375, o));
              _t477.endsWith("scale") ? i.transform ? i.transform = "".concat(i[_t477], " ").concat(_r276) : i.transform = _r276 : i[_t477.replaceAll(/-([a-zA-Z])/g, function (e, t) {
                return t.toUpperCase();
              })] = _r276;
            }
          } catch (err) {
            _iterator215.e(err);
          } finally {
            _iterator215.f();
          }
          i.fontFamily && (0, n.setFontFamily)({
            typeface: i.fontFamily,
            weight: i.fontWeight || "normal",
            posture: i.fontStyle || "normal",
            size: o.fontSize || 0
          }, t, t[r.$globalData].fontFinder, i);
          if (a && i.verticalAlign && "0px" !== i.verticalAlign && i.fontSize) {
            var _e631 = .583,
              _t476 = .333,
              _a374 = (0, s.getMeasurement)(i.fontSize);
            i.fontSize = (0, n.measureToString)(_a374 * _e631);
            i.verticalAlign = (0, n.measureToString)(Math.sign((0, s.getMeasurement)(i.verticalAlign)) * _a374 * _t476);
          }
          a && i.fontSize && (i.fontSize = "calc(".concat(i.fontSize, " * var(--scale-factor))"));
          (0, n.fixTextIndent)(i);
          return i;
        }
        var g = new Set(["body", "html"]);
        var XhtmlObject = /*#__PURE__*/function (_r$XmlObject2, _r$$clean3, _r$$acceptWhitespace2, _r$$onText2, _r$$pushGlyphs, _r$$toHTML34) {
          _inherits(XhtmlObject, _r$XmlObject2);
          var _super401 = _createSuper(XhtmlObject);
          function XhtmlObject(e, t) {
            var _this304;
            _classCallCheck(this, XhtmlObject);
            _this304 = _super401.call(this, o, t);
            _this304[c] = !1;
            _this304.style = e.style || "";
            return _this304;
          }
          _createClass(XhtmlObject, [{
            key: _r$$clean3,
            value: function value(e) {
              _get(_getPrototypeOf(XhtmlObject.prototype), r.$clean, this).call(this, e);
              this.style = function checkStyle(e) {
                return e.style ? e.style.trim().split(/\s*;\s*/).filter(function (e) {
                  return !!e;
                }).map(function (e) {
                  return e.split(/\s*:\s*/, 2);
                }).filter(function (_ref110) {
                  var _ref111 = _slicedToArray(_ref110, 2),
                    t = _ref111[0],
                    a = _ref111[1];
                  "font-family" === t && e[r.$globalData].usedTypefaces.add(a);
                  return l.has(t);
                }).map(function (e) {
                  return e.join(":");
                }).join(";") : "";
              }(this);
            }
          }, {
            key: _r$$acceptWhitespace2,
            value: function value() {
              return !g.has(this[r.$nodeName]);
            }
          }, {
            key: _r$$onText2,
            value: function value(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
              if (t) this[c] = !0;else {
                e = e.replaceAll(d, "");
                this.style.includes("xfa-spacerun:yes") || (e = e.replaceAll(u, " "));
              }
              e && (this[r.$content] += e);
            }
          }, {
            key: _r$$pushGlyphs,
            value: function value(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
              var a = Object.create(null),
                i = {
                  top: NaN,
                  bottom: NaN,
                  left: NaN,
                  right: NaN
                };
              var n = null;
              var _iterator216 = _createForOfIteratorHelper(this.style.split(";").map(function (e) {
                  return e.split(":", 2);
                })),
                _step216;
              try {
                for (_iterator216.s(); !(_step216 = _iterator216.n()).done;) {
                  var _step216$value = _slicedToArray(_step216.value, 2),
                    _e633 = _step216$value[0],
                    _t479 = _step216$value[1];
                  switch (e) {
                    case "font-family":
                      a.typeface = (0, s.stripQuotes)(_t479);
                      break;
                    case "font-size":
                      a.size = (0, s.getMeasurement)(_t479);
                      break;
                    case "font-weight":
                      a.weight = _t479;
                      break;
                    case "font-style":
                      a.posture = _t479;
                      break;
                    case "letter-spacing":
                      a.letterSpacing = (0, s.getMeasurement)(_t479);
                      break;
                    case "margin":
                      var _e634 = _t479.split(/ \t/).map(function (e) {
                        return (0, s.getMeasurement)(e);
                      });
                      switch (_e634.length) {
                        case 1:
                          i.top = i.bottom = i.left = i.right = _e634[0];
                          break;
                        case 2:
                          i.top = i.bottom = _e634[0];
                          i.left = i.right = _e634[1];
                          break;
                        case 3:
                          i.top = _e634[0];
                          i.bottom = _e634[2];
                          i.left = i.right = _e634[1];
                          break;
                        case 4:
                          i.top = _e634[0];
                          i.left = _e634[1];
                          i.bottom = _e634[2];
                          i.right = _e634[3];
                      }
                      break;
                    case "margin-top":
                      i.top = (0, s.getMeasurement)(_t479);
                      break;
                    case "margin-bottom":
                      i.bottom = (0, s.getMeasurement)(_t479);
                      break;
                    case "margin-left":
                      i.left = (0, s.getMeasurement)(_t479);
                      break;
                    case "margin-right":
                      i.right = (0, s.getMeasurement)(_t479);
                      break;
                    case "line-height":
                      n = (0, s.getMeasurement)(_t479);
                  }
                }
              } catch (err) {
                _iterator216.e(err);
              } finally {
                _iterator216.f();
              }
              e.pushData(a, i, n);
              if (this[r.$content]) e.addString(this[r.$content]);else {
                var _iterator217 = _createForOfIteratorHelper(this[r.$getChildren]()),
                  _step217;
                try {
                  for (_iterator217.s(); !(_step217 = _iterator217.n()).done;) {
                    var _t478 = _step217.value;
                    "#text" !== _t478[r.$nodeName] ? _t478[r.$pushGlyphs](e) : e.addString(_t478[r.$content]);
                  }
                } catch (err) {
                  _iterator217.e(err);
                } finally {
                  _iterator217.f();
                }
              }
              t && e.popFont();
            }
          }, {
            key: _r$$toHTML34,
            value: function value(e) {
              var t = [];
              this[r.$extra] = {
                children: t
              };
              this[r.$childrenToHTML]({});
              if (0 === t.length && !this[r.$content]) return s.HTMLResult.EMPTY;
              var a;
              a = this[c] ? this[r.$content] ? this[r.$content].replaceAll(f, "\n") : void 0 : this[r.$content] || void 0;
              return s.HTMLResult.success({
                name: this[r.$nodeName],
                attributes: {
                  href: this.href,
                  style: mapStyle(this.style, this, this[c])
                },
                children: t,
                value: a
              });
            }
          }]);
          return XhtmlObject;
        }(r.XmlObject, r.$clean, r.$acceptWhitespace, r.$onText, r.$pushGlyphs, r.$toHTML);
        var A = /*#__PURE__*/function (_XhtmlObject) {
          _inherits(A, _XhtmlObject);
          var _super402 = _createSuper(A);
          function A(e) {
            var _this305;
            _classCallCheck(this, A);
            _this305 = _super402.call(this, e, "a");
            _this305.href = (0, n.fixURL)(e.href) || "";
            return _this305;
          }
          return _createClass(A);
        }(XhtmlObject);
        var B = /*#__PURE__*/function (_XhtmlObject2, _r$$pushGlyphs2) {
          _inherits(B, _XhtmlObject2);
          var _super403 = _createSuper(B);
          function B(e) {
            _classCallCheck(this, B);
            return _super403.call(this, e, "b");
          }
          _createClass(B, [{
            key: _r$$pushGlyphs2,
            value: function value(e) {
              e.pushFont({
                weight: "bold"
              });
              _get(_getPrototypeOf(B.prototype), r.$pushGlyphs, this).call(this, e);
              e.popFont();
            }
          }]);
          return B;
        }(XhtmlObject, r.$pushGlyphs);
        var Body = /*#__PURE__*/function (_XhtmlObject3, _r$$toHTML35) {
          _inherits(Body, _XhtmlObject3);
          var _super404 = _createSuper(Body);
          function Body(e) {
            _classCallCheck(this, Body);
            return _super404.call(this, e, "body");
          }
          _createClass(Body, [{
            key: _r$$toHTML35,
            value: function value(e) {
              var t = _get(_getPrototypeOf(Body.prototype), r.$toHTML, this).call(this, e),
                a = t.html;
              if (!a) return s.HTMLResult.EMPTY;
              a.name = "div";
              a.attributes.class = ["xfaRich"];
              return t;
            }
          }]);
          return Body;
        }(XhtmlObject, r.$toHTML);
        var Br = /*#__PURE__*/function (_XhtmlObject4, _r$$text2, _r$$pushGlyphs3, _r$$toHTML36) {
          _inherits(Br, _XhtmlObject4);
          var _super405 = _createSuper(Br);
          function Br(e) {
            _classCallCheck(this, Br);
            return _super405.call(this, e, "br");
          }
          _createClass(Br, [{
            key: _r$$text2,
            value: function value() {
              return "\n";
            }
          }, {
            key: _r$$pushGlyphs3,
            value: function value(e) {
              e.addString("\n");
            }
          }, {
            key: _r$$toHTML36,
            value: function value(e) {
              return s.HTMLResult.success({
                name: "br"
              });
            }
          }]);
          return Br;
        }(XhtmlObject, r.$text, r.$pushGlyphs, r.$toHTML);
        var Html = /*#__PURE__*/function (_XhtmlObject5, _r$$toHTML37) {
          _inherits(Html, _XhtmlObject5);
          var _super406 = _createSuper(Html);
          function Html(e) {
            _classCallCheck(this, Html);
            return _super406.call(this, e, "html");
          }
          _createClass(Html, [{
            key: _r$$toHTML37,
            value: function value(e) {
              var t = [];
              this[r.$extra] = {
                children: t
              };
              this[r.$childrenToHTML]({});
              if (0 === t.length) return s.HTMLResult.success({
                name: "div",
                attributes: {
                  class: ["xfaRich"],
                  style: {}
                },
                value: this[r.$content] || ""
              });
              if (1 === t.length) {
                var _e635 = t[0];
                if (_e635.attributes && _e635.attributes.class.includes("xfaRich")) return s.HTMLResult.success(_e635);
              }
              return s.HTMLResult.success({
                name: "div",
                attributes: {
                  class: ["xfaRich"],
                  style: {}
                },
                children: t
              });
            }
          }]);
          return Html;
        }(XhtmlObject, r.$toHTML);
        var I = /*#__PURE__*/function (_XhtmlObject6, _r$$pushGlyphs4) {
          _inherits(I, _XhtmlObject6);
          var _super407 = _createSuper(I);
          function I(e) {
            _classCallCheck(this, I);
            return _super407.call(this, e, "i");
          }
          _createClass(I, [{
            key: _r$$pushGlyphs4,
            value: function value(e) {
              e.pushFont({
                posture: "italic"
              });
              _get(_getPrototypeOf(I.prototype), r.$pushGlyphs, this).call(this, e);
              e.popFont();
            }
          }]);
          return I;
        }(XhtmlObject, r.$pushGlyphs);
        var Li = /*#__PURE__*/function (_XhtmlObject7) {
          _inherits(Li, _XhtmlObject7);
          var _super408 = _createSuper(Li);
          function Li(e) {
            _classCallCheck(this, Li);
            return _super408.call(this, e, "li");
          }
          return _createClass(Li);
        }(XhtmlObject);
        var Ol = /*#__PURE__*/function (_XhtmlObject8) {
          _inherits(Ol, _XhtmlObject8);
          var _super409 = _createSuper(Ol);
          function Ol(e) {
            _classCallCheck(this, Ol);
            return _super409.call(this, e, "ol");
          }
          return _createClass(Ol);
        }(XhtmlObject);
        var P = /*#__PURE__*/function (_XhtmlObject9, _r$$pushGlyphs5, _r$$text3) {
          _inherits(P, _XhtmlObject9);
          var _super410 = _createSuper(P);
          function P(e) {
            _classCallCheck(this, P);
            return _super410.call(this, e, "p");
          }
          _createClass(P, [{
            key: _r$$pushGlyphs5,
            value: function value(e) {
              _get(_getPrototypeOf(P.prototype), r.$pushGlyphs, this).call(this, e, !1);
              e.addString("\n");
              e.addPara();
              e.popFont();
            }
          }, {
            key: _r$$text3,
            value: function value() {
              return this[r.$getParent]()[r.$getChildren]().at(-1) === this ? _get(_getPrototypeOf(P.prototype), r.$text, this).call(this) : _get(_getPrototypeOf(P.prototype), r.$text, this).call(this) + "\n";
            }
          }]);
          return P;
        }(XhtmlObject, r.$pushGlyphs, r.$text);
        var Span = /*#__PURE__*/function (_XhtmlObject10) {
          _inherits(Span, _XhtmlObject10);
          var _super411 = _createSuper(Span);
          function Span(e) {
            _classCallCheck(this, Span);
            return _super411.call(this, e, "span");
          }
          return _createClass(Span);
        }(XhtmlObject);
        var Sub = /*#__PURE__*/function (_XhtmlObject11) {
          _inherits(Sub, _XhtmlObject11);
          var _super412 = _createSuper(Sub);
          function Sub(e) {
            _classCallCheck(this, Sub);
            return _super412.call(this, e, "sub");
          }
          return _createClass(Sub);
        }(XhtmlObject);
        var Sup = /*#__PURE__*/function (_XhtmlObject12) {
          _inherits(Sup, _XhtmlObject12);
          var _super413 = _createSuper(Sup);
          function Sup(e) {
            _classCallCheck(this, Sup);
            return _super413.call(this, e, "sup");
          }
          return _createClass(Sup);
        }(XhtmlObject);
        var Ul = /*#__PURE__*/function (_XhtmlObject13) {
          _inherits(Ul, _XhtmlObject13);
          var _super414 = _createSuper(Ul);
          function Ul(e) {
            _classCallCheck(this, Ul);
            return _super414.call(this, e, "ul");
          }
          return _createClass(Ul);
        }(XhtmlObject);
        var XhtmlNamespace = /*#__PURE__*/function (_i$$buildXFAObject3) {
          function XhtmlNamespace() {
            _classCallCheck(this, XhtmlNamespace);
          }
          _createClass(XhtmlNamespace, null, [{
            key: _i$$buildXFAObject3,
            value: function value(e, t) {
              if (XhtmlNamespace.hasOwnProperty(e)) return XhtmlNamespace[e](t);
            }
          }, {
            key: "a",
            value: function a(e) {
              return new A(e);
            }
          }, {
            key: "b",
            value: function b(e) {
              return new B(e);
            }
          }, {
            key: "body",
            value: function body(e) {
              return new Body(e);
            }
          }, {
            key: "br",
            value: function br(e) {
              return new Br(e);
            }
          }, {
            key: "html",
            value: function html(e) {
              return new Html(e);
            }
          }, {
            key: "i",
            value: function i(e) {
              return new I(e);
            }
          }, {
            key: "li",
            value: function li(e) {
              return new Li(e);
            }
          }, {
            key: "ol",
            value: function ol(e) {
              return new Ol(e);
            }
          }, {
            key: "p",
            value: function p(e) {
              return new P(e);
            }
          }, {
            key: "span",
            value: function span(e) {
              return new Span(e);
            }
          }, {
            key: "sub",
            value: function sub(e) {
              return new Sub(e);
            }
          }, {
            key: "sup",
            value: function sup(e) {
              return new Sup(e);
            }
          }, {
            key: "ul",
            value: function ul(e) {
              return new Ul(e);
            }
          }]);
          return XhtmlNamespace;
        }(i.$buildXFAObject);
        t.XhtmlNamespace = XhtmlNamespace;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.UnknownNamespace = void 0;
        var r = a(79),
          i = a(77);
        var UnknownNamespace = /*#__PURE__*/function (_r$$buildXFAObject7) {
          function UnknownNamespace(e) {
            _classCallCheck(this, UnknownNamespace);
            this.namespaceId = e;
          }
          _createClass(UnknownNamespace, [{
            key: _r$$buildXFAObject7,
            value: function value(e, t) {
              return new i.XmlObject(this.namespaceId, e, t);
            }
          }]);
          return UnknownNamespace;
        }(r.$buildXFAObject);
        t.UnknownNamespace = UnknownNamespace;
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.DatasetReader = void 0;
        var r = a(2),
          i = a(3),
          n = a(66);
        function decodeString(e) {
          try {
            return (0, r.stringToUTF8String)(e);
          } catch (t) {
            (0, r.warn)("UTF-8 decoding failed: \"".concat(t, "\"."));
            return e;
          }
        }
        var DatasetXMLParser = /*#__PURE__*/function (_n$SimpleXMLParser) {
          _inherits(DatasetXMLParser, _n$SimpleXMLParser);
          var _super415 = _createSuper(DatasetXMLParser);
          function DatasetXMLParser(e) {
            var _this306;
            _classCallCheck(this, DatasetXMLParser);
            _this306 = _super415.call(this, e);
            _this306.node = null;
            return _this306;
          }
          _createClass(DatasetXMLParser, [{
            key: "onEndElement",
            value: function onEndElement(e) {
              var t = _get(_getPrototypeOf(DatasetXMLParser.prototype), "onEndElement", this).call(this, e);
              if (t && "xfa:datasets" === e) {
                this.node = t;
                throw new Error("Aborting DatasetXMLParser.");
              }
            }
          }]);
          return DatasetXMLParser;
        }(n.SimpleXMLParser);
        t.DatasetReader = /*#__PURE__*/function () {
          function DatasetReader(e) {
            _classCallCheck(this, DatasetReader);
            if (e.datasets) this.node = new n.SimpleXMLParser({
              hasAttributes: !0
            }).parseFromString(e.datasets).documentElement;else {
              var _t480 = new DatasetXMLParser({
                hasAttributes: !0
              });
              try {
                _t480.parseFromString(e["xdp:xdp"]);
              } catch (e) {}
              this.node = _t480.node;
            }
          }
          _createClass(DatasetReader, [{
            key: "getValue",
            value: function getValue(e) {
              if (!this.node || !e) return "";
              var t = this.node.searchNode((0, i.parseXFAPath)(e), 0);
              if (!t) return "";
              var a = t.firstChild;
              return a && "value" === a.nodeName ? t.children.map(function (e) {
                return decodeString(e.textContent);
              }) : decodeString(t.textContent);
            }
          }]);
          return DatasetReader;
        }();
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.XRef = void 0;
        var r = a(2),
          i = a(4),
          n = a(16),
          s = a(3),
          o = a(5),
          c = a(67);
        t.XRef = /*#__PURE__*/function () {
          function XRef(e, t) {
            _classCallCheck(this, XRef);
            this.stream = e;
            this.pdfManager = t;
            this.entries = [];
            this._xrefStms = new Set();
            this._cacheMap = new Map();
            this._pendingRefs = new i.RefSet();
            this._newPersistentRefNum = null;
            this._newTemporaryRefNum = null;
          }
          _createClass(XRef, [{
            key: "getNewPersistentRef",
            value: function getNewPersistentRef(e) {
              null === this._newPersistentRefNum && (this._newPersistentRefNum = this.entries.length || 1);
              var t = this._newPersistentRefNum++;
              this._cacheMap.set(t, e);
              return i.Ref.get(t, 0);
            }
          }, {
            key: "getNewTemporaryRef",
            value: function getNewTemporaryRef() {
              null === this._newTemporaryRefNum && (this._newTemporaryRefNum = this.entries.length || 1);
              return i.Ref.get(this._newTemporaryRefNum++, 0);
            }
          }, {
            key: "resetNewTemporaryRef",
            value: function resetNewTemporaryRef() {
              this._newTemporaryRefNum = null;
            }
          }, {
            key: "setStartXRef",
            value: function setStartXRef(e) {
              this.startXRefQueue = [e];
            }
          }, {
            key: "parse",
            value: function parse() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              var t, a, n;
              if (e) {
                (0, r.warn)("Indexing all PDF objects");
                t = this.indexObjects();
              } else t = this.readXRef();
              t.assignXref(this);
              this.trailer = t;
              try {
                a = t.get("Encrypt");
              } catch (e) {
                if (e instanceof s.MissingDataException) throw e;
                (0, r.warn)("XRef.parse - Invalid \"Encrypt\" reference: \"".concat(e, "\"."));
              }
              if (a instanceof i.Dict) {
                var _e636 = t.get("ID"),
                  _r277 = _e636 && _e636.length ? _e636[0] : "";
                a.suppressEncryption = !0;
                this.encrypt = new c.CipherTransformFactory(a, _r277, this.pdfManager.password);
              }
              try {
                n = t.get("Root");
              } catch (e) {
                if (e instanceof s.MissingDataException) throw e;
                (0, r.warn)("XRef.parse - Invalid \"Root\" reference: \"".concat(e, "\"."));
              }
              if (n instanceof i.Dict) try {
                if (n.get("Pages") instanceof i.Dict) {
                  this.root = n;
                  return;
                }
              } catch (e) {
                if (e instanceof s.MissingDataException) throw e;
                (0, r.warn)("XRef.parse - Invalid \"Pages\" reference: \"".concat(e, "\"."));
              }
              if (!e) throw new s.XRefParseException();
              throw new r.InvalidPDFException("Invalid Root reference.");
            }
          }, {
            key: "processXRefTable",
            value: function processXRefTable(e) {
              "tableState" in this || (this.tableState = {
                entryNum: 0,
                streamPos: e.lexer.stream.pos,
                parserBuf1: e.buf1,
                parserBuf2: e.buf2
              });
              var t = this.readXRefTable(e);
              if (!(0, i.isCmd)(t, "trailer")) throw new r.FormatError("Invalid XRef table: could not find trailer dictionary");
              var a = e.getObj();
              a instanceof i.Dict || !a.dict || (a = a.dict);
              if (!(a instanceof i.Dict)) throw new r.FormatError("Invalid XRef table: could not parse trailer dictionary");
              delete this.tableState;
              return a;
            }
          }, {
            key: "readXRefTable",
            value: function readXRefTable(e) {
              var t = e.lexer.stream,
                a = this.tableState;
              t.pos = a.streamPos;
              e.buf1 = a.parserBuf1;
              e.buf2 = a.parserBuf2;
              var n;
              for (;;) {
                if (!("firstEntryNum" in a) || !("entryCount" in a)) {
                  if ((0, i.isCmd)(n = e.getObj(), "trailer")) break;
                  a.firstEntryNum = n;
                  a.entryCount = e.getObj();
                }
                var _s131 = a.firstEntryNum;
                var _o93 = a.entryCount;
                if (!Number.isInteger(_s131) || !Number.isInteger(_o93)) throw new r.FormatError("Invalid XRef table: wrong types in subsection header");
                for (var _n158 = a.entryNum; _n158 < _o93; _n158++) {
                  a.streamPos = t.pos;
                  a.entryNum = _n158;
                  a.parserBuf1 = e.buf1;
                  a.parserBuf2 = e.buf2;
                  var _c67 = {};
                  _c67.offset = e.getObj();
                  _c67.gen = e.getObj();
                  var l = e.getObj();
                  if (l instanceof i.Cmd) switch (l.cmd) {
                    case "f":
                      _c67.free = !0;
                      break;
                    case "n":
                      _c67.uncompressed = !0;
                  }
                  if (!Number.isInteger(_c67.offset) || !Number.isInteger(_c67.gen) || !_c67.free && !_c67.uncompressed) throw new r.FormatError("Invalid entry in XRef subsection: ".concat(_s131, ", ").concat(_o93));
                  0 === _n158 && _c67.free && 1 === _s131 && (_s131 = 0);
                  this.entries[_n158 + _s131] || (this.entries[_n158 + _s131] = _c67);
                }
                a.entryNum = 0;
                a.streamPos = t.pos;
                a.parserBuf1 = e.buf1;
                a.parserBuf2 = e.buf2;
                delete a.firstEntryNum;
                delete a.entryCount;
              }
              if (this.entries[0] && !this.entries[0].free) throw new r.FormatError("Invalid XRef table: unexpected first object");
              return n;
            }
          }, {
            key: "processXRefStream",
            value: function processXRefStream(e) {
              if (!("streamState" in this)) {
                var _t481 = e.dict,
                  _a376 = _t481.get("W");
                var _r278 = _t481.get("Index");
                _r278 || (_r278 = [0, _t481.get("Size")]);
                this.streamState = {
                  entryRanges: _r278,
                  byteWidths: _a376,
                  entryNum: 0,
                  streamPos: e.pos
                };
              }
              this.readXRefStream(e);
              delete this.streamState;
              return e.dict;
            }
          }, {
            key: "readXRefStream",
            value: function readXRefStream(e) {
              var t = this.streamState;
              e.pos = t.streamPos;
              var _t$byteWidths = _slicedToArray(t.byteWidths, 3),
                a = _t$byteWidths[0],
                i = _t$byteWidths[1],
                n = _t$byteWidths[2],
                s = t.entryRanges;
              for (; s.length > 0;) {
                var _s132 = _slicedToArray(s, 2),
                  _o94 = _s132[0],
                  _c68 = _s132[1];
                if (!Number.isInteger(_o94) || !Number.isInteger(_c68)) throw new r.FormatError("Invalid XRef range fields: ".concat(_o94, ", ").concat(_c68));
                if (!Number.isInteger(a) || !Number.isInteger(i) || !Number.isInteger(n)) throw new r.FormatError("Invalid XRef entry fields length: ".concat(_o94, ", ").concat(_c68));
                for (var _s133 = t.entryNum; _s133 < _c68; ++_s133) {
                  t.entryNum = _s133;
                  t.streamPos = e.pos;
                  var _c69 = 0,
                    l = 0,
                    _h45 = 0;
                  for (var _t482 = 0; _t482 < a; ++_t482) {
                    var _t483 = e.getByte();
                    if (-1 === _t483) throw new r.FormatError("Invalid XRef byteWidths 'type'.");
                    _c69 = _c69 << 8 | _t483;
                  }
                  0 === a && (_c69 = 1);
                  for (var _t484 = 0; _t484 < i; ++_t484) {
                    var _t485 = e.getByte();
                    if (-1 === _t485) throw new r.FormatError("Invalid XRef byteWidths 'offset'.");
                    l = l << 8 | _t485;
                  }
                  for (var _t486 = 0; _t486 < n; ++_t486) {
                    var _t487 = e.getByte();
                    if (-1 === _t487) throw new r.FormatError("Invalid XRef byteWidths 'generation'.");
                    _h45 = _h45 << 8 | _t487;
                  }
                  var u = {};
                  u.offset = l;
                  u.gen = _h45;
                  switch (_c69) {
                    case 0:
                      u.free = !0;
                      break;
                    case 1:
                      u.uncompressed = !0;
                      break;
                    case 2:
                      break;
                    default:
                      throw new r.FormatError("Invalid XRef entry type: ".concat(_c69));
                  }
                  this.entries[_o94 + _s133] || (this.entries[_o94 + _s133] = u);
                }
                t.entryNum = 0;
                t.streamPos = e.pos;
                s.splice(0, 2);
              }
            }
          }, {
            key: "indexObjects",
            value: function indexObjects() {
              function readToken(e, t) {
                var a = "",
                  r = e[t];
                for (; 10 !== r && 13 !== r && 60 !== r && !(++t >= e.length);) {
                  a += String.fromCharCode(r);
                  r = e[t];
                }
                return a;
              }
              function skipUntil(e, t, a) {
                var r = a.length,
                  i = e.length;
                var n = 0;
                for (; t < i;) {
                  var _i247 = 0;
                  for (; _i247 < r && e[t + _i247] === a[_i247];) ++_i247;
                  if (_i247 >= r) break;
                  t++;
                  n++;
                }
                return n;
              }
              var e = /\b(endobj|\d+\s+\d+\s+obj|xref|trailer)\b/g,
                t = /\b(startxref|\d+\s+\d+\s+obj)\b/g,
                a = /^(\d+)\s+(\d+)\s+obj\b/,
                o = new Uint8Array([116, 114, 97, 105, 108, 101, 114]),
                c = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]),
                l = new Uint8Array([47, 88, 82, 101, 102]);
              this.entries.length = 0;
              this._cacheMap.clear();
              var h = this.stream;
              h.pos = 0;
              var u = h.getBytes(),
                d = (0, r.bytesToString)(u),
                f = u.length;
              var g = h.start;
              var p = [],
                m = [];
              for (; g < f;) {
                var _i248 = u[g];
                if (9 === _i248 || 10 === _i248 || 13 === _i248 || 32 === _i248) {
                  ++g;
                  continue;
                }
                if (37 === _i248) {
                  do {
                    ++g;
                    if (g >= f) break;
                    _i248 = u[g];
                  } while (10 !== _i248 && 13 !== _i248);
                  continue;
                }
                var _b3 = readToken(u, g);
                var _y5 = void 0;
                if (_b3.startsWith("xref") && (4 === _b3.length || /\s/.test(_b3[4]))) {
                  g += skipUntil(u, g, o);
                  p.push(g);
                  g += skipUntil(u, g, c);
                } else if (_y5 = a.exec(_b3)) {
                  var _t488 = 0 | _y5[1],
                    _a377 = 0 | _y5[2],
                    _i249 = g + _b3.length;
                  var _o95 = void 0,
                    _c70 = !1;
                  if (this.entries[_t488]) {
                    if (this.entries[_t488].gen === _a377) try {
                      new n.Parser({
                        lexer: new n.Lexer(h.makeSubStream(_i249))
                      }).getObj();
                      _c70 = !0;
                    } catch (e) {
                      e instanceof s.ParserEOFException ? (0, r.warn)("indexObjects -- checking object (".concat(_b3, "): \"").concat(e, "\".")) : _c70 = !0;
                    }
                  } else _c70 = !0;
                  _c70 && (this.entries[_t488] = {
                    offset: g - h.start,
                    gen: _a377,
                    uncompressed: !0
                  });
                  e.lastIndex = _i249;
                  var _p18 = e.exec(d);
                  if (_p18) {
                    _o95 = e.lastIndex + 1 - g;
                    if ("endobj" !== _p18[1]) {
                      (0, r.warn)("indexObjects: Found \"".concat(_p18[1], "\" inside of another \"obj\", caused by missing \"endobj\" -- trying to recover."));
                      _o95 -= _p18[1].length + 1;
                    }
                  } else _o95 = f - g;
                  var _w2 = u.subarray(g, g + _o95),
                    _S2 = skipUntil(_w2, 0, l);
                  if (_S2 < _o95 && _w2[_S2 + 5] < 64) {
                    m.push(g - h.start);
                    this._xrefStms.add(g - h.start);
                  }
                  g += _o95;
                } else if (_b3.startsWith("trailer") && (7 === _b3.length || /\s/.test(_b3[7]))) {
                  p.push(g);
                  var _e637 = g + _b3.length;
                  var _a378 = void 0;
                  t.lastIndex = _e637;
                  var _i250 = t.exec(d);
                  if (_i250) {
                    _a378 = t.lastIndex + 1 - g;
                    if ("startxref" !== _i250[1]) {
                      (0, r.warn)("indexObjects: Found \"".concat(_i250[1], "\" after \"trailer\", caused by missing \"startxref\" -- trying to recover."));
                      _a378 -= _i250[1].length + 1;
                    }
                  } else _a378 = f - g;
                  g += _a378;
                } else g += _b3.length + 1;
              }
              for (var _i251 = 0, _m8 = m; _i251 < _m8.length; _i251++) {
                var _e638 = _m8[_i251];
                this.startXRefQueue.push(_e638);
                this.readXRef(!0);
              }
              var b = [];
              var y,
                w,
                S = !1;
              for (var _i252 = 0, _p19 = p; _i252 < _p19.length; _i252++) {
                var _e639 = _p19[_i252];
                h.pos = _e639;
                var _t489 = new n.Parser({
                    lexer: new n.Lexer(h),
                    xref: this,
                    allowStreams: !0,
                    recoveryMode: !0
                  }),
                  _a379 = _t489.getObj();
                if (!(0, i.isCmd)(_a379, "trailer")) continue;
                var _r279 = _t489.getObj();
                if (_r279 instanceof i.Dict) {
                  b.push(_r279);
                  _r279.has("Encrypt") && (S = !0);
                }
              }
              for (var _i253 = 0, _arr8 = [].concat(b, ["genFallback"], b); _i253 < _arr8.length; _i253++) {
                var _e640 = _arr8[_i253];
                if ("genFallback" === _e640) {
                  if (!w) break;
                  this._generationFallback = !0;
                  continue;
                }
                var _t490 = !1;
                try {
                  var _a380 = _e640.get("Root");
                  if (!(_a380 instanceof i.Dict)) continue;
                  var _r280 = _a380.get("Pages");
                  if (!(_r280 instanceof i.Dict)) continue;
                  var _n159 = _r280.get("Count");
                  Number.isInteger(_n159) && (_t490 = !0);
                } catch (e) {
                  w = e;
                  continue;
                }
                if (_t490 && (!S || _e640.has("Encrypt")) && _e640.has("ID")) return _e640;
                y = _e640;
              }
              if (y) return y;
              if (this.topDict) return this.topDict;
              throw new r.InvalidPDFException("Invalid PDF structure.");
            }
          }, {
            key: "readXRef",
            value: function readXRef() {
              var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
              var t = this.stream,
                a = new Set();
              for (; this.startXRefQueue.length;) {
                try {
                  var _e641 = this.startXRefQueue[0];
                  if (a.has(_e641)) {
                    (0, r.warn)("readXRef - skipping XRef table since it was already parsed.");
                    this.startXRefQueue.shift();
                    continue;
                  }
                  a.add(_e641);
                  t.pos = _e641 + t.start;
                  var _s134 = new n.Parser({
                    lexer: new n.Lexer(t),
                    xref: this,
                    allowStreams: !0
                  });
                  var _c71 = void 0,
                    l = _s134.getObj();
                  if ((0, i.isCmd)(l, "xref")) {
                    _c71 = this.processXRefTable(_s134);
                    this.topDict || (this.topDict = _c71);
                    l = _c71.get("XRefStm");
                    if (Number.isInteger(l) && !this._xrefStms.has(l)) {
                      this._xrefStms.add(l);
                      this.startXRefQueue.push(l);
                    }
                  } else {
                    if (!Number.isInteger(l)) throw new r.FormatError("Invalid XRef stream header");
                    if (!(Number.isInteger(_s134.getObj()) && (0, i.isCmd)(_s134.getObj(), "obj") && (l = _s134.getObj()) instanceof o.BaseStream)) throw new r.FormatError("Invalid XRef stream");
                    _c71 = this.processXRefStream(l);
                    this.topDict || (this.topDict = _c71);
                    if (!_c71) throw new r.FormatError("Failed to read XRef stream");
                  }
                  l = _c71.get("Prev");
                  Number.isInteger(l) ? this.startXRefQueue.push(l) : l instanceof i.Ref && this.startXRefQueue.push(l.num);
                } catch (e) {
                  if (e instanceof s.MissingDataException) throw e;
                  (0, r.info)("(while reading XRef): " + e);
                }
                this.startXRefQueue.shift();
              }
              if (this.topDict) return this.topDict;
              if (!e) throw new s.XRefParseException();
            }
          }, {
            key: "lastXRefStreamPos",
            get: function get() {
              return this._xrefStms.size > 0 ? Math.max.apply(Math, _toConsumableArray(this._xrefStms)) : null;
            }
          }, {
            key: "getEntry",
            value: function getEntry(e) {
              var t = this.entries[e];
              return t && !t.free && t.offset ? t : null;
            }
          }, {
            key: "fetchIfRef",
            value: function fetchIfRef(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
              return e instanceof i.Ref ? this.fetch(e, t) : e;
            }
          }, {
            key: "fetch",
            value: function fetch(e) {
              var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
              if (!(e instanceof i.Ref)) throw new Error("ref object is not a reference");
              var a = e.num,
                n = this._cacheMap.get(a);
              if (void 0 !== n) {
                n instanceof i.Dict && !n.objId && (n.objId = e.toString());
                return n;
              }
              var s = this.getEntry(a);
              if (null === s) {
                this._cacheMap.set(a, s);
                return s;
              }
              if (this._pendingRefs.has(e)) {
                this._pendingRefs.remove(e);
                (0, r.warn)("Ignoring circular reference: ".concat(e, "."));
                return i.CIRCULAR_REF;
              }
              this._pendingRefs.put(e);
              try {
                s = s.uncompressed ? this.fetchUncompressed(e, s, t) : this.fetchCompressed(e, s, t);
                this._pendingRefs.remove(e);
              } catch (t) {
                this._pendingRefs.remove(e);
                throw t;
              }
              s instanceof i.Dict ? s.objId = e.toString() : s instanceof o.BaseStream && (s.dict.objId = e.toString());
              return s;
            }
          }, {
            key: "fetchUncompressed",
            value: function fetchUncompressed(e, t) {
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
              var c = e.gen;
              var l = e.num;
              if (t.gen !== c) {
                var _n160 = "Inconsistent generation in XRef: ".concat(e);
                if (this._generationFallback && t.gen < c) {
                  (0, r.warn)(_n160);
                  return this.fetchUncompressed(i.Ref.get(l, t.gen), t, a);
                }
                throw new s.XRefEntryException(_n160);
              }
              var h = this.stream.makeSubStream(t.offset + this.stream.start),
                u = new n.Parser({
                  lexer: new n.Lexer(h),
                  xref: this,
                  allowStreams: !0
                }),
                d = u.getObj(),
                f = u.getObj(),
                g = u.getObj();
              if (d !== l || f !== c || !(g instanceof i.Cmd)) throw new s.XRefEntryException("Bad (uncompressed) XRef entry: ".concat(e));
              if ("obj" !== g.cmd) {
                if (g.cmd.startsWith("obj")) {
                  l = parseInt(g.cmd.substring(3), 10);
                  if (!Number.isNaN(l)) return l;
                }
                throw new s.XRefEntryException("Bad (uncompressed) XRef entry: ".concat(e));
              }
              (t = this.encrypt && !a ? u.getObj(this.encrypt.createCipherTransform(l, c)) : u.getObj()) instanceof o.BaseStream || this._cacheMap.set(l, t);
              return t;
            }
          }, {
            key: "fetchCompressed",
            value: function fetchCompressed(e, t) {
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
              var c = t.offset,
                l = this.fetch(i.Ref.get(c, 0));
              if (!(l instanceof o.BaseStream)) throw new r.FormatError("bad ObjStm stream");
              var h = l.dict.get("First"),
                u = l.dict.get("N");
              if (!Number.isInteger(h) || !Number.isInteger(u)) throw new r.FormatError("invalid first and n parameters for ObjStm stream");
              var d = new n.Parser({
                lexer: new n.Lexer(l),
                xref: this,
                allowStreams: !0
              });
              var f = new Array(u),
                g = new Array(u);
              for (var _e642 = 0; _e642 < u; ++_e642) {
                var _t491 = d.getObj();
                if (!Number.isInteger(_t491)) throw new r.FormatError("invalid object number in the ObjStm stream: ".concat(_t491));
                var _a381 = d.getObj();
                if (!Number.isInteger(_a381)) throw new r.FormatError("invalid object offset in the ObjStm stream: ".concat(_a381));
                f[_e642] = _t491;
                g[_e642] = _a381;
              }
              var p = (l.start || 0) + h,
                m = new Array(u);
              for (var _e643 = 0; _e643 < u; ++_e643) {
                var _t492 = _e643 < u - 1 ? g[_e643 + 1] - g[_e643] : void 0;
                if (_t492 < 0) throw new r.FormatError("Invalid offset in the ObjStm stream.");
                d = new n.Parser({
                  lexer: new n.Lexer(l.makeSubStream(p + g[_e643], _t492, l.dict)),
                  xref: this,
                  allowStreams: !0
                });
                var _a382 = d.getObj();
                m[_e643] = _a382;
                if (_a382 instanceof o.BaseStream) continue;
                var _i254 = f[_e643],
                  _s135 = this.entries[_i254];
                _s135 && _s135.offset === c && _s135.gen === _e643 && this._cacheMap.set(_i254, _a382);
              }
              if (void 0 === (t = m[t.gen])) throw new s.XRefEntryException("Bad (compressed) XRef entry: ".concat(e));
              return t;
            }
          }, {
            key: "fetchIfRefAsync",
            value: function () {
              var _fetchIfRefAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee67(e, t) {
                return _regeneratorRuntime().wrap(function _callee67$(_context79) {
                  while (1) switch (_context79.prev = _context79.next) {
                    case 0:
                      return _context79.abrupt("return", e instanceof i.Ref ? this.fetchAsync(e, t) : e);
                    case 1:
                    case "end":
                      return _context79.stop();
                  }
                }, _callee67, this);
              }));
              function fetchIfRefAsync(_x129, _x130) {
                return _fetchIfRefAsync.apply(this, arguments);
              }
              return fetchIfRefAsync;
            }()
          }, {
            key: "fetchAsync",
            value: function () {
              var _fetchAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee68(e, t) {
                return _regeneratorRuntime().wrap(function _callee68$(_context80) {
                  while (1) switch (_context80.prev = _context80.next) {
                    case 0:
                      _context80.prev = 0;
                      return _context80.abrupt("return", this.fetch(e, t));
                    case 4:
                      _context80.prev = 4;
                      _context80.t0 = _context80["catch"](0);
                      if (_context80.t0 instanceof s.MissingDataException) {
                        _context80.next = 8;
                        break;
                      }
                      throw _context80.t0;
                    case 8:
                      _context80.next = 10;
                      return this.pdfManager.requestRange(_context80.t0.begin, _context80.t0.end);
                    case 10:
                      return _context80.abrupt("return", this.fetchAsync(e, t));
                    case 11:
                    case "end":
                      return _context80.stop();
                  }
                }, _callee68, this, [[0, 4]]);
              }));
              function fetchAsync(_x131, _x132) {
                return _fetchAsync.apply(this, arguments);
              }
              return fetchAsync;
            }()
          }, {
            key: "getCatalogObj",
            value: function getCatalogObj() {
              return this.root;
            }
          }]);
          return XRef;
        }();
      }, function (e, t) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.isNodeJS = void 0;
        var a = !("object" != typeof process || process + "" != "[object process]" || process.versions.nw || process.versions.electron && process.type && "browser" !== process.type);
        t.isNodeJS = a;
      }, function (e, t, a) {
        var _a383, _t493, _r281;
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.MessageHandler = void 0;
        var r = a(2);
        var i = 1,
          n = 2,
          s = 1,
          o = 2,
          c = 3,
          l = 4,
          h = 5,
          u = 6,
          d = 7,
          f = 8;
        function wrapReason(e) {
          e instanceof Error || "object" == typeof e && null !== e || (0, r.unreachable)('wrapReason: Expected "reason" to be a (possibly cloned) Error.');
          switch (e.name) {
            case "AbortException":
              return new r.AbortException(e.message);
            case "MissingPDFException":
              return new r.MissingPDFException(e.message);
            case "PasswordException":
              return new r.PasswordException(e.message, e.code);
            case "UnexpectedResponseException":
              return new r.UnexpectedResponseException(e.message, e.status);
            case "UnknownErrorException":
              return new r.UnknownErrorException(e.message, e.details);
            default:
              return new r.UnknownErrorException(e.message, e.toString());
          }
        }
        t.MessageHandler = (_a383 = /*#__PURE__*/new WeakSet(), _t493 = /*#__PURE__*/new WeakSet(), _r281 = /*#__PURE__*/new WeakSet(), /*#__PURE__*/function () {
          function MessageHandler(_e644, _t495, _a385) {
            var _this307 = this;
            _classCallCheck(this, MessageHandler);
            _classPrivateMethodInitSpec(this, _r281);
            _classPrivateMethodInitSpec(this, _t493);
            _classPrivateMethodInitSpec(this, _a383);
            this.sourceName = _e644;
            this.targetName = _t495;
            this.comObj = _a385;
            this.callbackId = 1;
            this.streamId = 1;
            this.streamSinks = Object.create(null);
            this.streamControllers = Object.create(null);
            this.callbackCapabilities = Object.create(null);
            this.actionHandler = Object.create(null);
            this._onComObjOnMessage = function (e) {
              var t = e.data;
              if (t.targetName !== _this307.sourceName) return;
              if (t.stream) {
                _classPrivateMethodGet(_this307, _t493, _t494).call(_this307, t);
                return;
              }
              if (t.callback) {
                var _e645 = t.callbackId,
                  _a386 = _this307.callbackCapabilities[_e645];
                if (!_a386) throw new Error("Cannot resolve callback ".concat(_e645));
                delete _this307.callbackCapabilities[_e645];
                if (t.callback === i) _a386.resolve(t.data);else {
                  if (t.callback !== n) throw new Error("Unexpected callback case");
                  _a386.reject(wrapReason(t.reason));
                }
                return;
              }
              var r = _this307.actionHandler[t.action];
              if (!r) throw new Error("Unknown action from worker: ".concat(t.action));
              if (t.callbackId) {
                var _e646 = _this307.sourceName,
                  _s136 = t.sourceName;
                new Promise(function (e) {
                  e(r(t.data));
                }).then(function (r) {
                  _a385.postMessage({
                    sourceName: _e646,
                    targetName: _s136,
                    callback: i,
                    callbackId: t.callbackId,
                    data: r
                  });
                }, function (r) {
                  _a385.postMessage({
                    sourceName: _e646,
                    targetName: _s136,
                    callback: n,
                    callbackId: t.callbackId,
                    reason: wrapReason(r)
                  });
                });
              } else t.streamId ? _classPrivateMethodGet(_this307, _a383, _a384).call(_this307, t) : r(t.data);
            };
            _a385.addEventListener("message", this._onComObjOnMessage);
          }
          _createClass(MessageHandler, [{
            key: "on",
            value: function on(e, t) {
              var a = this.actionHandler;
              if (a[e]) throw new Error("There is already an actionName called \"".concat(e, "\""));
              a[e] = t;
            }
          }, {
            key: "send",
            value: function send(e, t, a) {
              this.comObj.postMessage({
                sourceName: this.sourceName,
                targetName: this.targetName,
                action: e,
                data: t
              }, a);
            }
          }, {
            key: "sendWithPromise",
            value: function sendWithPromise(e, t, a) {
              var i = this.callbackId++,
                n = new r.PromiseCapability();
              this.callbackCapabilities[i] = n;
              try {
                this.comObj.postMessage({
                  sourceName: this.sourceName,
                  targetName: this.targetName,
                  action: e,
                  callbackId: i,
                  data: t
                }, a);
              } catch (e) {
                n.reject(e);
              }
              return n.promise;
            }
          }, {
            key: "sendWithStream",
            value: function sendWithStream(e, t, a, i) {
              var _this308 = this;
              var n = this.streamId++,
                o = this.sourceName,
                c = this.targetName,
                l = this.comObj;
              return new ReadableStream({
                start: function start(a) {
                  var s = new r.PromiseCapability();
                  _this308.streamControllers[n] = {
                    controller: a,
                    startCall: s,
                    pullCall: null,
                    cancelCall: null,
                    isClosed: !1
                  };
                  l.postMessage({
                    sourceName: o,
                    targetName: c,
                    action: e,
                    streamId: n,
                    data: t,
                    desiredSize: a.desiredSize
                  }, i);
                  return s.promise;
                },
                pull: function pull(e) {
                  var t = new r.PromiseCapability();
                  _this308.streamControllers[n].pullCall = t;
                  l.postMessage({
                    sourceName: o,
                    targetName: c,
                    stream: u,
                    streamId: n,
                    desiredSize: e.desiredSize
                  });
                  return t.promise;
                },
                cancel: function cancel(e) {
                  (0, r.assert)(e instanceof Error, "cancel must have a valid reason");
                  var t = new r.PromiseCapability();
                  _this308.streamControllers[n].cancelCall = t;
                  _this308.streamControllers[n].isClosed = !0;
                  l.postMessage({
                    sourceName: o,
                    targetName: c,
                    stream: s,
                    streamId: n,
                    reason: wrapReason(e)
                  });
                  return t.promise;
                }
              }, a);
            }
          }, {
            key: "destroy",
            value: function destroy() {
              this.comObj.removeEventListener("message", this._onComObjOnMessage);
            }
          }]);
          return MessageHandler;
        }());
        function _a384(e) {
          var t = e.streamId,
            a = this.sourceName,
            i = e.sourceName,
            n = this.comObj,
            s = this,
            o = this.actionHandler[e.action],
            u = {
              enqueue: function enqueue(e) {
                var s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
                var o = arguments.length > 2 ? arguments[2] : undefined;
                if (this.isCancelled) return;
                var c = this.desiredSize;
                this.desiredSize -= s;
                if (c > 0 && this.desiredSize <= 0) {
                  this.sinkCapability = new r.PromiseCapability();
                  this.ready = this.sinkCapability.promise;
                }
                n.postMessage({
                  sourceName: a,
                  targetName: i,
                  stream: l,
                  streamId: t,
                  chunk: e
                }, o);
              },
              close: function close() {
                if (!this.isCancelled) {
                  this.isCancelled = !0;
                  n.postMessage({
                    sourceName: a,
                    targetName: i,
                    stream: c,
                    streamId: t
                  });
                  delete s.streamSinks[t];
                }
              },
              error: function error(e) {
                (0, r.assert)(e instanceof Error, "error must have a valid reason");
                if (!this.isCancelled) {
                  this.isCancelled = !0;
                  n.postMessage({
                    sourceName: a,
                    targetName: i,
                    stream: h,
                    streamId: t,
                    reason: wrapReason(e)
                  });
                }
              },
              sinkCapability: new r.PromiseCapability(),
              onPull: null,
              onCancel: null,
              isCancelled: !1,
              desiredSize: e.desiredSize,
              ready: null
            };
          u.sinkCapability.resolve();
          u.ready = u.sinkCapability.promise;
          this.streamSinks[t] = u;
          new Promise(function (t) {
            t(o(e.data, u));
          }).then(function () {
            n.postMessage({
              sourceName: a,
              targetName: i,
              stream: f,
              streamId: t,
              success: !0
            });
          }, function (e) {
            n.postMessage({
              sourceName: a,
              targetName: i,
              stream: f,
              streamId: t,
              reason: wrapReason(e)
            });
          });
        }
        function _t494(e) {
          var t = e.streamId,
            a = this.sourceName,
            i = e.sourceName,
            n = this.comObj,
            g = this.streamControllers[t],
            p = this.streamSinks[t];
          switch (e.stream) {
            case f:
              e.success ? g.startCall.resolve() : g.startCall.reject(wrapReason(e.reason));
              break;
            case d:
              e.success ? g.pullCall.resolve() : g.pullCall.reject(wrapReason(e.reason));
              break;
            case u:
              if (!p) {
                n.postMessage({
                  sourceName: a,
                  targetName: i,
                  stream: d,
                  streamId: t,
                  success: !0
                });
                break;
              }
              p.desiredSize <= 0 && e.desiredSize > 0 && p.sinkCapability.resolve();
              p.desiredSize = e.desiredSize;
              new Promise(function (e) {
                var _p$onPull;
                e((_p$onPull = p.onPull) === null || _p$onPull === void 0 ? void 0 : _p$onPull.call(p));
              }).then(function () {
                n.postMessage({
                  sourceName: a,
                  targetName: i,
                  stream: d,
                  streamId: t,
                  success: !0
                });
              }, function (e) {
                n.postMessage({
                  sourceName: a,
                  targetName: i,
                  stream: d,
                  streamId: t,
                  reason: wrapReason(e)
                });
              });
              break;
            case l:
              (0, r.assert)(g, "enqueue should have stream controller");
              if (g.isClosed) break;
              g.controller.enqueue(e.chunk);
              break;
            case c:
              (0, r.assert)(g, "close should have stream controller");
              if (g.isClosed) break;
              g.isClosed = !0;
              g.controller.close();
              _classPrivateMethodGet(this, _r281, _r282).call(this, g, t);
              break;
            case h:
              (0, r.assert)(g, "error should have stream controller");
              g.controller.error(wrapReason(e.reason));
              _classPrivateMethodGet(this, _r281, _r282).call(this, g, t);
              break;
            case o:
              e.success ? g.cancelCall.resolve() : g.cancelCall.reject(wrapReason(e.reason));
              _classPrivateMethodGet(this, _r281, _r282).call(this, g, t);
              break;
            case s:
              if (!p) break;
              new Promise(function (t) {
                var _p$onCancel;
                t((_p$onCancel = p.onCancel) === null || _p$onCancel === void 0 ? void 0 : _p$onCancel.call(p, wrapReason(e.reason)));
              }).then(function () {
                n.postMessage({
                  sourceName: a,
                  targetName: i,
                  stream: o,
                  streamId: t,
                  success: !0
                });
              }, function (e) {
                n.postMessage({
                  sourceName: a,
                  targetName: i,
                  stream: o,
                  streamId: t,
                  reason: wrapReason(e)
                });
              });
              p.sinkCapability.reject(wrapReason(e.reason));
              p.isCancelled = !0;
              delete this.streamSinks[t];
              break;
            default:
              throw new Error("Unexpected stream case");
          }
        }
        function _r282(_x133, _x134) {
          return _r283.apply(this, arguments);
        }
        function _r283() {
          _r283 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee69(e, t) {
            var _e$startCall, _e$pullCall, _e$cancelCall;
            return _regeneratorRuntime().wrap(function _callee69$(_context81) {
              while (1) switch (_context81.prev = _context81.next) {
                case 0:
                  _context81.next = 2;
                  return Promise.allSettled([(_e$startCall = e.startCall) === null || _e$startCall === void 0 ? void 0 : _e$startCall.promise, (_e$pullCall = e.pullCall) === null || _e$pullCall === void 0 ? void 0 : _e$pullCall.promise, (_e$cancelCall = e.cancelCall) === null || _e$cancelCall === void 0 ? void 0 : _e$cancelCall.promise]);
                case 2:
                  delete this.streamControllers[t];
                case 3:
                case "end":
                  return _context81.stop();
              }
            }, _callee69, this);
          }));
          return _r283.apply(this, arguments);
        }
      }, function (e, t, a) {
        Object.defineProperty(t, "__esModule", {
          value: !0
        });
        t.PDFWorkerStream = void 0;
        var r = a(2);
        t.PDFWorkerStream = /*#__PURE__*/function () {
          function PDFWorkerStream(e) {
            _classCallCheck(this, PDFWorkerStream);
            this._msgHandler = e;
            this._contentLength = null;
            this._fullRequestReader = null;
            this._rangeRequestReaders = [];
          }
          _createClass(PDFWorkerStream, [{
            key: "getFullReader",
            value: function getFullReader() {
              (0, r.assert)(!this._fullRequestReader, "PDFWorkerStream.getFullReader can only be called once.");
              this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);
              return this._fullRequestReader;
            }
          }, {
            key: "getRangeReader",
            value: function getRangeReader(e, t) {
              var a = new PDFWorkerStreamRangeReader(e, t, this._msgHandler);
              this._rangeRequestReaders.push(a);
              return a;
            }
          }, {
            key: "cancelAllRequests",
            value: function cancelAllRequests(e) {
              this._fullRequestReader && this._fullRequestReader.cancel(e);
              var _iterator218 = _createForOfIteratorHelper(this._rangeRequestReaders.slice(0)),
                _step218;
              try {
                for (_iterator218.s(); !(_step218 = _iterator218.n()).done;) {
                  var _t496 = _step218.value;
                  _t496.cancel(e);
                }
              } catch (err) {
                _iterator218.e(err);
              } finally {
                _iterator218.f();
              }
            }
          }]);
          return PDFWorkerStream;
        }();
        var PDFWorkerStreamReader = /*#__PURE__*/function () {
          function PDFWorkerStreamReader(e) {
            var _this309 = this;
            _classCallCheck(this, PDFWorkerStreamReader);
            this._msgHandler = e;
            this.onProgress = null;
            this._contentLength = null;
            this._isRangeSupported = !1;
            this._isStreamingSupported = !1;
            var t = this._msgHandler.sendWithStream("GetReader");
            this._reader = t.getReader();
            this._headersReady = this._msgHandler.sendWithPromise("ReaderHeadersReady").then(function (e) {
              _this309._isStreamingSupported = e.isStreamingSupported;
              _this309._isRangeSupported = e.isRangeSupported;
              _this309._contentLength = e.contentLength;
            });
          }
          _createClass(PDFWorkerStreamReader, [{
            key: "headersReady",
            get: function get() {
              return this._headersReady;
            }
          }, {
            key: "contentLength",
            get: function get() {
              return this._contentLength;
            }
          }, {
            key: "isStreamingSupported",
            get: function get() {
              return this._isStreamingSupported;
            }
          }, {
            key: "isRangeSupported",
            get: function get() {
              return this._isRangeSupported;
            }
          }, {
            key: "read",
            value: function () {
              var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee70() {
                var _yield$this$_reader$r, e, t;
                return _regeneratorRuntime().wrap(function _callee70$(_context82) {
                  while (1) switch (_context82.prev = _context82.next) {
                    case 0:
                      _context82.next = 2;
                      return this._reader.read();
                    case 2:
                      _yield$this$_reader$r = _context82.sent;
                      e = _yield$this$_reader$r.value;
                      t = _yield$this$_reader$r.done;
                      return _context82.abrupt("return", t ? {
                        value: void 0,
                        done: !0
                      } : {
                        value: e.buffer,
                        done: !1
                      });
                    case 6:
                    case "end":
                      return _context82.stop();
                  }
                }, _callee70, this);
              }));
              function read() {
                return _read.apply(this, arguments);
              }
              return read;
            }()
          }, {
            key: "cancel",
            value: function cancel(e) {
              this._reader.cancel(e);
            }
          }]);
          return PDFWorkerStreamReader;
        }();
        var PDFWorkerStreamRangeReader = /*#__PURE__*/function () {
          function PDFWorkerStreamRangeReader(e, t, a) {
            _classCallCheck(this, PDFWorkerStreamRangeReader);
            this._msgHandler = a;
            this.onProgress = null;
            var r = this._msgHandler.sendWithStream("GetRangeReader", {
              begin: e,
              end: t
            });
            this._reader = r.getReader();
          }
          _createClass(PDFWorkerStreamRangeReader, [{
            key: "isStreamingSupported",
            get: function get() {
              return !1;
            }
          }, {
            key: "read",
            value: function () {
              var _read2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee71() {
                var _yield$this$_reader$r2, e, t;
                return _regeneratorRuntime().wrap(function _callee71$(_context83) {
                  while (1) switch (_context83.prev = _context83.next) {
                    case 0:
                      _context83.next = 2;
                      return this._reader.read();
                    case 2:
                      _yield$this$_reader$r2 = _context83.sent;
                      e = _yield$this$_reader$r2.value;
                      t = _yield$this$_reader$r2.done;
                      return _context83.abrupt("return", t ? {
                        value: void 0,
                        done: !0
                      } : {
                        value: e.buffer,
                        done: !1
                      });
                    case 6:
                    case "end":
                      return _context83.stop();
                  }
                }, _callee71, this);
              }));
              function read() {
                return _read2.apply(this, arguments);
              }
              return read;
            }()
          }, {
            key: "cancel",
            value: function cancel(e) {
              this._reader.cancel(e);
            }
          }]);
          return PDFWorkerStreamRangeReader;
        }();
      }],
      t = {};
    function __w_pdfjs_require__(a) {
      var r = t[a];
      if (void 0 !== r) return r.exports;
      var i = t[a] = {
        exports: {}
      };
      e[a](i, i.exports, __w_pdfjs_require__);
      return i.exports;
    }
    __w_pdfjs_require__.d = function (e, t) {
      for (var a in t) __w_pdfjs_require__.o(t, a) && !__w_pdfjs_require__.o(e, a) && Object.defineProperty(e, a, {
        enumerable: !0,
        get: t[a]
      });
    };
    __w_pdfjs_require__.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    };
    __w_pdfjs_require__.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
      });
      Object.defineProperty(e, "__esModule", {
        value: !0
      });
    };
    var a = {};
    (function () {
      var e = a;
      Object.defineProperty(e, "__esModule", {
        value: !0
      });
      Object.defineProperty(e, "WorkerMessageHandler", {
        enumerable: !0,
        get: function get() {
          return t.WorkerMessageHandler;
        }
      });
      var t = __w_pdfjs_require__(1);
    })();
    return a;
  }();
});