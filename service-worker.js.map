{"version":3,"sources":["../node_modules/workbox-core/_version.js","../node_modules/workbox-expiration/_version.js","../node_modules/workbox-precaching/_version.js","../node_modules/workbox-routing/_version.js","../node_modules/workbox-strategies/_version.js","../webpack/bootstrap","../node_modules/workbox-core/_private/logger.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/workbox-core/models/messages/messages.js","../node_modules/workbox-core/models/messages/messageGenerator.js","../node_modules/workbox-core/_private/WorkboxError.js","../node_modules/workbox-core/_private/assert.js","../node_modules/workbox-core/models/quotaErrorCallbacks.js","../node_modules/workbox-core/registerQuotaErrorCallback.js","../node_modules/workbox-core/_private/cacheNames.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","../node_modules/workbox-core/_private/canConstructReadableStream.js","../node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","../node_modules/workbox-core/_private/dontWaitFor.js","../node_modules/workbox-core/_private/Deferred.js","../node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","../node_modules/workbox-core/_private/getFriendlyURL.js","../node_modules/workbox-core/_private/timeout.js","../node_modules/workbox-core/_private/resultingClientExists.js","../node_modules/workbox-core/_private/waitUntil.js","../node_modules/workbox-core/_private.js","../node_modules/workbox-core/cacheNames.js","../node_modules/workbox-core/copyResponse.js","../node_modules/workbox-core/clientsClaim.js","../node_modules/workbox-core/setCacheNameDetails.js","../node_modules/workbox-core/skipWaiting.js","../node_modules/workbox-core/types.js","../node_modules/workbox-core/index.js","../node_modules/workbox-core/index.mjs","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","../node_modules/workbox-expiration/models/CacheTimestampsModel.js","../node_modules/workbox-expiration/CacheExpiration.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/workbox-expiration/ExpirationPlugin.js","../node_modules/workbox-expiration/index.js","../node_modules/workbox-expiration/index.mjs","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/workbox-precaching/utils/createCacheKey.js","../node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","../node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","../node_modules/workbox-precaching/utils/printCleanupDetails.js","../node_modules/workbox-precaching/utils/printInstallDetails.js","../node_modules/workbox-strategies/StrategyHandler.js","../node_modules/workbox-strategies/Strategy.js","../node_modules/workbox-precaching/PrecacheStrategy.js","../node_modules/workbox-precaching/PrecacheController.js","../node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","../node_modules/workbox-precaching/addPlugins.js","../node_modules/workbox-routing/utils/constants.js","../node_modules/workbox-routing/utils/normalizeHandler.js","../node_modules/workbox-routing/Route.js","../node_modules/workbox-routing/RegExpRoute.js","../node_modules/workbox-routing/Router.js","../node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","../node_modules/workbox-routing/registerRoute.js","../node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","../node_modules/workbox-precaching/utils/generateURLVariations.js","../node_modules/workbox-precaching/PrecacheRoute.js","../node_modules/workbox-precaching/addRoute.js","../node_modules/workbox-precaching/utils/deleteOutdatedCaches.js","../node_modules/workbox-precaching/cleanupOutdatedCaches.js","../node_modules/workbox-precaching/createHandlerBoundToURL.js","../node_modules/workbox-precaching/getCacheKeyForURL.js","../node_modules/workbox-precaching/matchPrecache.js","../node_modules/workbox-precaching/precache.js","../node_modules/workbox-precaching/precacheAndRoute.js","../node_modules/workbox-precaching/PrecacheFallbackPlugin.js","../node_modules/workbox-precaching/_types.js","../node_modules/workbox-precaching/index.js","../node_modules/workbox-precaching/index.mjs","../node_modules/workbox-routing/NavigationRoute.js","../node_modules/workbox-routing/setCatchHandler.js","../node_modules/workbox-routing/setDefaultHandler.js","../node_modules/workbox-routing/index.js","../node_modules/workbox-routing/index.mjs","../node_modules/workbox-strategies/utils/messages.js","../node_modules/workbox-strategies/CacheFirst.js","../node_modules/workbox-strategies/CacheOnly.js","../node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","../node_modules/workbox-strategies/NetworkFirst.js","../node_modules/workbox-strategies/NetworkOnly.js","../node_modules/workbox-strategies/StaleWhileRevalidate.js","../node_modules/workbox-strategies/index.js","../node_modules/workbox-strategies/index.mjs","service-worker.ts"],"names":["self","_","e","logger","process","env","NODE_ENV","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","classNameStr","expectedClassName","isReturnValueProblem","expectedMethod","entry","firstEntry","secondEntry","thrownErrorMessage","cacheNameId","name","methodName","expectedClass","normalizedRangeHeader","size","start","end","url","message","status","cacheName","origin","type","fallback","code","msg","length","generatorFunction","details","messageGenerator","WorkboxError","errorCode","isArray","Array","hasMethod","object","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","assert","quotaErrorCallbacks","Set","registerQuotaErrorCallback","callback","add","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","stripParams","fullURL","ignoreParams","strippedURL","URL","param","searchParams","delete","href","cacheMatchIgnoreParams","cache","request","matchOptions","strippedRequestURL","match","keysOptions","assign","ignoreSearch","cacheKeys","cacheKey","strippedCacheKeyURL","supportStatus","canConstructReadableStream","undefined","ReadableStream","canConstructResponseFromBodyStream","testResponse","Response","body","dontWaitFor","promise","then","Deferred","Promise","resolve","reject","executeQuotaErrorCallbacks","getFriendlyURL","urlObj","String","location","replace","RegExp","timeout","ms","setTimeout","MAX_RETRY_TIME","resultingClientExists","resultingClientId","clients","matchAll","existingWindows","existingWindowIds","map","w","id","startTime","performance","now","resultingWindow","find","has","waitUntil","event","asyncFn","returnPromise","_cacheNames","copyResponse","response","modifier","responseURL","clonedResponse","clone","responseInit","headers","Headers","statusText","modifiedResponseInit","blob","clientsClaim","addEventListener","claim","setCacheNameDetails","forEach","skipWaiting","_private","instanceOfAny","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","prototype","advance","continue","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","unlisten","removeEventListener","success","wrap","result","set","catch","cacheDonePromiseForTransaction","tx","done","complete","DOMException","idbProxyTraps","get","target","prop","receiver","objectStoreNames","objectStore","replaceTraps","wrapFunction","func","transaction","storeNames","call","unwrap","sort","apply","transformCachableValue","Proxy","IDBRequest","newValue","a","i","r","u","openDB","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","oldVersion","newVersion","db","deleteDB","deleteDatabase","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","useIndex","isWrite","storeName","store","index","shift","all","oldTraps","DB_NAME","CACHE_OBJECT_STORE","normalizeURL","unNormalizedUrl","hash","CacheTimestampsModel","_db","_cacheName","objStore","createObjectStore","keyPath","createIndex","unique","_upgradeDb","timestamp","_getId","getDb","durability","put","minTimestamp","maxCount","openCursor","cursor","entriesToDelete","entriesNotDeletedCount","push","urlsDeleted","_upgradeDbAndDeleteOldDbs","bind","CacheExpiration","config","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_matchOptions","_timestampModel","Date","expireEntries","urlsExpired","caches","setTimestamp","getTimestamp","expireOlderThan","Infinity","ExpirationPlugin","cachedResponseWillBeUsed","cachedResponse","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","updateTimestamp","cacheDidUpdate","Request","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","dateHeader","parsedDate","headerTime","getTime","isNaN","REVISION_SEARCH_PARAM","createCacheKey","urlObject","revision","cacheKeyURL","originalURL","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","state","originalRequest","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","params","_precacheController","getCacheKeyForURL","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","ExtendableEvent","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","mode","FetchEvent","preloadResponse","possiblePreloadResponse","hasCallback","iterateCallbacks","cb","pluginFilteredRequest","fetch","fetchOptions","fetchResponse","runCallbacks","responseClone","cachePut","getCacheKey","effectiveRequest","multiMatchOptions","vary","_ensureResponseSafeToCache","responseToCache","hasCacheUpdateCallback","oldResponse","newResponse","statefulCallback","statefulParam","pluginsUsed","Strategy","handleAll","responseDone","handler","_getResponse","handlerDone","_awaitComplete","_handle","toString","doneWaiting","destroy","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","cacheMatch","_handleInstall","_handleFetch","integrityInManifest","integrity","integrityInRequest","noIntegrityConflict","_useDefaultCacheabilityPluginIfNeeded","wasCached","defaultPluginIndex","cacheWillUpdatePluginCount","entries","defaultPrecacheCacheabilityPlugin","cacheWillUpdate","splice","redirected","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","activate","addToCacheList","_installAndActiveListenersAdded","urlsToWarnAbout","cacheMode","warningMessage","installReportPlugin","credentials","currentlyCachedRequests","expectedCacheKeys","values","handle","getOrCreatePrecacheController","addPlugins","defaultMethod","validMethods","normalizeHandler","Route","catchHandler","RegExpRoute","regExp","exec","slice","Router","_routes","_defaultHandlerMap","responsePromise","handleRequest","respondWith","data","payload","urlsToCache","requestPromises","ports","postMessage","protocol","startsWith","sameOrigin","findMatchingRoute","route","debugMessages","err","_catchHandler","routes","matchResult","constructor","routeIndex","indexOf","defaultRouter","getOrCreateDefaultRouter","addFetchListener","addCacheListener","registerRoute","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","removeIgnoredSearchParams","ignoreURLParametersMatching","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","PrecacheRoute","urlsToCacheKeys","getURLsToCacheKeys","possibleURL","getIntegrityForCacheKey","addRoute","precacheRoute","SUBSTRING_TO_FIND","deleteOutdatedCaches","currentPrecacheName","substringToFind","cacheNamesToDelete","cleanupOutdatedCaches","cachesDeleted","createHandlerBoundToURL","matchPrecache","precacheAndRoute","PrecacheFallbackPlugin","fallbackURL","handlerDidError","_fallbackURL","NavigationRoute","allowlist","denylist","_match","_allowlist","_denylist","pathnameAndSearch","search","setCatchHandler","setDefaultHandler","strategyStart","strategyName","printFinalResponse","CacheFirst","logs","fetchAndCachePut","CacheOnly","cacheOkAndOpaquePlugin","NetworkFirst","p","unshift","_networkTimeoutSeconds","networkTimeoutSeconds","promises","_getTimeoutPromise","timeoutId","networkPromise","_getNetworkPromise","race","timeoutPromise","onNetworkTimeout","clearTimeout","NetworkOnly","StaleWhileRevalidate","fetchAndCachePromise","__WB_MANIFEST","fileExtensionRegexp","PUBLIC_URL"],"mappings":"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AAS,qCAAmB;AAC3C,gBAAgB;AAChB,EAAE,qCAAmB;AACrB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,KAAK;AACL,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa;AACb,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA,KAAK;AACL;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AC9SA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACe,SAAS,iCAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AC7Be;AACf;AACA,yCAAyC,SAAS;AAClD;AACA;;ACJqD;AACtC;AACf;AACA,oCAAoC,iBAAgB;AACpD;AACA;AACA;AACA,sFAAsF,iBAAgB;AACtG;;ACRyE;AAC1D,SAAS,mDAA0B;AAClD;AACA;AACA,kCAAkC,2BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;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AAA;UAAA;QAAA;UAAA;UAAA,OACb,cAAc,CAAC,IAAI,EAAE;QAAA;UAAA;QAAA;UAF3B,IAAI;UAAA,iCAGH,IAAI,QAAQ,CAAC,IAAI,EAAE,oBAAoB,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAClD;EAAA;AAAA;;;ACvDD;AACA;AACA;AACA;AACA;AACA;AACA;AACuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,GAAG;EACpB,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE;IAAA,OAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;EAAA,EAAC;AACjE;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;AACQ;AACI;AACnC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB,CAAC,OAAO,EAAE;EAClC,IAAI,KAAqC,EAAE,EA2B1C;EACD,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC;AACrC;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;AACvB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,GAAG;EACnB;EACA;EACA,IAAI,KAAqC,EAAE,EAI1C;EACD,KAAK,IAAI,CAAC,WAAW,EAAE;AAC3B;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6E;AACnC;AACG;AACI;AACA;AACc;AAChB;AACxB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACuH;;;;;ACtBxE;AAChC;AACf,QAAQ,cAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;;ACdiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACe;AACf,kBAAkB,sBAAsB;AACxC;AACA;AACA,MAAM,eAAc;AACpB,KAAK;AACL;AACA,KAAK;AACL;AACA;A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,SAAS,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAC,aAAa,EAAK;MACpE,IAAI,KAAqC,EAAE,EAK1C;IACL,CAAC,CAAC,CAAC;EACP,CAAC,CAAE;AACP;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACyF;AAClE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uBAAuB,CAAC,GAAG,EAAE;EAClC,IAAM,kBAAkB,GAAG,2DAA6B,EAAE;EAC1D,OAAO,kBAAkB,CAAC,uBAAuB,CAAC,GAAG,CAAC;AAC1D;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACyF;AAClE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,CAAC,GAAG,EAAE;EAC5B,IAAM,kBAAkB,GAAG,6BAA6B,EAAE;EAC1D,OAAO,kBAAkB,CAAC,iBAAiB,CAAC,GAAG,CAAC;AACpD;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACyF;AAClE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,OAAO,EAAE;EAC5B,IAAM,kBAAkB,GAAG,6BAA6B,EAAE;EAC1D,OAAO,kBAAkB,CAAC,aAAa,CAAC,OAAO,CAAC;AACpD;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACyF;AAClE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,OAAO,EAAE;EACvB,IAAM,kBAAkB,GAAG,2DAA6B,EAAE;EAC1D,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC;AACxC;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACyC;AACA;AAClB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE;EACxC,QAAQ,CAAC,OAAO,CAAC;EACjB,QAAQ,CAAC,OAAO,CAAC;AACrB;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACyF;AAClE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA,IAcM,sBAAsB;AACxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,sCAAkD;EAAA;EAAA,IAApC,WAAW,QAAX,WAAW;IAAE,kBAAkB,QAAlB,kBAAkB;EAAA;EACzC;AACR;AACA;AACA;AACA;EACQ,IAAI,CAAC,eAAe,GAAG;IAAA,OAAM,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAI,CAAC,YAAY,CAAC;EAAA;EACtF,IAAI,CAAC,YAAY,GAAG,WAAW;EAC/B,IAAI,CAAC,mBAAmB,GACpB,kBAAkB,IAAI,6BAA6B,EAAE;AAC7D,CAAC;;;AC5CL;AACA;AACA;AACA;AACA;AACA;AACA;AACuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6C;AACJ;AAC0B;AACI;AACZ;AACR;AACV;AACgB;AACI;AACV;AACM;AACY;AAC9C;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwN;;;;;;;;;;AChCxN;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;AACA;AACtB;AACZ;AACvB;AACA;AACA;AACA;AACA;AACA;A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","file":"service-worker.js","sourceRoot":"","sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.5.3'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:6.5.3'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:6.5.3'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.5.3'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.5.3'] && _();\n}\ncatch (e) { }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production'\n    ? null\n    : (() => {\n        // Don't overwrite this value if it's already set.\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n        if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n            self.__WB_DISABLE_DEV_LOGS = false;\n        }\n        let inGroup = false;\n        const methodToColorMap = {\n            debug: `#7f8c8d`,\n            log: `#2ecc71`,\n            warn: `#f39c12`,\n            error: `#c0392b`,\n            groupCollapsed: `#3498db`,\n            groupEnd: null, // No colored prefix on groupEnd\n        };\n        const print = function (method, args) {\n            if (self.__WB_DISABLE_DEV_LOGS) {\n                return;\n            }\n            if (method === 'groupCollapsed') {\n                // Safari doesn't print all console.groupCollapsed() arguments:\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                    console[method](...args);\n                    return;\n                }\n            }\n            const styles = [\n                `background: ${methodToColorMap[method]}`,\n                `border-radius: 0.5em`,\n                `color: white`,\n                `font-weight: bold`,\n                `padding: 2px 0.5em`,\n            ];\n            // When in a group, the workbox prefix is not displayed.\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n            console[method](...logPrefix, ...args);\n            if (method === 'groupCollapsed') {\n                inGroup = true;\n            }\n            if (method === 'groupEnd') {\n                inGroup = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const api = {};\n        const loggerMethods = Object.keys(methodToColorMap);\n        for (const key of loggerMethods) {\n            const method = key;\n            api[method] = (...args) => {\n                print(method, args);\n            };\n        }\n        return api;\n    })());\nexport { logger };\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return (`The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`);\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`);\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName, }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}` +\n            `${funcName}()' must be of type ${expectedType}.`);\n    },\n    'incorrect-class': ({ expectedClassName, paramName, moduleName, className, funcName, isReturnValueProblem, }) => {\n        if (!expectedClassName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        if (isReturnValueProblem) {\n            return (`The return value from ` +\n                `'${moduleName}.${classNameStr}${funcName}()' ` +\n                `must be an instance of class ${expectedClassName}.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}${funcName}()' ` +\n            `must be an instance of class ${expectedClassName}.`);\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName, }) => {\n        if (!expectedMethod ||\n            !paramName ||\n            !moduleName ||\n            !className ||\n            !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return (`${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`);\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return (`An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`);\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` + `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`);\n    },\n    'plugin-error-request-will-fetch': ({ thrownErrorMessage }) => {\n        if (!thrownErrorMessage) {\n            throw new Error(`Unexpected input to ` + `'plugin-error-request-will-fetch', error.`);\n        }\n        return (`An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownErrorMessage}'.`);\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return (`You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`);\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return (`The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`);\n    },\n    'unregister-route-route-not-registered': () => {\n        return (`The route you're trying to unregister was not previously ` +\n            `registered.`);\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return (`The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`);\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return (`The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`);\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return (`The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`);\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName, }) => {\n        return (`The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`);\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return (`When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`);\n    },\n    'channel-name-required': () => {\n        return (`You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`);\n    },\n    'invalid-responses-are-same-args': () => {\n        return (`The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`);\n    },\n    'expire-custom-caches-only': () => {\n        return (`You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`);\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return (`The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`);\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return (`Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return (`The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return (`The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`);\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return (`Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`);\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return (`There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`);\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return (`The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`));\n    },\n    'non-precached-url': ({ url }) => {\n        return (`createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`);\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`);\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return (`workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`);\n    },\n    'opaque-streams-source': ({ type }) => {\n        const message = `One of the workbox-streams sources resulted in an ` +\n            `'${type}' response.`;\n        if (type === 'opaqueredirect') {\n            return (`${message} Please do not use a navigation request that results ` +\n                `in a redirect as a source.`);\n        }\n        return `${message} Please ensure your sources are CORS-enabled.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, \n// Need the general type to do the check later.\n// eslint-disable-next-line @typescript-eslint/ban-types\nexpectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClassName'] = expectedClass.name;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] = `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, \n// Need general type to do check later.\nexpectedClass, // eslint-disable-line\ndetails) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production'\n    ? null\n    : {\n        hasMethod,\n        isArray,\n        isInstance,\n        isOneOf,\n        isType,\n        isArrayOfClass,\n    };\nexport { finalAssertExports as assert };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\n// Can't change Function type right now.\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof workbox-core\n */\n// Can't change Function type\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream)\n * object.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `ReadableStream`, `false` otherwise.\n *\n * @private\n */\nfunction canConstructReadableStream() {\n    if (supportStatus === undefined) {\n        // See https://github.com/GoogleChrome/workbox/issues/1473\n        try {\n            new ReadableStream({ start() { } });\n            supportStatus = true;\n        }\n        catch (error) {\n            supportStatus = false;\n        }\n    }\n    return supportStatus;\n}\nexport { canConstructReadableStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    void promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { timeout } from './timeout.js';\nimport '../_version.js';\nconst MAX_RETRY_TIME = 2000;\n/**\n * Returns a promise that resolves to a window client matching the passed\n * `resultingClientId`. For browsers that don't support `resultingClientId`\n * or if waiting for the resulting client to apper takes too long, resolve to\n * `undefined`.\n *\n * @param {string} [resultingClientId]\n * @return {Promise<Client|undefined>}\n * @private\n */\nexport async function resultingClientExists(resultingClientId) {\n    if (!resultingClientId) {\n        return;\n    }\n    let existingWindows = await self.clients.matchAll({ type: 'window' });\n    const existingWindowIds = new Set(existingWindows.map((w) => w.id));\n    let resultingWindow;\n    const startTime = performance.now();\n    // Only wait up to `MAX_RETRY_TIME` to find a matching client.\n    while (performance.now() - startTime < MAX_RETRY_TIME) {\n        existingWindows = await self.clients.matchAll({ type: 'window' });\n        resultingWindow = existingWindows.find((w) => {\n            if (resultingClientId) {\n                // If we have a `resultingClientId`, we can match on that.\n                return w.id === resultingClientId;\n            }\n            else {\n                // Otherwise match on finding a window not in `existingWindowIds`.\n                return !existingWindowIds.has(w.id);\n            }\n        });\n        if (resultingWindow) {\n            break;\n        }\n        // Sleep for 100ms and retry.\n        await timeout(100);\n    }\n    return resultingWindow;\n}\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n// We either expose defaults or we expose every named export.\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { cacheMatchIgnoreParams } from './_private/cacheMatchIgnoreParams.js';\nimport { canConstructReadableStream } from './_private/canConstructReadableStream.js';\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { dontWaitFor } from './_private/dontWaitFor.js';\nimport { Deferred } from './_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from './_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './_private/getFriendlyURL.js';\nimport { logger } from './_private/logger.js';\nimport { resultingClientExists } from './_private/resultingClientExists.js';\nimport { timeout } from './_private/timeout.js';\nimport { waitUntil } from './_private/waitUntil.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\nexport { assert, cacheMatchIgnoreParams, cacheNames, canConstructReadableStream, canConstructResponseFromBodyStream, dontWaitFor, Deferred, executeQuotaErrorCallbacks, getFriendlyURL, logger, resultingClientExists, timeout, waitUntil, WorkboxError, };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames as _cacheNames } from './_private/cacheNames.js';\nimport './_version.js';\n/**\n * Get the current cache names and prefix/suffix used by Workbox.\n *\n * `cacheNames.precache` is used for precached assets,\n * `cacheNames.googleAnalytics` is used by `workbox-google-analytics` to\n * store `analytics.js`, and `cacheNames.runtime` is used for everything else.\n *\n * `cacheNames.prefix` can be used to retrieve just the current prefix value.\n * `cacheNames.suffix` can be used to retrieve just the current suffix value.\n *\n * @return {Object} An object with `precache`, `runtime`, `prefix`, and\n *     `googleAnalytics` properties.\n *\n * @memberof workbox-core\n */\nconst cacheNames = {\n    get googleAnalytics() {\n        return _cacheNames.getGoogleAnalyticsName();\n    },\n    get precache() {\n        return _cacheNames.getPrecacheName();\n    },\n    get prefix() {\n        return _cacheNames.getPrefix();\n    },\n    get runtime() {\n        return _cacheNames.getRuntimeName();\n    },\n    get suffix() {\n        return _cacheNames.getSuffix();\n    },\n};\nexport { cacheNames };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream()\n        ? clonedResponse.body\n        : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @memberof workbox-core\n */\nfunction setCacheNameDetails(details) {\n    if (process.env.NODE_ENV !== 'production') {\n        Object.keys(details).forEach((key) => {\n            assert.isType(details[key], 'string', {\n                moduleName: 'workbox-core',\n                funcName: 'setCacheNameDetails',\n                paramName: `details.${key}`,\n            });\n        });\n        if ('precache' in details && details['precache'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'precache',\n                value: details['precache'],\n            });\n        }\n        if ('runtime' in details && details['runtime'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'runtime',\n                value: details['runtime'],\n            });\n        }\n        if ('googleAnalytics' in details &&\n            details['googleAnalytics'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'googleAnalytics',\n                value: details['googleAnalytics'],\n            });\n        }\n    }\n    cacheNames.updateDetails(details);\n}\nexport { setCacheNameDetails };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport './_version.js';\n/**\n * This method is deprecated, and will be removed in Workbox v7.\n *\n * Calling self.skipWaiting() is equivalent, and should be used instead.\n *\n * @memberof workbox-core\n */\nfunction skipWaiting() {\n    // Just call self.skipWaiting() directly.\n    // See https://github.com/GoogleChrome/workbox/issues/2525\n    if (process.env.NODE_ENV !== 'production') {\n        logger.warn(`skipWaiting() from workbox-core is no longer recommended ` +\n            `and will be removed in Workbox v7. Using self.skipWaiting() instead ` +\n            `is equivalent.`);\n    }\n    void self.skipWaiting();\n}\nexport { skipWaiting };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerQuotaErrorCallback } from './registerQuotaErrorCallback.js';\nimport * as _private from './_private.js';\nimport { cacheNames } from './cacheNames.js';\nimport { copyResponse } from './copyResponse.js';\nimport { clientsClaim } from './clientsClaim.js';\nimport { setCacheNameDetails } from './setCacheNameDetails.js';\nimport { skipWaiting } from './skipWaiting.js';\nimport './_version.js';\n/**\n * All of the Workbox service worker libraries use workbox-core for shared\n * code as well as setting default values that need to be shared (like cache\n * names).\n *\n * @module workbox-core\n */\nexport { _private, cacheNames, clientsClaim, copyResponse, registerQuotaErrorCallback, setCacheNameDetails, skipWaiting, };\nexport * from './types.js';\n","export * from './index.js';","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { openDB, deleteDB } from 'idb';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst CACHE_OBJECT_STORE = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._db = null;\n        this._cacheName = cacheName;\n    }\n    /**\n     * Performs an upgrade of indexedDB.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDb(db) {\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(CACHE_OBJECT_STORE, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n    }\n    /**\n     * Performs an upgrade of indexedDB and deletes deprecated DBs.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDbAndDeleteOldDbs(db) {\n        this._upgradeDb(db);\n        if (this._cacheName) {\n            void deleteDB(this._cacheName);\n        }\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        const db = await this.getDb();\n        const tx = db.transaction(CACHE_OBJECT_STORE, 'readwrite', {\n            durability: 'relaxed',\n        });\n        await tx.store.put(entry);\n        await tx.done;\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number | undefined}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const db = await this.getDb();\n        const entry = await db.get(CACHE_OBJECT_STORE, this._getId(url));\n        return entry === null || entry === void 0 ? void 0 : entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const db = await this.getDb();\n        let cursor = await db\n            .transaction(CACHE_OBJECT_STORE)\n            .store.index('timestamp')\n            .openCursor(null, 'prev');\n        const entriesToDelete = [];\n        let entriesNotDeletedCount = 0;\n        while (cursor) {\n            const result = cursor.value;\n            // TODO(philipwalton): once we can use a multi-key index, we\n            // won't have to check `cacheName` here.\n            if (result.cacheName === this._cacheName) {\n                // Delete an entry if it's older than the max age or\n                // if we already have the max number allowed.\n                if ((minTimestamp && result.timestamp < minTimestamp) ||\n                    (maxCount && entriesNotDeletedCount >= maxCount)) {\n                    // TODO(philipwalton): we should be able to delete the\n                    // entry right here, but doing so causes an iteration\n                    // bug in Safari stable (fixed in TP). Instead we can\n                    // store the keys of the entries to delete, and then\n                    // delete the separate transactions.\n                    // https://github.com/GoogleChrome/workbox/issues/1978\n                    // cursor.delete();\n                    // We only need to return the URL, not the whole entry.\n                    entriesToDelete.push(cursor.value);\n                }\n                else {\n                    entriesNotDeletedCount++;\n                }\n            }\n            cursor = await cursor.continue();\n        }\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await db.delete(CACHE_OBJECT_STORE, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n    /**\n     * Returns an open connection to the database.\n     *\n     * @private\n     */\n    async getDb() {\n        if (!this._db) {\n            this._db = await openDB(DB_NAME, 1, {\n                upgrade: this._upgradeDbAndDeleteOldDbs.bind(this),\n            });\n        }\n        return this._db;\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds\n            ? Date.now() - this._maxAgeSeconds * 1000\n            : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ? 'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - this._maxAgeSeconds * 1000;\n            return timestamp !== undefined ? timestamp < expireOlderThan : true;\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached response is used or updated, this plugin will look\n * at the associated cache and remove any old or extra responses.\n *\n * When using `maxAgeSeconds`, responses may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached response has been used. If the response has a \"Date\" header, then\n * a light weight expiration check is performed and the response will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {ExpirationPluginOptions} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse, }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request, }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - this._maxAgeSeconds * 1000;\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheExpiration } from './CacheExpiration.js';\nimport { ExpirationPlugin } from './ExpirationPlugin.js';\nimport './_version.js';\n/**\n * @module workbox-expiration\n */\nexport { CacheExpiration, ExpirationPlugin };\n","export * from './index.js';","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                if (state &&\n                    state.originalRequest &&\n                    state.originalRequest instanceof Request) {\n                    // TODO: `state` should never be undefined...\n                    const url = state.originalRequest.url;\n                    if (cachedResponse) {\n                        this.notUpdatedURLs.push(url);\n                    }\n                    else {\n                        this.updatedURLs.push(url);\n                    }\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            // Params is type any, can't change right now.\n            /* eslint-disable */\n            const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            /* eslint-enable */\n            return cacheKey\n                ? new Request(cacheKey, { headers: request.headers })\n                : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message +=\n                ` ${alreadyPrecachedCount} ` +\n                    `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return typeof input === 'string' ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * {@link workbox-strategies.Strategy~handle} or\n * {@link workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params] The return value from the\n     *     {@link workbox-routing~matchCallback} (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * {@link workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = (await event.preloadResponse);\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail')\n            ? request.clone()\n            : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownErrorMessage: err.message,\n                });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse =\n                (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback\n            ? await cacheMatchIgnoreParams(\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n            // feature. Consider into ways to only add this behavior if using\n            // precaching.\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\n            : null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        const key = `${request.url} | ${mode}`;\n        if (!this._cacheKeys[key]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params, // eslint-disable-line\n                }));\n            }\n            this._cacheKeys[key] = effectiveRequest;\n        }\n        return this._cacheKeys[key];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * {@link workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * {@link workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * {@link workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while ((promise = this._extendLifetimePromises.shift())) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache =\n                (await callback({\n                    request: this.request,\n                    response: responseToCache,\n                    event: this.event,\n                })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * {@link workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * {@link workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to {@link workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of `[response, done]` promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string'\n            ? new Request(options.request)\n            : options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the {@link workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof workbox-strategies.Strategy\n */\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A {@link workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * {@link workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] {@link https://developers.google.com/web/tools/workbox/guides/using-plugins|Plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters|init}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * {@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions|CacheQueryOptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork =\n            options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (response) {\n            return response;\n        }\n        // If this is an `install` event for an entry that isn't already cached,\n        // then populate the cache.\n        if (handler.event && handler.event.type === 'install') {\n            return await this._handleInstall(request, handler);\n        }\n        // Getting here means something went wrong. An entry that should have been\n        // precached wasn't found in the cache.\n        return await this._handleFetch(request, handler);\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        const params = (handler.params || {});\n        // Fall back to the network if we're configured to do so.\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network.`);\n            }\n            const integrityInManifest = params.integrity;\n            const integrityInRequest = request.integrity;\n            const noIntegrityConflict = !integrityInRequest || integrityInRequest === integrityInManifest;\n            // Do not add integrity if the original request is no-cors\n            // See https://github.com/GoogleChrome/workbox/issues/3096\n            response = await handler.fetch(new Request(request, {\n                integrity: request.mode !== 'no-cors'\n                    ? integrityInRequest || integrityInManifest\n                    : undefined,\n            }));\n            // It's only \"safe\" to repair the cache if we're using SRI to guarantee\n            // that the response matches the precache manifest's expectations,\n            // and there's either a) no integrity property in the incoming request\n            // or b) there is an integrity, and it matches the precache manifest.\n            // See https://github.com/GoogleChrome/workbox/issues/2858\n            // Also if the original request users no-cors we don't use integrity.\n            // See https://github.com/GoogleChrome/workbox/issues/3096\n            if (integrityInManifest &&\n                noIntegrityConflict &&\n                request.mode !== 'no-cors') {\n                this._useDefaultCacheabilityPluginIfNeeded();\n                const wasCached = await handler.cachePut(request, response.clone());\n                if (process.env.NODE_ENV !== 'production') {\n                    if (wasCached) {\n                        logger.log(`A response for ${getFriendlyURL(request.url)} ` +\n                            `was used to \"repair\" the precache.`);\n                    }\n                }\n            }\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = params.cacheKey || (await handler.getCacheKey(request, 'read'));\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` + getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey instanceof Request ? cacheKey.url : cacheKey)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    },\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    },\n};\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true, } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = typeof entry !== 'string' && entry.revision ? 'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * @param {string} url A cache key whose SRI you want to look up.\n     * @return {string} The subresource integrity associated with the cache key,\n     * or undefined if it's not set.\n     */\n    getIntegrityForCacheKey(cacheKey) {\n        return this._cacheKeysToIntegrities.get(cacheKey);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = Object.assign({ cacheKey }, options.params);\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds plugins to the precaching strategy.\n *\n * @param {Array<Object>} plugins\n *\n * @memberof workbox-precaching\n */\nfunction addPlugins(plugins) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.strategy.plugins.push(...plugins);\n}\nexport { addPlugins };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * {@link workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * {@link workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if (url.origin !== location.origin && result.index !== 0) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a `FetchEvent` using one or more\n * {@link workbox-routing.Route}, responding with a `Response` if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event, }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([`Found a route to handle this request:`, route]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`,\n                        params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise &&\n            (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if (matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of {@link workbox-routing.Route} that takes a\n * {@link workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof workbox-precaching\n * @extends workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request, }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    const integrity = precacheController.getIntegrityForCacheKey(cacheKey);\n                    return { cacheKey, integrity };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` + getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See the {@link workbox-precaching.PrecacheRoute}\n * options.\n *\n * @memberof workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof workbox-precaching\n */\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\n    const cacheNames = await self.caches.keys();\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\n        return (cacheName.includes(substringToFind) &&\n            cacheName.includes(self.registration.scope) &&\n            cacheName !== currentPrecacheName);\n    });\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\n    return cacheNamesToDelete;\n};\nexport { deleteOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\nimport './_version.js';\n/**\n * Adds an `activate` event listener which will clean up incompatible\n * precaches that were created by older versions of Workbox.\n *\n * @memberof workbox-precaching\n */\nfunction cleanupOutdatedCaches() {\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('activate', ((event) => {\n        const cacheName = cacheNames.getPrecacheName();\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachesDeleted.length > 0) {\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\n                        `automatically:`, cachesDeleted);\n                }\n            }\n        }));\n    }));\n}\nexport { cleanupOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandlerBoundToURL} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\n * instead of using this function.\n *\n * @param {string} url The precached URL which will be used to lookup the\n * `Response`.\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {workbox-routing~handlerCallback}\n *\n * @memberof workbox-precaching\n */\nfunction createHandlerBoundToURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandlerBoundToURL(url);\n}\nexport { createHandlerBoundToURL };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Takes in a URL, and returns the corresponding URL that could be used to\n * lookup the entry in the precache.\n *\n * If a relative URL is provided, the location of the service worker file will\n * be used as the base.\n *\n * For precached entries without revision information, the cache key will be the\n * same as the original URL.\n *\n * For precached entries with revision information, the cache key will be the\n * original URL with the addition of a query parameter used for keeping track of\n * the revision info.\n *\n * @param {string} url The URL whose cache key to look up.\n * @return {string} The cache key that corresponds to that URL.\n *\n * @memberof workbox-precaching\n */\nfunction getCacheKeyForURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.getCacheKeyForURL(url);\n}\nexport { getCacheKeyForURL };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#matchPrecache} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call\n * {@link PrecacheController#matchPrecache} on that instance,\n * instead of using this function.\n *\n * @param {string|Request} request The key (without revisioning parameters)\n * to look up in the precache.\n * @return {Promise<Response|undefined>}\n *\n * @memberof workbox-precaching\n */\nfunction matchPrecache(request) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.matchPrecache(request);\n}\nexport { matchPrecache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * {@link workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * {@link workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * {@link workbox-precaching.precache} and\n * {@link workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See the\n * {@link workbox-precaching.PrecacheRoute} options.\n *\n * @memberof workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * `PrecacheFallbackPlugin` allows you to specify an \"offline fallback\"\n * response to be used when a given strategy is unable to generate a response.\n *\n * It does this by intercepting the `handlerDidError` plugin callback\n * and returning a precached response, taking the expected revision parameter\n * into account automatically.\n *\n * Unless you explicitly pass in a `PrecacheController` instance to the\n * constructor, the default instance will be used. Generally speaking, most\n * developers will end up using the default.\n *\n * @memberof workbox-precaching\n */\nclass PrecacheFallbackPlugin {\n    /**\n     * Constructs a new PrecacheFallbackPlugin with the associated fallbackURL.\n     *\n     * @param {Object} config\n     * @param {string} config.fallbackURL A precached URL to use as the fallback\n     *     if the associated strategy can't generate a response.\n     * @param {PrecacheController} [config.precacheController] An optional\n     *     PrecacheController instance. If not provided, the default\n     *     PrecacheController will be used.\n     */\n    constructor({ fallbackURL, precacheController, }) {\n        /**\n         * @return {Promise<Response>} The precache response for the fallback URL.\n         *\n         * @private\n         */\n        this.handlerDidError = () => this._precacheController.matchPrecache(this._fallbackURL);\n        this._fallbackURL = fallbackURL;\n        this._precacheController =\n            precacheController || getOrCreatePrecacheController();\n    }\n}\nexport { PrecacheFallbackPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n// * * * IMPORTANT! * * *\n// ------------------------------------------------------------------------- //\n// jdsoc type definitions cannot be declared above TypeScript definitions or\n// they'll be stripped from the built `.js` files, and they'll only be in the\n// `d.ts` files, which aren't read by the jsdoc generator. As a result we\n// have to put declare them below.\n/**\n * @typedef {Object} InstallResult\n * @property {Array<string>} updatedURLs List of URLs that were updated during\n * installation.\n * @property {Array<string>} notUpdatedURLs List of URLs that were already up to\n * date.\n *\n * @memberof workbox-precaching\n */\n/**\n * @typedef {Object} CleanupResult\n * @property {Array<string>} deletedCacheRequests List of URLs that were deleted\n * while cleaning up the cache.\n *\n * @memberof workbox-precaching\n */\n/**\n * @typedef {Object} PrecacheEntry\n * @property {string} url URL to precache.\n * @property {string} [revision] Revision information for the URL.\n * @property {string} [integrity] Integrity metadata that will be used when\n * making the network request for the URL.\n *\n * @memberof workbox-precaching\n */\n/**\n * The \"urlManipulation\" callback can be used to determine if there are any\n * additional permutations of a URL that should be used to check against\n * the available precached files.\n *\n * For example, Workbox supports checking for '/index.html' when the URL\n * '/' is provided. This callback allows additional, custom checks.\n *\n * @callback ~urlManipulation\n * @param {Object} context\n * @param {URL} context.url The request's URL.\n * @return {Array<URL>} To add additional urls to test, return an Array of\n * URLs. Please note that these **should not be strings**, but URL objects.\n *\n * @memberof workbox-precaching\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addPlugins } from './addPlugins.js';\nimport { addRoute } from './addRoute.js';\nimport { cleanupOutdatedCaches } from './cleanupOutdatedCaches.js';\nimport { createHandlerBoundToURL } from './createHandlerBoundToURL.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport { matchPrecache } from './matchPrecache.js';\nimport { precache } from './precache.js';\nimport { precacheAndRoute } from './precacheAndRoute.js';\nimport { PrecacheController } from './PrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport { PrecacheFallbackPlugin } from './PrecacheFallbackPlugin.js';\nimport './_version.js';\n/**\n * Most consumers of this module will want to use the\n * {@link workbox-precaching.precacheAndRoute}\n * method to add assets to the cache and respond to network requests with these\n * cached assets.\n *\n * If you require more control over caching and routing, you can use the\n * {@link workbox-precaching.PrecacheController}\n * interface.\n *\n * @module workbox-precaching\n */\nexport { addPlugins, addRoute, cleanupOutdatedCaches, createHandlerBoundToURL, getCacheKeyForURL, matchPrecache, precache, precacheAndRoute, PrecacheController, PrecacheRoute, PrecacheStrategy, PrecacheFallbackPlugin, };\nexport * from './_types.js';\n","export * from './index.js';","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * NavigationRoute makes it easy to create a\n * {@link workbox-routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * {@link https://fetch.spec.whatwg.org/#concept-request-mode|mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `denylist` and `allowlist` parameters.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass NavigationRoute extends Route {\n    /**\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\n     * take precedence and the request will not match this route.\n     *\n     * The regular expressions in `allowlist` and `denylist`\n     * are matched against the concatenated\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n     * portions of the requested URL.\n     *\n     * *Note*: These RegExps may be evaluated against every destination URL during\n     * a navigation. Avoid using\n     * [complex RegExps](https://github.com/GoogleChrome/workbox/issues/3077),\n     * or else your users may see delays when navigating your site.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {Object} options\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\n     * the route will not handle the request (even if a allowlist RegExp matches).\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\n     * match the URL's pathname and search parameter, the route will handle the\n     * request (assuming the denylist doesn't match).\n     */\n    constructor(handler, { allowlist = [/./], denylist = [] } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArrayOfClass(allowlist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.allowlist',\n            });\n            assert.isArrayOfClass(denylist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.denylist',\n            });\n        }\n        super((options) => this._match(options), handler);\n        this._allowlist = allowlist;\n        this._denylist = denylist;\n    }\n    /**\n     * Routes match handler.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request\n     * @return {boolean}\n     *\n     * @private\n     */\n    _match({ url, request }) {\n        if (request && request.mode !== 'navigate') {\n            return false;\n        }\n        const pathnameAndSearch = url.pathname + url.search;\n        for (const regExp of this._denylist) {\n            if (regExp.test(pathnameAndSearch)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                        `being used, since the URL matches this denylist pattern: ` +\n                        `${regExp.toString()}`);\n                }\n                return false;\n            }\n        }\n        if (this._allowlist.some((regExp) => regExp.test(pathnameAndSearch))) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`The navigation route ${pathnameAndSearch} ` + `is being used.`);\n            }\n            return true;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                `being used, since the URL being navigated to doesn't ` +\n                `match the allowlist.`);\n        }\n        return false;\n    }\n}\nexport { NavigationRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * If a Route throws an error while handling a request, this `handler`\n * will be called and given a chance to provide a response.\n *\n * @param {workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof workbox-routing\n */\nfunction setCatchHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setCatchHandler(handler);\n}\nexport { setCatchHandler };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Define a default `handler` that's called when no routes explicitly\n * match the incoming request.\n *\n * Without a default handler, unmatched requests will go against the\n * network as if there were no service worker present.\n *\n * @param {workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof workbox-routing\n */\nfunction setDefaultHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setDefaultHandler(handler);\n}\nexport { setDefaultHandler };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { NavigationRoute, } from './NavigationRoute.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { registerRoute } from './registerRoute.js';\nimport { Route } from './Route.js';\nimport { Router } from './Router.js';\nimport { setCatchHandler } from './setCatchHandler.js';\nimport { setDefaultHandler } from './setDefaultHandler.js';\nimport './_version.js';\n/**\n * @module workbox-routing\n */\nexport { NavigationRoute, RegExpRoute, registerRoute, Route, Router, setCatchHandler, setDefaultHandler, };\n","export * from './index.js';","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-first-falling-back-to-network)\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheFirst extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await handler.cacheMatch(request);\n        let error = undefined;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await handler.fetchAndCachePut(request);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheOnly extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        const response = await handler.cacheMatch(request);\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Found a cached response in the '${this.cacheName}' ` + `cache.`);\n                messages.printFinalResponse(response);\n            }\n            else {\n                logger.log(`No response found in the '${this.cacheName}' cache.`);\n            }\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n}\nexport { CacheOnly };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-first-falling-back-to-cache)\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses](https://developer.chrome.com/docs/workbox/caching-resources-during-runtime/#opaque-responses).\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS](https://enable-cors.org/).\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass NetworkFirst extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: this.constructor.name,\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, logs, handler });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({\n            timeoutId,\n            request,\n            logs,\n            handler,\n        });\n        promises.push(networkPromise);\n        const response = await handler.waitUntil((async () => {\n            // Promise.race() will resolve as soon as the first promise resolves.\n            return ((await handler.waitUntil(Promise.race(promises))) ||\n                // If Promise.race() resolved with null, it might be due to a network\n                // timeout + a cache miss. If that were to happen, we'd rather wait until\n                // the networkPromise resolves instead of returning null.\n                // Note that it's fine to await an already-resolved promise, so we don't\n                // have to check to see if it's still \"in flight\".\n                (await networkPromise));\n        })());\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, handler, }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await handler.cacheMatch(request));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, handler, }) {\n        let error;\n        let response;\n        try {\n            response = await handler.fetchAndCachePut(request);\n        }\n        catch (fetchError) {\n            if (fetchError instanceof Error) {\n                error = fetchError;\n            }\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await handler.cacheMatch(request);\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this.cacheName}'` + ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this.cacheName}' cache.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass NetworkOnly extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will result in a network error.\n     */\n    constructor(options = {}) {\n        super(options);\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: '_handle',\n                paramName: 'request',\n            });\n        }\n        let error = undefined;\n        let response;\n        try {\n            const promises = [\n                handler.fetch(request),\n            ];\n            if (this._networkTimeoutSeconds) {\n                const timeoutPromise = timeout(this._networkTimeoutSeconds * 1000);\n                promises.push(timeoutPromise);\n            }\n            response = await Promise.race(promises);\n            if (!response) {\n                throw new Error(`Timed out the network response after ` +\n                    `${this._networkTimeoutSeconds} seconds.`);\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Got response from network.`);\n            }\n            else {\n                logger.log(`Unable to get a response from the network.`);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { NetworkOnly };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#stale-while-revalidate)\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses](https://developer.chrome.com/docs/workbox/caching-resources-during-runtime/#opaque-responses).\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS](https://enable-cors.org/).\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass StaleWhileRevalidate extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = handler.fetchAndCachePut(request).catch(() => {\n            // Swallow this error because a 'no-response' error will be thrown in\n            // main handler return flow. This will be in the `waitUntil()` flow.\n        });\n        void handler.waitUntil(fetchAndCachePromise);\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                // NOTE(philipwalton): Really annoying that we have to type cast here.\n                // https://github.com/microsoft/TypeScript/issues/20006\n                response = (await fetchAndCachePromise);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheFirst } from './CacheFirst.js';\nimport { CacheOnly } from './CacheOnly.js';\nimport { NetworkFirst } from './NetworkFirst.js';\nimport { NetworkOnly } from './NetworkOnly.js';\nimport { StaleWhileRevalidate } from './StaleWhileRevalidate.js';\nimport { Strategy } from './Strategy.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * There are common caching strategies that most service workers will need\n * and use. This module provides simple implementations of these strategies.\n *\n * @module workbox-strategies\n */\nexport { CacheFirst, CacheOnly, NetworkFirst, NetworkOnly, StaleWhileRevalidate, Strategy, StrategyHandler, };\n","export * from './index.js';","/// <reference lib=\"webworker\" />\n/* eslint-disable no-restricted-globals */\n\n// This service worker can be customized!\n// See https://developers.google.com/web/tools/workbox/modules\n// for the list of available Workbox modules, or add any other\n// code you'd like.\n// You can also remove this file if you'd prefer not to use a\n// service worker, and the Workbox build step will be skipped.\n\nimport { clientsClaim } from 'workbox-core';\nimport { ExpirationPlugin } from 'workbox-expiration';\nimport { precacheAndRoute, createHandlerBoundToURL } from 'workbox-precaching';\nimport { registerRoute } from 'workbox-routing';\nimport { StaleWhileRevalidate } from 'workbox-strategies';\n\ndeclare const self: ServiceWorkerGlobalScope;\n\nclientsClaim();\n\n// Precache all of the assets generated by your build process.\n// Their URLs are injected into the manifest variable below.\n// This variable must be present somewhere in your service worker file,\n// even if you decide not to use precaching. See https://cra.link/PWA\nprecacheAndRoute(self.__WB_MANIFEST);\n\n// Set up App Shell-style routing, so that all navigation requests\n// are fulfilled with your index.html shell. Learn more at\n// https://developers.google.com/web/fundamentals/architecture/app-shell\nconst fileExtensionRegexp = new RegExp('/[^/?]+\\\\.[^/]+$');\nregisterRoute(\n  // Return false to exempt requests from being fulfilled by index.html.\n  ({ request, url }: { request: Request; url: URL }) => {\n    // If this isn't a navigation, skip.\n    if (request.mode !== 'navigate') {\n      return false;\n    }\n\n    // If this is a URL that starts with /_, skip.\n    if (url.pathname.startsWith('/_')) {\n      return false;\n    }\n\n    // If this looks like a URL for a resource, because it contains\n    // a file extension, skip.\n    if (url.pathname.match(fileExtensionRegexp)) {\n      return false;\n    }\n\n    // Return true to signal that we want to use the handler.\n    return true;\n  },\n  createHandlerBoundToURL(process.env.PUBLIC_URL + '/index.html')\n);\n\n// An example runtime caching route for requests that aren't handled by the\n// precache, in this case same-origin .png requests like those from in public/\nregisterRoute(\n  // Add in any other file extensions or routing criteria as needed.\n  ({ url }) => url.origin === self.location.origin && url.pathname.endsWith('.png'),\n  // Customize this strategy as needed, e.g., by changing to CacheFirst.\n  new StaleWhileRevalidate({\n    cacheName: 'images',\n    plugins: [\n      // Ensure that once this runtime cache reaches a maximum size the\n      // least-recently used images are removed.\n      new ExpirationPlugin({ maxEntries: 50 }),\n    ],\n  })\n);\n\n// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});\n\n// Any other custom service worker logic can go here.\n"]}